######################################################################
#
#       ↓　ここから macro.s
#
######################################################################

#レジスタ名置き換え
.define $zero $0
.define $sp $63
.define $hp $62
.define $tmp $61
.define $0 orz
.define $63 orz
.define $62 orz
.define $61 orz

#疑似命令
.define { neg %Reg %Reg } { sub $zero %1 %2 }
.define { b %Imm } { jmp 0 %1 }
.define { be %Imm } { jmp 5 %1 }
.define { bne %Imm } { jmp 2 %1 }
.define { bl %Imm } { jmp 6 %1 }
.define { ble %Imm } { jmp 4 %1 }
.define { bg %Imm } { jmp 3 %1 }
.define { bge %Imm } { jmp 1 %1 }

# 入力,出力の順にコンマで区切る形式
.define { li %Imm, %Reg } { li %2 %1 }
.define { add %Reg, %Reg, %Reg } { add %1 %2 %3 }
.define { add %Reg, %Imm, %Reg } { addi %1 %3 %2 }
.define { sub %Reg, %Reg, %Reg } { sub %1 %2 %3 }
.define { sub %Reg, %Imm, %Reg } { addi %1 %3 -%2 }
.define { sll %Reg, %Imm, %Reg } { sll %1 %3 %2 }
.define { cmp %Reg, %Reg } { cmp %1 %2 }
.define { cmp %Reg, %Imm } { cmpi %1 %2 }
.define { fadd %Reg, %Reg, %Reg } { fadd %1 %2 %3 }
.define { fsub %Reg, %Reg, %Reg } { fsub %1 %2 %3 }
.define { fmul %Reg, %Reg, %Reg } { fmul %1 %2 %3 }
.define { finv %Reg, %Reg } { finv %1 %2 }
.define { fsqrt %Reg, %Reg } { fsqrt %1 %2 }
.define { fcmp %Reg, %Reg } { fcmp %1 %2 }
.define { fabs %Reg, %Reg } { fabs %1 %2 }
.define { fneg %Reg, %Reg } { fneg %1 %2 }
.define { load [%Reg + %Imm], %Reg } { load %1 %3 %2 }
.define { load [%Reg - %Imm], %Reg } { load [%1 + -%2], %3}
.define { load [%Reg], %Reg } { load [%1 + 0], %2 }
.define { load [%Imm], %Reg } { load [$zero + %1], %2 }
.define { load [%Imm + %Reg], %Reg } { load [%2 + %1], %3 }
.define { load [%Imm + %Imm], %Reg } { load [%{ %1 + %2 }], %3 }
.define { load [%Imm - %Imm], %Reg } { load [%{ %1 - %2 }], %3 }
.define { load [%Reg + %Reg], %Reg } { loadr %1 %2 %3 }
.define { store %Reg, [%Reg + %Imm] } { store %2 %1 %3 }
.define { store %Reg, [%Reg - %Imm] } { store %1, [%2 + -%3] }
.define { store %Reg, [%Reg] } { store %1, [%2 + 0] }
.define { store %Reg, [%Imm] } { store %1, [$zero + %2] }
.define { store %Reg, [%Imm + %Reg] } { store %1, [%3 + %2] }
.define { store %Reg, [%Imm + %Imm] } { store %1, [%{ %2 + %3 }] }
.define { store %Reg, [%Imm - %Imm] } { store %1, [%{ %2 - %3 }] }
.define { mov %Reg, %Reg } { mov %1 %2 }
.define { neg %Reg, %Reg } { neg %1 %2 }
.define { write %Reg, %Reg } { write %1 %2 }

#スタックとヒープの初期化
    li      0, $zero                    # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      0x1000, $hp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    sll     $hp, 4, $hp                 # |          1 |          2 |          1 |          0 |          0 |          0 |
    sll     $hp, 3, $sp                 # |          1 |          2 |          1 |          0 |          0 |          0 |
    call     min_caml_main              # |          1 |          1 |          0 |          0 |          0 |          0 |
    halt

######################################################################
#
#       ↑　ここまで macro.s
#
######################################################################
######################################################################
#
#       ↓　ここから lib_asm.s
#
######################################################################

######################################################################
# * floor
######################################################################
.begin floor
min_caml_floor:
    mov $2, $1                          # |    189,164 |  1,040,402 |    283,746 |     94,582 |          0 |          0 |
    cmp $1, 0                           # |    189,164 |    189,164 |          0 |          0 |          0 |          0 |
    bge FLOOR_POSITIVE  # if ($f1 >= 0) FLOOR_POSITIVE# |    189,164 |    881,904 |     94,582 |     94,582 |          0 |     15,333 |
    fneg $1, $1                         # |    166,713 |    166,713 |          0 |          0 |          0 |          0 |
    call FLOOR_POSITIVE     # $f1 = FLOOR_POSITIVE(-$f1)# |    166,713 |    166,713 |          0 |          0 |          0 |          0 |
    load [FLOOR_MONE], $2               # |    166,713 |    312,765 |          0 |          0 |     24,342 |          0 |
    fsub $2, $1, $1     # $f1 = (-1) - $f1# |    166,713 |    451,455 |    284,742 |          0 |          0 |          0 |
    ret                                 # |    166,713 |    166,713 |          0 |          0 |          0 |          0 |
FLOOR_POSITIVE:
    load [FLOAT_MAGICF], $3             # |    189,164 |    270,380 |          0 |          0 |     13,536 |          0 |
    cmp $1, $3                          # |    189,164 |    540,420 |    351,256 |          0 |          0 |          0 |
    ble FLOOR_POSITIVE_MAIN             # |    189,164 |    853,488 |     94,582 |     94,582 |          0 |      1,125 |
    ret
FLOOR_POSITIVE_MAIN:
    mov $1, $2                          # |    189,164 |    189,164 |          0 |          0 |          0 |          0 |
    fadd $1, $3, $1     # $f1 += 0x4b000000# |    189,164 |    189,164 |          0 |          0 |          0 |          0 |
    fsub $1, $3, $1     # $f1 -= 0x4b000000# |    189,164 |    945,820 |    756,656 |          0 |          0 |          0 |
    cmp $1, $2                          # |    189,164 |    945,820 |    756,656 |          0 |          0 |          0 |
    ble FLOOR_RET                       # |    189,164 |    382,818 |    189,164 |          0 |          0 |      2,245 |
    load [FLOOR_ONE], $2
    fsub $1, $2, $1     # 返り値が元の値より大きければ1.0引く
FLOOR_RET:
    ret                                 # |    189,164 |    722,348 |          0 |     88,864 |          0 |          0 |
FLOOR_ONE:
    .float 1.0
FLOOR_MONE:
    .float -1.0
.end floor

######################################################################
# * float_of_int
######################################################################
.begin float_of_int
min_caml_float_of_int:
    mov $2, $1                          # |     16,565 |    114,884 |          3 |     16,386 |          0 |          0 |
    cmp $1, 0                           # |     16,565 |     16,565 |          0 |          0 |          0 |          0 |
    bge ITOF_MAIN       # if ($i1 >= 0) goto ITOF_MAIN# |     16,565 |     35,874 |     16,565 |          0 |          0 |      1,372 |
    neg $1, $1      # 正の値にしてitofした後に、マイナスにしてかえす# |      8,256 |      8,256 |          0 |          0 |          0 |          0 |
    call ITOF_MAIN  # $f1 = float_of_int(-$i1)# |      8,256 |     57,792 |          0 |      8,256 |          0 |          0 |
    fneg $1, $1                         # |      8,256 |     33,024 |     24,768 |          0 |          0 |          0 |
    ret                                 # |      8,256 |      8,256 |          0 |          0 |          0 |          0 |
ITOF_MAIN:
    load [FLOAT_MAGICI], $3     # $3 = 8388608# |     16,565 |    126,875 |          0 |      8,129 |     10,256 |          0 |
    load [FLOAT_MAGICF], $4         # $4 = 8388608.0# |     16,565 |     16,691 |          0 |          0 |         21 |          0 |
    load [FLOAT_MAGICFHX], $5       # $5 = 0x4b000000# |     16,565 |     16,691 |          0 |          0 |         21 |          0 |
    cmp $1, $3          # $cond = cmp($i1, 8388608)# |     16,565 |     16,565 |          0 |          0 |          0 |          0 |
    bge ITOF_BIG            # if ($i1 >= 8388608) goto ITOF_BIG# |     16,565 |     35,128 |     16,565 |          0 |          0 |        999 |
    add $1, $5, $1      # $i1 = $i1 + $5 (i.e. $i1 + 0x4b000000)# |     16,565 |    114,875 |          0 |     16,385 |          0 |          0 |
    fsub $1, $4, $1     # $f1 = $f1 - $4 (i.e. $f1 - 8388608.0)# |     16,565 |     33,130 |     16,565 |          0 |          0 |          0 |
    ret             # return            # |     16,565 |     16,565 |          0 |          0 |          0 |          0 |
ITOF_BIG:
    li 0, $6                # $i1 = $6 * 8388608 + $7 なる$6, $7を求める
    mov $1, $7
ITOF_LOOP:
    add $6, 1, $6           # $6 += 1
    sub $7, $3, $7          # $7 -= 8388608
    cmp $7, $3
    bge ITOF_LOOP       # if ($7 >= 8388608) continue
    li 0, $1
ITOF_LOOP2:
    fadd $1, $4, $1     # $f1 = $6 * $4
    add $6, -1, $6
    cmp $6, 0
    bg ITOF_LOOP2
    add $7, $5, $7          # $7 < 8388608 だからそのままitof
    fsub $7, $4, $7     # $tempf = itof($7)
    fadd $1, $7, $1     # $f1 = $f1 + $tempf (i.e. $f1 = itof($6 * $4) + itof($7) )
    ret
.end float_of_int

######################################################################
# * int_of_float
######################################################################
.begin int_of_float
min_caml_int_of_float:
    mov $2, $1                          # |     49,152 |     60,516 |          0 |      1,894 |          0 |          0 |
    cmp $1, 0                           # |     49,152 |     49,152 |          0 |          0 |          0 |          0 |
    bge FTOI_MAIN       # if ($f1 >= 0) goto FTOI_MAIN# |     49,152 |     98,988 |     49,152 |          0 |          0 |        342 |
    fneg $1, $1     # 正の値にしてftoiした後に、マイナスにしてかえす
    call FTOI_MAIN  # $i1 = float_of_int(-$f1)
    neg $1, $1
    ret         # return
FTOI_MAIN:
    load [FLOAT_MAGICI], $3     # $3 = 8388608# |     49,152 |     72,990 |          0 |      1,891 |      2,082 |          0 |
    load [FLOAT_MAGICF], $4         # $4 = 8388608.0# |     49,152 |     50,982 |          0 |          0 |        305 |          0 |
    load [FLOAT_MAGICFHX], $5       # $5 = 0x4b000000# |     49,152 |     50,550 |          0 |          0 |        233 |          0 |
    cmp $1, $4                          # |     49,152 |     97,766 |     48,614 |          0 |          0 |          0 |
    bge FTOI_BIG        # if ($f1 >= 8688608.0) goto FTOI_BIG# |     49,152 |    100,738 |     49,152 |          0 |          0 |      1,217 |
    fadd $1, $4, $1                     # |     49,152 |     49,152 |          0 |          0 |          0 |          0 |
    sub $1, $5, $1                      # |     49,152 |    245,760 |    196,608 |          0 |          0 |          0 |
    ret                                 # |     49,152 |     60,498 |          0 |      1,891 |          0 |          0 |
FTOI_BIG:
    li 0, $6                # $f1 = $6 * 8388608 + $8 なる$6, $8を求める
    mov $1, $8
FTOI_LOOP:
    add $6, 1, $6           # $6 += 1
    fsub $8, $4, $8     # $8 -= 8388608.0
    cmp $8, $4
    bge FTOI_LOOP       # if ($8 >= 8388608.0) continue
    li 0, $1
FTOI_LOOP2:
    add $1, $3, $1          # $i1 = $6 * $3
    add $6, -1, $6
    cmp $6, 0
    bg FTOI_LOOP2
    fadd $8, $4, $8     # $8 < 8388608.0 だからそのままftoi
    sub $8, $5, $8      # $temp = ftoi($8)
    add $1, $8, $1      # $i1 = $i1 + $temp (i.e. $i1 = ftoi($6 * $3) + ftoi($8) )
    ret

FLOAT_MAGICI:
    .int 8388608
FLOAT_MAGICF:
    .float 8388608.0
FLOAT_MAGICFHX:
    .int 1258291200         # 0x4b000000
.end int_of_float

######################################################################
# * read_int=read_float
# * wordバイナリ読み込み
######################################################################
.begin read
min_caml_read_int:
min_caml_read_float:
read_1:
    read $1                             # |        325 |        331 |          0 |          1 |          0 |          0 |
    cmp $1, 255                         # |        325 |        650 |        325 |          0 |          0 |          0 |
    bg read_1                           # |        325 |        650 |        325 |          0 |          0 |          0 |
    sll $1, 24, $1                      # |        325 |        325 |          0 |          0 |          0 |          0 |
read_2:
    read $2                             # |        325 |        325 |          0 |          0 |          0 |          0 |
    cmp $2, 255                         # |        325 |        655 |        324 |          1 |          0 |          0 |
    bg read_2                           # |        325 |        668 |        325 |          0 |          0 |          9 |
    sll $2, 16, $2                      # |        325 |        325 |          0 |          0 |          0 |          0 |
    add $1, $2, $1                      # |        325 |        650 |        325 |          0 |          0 |          0 |
read_3:
    read $2                             # |        325 |        325 |          0 |          0 |          0 |          0 |
    cmp $2, 255                         # |        325 |        650 |        325 |          0 |          0 |          0 |
    bg read_3                           # |        325 |        650 |        325 |          0 |          0 |          0 |
    sll $2, 8, $2                       # |        325 |        325 |          0 |          0 |          0 |          0 |
    add $1, $2, $1                      # |        325 |        655 |        324 |          1 |          0 |          0 |
read_4:
    read $2                             # |        325 |        325 |          0 |          0 |          0 |          0 |
    cmp $2, 255                         # |        325 |        650 |        325 |          0 |          0 |          0 |
    bg read_4                           # |        325 |        650 |        325 |          0 |          0 |          0 |
    add $1, $2, $1                      # |        325 |        325 |          0 |          0 |          0 |          0 |
    ret                                 # |        325 |        325 |          0 |          0 |          0 |          0 |
.end read

######################################################################
# * write
# * バイト出力
# * 失敗してたらループ
######################################################################
.begin write
min_caml_write:
    write $2, $tmp                      # |     49,167 |     49,875 |          0 |        118 |          0 |          0 |
    cmp $tmp, 0                         # |     49,167 |     98,334 |     49,167 |          0 |          0 |          0 |
    bg min_caml_write                   # |     49,167 |    107,216 |     49,049 |        118 |          0 |      4,146 |
    ret                                 # |     49,167 |     49,167 |          0 |          0 |          0 |          0 |
.end write

######################################################################
# * create_array
######################################################################
.begin create_array
min_caml_create_array:
    mov $2, $1                          # |     22,313 |     22,319 |          0 |          1 |          0 |          0 |
    mov $3, $2                          # |     22,313 |     22,313 |          0 |          0 |          0 |          0 |
    add $1, $hp, $3                     # |     22,313 |     22,313 |          0 |          0 |          0 |          0 |
    mov $hp, $1                         # |     22,313 |     22,313 |          0 |          0 |          0 |          0 |
CREATE_ARRAY_LOOP:
    cmp $hp, $3                         # |    125,343 |    125,343 |          0 |          0 |          0 |          0 |
    bge CREATE_ARRAY_END                # |    125,343 |    267,318 |    125,343 |          0 |          0 |      8,316 |
    store $2, [$hp]                     # |    103,030 |    103,036 |          0 |          1 |          0 |          0 |
    add $hp, 1, $hp                     # |    103,030 |    103,030 |          0 |          0 |          0 |          0 |
    b CREATE_ARRAY_LOOP                 # |    103,030 |    103,274 |          0 |          0 |          0 |        122 |
CREATE_ARRAY_END:
    ret                                 # |     22,313 |     22,313 |          0 |          0 |          0 |          0 |
.end create_array

######################################################################
# * ledout_in
# * ledout_float
# * バイトLED出力
######################################################################
.begin ledout
min_caml_ledout_int:
min_caml_ledout_float:
    ledout $2
    ret
.end ledout

######################################################################
# * 算術関数(atan, sin, cos)
######################################################################
min_caml_atan_table:
    .float 0.785398163397448279
    .float 0.463647609000806094
    .float 0.244978663126864143
    .float 0.124354994546761438
    .float 0.06241880999595735
    .float 0.0312398334302682774
    .float 0.0156237286204768313
    .float 0.00781234106010111114
    .float 0.00390623013196697176
    .float 0.00195312251647881876
    .float 0.000976562189559319459
    .float 0.00048828121119489829
    .float 0.000244140620149361771
    .float 0.000122070311893670208
    .float 6.10351561742087726e-05
    .float 3.05175781155260957e-05
    .float 1.52587890613157615e-05
    .float 7.62939453110197e-06
    .float 3.81469726560649614e-06
    .float 1.90734863281018696e-06
    .float 9.53674316405960844e-07
    .float 4.76837158203088842e-07
    .float 2.38418579101557974e-07
    .float 1.19209289550780681e-07
    .float 5.96046447753905522e-08
f._186: .float  6.2831853072E+00
f._185: .float  3.1415926536E+00
f._184: .float  1.5707963268E+00
f._183: .float  6.0725293501E-01
f._182: .float  1.0000000000E+00
f._181: .float  5.0000000000E-01

######################################################################
.begin atan
min_caml_atan:
    load    [f._182], $3                # |      1,000 |      1,006 |          0 |          1 |          0 |          0 |
    li      0, $10                      # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    mov     $3, $6                      # |      1,000 |      2,000 |      1,000 |          0 |          0 |          0 |
    mov     $zero, $5                   # |      1,000 |      1,006 |          0 |          1 |          0 |          0 |
    mov     $2, $4                      # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    mov     $10, $2                     # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    b       cordic_rec._146             # |      1,000 |      1,096 |          0 |          0 |          0 |         48 |

######################################################################
cordic_rec._146:
    cmp     $2, 25                      # |     26,000 |     26,000 |          0 |          0 |          0 |          0 |
    bne     be_else._192                # |     26,000 |     56,028 |     26,000 |          0 |          0 |      2,014 |
    mov     $5, $1                      # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    ret                                 # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
be_else._192:
    fcmp    $4, $zero                   # |     25,000 |     25,006 |          0 |          1 |          0 |          0 |
    bg      ble_else._193               # |     25,000 |     72,436 |     25,000 |          0 |          0 |     11,218 |
    fmul    $6, $4, $10                 # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    fmul    $6, $3, $9                  # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    load    [min_caml_atan_table + $2], $8# |     12,268 |     12,292 |          0 |          0 |          4 |          0 |
    load    [f._181], $7                # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    fsub    $3, $10, $3                 # |     12,268 |     24,532 |     12,264 |          0 |          0 |          0 |
    fadd    $4, $9, $4                  # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    fsub    $5, $8, $5                  # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    fmul    $6, $7, $6                  # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    add     $2, 1, $2                   # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    b       cordic_rec._146             # |     12,268 |     12,284 |          0 |          0 |          0 |          8 |
ble_else._193:
    fmul    $6, $4, $10                 # |     12,732 |     12,738 |          0 |          1 |          0 |          0 |
    fmul    $6, $3, $9                  # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    load    [min_caml_atan_table + $2], $8# |     12,732 |     12,750 |          0 |          0 |          3 |          0 |
    load    [f._181], $7                # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    fadd    $3, $10, $3                 # |     12,732 |     25,461 |     12,729 |          0 |          0 |          0 |
    fsub    $4, $9, $4                  # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    fadd    $5, $8, $5                  # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    fmul    $6, $7, $6                  # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    add     $2, 1, $2                   # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    b       cordic_rec._146             # |     12,732 |     12,808 |          0 |          0 |          0 |         38 |
.end atan

######################################################################
.begin sin
min_caml_sin:
    fcmp    $zero, $2                   # |      9,151 |     40,711 |     14,244 |      2,886 |          0 |          0 |
    bg      ble_else._196               # |      9,151 |     18,916 |      9,151 |          0 |          0 |        307 |
    load    [f._184], $10               # |      8,651 |     39,767 |          0 |      2,886 |      2,300 |          0 |
    fcmp    $10, $2                     # |      8,651 |     21,353 |     12,702 |          0 |          0 |          0 |
    bg      ble_else._197               # |      8,651 |     20,600 |      8,651 |          0 |          0 |      1,649 |
    load    [f._185], $10               # |      5,303 |     17,813 |          0 |          0 |      2,085 |          0 |
    fcmp    $10, $2                     # |      5,303 |     11,739 |      6,436 |          0 |          0 |          0 |
    bg      ble_else._198               # |      5,303 |     12,240 |      5,303 |          0 |          0 |        817 |
    load    [f._186], $10               # |      3,758 |     16,298 |          0 |          0 |      2,090 |          0 |
    fcmp    $10, $2                     # |      3,758 |      7,094 |      3,336 |          0 |          0 |          0 |
    bg      ble_else._199               # |      3,758 |     23,721 |        873 |      2,885 |          0 |        890 |
    fsub    $2, $10, $2                 # |      2,416 |      2,416 |          0 |          0 |          0 |          0 |
    b       min_caml_sin                # |      2,416 |      2,424 |          0 |          0 |          0 |          4 |
ble_else._199:
    fsub    $10, $2, $2                 # |      1,342 |      1,342 |          0 |          0 |          0 |          0 |
    call     min_caml_sin               # |      1,342 |      1,342 |          0 |          0 |          0 |          0 |
    mov     $1, $10                     # |      1,342 |      1,342 |          0 |          0 |          0 |          0 |
    fneg    $10, $1                     # |      1,342 |      1,342 |          0 |          0 |          0 |          0 |
    ret                                 # |      1,342 |      1,342 |          0 |          0 |          0 |          0 |
ble_else._198:
    fsub    $10, $2, $2                 # |      1,545 |      7,815 |          0 |      1,045 |          0 |          0 |
    b       cordic_sin._82              # |      1,545 |      1,565 |          0 |          0 |          0 |         10 |
ble_else._197:
    b       cordic_sin._82              # |      3,348 |     14,438 |          0 |      1,841 |          0 |         22 |
ble_else._196:
    fneg    $2, $2                      # |        500 |        500 |          0 |          0 |          0 |          0 |
    call     min_caml_sin               # |        500 |        500 |          0 |          0 |          0 |          0 |
    mov     $1, $10                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    fneg    $10, $1                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    ret                                 # |        500 |        500 |          0 |          0 |          0 |          0 |

######################################################################
cordic_rec._111:
    cmp     $3, 25                      # |    127,218 |    144,534 |          0 |      2,886 |          0 |          0 |
    bne     be_else._194                # |    127,218 |    274,614 |    127,218 |          0 |          0 |     10,089 |
    mov     $5, $1                      # |      4,893 |      4,893 |          0 |          0 |          0 |          0 |
    ret                                 # |      4,893 |      4,893 |          0 |          0 |          0 |          0 |
be_else._194:
    fcmp    $2, $6                      # |    122,325 |    122,325 |          0 |          0 |          0 |          0 |
    bg      ble_else._195               # |    122,325 |    358,804 |    122,325 |          0 |          0 |     57,077 |
    fmul    $7, $5, $10                 # |     59,231 |     59,231 |          0 |          0 |          0 |          0 |
    fmul    $7, $4, $9                  # |     59,231 |     59,231 |          0 |          0 |          0 |          0 |
    load    [min_caml_atan_table + $3], $8# |     59,231 |    117,791 |          0 |      2,886 |      6,874 |          0 |
    load    [f._181], $1                # |     59,231 |     59,231 |          0 |          0 |          0 |          0 |
    fadd    $4, $10, $4                 # |     59,231 |    108,801 |     49,570 |          0 |          0 |          0 |
    fsub    $5, $9, $5                  # |     59,231 |     59,231 |          0 |          0 |          0 |          0 |
    fsub    $6, $8, $6                  # |     59,231 |     59,231 |          0 |          0 |          0 |          0 |
    fmul    $7, $1, $7                  # |     59,231 |     59,231 |          0 |          0 |          0 |          0 |
    add     $3, 1, $3                   # |     59,231 |     59,231 |          0 |          0 |          0 |          0 |
    b       cordic_rec._111             # |     59,231 |     61,997 |          0 |          0 |          0 |      1,383 |
ble_else._195:
    fmul    $7, $5, $10                 # |     63,094 |     80,410 |          0 |      2,886 |          0 |          0 |
    fmul    $7, $4, $9                  # |     63,094 |     63,094 |          0 |          0 |          0 |          0 |
    load    [min_caml_atan_table + $3], $8# |     63,094 |    116,212 |          0 |          0 |      8,853 |          0 |
    load    [f._181], $1                # |     63,094 |     63,130 |          0 |          0 |          6 |          0 |
    fsub    $4, $10, $4                 # |     63,094 |    117,332 |     54,238 |          0 |          0 |          0 |
    fadd    $5, $9, $5                  # |     63,094 |     63,094 |          0 |          0 |          0 |          0 |
    fadd    $6, $8, $6                  # |     63,094 |     63,094 |          0 |          0 |          0 |          0 |
    fmul    $7, $1, $7                  # |     63,094 |     63,094 |          0 |          0 |          0 |          0 |
    add     $3, 1, $3                   # |     63,094 |     63,094 |          0 |          0 |          0 |          0 |
    b       cordic_rec._111             # |     63,094 |     67,804 |          0 |          0 |          0 |      2,355 |

######################################################################
cordic_sin._82:
    load    [f._183], $4                # |      4,893 |     21,807 |          0 |      2,817 |          2 |          0 |
    load    [f._182], $7                # |      4,893 |      5,079 |          0 |          0 |         31 |          0 |
    li      0, $3                       # |      4,893 |      4,893 |          0 |          0 |          0 |          0 |
    mov     $zero, $6                   # |      4,893 |      4,893 |          0 |          0 |          0 |          0 |
    mov     $zero, $5                   # |      4,893 |      4,893 |          0 |          0 |          0 |          0 |
    b       cordic_rec._111             # |      4,893 |      4,947 |          0 |          0 |          0 |         27 |
.end sin

######################################################################
.begin cos
min_caml_cos:
    load    [f._184], $10               # |      1,004 |      1,016 |          0 |          1 |          1 |          0 |
    fsub    $10, $2, $2                 # |      1,004 |      3,010 |      2,006 |          0 |          0 |          0 |
    b       min_caml_sin                # |      1,004 |      1,038 |          0 |          0 |          0 |         17 |
.end cos

######################################################################
#
#       ↑　ここまで lib_asm.s
#
######################################################################
min_caml_n_objects:
    .skip   1
min_caml_objects:
    .skip   60
min_caml_screen:
    .skip   3
min_caml_viewpoint:
    .skip   3
min_caml_light:
    .skip   3
min_caml_beam:
    .skip   1
min_caml_and_net:
    .skip   50
min_caml_or_net:
    .skip   1
min_caml_solver_dist:
    .skip   1
min_caml_intsec_rectside:
    .skip   1
min_caml_tmin:
    .skip   1
min_caml_intersection_point:
    .skip   3
min_caml_intersected_object_id:
    .skip   1
min_caml_nvector:
    .skip   3
min_caml_texture_color:
    .skip   3
min_caml_diffuse_ray:
    .skip   3
min_caml_rgb:
    .skip   3
min_caml_image_size:
    .skip   2
min_caml_image_center:
    .skip   2
min_caml_scan_pitch:
    .skip   1
min_caml_startp:
    .skip   3
min_caml_startp_fast:
    .skip   3
min_caml_screenx_dir:
    .skip   3
min_caml_screeny_dir:
    .skip   3
min_caml_screenz_dir:
    .skip   3
min_caml_ptrace_dirvec:
    .skip   3
min_caml_dirvecs:
    .skip   5
min_caml_light_dirvec:
    .int    light_dirvec_v3
    .int    light_dirvec_consts
light_dirvec_v3:
    .skip   3
light_dirvec_consts:
    .skip   60
min_caml_reflections:
    .skip   180
min_caml_n_reflections:
    .skip   1
f.32092:    .float  -2.0000000000E+02
f.32091:    .float  2.0000000000E+02
f.32063:    .float  1.2800000000E+02
f.32001:    .float  9.0000000000E-01
f.32000:    .float  2.0000000000E-01
f.31972:    .float  1.5000000000E+02
f.31971:    .float  -1.5000000000E+02
f.31970:    .float  6.6666666667E-03
f.31969:    .float  -6.6666666667E-03
f.31968:    .float  -2.0000000000E+00
f.31967:    .float  3.9062500000E-03
f.31966:    .float  2.5600000000E+02
f.31965:    .float  1.0000000000E+08
f.31964:    .float  1.0000000000E+09
f.31963:    .float  1.0000000000E+01
f.31962:    .float  2.0000000000E+01
f.31961:    .float  5.0000000000E-02
f.31960:    .float  2.5000000000E-01
f.31959:    .float  1.0000000000E-01
f.31958:    .float  3.3333333333E+00
f.31957:    .float  2.5500000000E+02
f.31956:    .float  1.5000000000E-01
f.31955:    .float  3.1830988148E-01
f.31954:    .float  3.1415927000E+00
f.31953:    .float  3.0000000000E+01
f.31952:    .float  1.5000000000E+01
f.31951:    .float  1.0000000000E-04
f.31950:    .float  -1.0000000000E-01
f.31949:    .float  1.0000000000E-02
f.31948:    .float  -2.0000000000E-01
f.31947:    .float  5.0000000000E-01
f.31946:    .float  1.0000000000E+00
f.31945:    .float  -1.0000000000E+00
f.31944:    .float  2.0000000000E+00
f.31931:    .float  1.7453293000E-02

######################################################################
.begin read_nth_object
read_nth_object.2719:
.count stack_move
    sub     $sp, 1, $sp                 # |         18 |         24 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |         18 |         36 |         18 |          0 |          0 |          0 |
    call    min_caml_read_int           # |         18 |         18 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |         18 |         24 |          0 |          1 |          0 |          0 |
    cmp     $10, -1                     # |         18 |         18 |          0 |          0 |          0 |          0 |
    bne     be_else.36186               # |         18 |         50 |         18 |          0 |          0 |          7 |
be_then.36186:
.count stack_move
    add     $sp, 1, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $1                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
be_else.36186:
    call    min_caml_read_int           # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_int           # |         17 |         23 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_int           # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         23 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 0]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 1]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 2]              # |         17 |         23 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 0]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         23 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 1]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 2]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    li      2, $2                       # |         17 |         23 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 0]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         17 |         23 |          0 |          1 |          0 |          0 |
    store   $18, [$17 + 1]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $19, [$18 + 0]              # |         17 |         23 |          0 |          1 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $19, [$18 + 1]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $19, [$18 + 2]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         23 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
    cmp     $13, 0                      # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    be      bne_cont.36187              # |         17 |         21 |          0 |          0 |          0 |          2 |
bne_then.36187:
    call    min_caml_read_float
.count load_float
    load    [f.31931], $21
.count move_ret
    mov     $1, $20
    fmul    $20, $21, $20
    store   $20, [$19 + 0]
    call    min_caml_read_float
.count move_ret
    mov     $1, $20
    fmul    $20, $21, $20
    store   $20, [$19 + 1]
    call    min_caml_read_float
.count move_ret
    mov     $1, $20
    fmul    $20, $21, $20
    store   $20, [$19 + 2]
bne_cont.36187:
    li      4, $2                       # |         17 |         23 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
    fcmp    $zero, $16                  # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $20                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    bg      ble_else.36188              # |         17 |         25 |          0 |          0 |          0 |          4 |
ble_then.36188:
    li      0, $16                      # |         15 |         21 |          0 |          1 |          0 |          0 |
.count b_cont
    b       ble_cont.36188              # |         15 |         19 |          0 |          0 |          0 |          2 |
ble_else.36188:
    li      1, $16                      # |          2 |          2 |          0 |          0 |          0 |          0 |
ble_cont.36188:
    cmp     $11, 2                      # |         17 |         17 |          0 |          0 |          0 |          0 |
    bne     be_else.36189               # |         17 |         48 |         17 |          0 |          0 |          7 |
be_then.36189:
    li      1, $21                      # |          2 |          2 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36189               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.36189:
    mov     $16, $21                    # |         15 |         15 |          0 |          0 |          0 |          0 |
be_cont.36189:
    mov     $hp, $22                    # |         17 |         23 |          0 |          1 |          0 |          0 |
    add     $hp, 11, $hp                # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $20, [$22 + 10]             # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $19, [$22 + 9]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $18, [$22 + 8]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $17, [$22 + 7]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $21, [$22 + 6]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $15, [$22 + 5]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $14, [$22 + 4]              # |         17 |         23 |          0 |          1 |          0 |          0 |
    store   $13, [$22 + 3]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $12, [$22 + 2]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $11, [$22 + 1]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $10, [$22 + 0]              # |         17 |         17 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $15              # |         17 |         23 |          0 |          0 |          1 |          0 |
    cmp     $11, 3                      # |         17 |         17 |          0 |          0 |          0 |          0 |
    mov     $22, $12                    # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $12, [min_caml_objects + $15]# |         17 |         29 |          0 |          2 |          0 |          0 |
    bne     be_else.36190               # |         17 |         37 |          0 |          0 |          0 |         10 |
be_then.36190:
    load    [$14 + 0], $11              # |          9 |         63 |          0 |          0 |          9 |          0 |
    fcmp    $11, $zero                  # |          9 |          9 |          0 |          0 |          0 |          0 |
    bne     be_else.36191               # |          9 |         22 |          9 |          0 |          0 |          2 |
be_then.36191:
    mov     $zero, $11                  # |          2 |          2 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36191               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.36191:
    fcmp    $11, $zero                  # |          7 |          7 |          0 |          0 |          0 |          0 |
    bne     be_else.36192               # |          7 |         28 |          5 |          2 |          0 |          2 |
be_then.36192:
    fmul    $11, $11, $11
    finv    $11, $11
    mov     $zero, $11
.count b_cont
    b       be_cont.36192
be_else.36192:
    fcmp    $11, $zero                  # |          7 |          7 |          0 |          0 |          0 |          0 |
    fmul    $11, $11, $11               # |          7 |          7 |          0 |          0 |          0 |          0 |
    finv    $11, $11                    # |          7 |         35 |         28 |          0 |          0 |          0 |
    bg      ble_cont.36193              # |          7 |         17 |          0 |          1 |          0 |          2 |
ble_then.36193:
    fneg    $11, $11
ble_cont.36193:
be_cont.36192:
be_cont.36191:
    store   $11, [$14 + 0]              # |          9 |         31 |         16 |          1 |          0 |          0 |
    load    [$14 + 1], $11              # |          9 |          9 |          0 |          0 |          0 |          0 |
    fcmp    $11, $zero                  # |          9 |         27 |         18 |          0 |          0 |          0 |
    bne     be_else.36194               # |          9 |         26 |          9 |          0 |          0 |          4 |
be_then.36194:
    mov     $zero, $11
.count b_cont
    b       be_cont.36194
be_else.36194:
    fcmp    $11, $zero                  # |          9 |         21 |          0 |          2 |          0 |          0 |
    bne     be_else.36195               # |          9 |         26 |          9 |          0 |          0 |          4 |
be_then.36195:
    fmul    $11, $11, $11
    finv    $11, $11
    mov     $zero, $11
.count b_cont
    b       be_cont.36195
be_else.36195:
    fcmp    $11, $zero                  # |          9 |          9 |          0 |          0 |          0 |          0 |
    fmul    $11, $11, $11               # |          9 |          9 |          0 |          0 |          0 |          0 |
    finv    $11, $11                    # |          9 |         49 |         28 |          2 |          0 |          0 |
    bg      ble_cont.36196              # |          9 |         17 |          0 |          0 |          0 |          4 |
ble_then.36196:
    fneg    $11, $11
ble_cont.36196:
be_cont.36195:
be_cont.36194:
    store   $11, [$14 + 1]              # |          9 |         28 |         19 |          0 |          0 |          0 |
    load    [$14 + 2], $11              # |          9 |          9 |          0 |          0 |          0 |          0 |
    fcmp    $11, $zero                  # |          9 |         27 |         18 |          0 |          0 |          0 |
    bne     be_else.36197               # |          9 |         26 |          9 |          0 |          0 |          4 |
be_then.36197:
    mov     $zero, $11
.count b_cont
    b       be_cont.36197
be_else.36197:
    fcmp    $11, $zero                  # |          9 |         21 |          0 |          2 |          0 |          0 |
    bne     be_else.36198               # |          9 |         26 |          9 |          0 |          0 |          4 |
be_then.36198:
    fmul    $11, $11, $11
    finv    $11, $11
    mov     $zero, $11
.count b_cont
    b       be_cont.36198
be_else.36198:
    fcmp    $11, $zero                  # |          9 |          9 |          0 |          0 |          0 |          0 |
    fmul    $11, $11, $11               # |          9 |         15 |          0 |          1 |          0 |          0 |
    finv    $11, $11                    # |          9 |         45 |         36 |          0 |          0 |          0 |
    bg      ble_cont.36199              # |          9 |         17 |          0 |          0 |          0 |          4 |
ble_then.36199:
    fneg    $11, $11
ble_cont.36199:
be_cont.36198:
be_cont.36197:
    cmp     $13, 0                      # |          9 |          9 |          0 |          0 |          0 |          0 |
    store   $11, [$14 + 2]              # |          9 |         19 |         10 |          0 |          0 |          0 |
    bne     be_else.36200               # |          9 |          9 |          0 |          0 |          0 |          0 |
be_then.36200:
.count stack_move
    add     $sp, 1, $sp                 # |          9 |          9 |          0 |          0 |          0 |          0 |
    li      1, $1                       # |          9 |         15 |          0 |          1 |          0 |          0 |
    ret                                 # |          9 |          9 |          0 |          0 |          0 |          0 |
be_else.36200:
    load    [$19 + 0], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $11
    load    [$19 + 0], $2
    call    min_caml_sin
.count move_ret
    mov     $1, $12
    load    [$19 + 1], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $13
    load    [$19 + 1], $2
    call    min_caml_sin
.count move_ret
    mov     $1, $15
    load    [$19 + 2], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $16
    load    [$19 + 2], $2
    call    min_caml_sin
.count stack_move
    add     $sp, 1, $sp
    fmul    $13, $16, $2
    fmul    $13, $1, $4
    load    [$14 + 0], $3
    load    [$14 + 1], $5
    fneg    $15, $6
    fmul    $2, $2, $7
    fmul    $6, $6, $8
    fmul    $4, $4, $9
    fmul    $12, $15, $17
    load    [$14 + 2], $10
    fmul    $3, $7, $7
    fmul    $11, $1, $18
    fmul    $10, $8, $8
    fmul    $5, $9, $9
    fmul    $17, $16, $20
    fmul    $17, $1, $17
    fmul    $11, $16, $21
    fmul    $3, $2, $2
    fadd    $7, $9, $7
    fmul    $11, $15, $9
    fsub    $20, $18, $15
    fadd    $17, $21, $17
    fmul    $12, $13, $18
    fadd    $7, $8, $7
    fmul    $9, $16, $8
    fmul    $15, $15, $20
    fmul    $17, $17, $22
    fmul    $18, $18, $21
    store   $7, [$14 + 0]
    fmul    $12, $1, $7
    fmul    $3, $20, $20
    fmul    $5, $22, $22
    fmul    $10, $21, $21
    fmul    $9, $1, $1
    fmul    $12, $16, $9
    fadd    $8, $7, $7
    fmul    $11, $13, $8
    fadd    $20, $22, $11
.count load_float
    load    [f.31944], $12
    fsub    $1, $9, $1
    fmul    $7, $7, $9
    fmul    $8, $8, $13
    fadd    $11, $21, $11
    fmul    $3, $15, $16
    fmul    $1, $1, $20
    fmul    $3, $9, $9
    fmul    $10, $13, $13
    store   $11, [$14 + 1]
    fmul    $16, $7, $11
    fmul    $5, $20, $16
    fmul    $5, $17, $20
    fmul    $5, $4, $3
    fmul    $10, $18, $21
    fmul    $2, $7, $7
    fadd    $9, $16, $4
    fmul    $20, $1, $5
    fmul    $3, $1, $1
    fmul    $21, $8, $9
    fmul    $10, $6, $6
    fadd    $4, $13, $4
    fadd    $11, $5, $5
    fmul    $2, $15, $2
    fmul    $3, $17, $3
    fadd    $7, $1, $1
    store   $4, [$14 + 2]
    fadd    $5, $9, $4
    fmul    $6, $8, $5
    fadd    $2, $3, $2
    fmul    $6, $18, $3
    fmul    $12, $4, $4
    fadd    $1, $5, $1
    fadd    $2, $3, $2
    store   $4, [$19 + 0]
    fmul    $12, $1, $1
    fmul    $12, $2, $2
    store   $1, [$19 + 1]
    li      1, $1
    store   $2, [$19 + 2]
    ret
be_else.36190:
    cmp     $11, 2                      # |          8 |         14 |          0 |          1 |          0 |          0 |
    bne     be_else.36201               # |          8 |         20 |          8 |          0 |          0 |          2 |
be_then.36201:
    cmp     $16, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [$14 + 0], $11              # |          2 |         14 |          0 |          0 |          2 |          0 |
    bne     be_else.36202               # |          2 |          2 |          0 |          0 |          0 |          0 |
be_then.36202:
    li      1, $12                      # |          2 |          8 |          0 |          1 |          0 |          0 |
.count b_cont
    b       be_cont.36202               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.36202:
    li      0, $12
be_cont.36202:
    load    [$14 + 1], $16              # |          2 |          2 |          0 |          0 |          0 |          0 |
    fmul    $11, $11, $15               # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [$14 + 2], $17              # |          2 |          2 |          0 |          0 |          0 |          0 |
    fmul    $16, $16, $16               # |          2 |          2 |          0 |          0 |          0 |          0 |
    fmul    $17, $17, $17               # |          2 |          4 |          2 |          0 |          0 |          0 |
    fadd    $15, $16, $15               # |          2 |         10 |          2 |          1 |          0 |          0 |
    fadd    $15, $17, $15               # |          2 |         10 |          8 |          0 |          0 |          0 |
    fsqrt   $15, $15                    # |          2 |         10 |          8 |          0 |          0 |          0 |
    fcmp    $15, $zero                  # |          2 |         10 |          8 |          0 |          0 |          0 |
    bne     be_else.36203               # |          2 |          8 |          2 |          0 |          0 |          2 |
be_then.36203:
    mov     $36, $12
.count b_cont
    b       be_cont.36203
be_else.36203:
    cmp     $12, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    finv    $15, $12                    # |          2 |          8 |          0 |          1 |          0 |          0 |
    be      bne_cont.36204              # |          2 |          2 |          0 |          0 |          0 |          0 |
bne_then.36204:
    fneg    $12, $12                    # |          2 |          8 |          6 |          0 |          0 |          0 |
bne_cont.36204:
be_cont.36203:
    fmul    $11, $12, $11               # |          2 |          4 |          2 |          0 |          0 |          0 |
    cmp     $13, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $11, [$14 + 0]              # |          2 |          8 |          6 |          0 |          0 |          0 |
    load    [$14 + 1], $11              # |          2 |          2 |          0 |          0 |          0 |          0 |
    fmul    $11, $12, $11               # |          2 |          6 |          4 |          0 |          0 |          0 |
    store   $11, [$14 + 1]              # |          2 |         12 |          4 |          1 |          0 |          0 |
    load    [$14 + 2], $11              # |          2 |          2 |          0 |          0 |          0 |          0 |
    fmul    $11, $12, $11               # |          2 |          6 |          4 |          0 |          0 |          0 |
    store   $11, [$14 + 2]              # |          2 |         10 |          8 |          0 |          0 |          0 |
    bne     be_else.36205               # |          2 |          2 |          0 |          0 |          0 |          0 |
be_then.36205:
.count stack_move
    add     $sp, 1, $sp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      1, $1                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    ret                                 # |          2 |          2 |          0 |          0 |          0 |          0 |
be_else.36205:
    load    [$19 + 0], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $11
    load    [$19 + 0], $2
    call    min_caml_sin
.count move_ret
    mov     $1, $12
    load    [$19 + 1], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $13
    load    [$19 + 1], $2
    call    min_caml_sin
.count move_ret
    mov     $1, $15
    load    [$19 + 2], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $16
    load    [$19 + 2], $2
    call    min_caml_sin
.count stack_move
    add     $sp, 1, $sp
    fmul    $13, $16, $2
    fmul    $13, $1, $4
    load    [$14 + 0], $3
    load    [$14 + 1], $5
    fneg    $15, $6
    fmul    $2, $2, $7
    fmul    $6, $6, $8
    fmul    $4, $4, $9
    fmul    $12, $15, $17
    load    [$14 + 2], $10
    fmul    $3, $7, $7
    fmul    $11, $1, $18
    fmul    $10, $8, $8
    fmul    $5, $9, $9
    fmul    $17, $16, $20
    fmul    $17, $1, $17
    fmul    $11, $16, $21
    fmul    $3, $2, $2
    fadd    $7, $9, $7
    fmul    $11, $15, $9
    fsub    $20, $18, $15
    fadd    $17, $21, $17
    fmul    $12, $13, $18
    fadd    $7, $8, $7
    fmul    $9, $16, $8
    fmul    $15, $15, $20
    fmul    $17, $17, $22
    fmul    $18, $18, $21
    store   $7, [$14 + 0]
    fmul    $12, $1, $7
    fmul    $3, $20, $20
    fmul    $5, $22, $22
    fmul    $10, $21, $21
    fmul    $9, $1, $1
    fmul    $12, $16, $9
    fadd    $8, $7, $7
    fmul    $11, $13, $8
    fadd    $20, $22, $11
.count load_float
    load    [f.31944], $12
    fsub    $1, $9, $1
    fmul    $7, $7, $9
    fmul    $8, $8, $13
    fadd    $11, $21, $11
    fmul    $3, $15, $16
    fmul    $1, $1, $20
    fmul    $3, $9, $9
    fmul    $10, $13, $13
    store   $11, [$14 + 1]
    fmul    $16, $7, $11
    fmul    $5, $20, $16
    fmul    $5, $17, $20
    fmul    $5, $4, $3
    fmul    $10, $18, $21
    fmul    $2, $7, $7
    fadd    $9, $16, $4
    fmul    $20, $1, $5
    fmul    $3, $1, $1
    fmul    $21, $8, $9
    fmul    $10, $6, $6
    fadd    $4, $13, $4
    fadd    $11, $5, $5
    fmul    $2, $15, $2
    fmul    $3, $17, $3
    fadd    $7, $1, $1
    store   $4, [$14 + 2]
    fadd    $5, $9, $4
    fmul    $6, $8, $5
    fadd    $2, $3, $2
    fmul    $6, $18, $3
    fmul    $12, $4, $4
    fadd    $1, $5, $1
    fadd    $2, $3, $2
    store   $4, [$19 + 0]
    fmul    $12, $1, $1
    fmul    $12, $2, $2
    store   $1, [$19 + 1]
    li      1, $1
    store   $2, [$19 + 2]
    ret
be_else.36201:
    cmp     $13, 0                      # |          6 |         12 |          0 |          1 |          0 |          0 |
    bne     be_else.36206               # |          6 |         12 |          6 |          0 |          0 |          0 |
be_then.36206:
.count stack_move
    add     $sp, 1, $sp                 # |          6 |          6 |          0 |          0 |          0 |          0 |
    li      1, $1                       # |          6 |          6 |          0 |          0 |          0 |          0 |
    ret                                 # |          6 |          6 |          0 |          0 |          0 |          0 |
be_else.36206:
    load    [$19 + 0], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $11
    load    [$19 + 0], $2
    call    min_caml_sin
.count move_ret
    mov     $1, $12
    load    [$19 + 1], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $13
    load    [$19 + 1], $2
    call    min_caml_sin
.count move_ret
    mov     $1, $15
    load    [$19 + 2], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $16
    load    [$19 + 2], $2
    call    min_caml_sin
.count stack_move
    add     $sp, 1, $sp
    fmul    $13, $16, $2
    fmul    $13, $1, $4
    load    [$14 + 0], $3
    load    [$14 + 1], $5
    fneg    $15, $6
    fmul    $2, $2, $7
    fmul    $6, $6, $8
    fmul    $4, $4, $9
    fmul    $12, $15, $17
    load    [$14 + 2], $10
    fmul    $3, $7, $7
    fmul    $11, $1, $18
    fmul    $10, $8, $8
    fmul    $5, $9, $9
    fmul    $17, $16, $20
    fmul    $17, $1, $17
    fmul    $11, $16, $21
    fmul    $3, $2, $2
    fadd    $7, $9, $7
    fmul    $11, $15, $9
    fsub    $20, $18, $15
    fadd    $17, $21, $17
    fmul    $12, $13, $18
    fadd    $7, $8, $7
    fmul    $9, $16, $8
    fmul    $15, $15, $20
    fmul    $17, $17, $22
    fmul    $18, $18, $21
    store   $7, [$14 + 0]
    fmul    $12, $1, $7
    fmul    $3, $20, $20
    fmul    $5, $22, $22
    fmul    $10, $21, $21
    fmul    $9, $1, $1
    fmul    $12, $16, $9
    fadd    $8, $7, $7
    fmul    $11, $13, $8
    fadd    $20, $22, $11
.count load_float
    load    [f.31944], $12
    fsub    $1, $9, $1
    fmul    $7, $7, $9
    fmul    $8, $8, $13
    fadd    $11, $21, $11
    fmul    $3, $15, $16
    fmul    $1, $1, $20
    fmul    $3, $9, $9
    fmul    $10, $13, $13
    store   $11, [$14 + 1]
    fmul    $16, $7, $11
    fmul    $5, $20, $16
    fmul    $5, $17, $20
    fmul    $5, $4, $3
    fmul    $10, $18, $21
    fmul    $2, $7, $7
    fadd    $9, $16, $4
    fmul    $20, $1, $5
    fmul    $3, $1, $1
    fmul    $21, $8, $9
    fmul    $10, $6, $6
    fadd    $4, $13, $4
    fadd    $11, $5, $5
    fmul    $2, $15, $2
    fmul    $3, $17, $3
    fadd    $7, $1, $1
    store   $4, [$14 + 2]
    fadd    $5, $9, $4
    fmul    $6, $8, $5
    fadd    $2, $3, $2
    fmul    $6, $18, $3
    fmul    $12, $4, $4
    fadd    $1, $5, $1
    fadd    $2, $3, $2
    store   $4, [$19 + 0]
    fmul    $12, $1, $1
    fmul    $12, $2, $2
    store   $1, [$19 + 1]
    li      1, $1
    store   $2, [$19 + 2]
    ret
.end read_nth_object

######################################################################
.begin read_object
read_object.2721:
    cmp     $2, 60                      # |          2 |          8 |          0 |          1 |          0 |          0 |
    bl      bge_else.36207              # |          2 |         13 |          1 |          1 |          0 |          2 |
bge_then.36207:
    ret
bge_else.36207:
.count stack_move
    sub     $sp, 8, $sp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |          2 |          4 |          2 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $23, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.36208               # |          2 |          8 |          2 |          0 |          0 |          2 |
be_then.36208:
.count stack_move
    add     $sp, 8, $sp
.count stack_load
    load    [$sp - 8], $1
.count move_float
    mov     $1, $41
    ret
be_else.36208:
.count stack_load
    load    [$sp + 0], $23              # |          2 |          8 |          0 |          1 |          0 |          0 |
    add     $23, 1, $2                  # |          2 |          6 |          4 |          0 |          0 |          0 |
    cmp     $2, 60                      # |          2 |          4 |          2 |          0 |          0 |          0 |
    bl      bge_else.36209              # |          2 |          8 |          2 |          0 |          0 |          2 |
bge_then.36209:
.count stack_move
    add     $sp, 8, $sp
    ret
bge_else.36209:
.count stack_store
    store   $2, [$sp + 1]               # |          2 |          8 |          0 |          1 |          0 |          0 |
    call    read_nth_object.2719        # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $23, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.36210               # |          2 |          8 |          2 |          0 |          0 |          2 |
be_then.36210:
.count stack_move
    add     $sp, 8, $sp
.count stack_load
    load    [$sp - 7], $1
.count move_float
    mov     $1, $41
    ret
be_else.36210:
.count stack_load
    load    [$sp + 1], $23              # |          2 |          8 |          0 |          1 |          0 |          0 |
    add     $23, 1, $2                  # |          2 |          6 |          4 |          0 |          0 |          0 |
    cmp     $2, 60                      # |          2 |          4 |          2 |          0 |          0 |          0 |
    bl      bge_else.36211              # |          2 |          8 |          2 |          0 |          0 |          2 |
bge_then.36211:
.count stack_move
    add     $sp, 8, $sp
    ret
bge_else.36211:
.count stack_store
    store   $2, [$sp + 2]               # |          2 |          8 |          0 |          1 |          0 |          0 |
    call    read_nth_object.2719        # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $23, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.36212               # |          2 |          8 |          2 |          0 |          0 |          2 |
be_then.36212:
.count stack_move
    add     $sp, 8, $sp
.count stack_load
    load    [$sp - 6], $1
.count move_float
    mov     $1, $41
    ret
be_else.36212:
.count stack_load
    load    [$sp + 2], $23              # |          2 |          8 |          0 |          1 |          0 |          0 |
    add     $23, 1, $2                  # |          2 |          6 |          4 |          0 |          0 |          0 |
    cmp     $2, 60                      # |          2 |          4 |          2 |          0 |          0 |          0 |
    bl      bge_else.36213              # |          2 |          8 |          2 |          0 |          0 |          2 |
bge_then.36213:
.count stack_move
    add     $sp, 8, $sp
    ret
bge_else.36213:
.count stack_store
    store   $2, [$sp + 3]               # |          2 |          8 |          0 |          1 |          0 |          0 |
    call    read_nth_object.2719        # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $23, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.36214               # |          2 |          8 |          2 |          0 |          0 |          2 |
be_then.36214:
.count stack_move
    add     $sp, 8, $sp
.count stack_load
    load    [$sp - 5], $1
.count move_float
    mov     $1, $41
    ret
be_else.36214:
.count stack_load
    load    [$sp + 3], $23              # |          2 |         14 |          0 |          1 |          1 |          0 |
    add     $23, 1, $2                  # |          2 |          4 |          2 |          0 |          0 |          0 |
    cmp     $2, 60                      # |          2 |          4 |          2 |          0 |          0 |          0 |
    bl      bge_else.36215              # |          2 |          8 |          2 |          0 |          0 |          2 |
bge_then.36215:
.count stack_move
    add     $sp, 8, $sp
    ret
bge_else.36215:
.count stack_store
    store   $2, [$sp + 4]               # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          2 |          8 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $23, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.36216               # |          2 |          8 |          2 |          0 |          0 |          2 |
be_then.36216:
.count stack_move
    add     $sp, 8, $sp
.count stack_load
    load    [$sp - 4], $1
.count move_float
    mov     $1, $41
    ret
be_else.36216:
.count stack_load
    load    [$sp + 4], $23              # |          2 |          8 |          0 |          1 |          0 |          0 |
    add     $23, 1, $2                  # |          2 |          6 |          4 |          0 |          0 |          0 |
    cmp     $2, 60                      # |          2 |          4 |          2 |          0 |          0 |          0 |
    bl      bge_else.36217              # |          2 |          8 |          2 |          0 |          0 |          2 |
bge_then.36217:
.count stack_move
    add     $sp, 8, $sp
    ret
bge_else.36217:
.count stack_store
    store   $2, [$sp + 5]               # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    cmp     $23, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.36218               # |          2 |          6 |          2 |          0 |          0 |          1 |
be_then.36218:
.count stack_move
    add     $sp, 8, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 3], $1               # |          1 |          2 |          1 |          0 |          0 |          0 |
.count move_float
    mov     $1, $41                     # |          1 |          3 |          2 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
be_else.36218:
.count stack_load
    load    [$sp + 5], $23              # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $23, 1, $2                  # |          1 |          7 |          0 |          1 |          0 |          0 |
    cmp     $2, 60                      # |          1 |          2 |          1 |          0 |          0 |          0 |
    bl      bge_else.36219              # |          1 |          4 |          1 |          0 |          0 |          1 |
bge_then.36219:
.count stack_move
    add     $sp, 8, $sp
    ret
bge_else.36219:
.count stack_store
    store   $2, [$sp + 6]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $23, 0                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.36220               # |          1 |          4 |          1 |          0 |          0 |          1 |
be_then.36220:
.count stack_move
    add     $sp, 8, $sp
.count stack_load
    load    [$sp - 2], $1
.count move_float
    mov     $1, $41
    ret
be_else.36220:
.count stack_load
    load    [$sp + 6], $23              # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $23, 1, $2                  # |          1 |          3 |          2 |          0 |          0 |          0 |
    cmp     $2, 60                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bl      bge_else.36221              # |          1 |          4 |          1 |          0 |          0 |          1 |
bge_then.36221:
.count stack_move
    add     $sp, 8, $sp
    ret
bge_else.36221:
.count stack_store
    store   $2, [$sp + 7]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 8, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.36222               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.36222:
.count move_float
    mov     $1, $41
    ret
be_else.36222:
    add     $1, 1, $2                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       read_object.2721            # |          1 |          3 |          0 |          0 |          0 |          1 |
.end read_object

######################################################################
.begin read_net_item
read_net_item.2725:
.count stack_move
    sub     $sp, 8, $sp                 # |          7 |          7 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |          7 |         14 |          7 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          7 |         13 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          7 |          7 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          7 |          7 |          0 |          0 |          0 |          0 |
    bne     be_else.36223               # |          7 |         18 |          7 |          0 |          0 |          2 |
be_then.36223:
.count stack_move
    add     $sp, 8, $sp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $zero, -1, $3               # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 8], $10              # |          2 |          8 |          0 |          0 |          1 |          0 |
    add     $10, 1, $2                  # |          2 |          4 |          2 |          0 |          0 |          0 |
    b       min_caml_create_array       # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.36223:
    call    min_caml_read_int           # |          5 |         11 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $12              # |          5 |         17 |          0 |          0 |          2 |          0 |
    cmp     $11, -1                     # |          5 |          5 |          0 |          0 |          0 |          0 |
    add     $12, 1, $13                 # |          5 |          8 |          3 |          0 |          0 |          0 |
    bne     be_else.36224               # |          5 |          7 |          0 |          0 |          0 |          1 |
be_then.36224:
    add     $13, 1, $2                  # |          3 |          3 |          0 |          0 |          0 |          0 |
    add     $zero, -1, $3               # |          3 |          9 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          3 |          3 |          0 |          0 |          0 |          0 |
.count storer
    add     $1, $12, $tmp               # |          3 |          3 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 8, $sp                 # |          3 |          3 |          0 |          0 |          0 |          0 |
    store   $10, [$tmp + 0]             # |          3 |          3 |          0 |          0 |          0 |          0 |
    ret                                 # |          3 |          3 |          0 |          0 |          0 |          0 |
be_else.36224:
    call    min_caml_read_int           # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $14, -1                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    add     $13, 1, $15                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.36225               # |          2 |          4 |          0 |          0 |          0 |          1 |
be_then.36225:
    add     $15, 1, $2                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $zero, -1, $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 8, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $1, $13, $tmp               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$tmp + 0]             # |          1 |          2 |          1 |          0 |          0 |          0 |
.count storer
    add     $1, $12, $tmp               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$tmp + 0]             # |          1 |          2 |          1 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
be_else.36225:
    call    min_caml_read_int           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $15, 1, $17                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $16, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $17, 1, $2                  # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.36226               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.36226:
    add     $zero, -1, $3
    call    min_caml_create_array
.count stack_move
    add     $sp, 8, $sp
.count storer
    add     $1, $15, $tmp
    store   $14, [$tmp + 0]
.count storer
    add     $1, $13, $tmp
    store   $11, [$tmp + 0]
.count storer
    add     $1, $12, $tmp
    store   $10, [$tmp + 0]
    ret
be_else.36226:
.count stack_store
    store   $10, [$sp + 1]              # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $13, [$sp + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $11, [$sp + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $15, [$sp + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $14, [$sp + 5]              # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $17, [$sp + 6]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $16, [$sp + 7]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 8, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |          1 |          2 |          1 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $1, $2, $tmp                # |          1 |          2 |          1 |          0 |          0 |          0 |
    store   $3, [$tmp + 0]              # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 4], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 3], $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $1, $2, $tmp                # |          1 |          2 |          1 |          0 |          0 |          0 |
    store   $3, [$tmp + 0]              # |          1 |          2 |          1 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 6], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 5], $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $1, $2, $tmp                # |          1 |          2 |          1 |          0 |          0 |          0 |
    store   $3, [$tmp + 0]              # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 8], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 7], $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $1, $2, $tmp                # |          1 |          2 |          1 |          0 |          0 |          0 |
    store   $3, [$tmp + 0]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.end read_net_item

######################################################################
.begin read_or_network
read_or_network.2727:
.count stack_move
    sub     $sp, 9, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |          1 |          2 |          1 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.36227               # |          1 |          4 |          1 |          0 |          0 |          1 |
be_then.36227:
    li      1, $2
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $10
.count b_cont
    b       be_cont.36227
be_else.36227:
    call    min_caml_read_int           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $11, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.36228               # |          1 |          4 |          1 |          0 |          0 |          1 |
be_then.36228:
    li      2, $2
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $11
    store   $10, [$11 + 0]
    mov     $11, $10
.count b_cont
    b       be_cont.36228
be_else.36228:
    call    min_caml_read_int           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $12, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.36229               # |          1 |          9 |          0 |          1 |          0 |          1 |
be_then.36229:
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $12
    store   $11, [$12 + 1]
    store   $10, [$12 + 0]
    mov     $12, $10
.count b_cont
    b       be_cont.36229
be_else.36229:
.count stack_store
    store   $10, [$sp + 1]              # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $11, [$sp + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $12, [$sp + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $11              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 2]              # |          1 |          2 |          1 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $11              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 1]              # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $11              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 0]              # |          1 |          3 |          2 |          0 |          0 |          0 |
be_cont.36229:
be_cont.36228:
be_cont.36227:
    mov     $10, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $10               # |          1 |          7 |          0 |          0 |          1 |          0 |
.count stack_load
    load    [$sp + 0], $11              # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $11, 1, $2                  # |          1 |          2 |          1 |          0 |          0 |          0 |
    bne     be_else.36230               # |          1 |          9 |          0 |          1 |          0 |          1 |
be_then.36230:
.count stack_move
    add     $sp, 9, $sp
    b       min_caml_create_array
be_else.36230:
.count stack_store
    store   $3, [$sp + 4]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.36231               # |          1 |          2 |          1 |          0 |          0 |          0 |
be_then.36231:
    li      1, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    add     $zero, -1, $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36231               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_else.36231:
    call    min_caml_read_int
.count move_ret
    mov     $1, $11
    cmp     $11, -1
    li      2, $2
    bne     be_else.36232
be_then.36232:
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $11
    store   $10, [$11 + 0]
    mov     $11, $10
.count b_cont
    b       be_cont.36232
be_else.36232:
.count stack_store
    store   $10, [$sp + 5]
.count stack_store
    store   $11, [$sp + 6]
    call    read_net_item.2725
.count stack_load
    load    [$sp + 6], $11
.count move_ret
    mov     $1, $10
    store   $11, [$10 + 1]
.count stack_load
    load    [$sp + 5], $11
    store   $11, [$10 + 0]
be_cont.36232:
be_cont.36231:
    mov     $10, $3                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$3 + 0], $10               # |          1 |          7 |          0 |          0 |          1 |          0 |
.count stack_load
    load    [$sp + 0], $11              # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $11, 1, $12                 # |          1 |          2 |          1 |          0 |          0 |          0 |
    add     $12, 1, $2                  # |          1 |          2 |          1 |          0 |          0 |          0 |
    bne     be_else.36233               # |          1 |          1 |          0 |          0 |          0 |          0 |
be_then.36233:
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 9, $sp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
.count storer
    add     $1, $11, $tmp               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 5], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$tmp + 0]              # |          1 |          3 |          2 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
be_else.36233:
.count stack_store
    store   $12, [$sp + 7]
.count stack_store
    store   $3, [$sp + 8]
    call    read_or_network.2727
.count stack_move
    add     $sp, 9, $sp
.count stack_load
    load    [$sp - 2], $2
.count stack_load
    load    [$sp - 1], $3
.count storer
    add     $1, $2, $tmp
    store   $3, [$tmp + 0]
.count stack_load
    load    [$sp - 9], $2
.count stack_load
    load    [$sp - 5], $3
.count storer
    add     $1, $2, $tmp
    store   $3, [$tmp + 0]
    ret
.end read_or_network

######################################################################
.begin read_and_network
read_and_network.2729:
.count stack_move
    sub     $sp, 13, $sp                # |          3 |          9 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |          3 |          6 |          3 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          3 |          3 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          3 |          3 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          3 |          3 |          0 |          0 |          0 |          0 |
    bne     be_else.36234               # |          3 |         12 |          3 |          0 |          0 |          3 |
be_then.36234:
    li      1, $2
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $10
.count b_cont
    b       be_cont.36234
be_else.36234:
    call    min_caml_read_int           # |          3 |          9 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          3 |          3 |          0 |          0 |          0 |          0 |
    cmp     $11, -1                     # |          3 |          3 |          0 |          0 |          0 |          0 |
    bne     be_else.36235               # |          3 |         15 |          2 |          1 |          0 |          2 |
be_then.36235:
    li      2, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $zero, -1, $3               # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $11, $10                    # |          2 |          2 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36235               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.36235:
    call    min_caml_read_int           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $12, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.36236               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.36236:
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $12
    store   $11, [$12 + 1]
    store   $10, [$12 + 0]
    mov     $12, $10
.count b_cont
    b       be_cont.36236
be_else.36236:
.count stack_store
    store   $10, [$sp + 1]              # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $11, [$sp + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $12, [$sp + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $11              # |          1 |         13 |          0 |          1 |          1 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $11              # |          1 |          7 |          0 |          0 |          1 |          0 |
    store   $11, [$10 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $11              # |          1 |          7 |          0 |          0 |          1 |          0 |
    store   $11, [$10 + 0]              # |          1 |          1 |          0 |          0 |          0 |          0 |
be_cont.36236:
be_cont.36235:
be_cont.36234:
    load    [$10 + 0], $11              # |          3 |         21 |          0 |          0 |          3 |          0 |
    cmp     $11, -1                     # |          3 |          9 |          0 |          1 |          0 |          0 |
    bne     be_else.36237               # |          3 |         12 |          3 |          0 |          0 |          3 |
be_then.36237:
.count stack_move
    add     $sp, 13, $sp
    ret
be_else.36237:
.count stack_load
    load    [$sp + 0], $11              # |          3 |          9 |          0 |          0 |          1 |          0 |
    store   $10, [min_caml_and_net + $11]# |          3 |          7 |          4 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          3 |          3 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          3 |          3 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          3 |          9 |          0 |          1 |          0 |          0 |
    bne     be_else.36238               # |          3 |         10 |          3 |          0 |          0 |          2 |
be_then.36238:
    li      1, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $zero, -1, $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36238               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_else.36238:
    call    min_caml_read_int           # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    cmp     $11, -1                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      2, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.36239               # |          2 |          4 |          0 |          0 |          0 |          1 |
be_then.36239:
    add     $zero, -1, $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 0]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $11, $10                    # |          1 |          1 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36239               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_else.36239:
.count stack_store
    store   $10, [$sp + 4]              # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $11, [$sp + 5]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $11              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 1]              # |          1 |          2 |          1 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $11              # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $11, [$10 + 0]              # |          1 |          3 |          2 |          0 |          0 |          0 |
be_cont.36239:
be_cont.36238:
    load    [$10 + 0], $11              # |          3 |          9 |          0 |          0 |          1 |          0 |
.count stack_load
    load    [$sp + 0], $12              # |          3 |          3 |          0 |          0 |          0 |          0 |
    cmp     $11, -1                     # |          3 |          5 |          2 |          0 |          0 |          0 |
    add     $12, 1, $12                 # |          3 |          4 |          1 |          0 |          0 |          0 |
    bne     be_else.36240               # |          3 |          7 |          0 |          0 |          0 |          2 |
be_then.36240:
.count stack_move
    add     $sp, 13, $sp                # |          1 |          1 |          0 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
be_else.36240:
.count stack_store
    store   $12, [$sp + 6]              # |          2 |          8 |          0 |          1 |          0 |          0 |
    store   $10, [min_caml_and_net + $12]# |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.36241               # |          2 |          8 |          2 |          0 |          0 |          2 |
be_then.36241:
    li      1, $2
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $10
.count b_cont
    b       be_cont.36241
be_else.36241:
    call    min_caml_read_int           # |          2 |          8 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $11, -1                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.36242               # |          2 |          4 |          2 |          0 |          0 |          0 |
be_then.36242:
    li      2, $2                       # |          2 |          8 |          0 |          1 |          0 |          0 |
    add     $zero, -1, $3               # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $11, $10                    # |          2 |          2 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36242               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.36242:
    call    min_caml_read_int
.count move_ret
    mov     $1, $12
    cmp     $12, -1
    li      3, $2
    bne     be_else.36243
be_then.36243:
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $12
    store   $11, [$12 + 1]
    store   $10, [$12 + 0]
    mov     $12, $10
.count b_cont
    b       be_cont.36243
be_else.36243:
.count stack_store
    store   $10, [$sp + 7]
.count stack_store
    store   $11, [$sp + 8]
.count stack_store
    store   $12, [$sp + 9]
    call    read_net_item.2725
.count stack_load
    load    [$sp + 9], $11
.count move_ret
    mov     $1, $10
    store   $11, [$10 + 2]
.count stack_load
    load    [$sp + 8], $11
    store   $11, [$10 + 1]
.count stack_load
    load    [$sp + 7], $11
    store   $11, [$10 + 0]
be_cont.36243:
be_cont.36242:
be_cont.36241:
    load    [$10 + 0], $11              # |          2 |         20 |          0 |          1 |          2 |          0 |
.count stack_load
    load    [$sp + 6], $12              # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $11, -1                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    add     $12, 1, $12                 # |          2 |          3 |          1 |          0 |          0 |          0 |
    bne     be_else.36244               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_then.36244:
.count stack_move
    add     $sp, 13, $sp
    ret
be_else.36244:
.count stack_store
    store   $12, [$sp + 10]             # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_and_net + $12]# |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    cmp     $10, -1                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.36245               # |          2 |          8 |          2 |          0 |          0 |          2 |
be_then.36245:
    li      1, $2
    add     $zero, -1, $3
    call    min_caml_create_array
.count b_cont
    b       be_cont.36245
be_else.36245:
    call    min_caml_read_int           # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    cmp     $11, -1                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      2, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.36246               # |          2 |          4 |          0 |          0 |          0 |          1 |
be_then.36246:
    add     $zero, -1, $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$1 + 0]               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36246               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_else.36246:
.count stack_store
    store   $10, [$sp + 11]             # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $11, [$sp + 12]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 12], $2              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$1 + 1]                # |          1 |          3 |          2 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 11], $2              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$1 + 0]                # |          1 |          3 |          2 |          0 |          0 |          0 |
be_cont.36246:
be_cont.36245:
.count stack_move
    add     $sp, 13, $sp                # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [$1 + 0], $2                # |          2 |          8 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 3], $3               # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $2, -1                      # |          2 |          4 |          2 |          0 |          0 |          0 |
    add     $3, 1, $3                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.36247               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_then.36247:
    ret
be_else.36247:
    store   $1, [min_caml_and_net + $3] # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $3, 1, $2                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    b       read_and_network.2729       # |          2 |         12 |          0 |          1 |          0 |          2 |
.end read_and_network

######################################################################
.begin solver
solver.2773:
    load    [min_caml_objects + $2], $1 # |     23,754 |    136,434 |          0 |     18,557 |        223 |          0 |
    load    [min_caml_startp + 0], $2   # |     23,754 |     24,150 |          0 |          0 |         66 |          0 |
    load    [min_caml_startp + 1], $4   # |     23,754 |     76,524 |          0 |          0 |      8,795 |          0 |
    load    [$1 + 5], $5                # |     23,754 |     26,724 |          0 |          0 |        495 |          0 |
    load    [$1 + 5], $6                # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$1 + 5], $7                # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$1 + 1], $8                # |     23,754 |     26,004 |          0 |          0 |        375 |          0 |
    load    [$5 + 0], $5                # |     23,754 |    137,586 |          0 |     18,572 |        400 |          0 |
    load    [$6 + 1], $6                # |     23,754 |     24,702 |          0 |          0 |        158 |          0 |
    load    [min_caml_startp + 2], $9   # |     23,754 |     24,288 |          0 |          0 |         89 |          0 |
    load    [$7 + 2], $7                # |     23,754 |     26,910 |          0 |          0 |        526 |          0 |
    cmp     $8, 1                       # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    fsub    $2, $5, $2                  # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    fsub    $4, $6, $4                  # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    fsub    $9, $7, $5                  # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    bne     be_else.36248               # |     23,754 |    144,882 |          0 |     18,572 |          0 |      4,848 |
be_then.36248:
    load    [$3 + 0], $6                # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$1 + 4], $7                # |     23,754 |     24,246 |          0 |          0 |         82 |          0 |
    load    [$3 + 1], $8                # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    fcmp    $6, $zero                   # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    bne     be_else.36249               # |     23,754 |     47,524 |     23,754 |          0 |          0 |          8 |
be_then.36249:
    li      0, $6
.count b_cont
    b       be_cont.36249
be_else.36249:
    fcmp    $zero, $6                   # |     23,754 |    135,186 |          0 |     18,572 |          0 |          0 |
    load    [$7 + 1], $9                # |     23,754 |     25,428 |          0 |          0 |        279 |          0 |
    load    [$1 + 6], $10               # |     23,754 |     25,134 |          0 |          0 |        230 |          0 |
    bg      ble_else.36250              # |     23,754 |     24,338 |          0 |          0 |          0 |        292 |
ble_then.36250:
    li      0, $11                      # |     23,580 |     23,580 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36250              # |     23,580 |     23,586 |          0 |          0 |          0 |          3 |
ble_else.36250:
    li      1, $11                      # |        174 |        174 |          0 |          0 |          0 |          0 |
ble_cont.36250:
    cmp     $10, 0                      # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    bne     be_else.36251               # |     23,754 |    140,368 |      5,182 |     18,572 |          0 |          0 |
be_then.36251:
    mov     $11, $10                    # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36251               # |     23,754 |     25,568 |          0 |          0 |          0 |        907 |
be_else.36251:
    cmp     $11, 0
    bne     be_else.36252
be_then.36252:
    li      1, $10
.count b_cont
    b       be_cont.36252
be_else.36252:
    li      0, $10
be_cont.36252:
be_cont.36251:
    cmp     $10, 0                      # |     23,754 |    135,186 |          0 |     18,572 |          0 |          0 |
    load    [$7 + 0], $11               # |     23,754 |     25,116 |          0 |          0 |        227 |          0 |
    bne     be_else.36253               # |     23,754 |     24,096 |          0 |          0 |          0 |        171 |
be_then.36253:
    fneg    $11, $10                    # |     23,580 |     46,931 |     23,351 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36253               # |     23,580 |     23,584 |          0 |          0 |          0 |          2 |
be_else.36253:
    mov     $11, $10                    # |        174 |        179 |          5 |          0 |          0 |          0 |
be_cont.36253:
    fsub    $10, $2, $10                # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    finv    $6, $6                      # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$7 + 2], $7                # |     23,754 |    135,276 |          0 |     18,572 |         15 |          0 |
    load    [$3 + 2], $11               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    fmul    $10, $6, $6                 # |     23,754 |     34,118 |     10,364 |          0 |          0 |          0 |
    fmul    $6, $8, $8                  # |     23,754 |    118,770 |     95,016 |          0 |          0 |          0 |
    fmul    $6, $11, $10                # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    fadd    $8, $4, $8                  # |     23,754 |     95,016 |     71,262 |          0 |          0 |          0 |
    fadd    $10, $5, $10                # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    fabs    $8, $8                      # |     23,754 |     95,016 |     71,262 |          0 |          0 |          0 |
    fabs    $10, $10                    # |     23,754 |    135,096 |          0 |     18,557 |          0 |          0 |
    fcmp    $9, $8                      # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    bg      ble_else.36254              # |     23,754 |     48,472 |     23,754 |          0 |          0 |        482 |
ble_then.36254:
    li      0, $6                       # |     14,964 |     14,964 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36254              # |     14,964 |     14,970 |          0 |          0 |          0 |          3 |
ble_else.36254:
    fcmp    $7, $10                     # |      8,790 |      8,790 |          0 |          0 |          0 |          0 |
    bg      ble_else.36255              # |      8,790 |     18,420 |      8,790 |          0 |          0 |        420 |
ble_then.36255:
    li      0, $6                       # |      5,123 |      5,123 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36255              # |      5,123 |     32,941 |          0 |      4,635 |          0 |          4 |
ble_else.36255:
.count move_float
    mov     $6, $42                     # |      3,667 |     24,481 |          0 |      3,469 |          0 |          0 |
    li      1, $6                       # |      3,667 |      3,667 |          0 |          0 |          0 |          0 |
ble_cont.36255:
ble_cont.36254:
be_cont.36249:
    cmp     $6, 0                       # |     23,754 |     90,229 |      3,667 |     10,468 |          0 |          0 |
    bne     be_else.36256               # |     23,754 |     47,684 |     23,754 |          0 |          0 |         88 |
be_then.36256:
    load    [$3 + 1], $6                # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    load    [$1 + 4], $7                # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    load    [$3 + 2], $8                # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    fcmp    $6, $zero                   # |     20,087 |    111,299 |          0 |     15,202 |          0 |          0 |
    bne     be_else.36257               # |     20,087 |     40,190 |     20,087 |          0 |          0 |          8 |
be_then.36257:
    li      0, $6
.count b_cont
    b       be_cont.36257
be_else.36257:
    fcmp    $zero, $6                   # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    load    [$7 + 2], $9                # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    load    [$1 + 6], $10               # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    bg      ble_else.36258              # |     20,087 |     20,147 |          0 |          0 |          0 |         30 |
ble_then.36258:
    li      0, $11                      # |         38 |        266 |          0 |         38 |          0 |          0 |
.count b_cont
    b       ble_cont.36258              # |         38 |         46 |          0 |          0 |          0 |          4 |
ble_else.36258:
    li      1, $11                      # |     20,049 |    111,033 |          0 |     15,164 |          0 |          0 |
ble_cont.36258:
    cmp     $10, 0                      # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    bne     be_else.36259               # |     20,087 |     40,184 |     20,087 |          0 |          0 |          5 |
be_then.36259:
    mov     $11, $10                    # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36259               # |     20,087 |     33,105 |          0 |          0 |          0 |      6,509 |
be_else.36259:
    cmp     $11, 0
    bne     be_else.36260
be_then.36260:
    li      1, $10
.count b_cont
    b       be_cont.36260
be_else.36260:
    li      0, $10
be_cont.36260:
be_cont.36259:
    cmp     $10, 0                      # |     20,087 |    111,299 |          0 |     15,202 |          0 |          0 |
    load    [$7 + 1], $11               # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    bne     be_else.36261               # |     20,087 |     20,095 |          0 |          0 |          0 |          4 |
be_then.36261:
    fneg    $11, $10                    # |         38 |         76 |         38 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36261               # |         38 |         90 |          0 |          8 |          0 |          2 |
be_else.36261:
    mov     $11, $10                    # |     20,049 |     80,015 |     12,062 |      7,984 |          0 |          0 |
be_cont.36261:
    fsub    $10, $4, $10                # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    finv    $6, $6                      # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    load    [$7 + 0], $7                # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $11               # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    fmul    $10, $6, $6                 # |     20,087 |     60,261 |     40,174 |          0 |          0 |          0 |
    fmul    $6, $8, $8                  # |     20,087 |    100,435 |     80,348 |          0 |          0 |          0 |
    fmul    $6, $11, $10                # |     20,087 |     68,039 |          0 |      7,992 |          0 |          0 |
    fadd    $8, $5, $8                  # |     20,087 |     56,372 |     36,285 |          0 |          0 |          0 |
    fadd    $10, $2, $10                # |     20,087 |     44,063 |     23,976 |          0 |          0 |          0 |
    fabs    $8, $8                      # |     20,087 |     56,372 |     36,285 |          0 |          0 |          0 |
    fabs    $10, $10                    # |     20,087 |     44,063 |     23,976 |          0 |          0 |          0 |
    fcmp    $9, $8                      # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    bg      ble_else.36262              # |     20,087 |     40,798 |     20,087 |          0 |          0 |        312 |
ble_then.36262:
    li      0, $6                       # |     16,512 |     16,512 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36262              # |     16,512 |     52,724 |          0 |      6,034 |          0 |          4 |
ble_else.36262:
    fcmp    $7, $10                     # |      3,575 |     15,323 |          0 |      1,958 |          0 |          0 |
    bg      ble_else.36263              # |      3,575 |      7,408 |      3,575 |          0 |          0 |        129 |
ble_then.36263:
    li      0, $6                       # |      2,631 |      2,631 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36263              # |      2,631 |      2,635 |          0 |          0 |          0 |          2 |
ble_else.36263:
.count move_float
    mov     $6, $42                     # |        944 |        944 |          0 |          0 |          0 |          0 |
    li      1, $6                       # |        944 |        944 |          0 |          0 |          0 |          0 |
ble_cont.36263:
ble_cont.36262:
be_cont.36257:
    cmp     $6, 0                       # |     20,087 |     21,031 |        944 |          0 |          0 |          0 |
    bne     be_else.36264               # |     20,087 |     83,912 |     12,095 |      7,992 |          0 |      1,889 |
be_then.36264:
    load    [$3 + 2], $6                # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    load    [$1 + 4], $7                # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    load    [$1 + 6], $1                # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    fcmp    $6, $zero                   # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    bne     be_else.36265               # |     19,143 |     38,294 |     19,143 |          0 |          0 |          4 |
be_then.36265:
    li      0, $1
    ret
be_else.36265:
    fcmp    $zero, $6                   # |     19,143 |     65,379 |          0 |      7,706 |          0 |          0 |
    load    [$7 + 0], $8                # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $9                # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    bg      ble_else.36266              # |     19,143 |     19,749 |          0 |          0 |          0 |        303 |
ble_then.36266:
    li      0, $10                      # |     12,429 |     12,429 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36266              # |     12,429 |     13,991 |          0 |          0 |          0 |        781 |
ble_else.36266:
    li      1, $10                      # |      6,714 |      6,714 |          0 |          0 |          0 |          0 |
ble_cont.36266:
    cmp     $1, 0                       # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    bne     be_else.36267               # |     19,143 |     78,838 |     11,437 |      7,706 |          0 |      1,011 |
be_then.36267:
    mov     $10, $1                     # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36267               # |     19,143 |     19,159 |          0 |          0 |          0 |          8 |
be_else.36267:
    cmp     $10, 0
    bne     be_else.36268
be_then.36268:
    li      1, $1
.count b_cont
    b       be_cont.36268
be_else.36268:
    li      0, $1
be_cont.36268:
be_cont.36267:
    cmp     $1, 0                       # |     19,143 |     65,379 |          0 |      7,706 |          0 |          0 |
    load    [$7 + 2], $10               # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    bne     be_else.36269               # |     19,143 |     19,147 |          0 |          0 |          0 |          2 |
be_then.36269:
    fneg    $10, $1                     # |     12,429 |     24,858 |     12,429 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36269               # |     12,429 |     12,433 |          0 |          0 |          0 |          2 |
be_else.36269:
    mov     $10, $1                     # |      6,714 |     13,426 |      6,712 |          0 |          0 |          0 |
be_cont.36269:
    fsub    $1, $5, $1                  # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    finv    $6, $5                      # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    load    [$7 + 1], $6                # |     19,143 |     65,379 |          0 |      7,706 |          0 |          0 |
    load    [$3 + 1], $3                # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    fmul    $1, $5, $1                  # |     19,143 |     42,017 |     22,874 |          0 |          0 |          0 |
    fmul    $1, $9, $5                  # |     19,143 |     95,715 |     76,572 |          0 |          0 |          0 |
    fmul    $1, $3, $3                  # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    fadd    $5, $2, $2                  # |     19,143 |     76,572 |     57,429 |          0 |          0 |          0 |
    fadd    $3, $4, $3                  # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    fabs    $2, $2                      # |     19,143 |     76,572 |     57,429 |          0 |          0 |          0 |
    fabs    $3, $3                      # |     19,143 |     37,809 |          0 |      3,111 |          0 |          0 |
    fcmp    $8, $2                      # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    bg      ble_else.36270              # |     19,143 |     39,874 |     19,143 |          0 |          0 |        794 |
ble_then.36270:
    li      0, $1                       # |     15,261 |     15,261 |          0 |          0 |          0 |          0 |
    ret                                 # |     15,261 |     15,261 |          0 |          0 |          0 |          0 |
ble_else.36270:
    fcmp    $6, $3                      # |      3,882 |      3,882 |          0 |          0 |          0 |          0 |
    bg      ble_else.36271              # |      3,882 |      7,938 |      3,882 |          0 |          0 |         87 |
ble_then.36271:
    li      0, $1                       # |      1,717 |      1,717 |          0 |          0 |          0 |          0 |
    ret                                 # |      1,717 |      1,747 |          0 |          5 |          0 |          0 |
ble_else.36271:
.count move_float
    mov     $1, $42                     # |      2,165 |      2,333 |          0 |         28 |          0 |          0 |
    li      3, $1                       # |      2,165 |      2,165 |          0 |          0 |          0 |          0 |
    ret                                 # |      2,165 |      2,165 |          0 |          0 |          0 |          0 |
be_else.36264:
    li      2, $1                       # |        944 |        968 |          0 |          4 |          0 |          0 |
    ret                                 # |        944 |        944 |          0 |          0 |          0 |          0 |
be_else.36256:
    li      1, $1                       # |      3,667 |      3,667 |          0 |          0 |          0 |          0 |
    ret                                 # |      3,667 |      3,667 |          0 |          0 |          0 |          0 |
be_else.36248:
    cmp     $8, 2
    bne     be_else.36272
be_then.36272:
    load    [$1 + 4], $1
    load    [$3 + 0], $6
    load    [$3 + 1], $7
    load    [$1 + 0], $8
    load    [$1 + 1], $9
    load    [$3 + 2], $3
    fmul    $6, $8, $6
    fmul    $7, $9, $7
    load    [$1 + 2], $1
    fmul    $8, $2, $2
    fmul    $9, $4, $4
    fmul    $3, $1, $3
    fadd    $6, $7, $6
    fmul    $1, $5, $1
    fadd    $2, $4, $2
    fadd    $6, $3, $3
    fadd    $2, $1, $1
    fcmp    $3, $zero
    bg      ble_else.36273
ble_then.36273:
    li      0, $1
    ret
ble_else.36273:
    finv    $3, $2
    fneg    $1, $1
    fmul    $1, $2, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
be_else.36272:
    load    [$1 + 4], $6
    load    [$1 + 4], $7
    load    [$1 + 4], $9
    load    [$1 + 3], $10
    load    [$3 + 0], $11
    load    [$3 + 1], $12
    load    [$3 + 2], $3
    fmul    $11, $11, $13
    fmul    $12, $12, $14
    load    [$6 + 0], $6
    load    [$7 + 1], $7
    fmul    $3, $3, $15
    fmul    $13, $6, $13
    fmul    $14, $7, $14
    load    [$9 + 2], $9
    load    [$1 + 3], $16
    load    [$1 + 3], $17
    fmul    $15, $9, $15
    fmul    $11, $2, $18
    fadd    $13, $14, $13
    fmul    $12, $4, $14
    fmul    $3, $5, $19
    cmp     $10, 0
    fmul    $2, $2, $20
    fmul    $18, $6, $18
    fadd    $13, $15, $13
    bne     be_else.36274
be_then.36274:
    mov     $13, $10
.count b_cont
    b       be_cont.36274
be_else.36274:
    load    [$1 + 9], $15
    fmul    $12, $3, $10
    fmul    $3, $11, $21
    load    [$15 + 0], $15
    load    [$1 + 9], $22
    fmul    $11, $12, $23
    fmul    $10, $15, $10
    load    [$22 + 1], $22
    load    [$1 + 9], $15
    fmul    $21, $22, $21
    fadd    $13, $10, $10
    load    [$15 + 2], $15
    fmul    $23, $15, $13
    fadd    $10, $21, $10
    fadd    $10, $13, $10
be_cont.36274:
    fcmp    $10, $zero
    bne     be_else.36275
be_then.36275:
    li      0, $1
    ret
be_else.36275:
    fmul    $14, $7, $13
    fmul    $19, $9, $14
    fmul    $20, $6, $6
    fmul    $4, $4, $15
    fmul    $5, $5, $19
    fadd    $18, $13, $13
    load    [$1 + 6], $18
    fmul    $4, $5, $20
    cmp     $16, 0
    fmul    $15, $7, $7
    fmul    $19, $9, $9
    fadd    $13, $14, $13
    bne     be_else.36276
be_then.36276:
    mov     $13, $3
.count b_cont
    b       be_cont.36276
be_else.36276:
    fmul    $3, $4, $14
    fmul    $12, $5, $15
    load    [$1 + 9], $16
    fmul    $11, $5, $19
    fmul    $3, $2, $3
    load    [$16 + 0], $16
    fadd    $14, $15, $14
    load    [$1 + 9], $15
    fmul    $11, $4, $11
    fadd    $19, $3, $3
    fmul    $12, $2, $12
    fmul    $14, $16, $14
    load    [$15 + 1], $15
    load    [$1 + 9], $16
    fmul    $3, $15, $3
    fadd    $11, $12, $11
    load    [$16 + 2], $12
    fadd    $14, $3, $3
    fmul    $11, $12, $11
    fadd    $3, $11, $3
    fmul    $3, $39, $3
    fadd    $13, $3, $3
be_cont.36276:
    fadd    $6, $7, $6
    fmul    $3, $3, $11
    load    [$1 + 9], $7
    cmp     $17, 0
    fmul    $5, $2, $5
    load    [$1 + 9], $12
    load    [$7 + 0], $7
    fadd    $6, $9, $6
    bne     be_else.36277
be_then.36277:
    mov     $6, $1
.count b_cont
    b       be_cont.36277
be_else.36277:
    fmul    $20, $7, $7
    load    [$12 + 1], $9
    fmul    $2, $4, $2
    load    [$1 + 9], $1
    fmul    $5, $9, $4
    fadd    $6, $7, $5
    load    [$1 + 2], $1
    fmul    $2, $1, $1
    fadd    $5, $4, $2
    fadd    $2, $1, $1
be_cont.36277:
    cmp     $8, 3
    bne     be_cont.36278
be_then.36278:
    fsub    $1, $36, $1
be_cont.36278:
    fmul    $10, $1, $1
    finv    $10, $2
    finv    $10, $4
    fsub    $11, $1, $1
    fcmp    $1, $zero
    bg      ble_else.36279
ble_then.36279:
    li      0, $1
    ret
ble_else.36279:
    cmp     $18, 0
    fsqrt   $1, $1
    bne     be_else.36280
be_then.36280:
    fneg    $1, $1
    fsub    $1, $3, $1
    fmul    $1, $2, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
be_else.36280:
    fsub    $1, $3, $1
    fmul    $1, $4, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
.end solver

######################################################################
.begin solver_fast
solver_fast.2796:
    load    [min_caml_objects + $2], $1 # |    660,661 |    751,555 |          0 |        498 |     14,651 |          0 |
    load    [min_caml_light_dirvec + 1], $3# |    660,661 |    889,069 |          0 |          0 |     38,068 |          0 |
    load    [min_caml_intersection_point + 0], $4# |    660,661 |    661,615 |          0 |          0 |        159 |          0 |
    load    [$1 + 5], $5                # |    660,661 |    859,885 |          0 |          0 |     33,204 |          0 |
    load    [$1 + 5], $6                # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$1 + 5], $7                # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$1 + 1], $8                # |    660,661 |    821,749 |          0 |          0 |     26,848 |          0 |
    load    [$5 + 0], $5                # |    660,661 |    791,665 |          0 |          0 |     21,834 |          0 |
    load    [min_caml_intersection_point + 1], $9# |    660,661 |    664,051 |          0 |        498 |         67 |          0 |
    load    [$6 + 1], $6                # |    660,661 |    665,923 |          0 |          0 |        877 |          0 |
    load    [min_caml_intersection_point + 2], $10# |    660,661 |    669,631 |          0 |          0 |      1,495 |          0 |
    load    [$7 + 2], $7                # |    660,661 |    733,447 |          0 |          0 |     12,131 |          0 |
    cmp     $8, 1                       # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    fsub    $4, $5, $4                  # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    fsub    $9, $6, $5                  # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    fsub    $10, $7, $6                 # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$3 + $2], $2               # |    660,661 |    846,481 |          0 |        498 |     30,472 |          0 |
    bne     be_else.36281               # |    660,661 |    687,045 |          0 |          0 |          0 |     13,192 |
be_then.36281:
    load    [$2 + 0], $8                # |    660,661 |  2,046,175 |    617,430 |          0 |    128,014 |          0 |
    load    [min_caml_light_dirvec + 0], $3# |    660,661 |    901,783 |          0 |          0 |     40,187 |          0 |
    load    [$1 + 4], $7                # |    660,661 |    688,705 |          0 |          0 |      4,674 |          0 |
    fsub    $8, $4, $8                  # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $9                # |    660,661 |    682,861 |          0 |          0 |      3,700 |          0 |
    load    [$2 + 1], $10               # |    660,661 |    692,887 |          0 |          0 |      5,371 |          0 |
    load    [$7 + 1], $7                # |    660,661 |  1,324,795 |          0 |     94,914 |     15,775 |          0 |
    load    [$1 + 4], $11               # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    fmul    $8, $10, $8                 # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $12               # |    660,661 |    675,613 |          0 |          0 |      2,492 |          0 |
    load    [$2 + 2], $13               # |    660,661 |    808,891 |          0 |          0 |     24,705 |          0 |
    load    [$11 + 0], $10              # |    660,661 |    766,903 |          0 |          0 |     17,707 |          0 |
    load    [$1 + 4], $14               # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    fmul    $8, $9, $9                  # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    fsub    $13, $5, $11                # |    660,661 |  1,230,145 |          0 |     94,914 |          0 |          0 |
    load    [$2 + 3], $13               # |    660,661 |    661,189 |          0 |          0 |         88 |          0 |
    load    [$3 + 2], $15               # |    660,661 |    682,177 |          0 |          0 |      3,586 |          0 |
    load    [$2 + 4], $16               # |    660,661 |  1,054,681 |          0 |          0 |     65,670 |          0 |
    fadd    $9, $5, $9                  # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    fmul    $11, $13, $11               # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$14 + 2], $13              # |    660,661 |    672,307 |          0 |          0 |      1,941 |          0 |
    fmul    $8, $15, $14                # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $15               # |    660,661 |  1,292,851 |          0 |    105,365 |          0 |          0 |
    fabs    $9, $9                      # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    fmul    $11, $12, $12               # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    fcmp    $7, $9                      # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    fadd    $14, $6, $14                # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    fsub    $16, $6, $16                # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    bg      ble_else.36282              # |    660,661 |    876,143 |          0 |          0 |          0 |    107,741 |
ble_then.36282:
    li      0, $9                       # |    437,614 |    437,614 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36282              # |    437,614 |    804,668 |          0 |     61,170 |          0 |         17 |
ble_else.36282:
    fabs    $14, $9                     # |    223,047 |    775,095 |    276,990 |     45,843 |          0 |          0 |
    load    [$2 + 1], $14               # |    223,047 |    223,047 |          0 |          0 |          0 |          0 |
    fcmp    $13, $9                     # |    223,047 |    223,047 |          0 |          0 |          0 |          0 |
    bg      ble_else.36283              # |    223,047 |    537,032 |    223,047 |          0 |          0 |     45,469 |
ble_then.36283:
    li      0, $9                       # |     76,254 |     76,254 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36283              # |     76,254 |     76,442 |          0 |          0 |          0 |         94 |
ble_else.36283:
    fcmp    $14, $zero                  # |    146,793 |    146,793 |          0 |          0 |          0 |          0 |
    bne     be_else.36284               # |    146,793 |    328,299 |    139,856 |      6,937 |          0 |         14 |
be_then.36284:
    li      0, $9
.count b_cont
    b       be_cont.36284
be_else.36284:
    li      1, $9                       # |    146,793 |    146,793 |          0 |          0 |          0 |          0 |
be_cont.36284:
ble_cont.36283:
ble_cont.36282:
    cmp     $9, 0                       # |    660,661 |    917,020 |    146,793 |     18,261 |          0 |          0 |
    bne     be_else.36285               # |    660,661 |  1,328,738 |    660,661 |          0 |          0 |      3,708 |
be_then.36285:
    fadd    $12, $4, $8                 # |    513,868 |    513,868 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $9                # |    513,868 |    916,150 |          0 |          0 |     67,047 |          0 |
    load    [$1 + 4], $1                # |    513,868 |  3,504,946 |          0 |    498,513 |          0 |          0 |
    load    [$3 + 2], $12               # |    513,868 |    513,868 |          0 |          0 |          0 |          0 |
    fmul    $16, $9, $9                 # |    513,868 |    513,868 |          0 |          0 |          0 |          0 |
    fabs    $8, $8                      # |    513,868 |    513,868 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |    513,868 |    513,868 |          0 |          0 |          0 |          0 |
    fcmp    $10, $8                     # |    513,868 |    513,868 |          0 |          0 |          0 |          0 |
    bg      ble_else.36286              # |    513,868 |  1,179,400 |    513,868 |          0 |          0 |     75,832 |
ble_then.36286:
    li      0, $1                       # |    438,844 |    438,844 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36286              # |    438,844 |  3,063,560 |          0 |    437,449 |          0 |         11 |
ble_else.36286:
    fmul    $11, $12, $8                # |     75,024 |    522,402 |          0 |     74,563 |          0 |          0 |
    load    [$2 + 3], $12               # |     75,024 |     75,024 |          0 |          0 |          0 |          0 |
    fadd    $8, $6, $6                  # |     75,024 |    300,096 |    225,072 |          0 |          0 |          0 |
    fabs    $6, $6                      # |     75,024 |    375,120 |    300,096 |          0 |          0 |          0 |
    fcmp    $1, $6                      # |     75,024 |    150,048 |     75,024 |          0 |          0 |          0 |
    bg      ble_else.36287              # |     75,024 |    181,746 |     75,024 |          0 |          0 |     15,849 |
ble_then.36287:
    li      0, $1                       # |     40,191 |     40,191 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36287              # |     40,191 |    271,925 |          0 |     37,409 |          0 |      3,640 |
ble_else.36287:
    fcmp    $12, $zero                  # |     34,833 |    200,193 |          0 |     27,560 |          0 |          0 |
    bne     be_else.36288               # |     34,833 |     74,320 |     34,833 |          0 |          0 |      2,327 |
be_then.36288:
    li      0, $1
.count b_cont
    b       be_cont.36288
be_else.36288:
    li      1, $1                       # |     34,833 |     34,833 |          0 |          0 |          0 |          0 |
be_cont.36288:
ble_cont.36287:
ble_cont.36286:
    cmp     $1, 0                       # |    513,868 |  3,069,691 |     34,833 |    420,165 |          0 |          0 |
    bne     be_else.36289               # |    513,868 |  1,029,794 |    513,868 |          0 |          0 |      1,029 |
be_then.36289:
    fmul    $9, $15, $1                 # |    479,035 |    594,223 |          0 |     19,198 |          0 |          0 |
    load    [$3 + 1], $3                # |    479,035 |    479,035 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $2                # |    479,035 |    479,035 |          0 |          0 |          0 |          0 |
    fmul    $9, $3, $3                  # |    479,035 |    958,070 |    479,035 |          0 |          0 |          0 |
    fadd    $1, $4, $1                  # |    479,035 |    479,035 |          0 |          0 |          0 |          0 |
    fadd    $3, $5, $3                  # |    479,035 |  1,916,140 |  1,437,105 |          0 |          0 |          0 |
    fabs    $1, $1                      # |    479,035 |    479,035 |          0 |          0 |          0 |          0 |
    fcmp    $10, $1                     # |    479,035 |    958,070 |    479,035 |          0 |          0 |          0 |
    bg      ble_else.36290              # |    479,035 |  1,052,069 |    466,840 |     12,195 |          0 |     16,512 |
ble_then.36290:
    li      0, $1                       # |    447,036 |    447,036 |          0 |          0 |          0 |          0 |
    ret                                 # |    447,036 |    447,036 |          0 |          0 |          0 |          0 |
ble_else.36290:
    fabs    $3, $1                      # |     31,999 |     31,999 |          0 |          0 |          0 |          0 |
    fcmp    $7, $1                      # |     31,999 |     63,998 |     31,999 |          0 |          0 |          0 |
    bg      ble_else.36291              # |     31,999 |     70,650 |     31,999 |          0 |          0 |      3,326 |
ble_then.36291:
    li      0, $1                       # |      7,652 |      7,652 |          0 |          0 |          0 |          0 |
    ret                                 # |      7,652 |      7,652 |          0 |          0 |          0 |          0 |
ble_else.36291:
    fcmp    $2, $zero                   # |     24,347 |     34,013 |          0 |      1,611 |          0 |          0 |
    bne     be_else.36292               # |     24,347 |     48,702 |     24,347 |          0 |          0 |          4 |
be_then.36292:
    li      0, $1
    ret
be_else.36292:
.count move_float
    mov     $9, $42                     # |     24,347 |     24,347 |          0 |          0 |          0 |          0 |
    li      3, $1                       # |     24,347 |     24,347 |          0 |          0 |          0 |          0 |
    ret                                 # |     24,347 |     24,347 |          0 |          0 |          0 |          0 |
be_else.36289:
.count move_float
    mov     $11, $42                    # |     34,833 |     54,003 |          0 |      3,195 |          0 |          0 |
    li      2, $1                       # |     34,833 |     46,755 |          0 |      1,987 |          0 |          0 |
    ret                                 # |     34,833 |     34,833 |          0 |          0 |          0 |          0 |
be_else.36285:
.count move_float
    mov     $8, $42                     # |    146,793 |    192,441 |          0 |      7,608 |          0 |          0 |
    li      1, $1                       # |    146,793 |    146,793 |          0 |          0 |          0 |          0 |
    ret                                 # |    146,793 |    146,793 |          0 |          0 |          0 |          0 |
be_else.36281:
    cmp     $8, 2
    bne     be_else.36293
be_then.36293:
    load    [$2 + 0], $1
    load    [$2 + 1], $3
    load    [$2 + 2], $7
    fcmp    $zero, $1
    bg      ble_else.36294
ble_then.36294:
    li      0, $1
    ret
ble_else.36294:
    fmul    $3, $4, $1
    fmul    $7, $5, $3
    load    [$2 + 3], $2
    fmul    $2, $6, $2
    fadd    $1, $3, $1
    fadd    $1, $2, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
be_else.36293:
    load    [$2 + 0], $3
    load    [$1 + 4], $7
    load    [$1 + 4], $9
    fcmp    $3, $zero
    bne     be_else.36295
be_then.36295:
    li      0, $1
    ret
be_else.36295:
    load    [$1 + 4], $10
    load    [$1 + 3], $11
    load    [$2 + 1], $12
    load    [$2 + 2], $13
    load    [$2 + 3], $14
    fmul    $12, $4, $12
    fmul    $13, $5, $13
    fmul    $14, $6, $14
    fmul    $4, $4, $15
    fmul    $5, $5, $16
    load    [$7 + 0], $7
    load    [$9 + 1], $9
    fadd    $12, $13, $12
    fmul    $15, $7, $7
    fmul    $6, $6, $13
    fmul    $16, $9, $9
    load    [$10 + 2], $10
    fadd    $12, $14, $12
    load    [$1 + 6], $14
    fmul    $5, $6, $15
    fadd    $7, $9, $7
    fmul    $13, $10, $10
    fmul    $12, $12, $9
    load    [$1 + 9], $13
    cmp     $11, 0
    fmul    $6, $4, $6
    load    [$1 + 9], $16
    load    [$13 + 0], $13
    fadd    $7, $10, $7
    bne     be_else.36296
be_then.36296:
    mov     $7, $1
.count b_cont
    b       be_cont.36296
be_else.36296:
    fmul    $15, $13, $10
    load    [$16 + 1], $11
    fmul    $4, $5, $4
    load    [$1 + 9], $1
    fmul    $6, $11, $5
    fadd    $7, $10, $6
    load    [$1 + 2], $1
    fmul    $4, $1, $1
    fadd    $6, $5, $4
    fadd    $4, $1, $1
be_cont.36296:
    cmp     $8, 3
    bne     be_cont.36297
be_then.36297:
    fsub    $1, $36, $1
be_cont.36297:
    fmul    $3, $1, $1
    load    [$2 + 4], $3
    load    [$2 + 4], $2
    fsub    $9, $1, $1
    fcmp    $1, $zero
    bg      ble_else.36298
ble_then.36298:
    li      0, $1
    ret
ble_else.36298:
    cmp     $14, 0
    fsqrt   $1, $1
    bne     be_else.36299
be_then.36299:
    fsub    $12, $1, $1
    fmul    $1, $3, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
be_else.36299:
    fadd    $12, $1, $1
    fmul    $1, $2, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
.end solver_fast

######################################################################
.begin solver_fast2
solver_fast2.2814:
    load    [min_caml_objects + $2], $1 # |  1,134,616 |  1,291,708 |          0 |     13,220 |     12,962 |          0 |
    load    [$3 + 1], $4                # |  1,134,616 |  4,382,398 |          0 |          0 |    541,297 |          0 |
    load    [$3 + 0], $3                # |  1,134,616 |  4,380,952 |          0 |          0 |    541,056 |          0 |
    load    [$1 + 1], $6                # |  1,134,616 |  1,177,666 |          0 |          0 |      7,175 |          0 |
    load    [$1 + 10], $5               # |  1,134,616 |  1,418,032 |          0 |          0 |     47,236 |          0 |
    load    [$4 + $2], $2               # |  1,134,616 |  7,889,452 |          0 |          0 |  1,125,806 |          0 |
    cmp     $6, 1                       # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$5 + 0], $4                # |  1,134,616 |  1,385,800 |          0 |          0 |     41,864 |          0 |
    load    [$5 + 1], $7                # |  1,134,616 |  1,228,990 |          0 |     13,220 |      2,509 |          0 |
    load    [$5 + 2], $8                # |  1,134,616 |  1,158,382 |          0 |          0 |      3,961 |          0 |
    bne     be_else.36300               # |  1,134,616 |  1,137,782 |          0 |          0 |          0 |      1,583 |
be_then.36300:
    load    [$2 + 0], $6                # |  1,134,616 |  7,942,120 |          0 |          0 |  1,134,584 |          0 |
    load    [$1 + 4], $5                # |  1,134,616 |  1,220,056 |          0 |          0 |     14,240 |          0 |
    load    [$3 + 1], $9                # |  1,134,616 |  1,872,766 |          0 |          0 |    123,025 |          0 |
    fsub    $6, $4, $6                  # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$5 + 1], $5                # |  1,134,616 |  1,337,572 |          0 |          0 |     33,826 |          0 |
    load    [$2 + 1], $10               # |  1,134,616 |  1,221,904 |          0 |     13,220 |      1,328 |          0 |
    load    [$1 + 4], $11               # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $12               # |  1,134,616 |  1,840,942 |          0 |          0 |    117,721 |          0 |
    fmul    $6, $10, $6                 # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$2 + 2], $13               # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$11 + 0], $10              # |  1,134,616 |  1,321,660 |          0 |          0 |     31,174 |          0 |
    load    [$1 + 4], $14               # |  1,134,616 |  1,152,160 |          0 |          0 |      2,924 |          0 |
    fsub    $13, $7, $11                # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    fmul    $6, $9, $9                  # |  1,134,616 |  1,208,170 |          0 |     12,259 |          0 |          0 |
    load    [$2 + 3], $13               # |  1,134,616 |  1,141,714 |          0 |          0 |      1,183 |          0 |
    load    [$3 + 2], $15               # |  1,134,616 |  3,628,462 |          0 |          0 |    415,641 |          0 |
    load    [$2 + 4], $16               # |  1,134,616 |  7,934,860 |          0 |          0 |  1,133,374 |          0 |
    fmul    $11, $13, $11               # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    fadd    $9, $7, $9                  # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$14 + 2], $13              # |  1,134,616 |  1,141,660 |          0 |          0 |      1,174 |          0 |
    fmul    $6, $15, $14                # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $15               # |  1,134,616 |  1,251,670 |          0 |     13,220 |      6,289 |          0 |
    fmul    $11, $12, $12               # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    fabs    $9, $9                      # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    fsub    $16, $8, $16                # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    fcmp    $5, $9                      # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    fadd    $14, $8, $14                # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    bg      ble_else.36301              # |  1,134,616 |  1,864,476 |          0 |          0 |          0 |    364,930 |
ble_then.36301:
    li      0, $9                       # |    640,191 |    640,191 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36301              # |    640,191 |    951,919 |          0 |      8,315 |          0 |    130,919 |
ble_else.36301:
    fabs    $14, $9                     # |    494,425 |  1,629,153 |  1,105,298 |      4,905 |          0 |          0 |
    load    [$2 + 1], $14               # |    494,425 |    495,559 |          0 |          0 |        189 |          0 |
    fcmp    $13, $9                     # |    494,425 |    494,425 |          0 |          0 |          0 |          0 |
    bg      ble_else.36302              # |    494,425 |  1,222,802 |    494,425 |          0 |          0 |    116,976 |
ble_then.36302:
    li      0, $9                       # |    164,419 |    164,419 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36302              # |    164,419 |    166,875 |          0 |          0 |          0 |      1,228 |
ble_else.36302:
    fcmp    $14, $zero                  # |    330,006 |    330,006 |          0 |          0 |          0 |          0 |
    bne     be_else.36303               # |    330,006 |    683,811 |    326,071 |      3,935 |          0 |      2,062 |
be_then.36303:
    li      0, $9
.count b_cont
    b       be_cont.36303
be_else.36303:
    li      1, $9                       # |    330,006 |    330,006 |          0 |          0 |          0 |          0 |
be_cont.36303:
ble_cont.36302:
ble_cont.36301:
    cmp     $9, 0                       # |  1,134,616 |  1,520,332 |    330,006 |      9,285 |          0 |          0 |
    bne     be_else.36304               # |  1,134,616 |  2,358,328 |  1,134,616 |          0 |          0 |     44,548 |
be_then.36304:
    fadd    $12, $4, $6                 # |    804,610 |    804,610 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $9                # |    804,610 |    811,636 |          0 |          0 |      1,171 |          0 |
    load    [$1 + 4], $1                # |    804,610 |    884,908 |          0 |     10,504 |      2,879 |          0 |
    load    [$3 + 2], $12               # |    804,610 |    828,916 |          0 |          0 |      4,051 |          0 |
    fmul    $16, $9, $9                 # |    804,610 |    804,610 |          0 |          0 |          0 |          0 |
    fabs    $6, $6                      # |    804,610 |    804,610 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |    804,610 |    808,186 |          0 |          0 |        596 |          0 |
    fcmp    $10, $6                     # |    804,610 |    804,610 |          0 |          0 |          0 |          0 |
    bg      ble_else.36305              # |    804,610 |  1,695,528 |    804,610 |          0 |          0 |     43,154 |
ble_then.36305:
    li      0, $1                       # |    453,618 |    453,618 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36305              # |    453,618 |    543,750 |          0 |     15,018 |          0 |         12 |
ble_else.36305:
    fmul    $11, $12, $6                # |    350,992 |    401,404 |          0 |      8,402 |          0 |          0 |
    load    [$2 + 3], $12               # |    350,992 |    361,870 |          0 |          0 |      1,813 |          0 |
    fadd    $6, $8, $6                  # |    350,992 |  1,398,529 |  1,047,537 |          0 |          0 |          0 |
    fabs    $6, $6                      # |    350,992 |  1,754,960 |  1,403,968 |          0 |          0 |          0 |
    fcmp    $1, $6                      # |    350,992 |    701,984 |    350,992 |          0 |          0 |          0 |
    bg      ble_else.36306              # |    350,992 |    876,414 |    350,992 |          0 |          0 |     87,215 |
ble_then.36306:
    li      0, $1                       # |    123,643 |    123,643 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36306              # |    123,643 |    142,077 |          0 |      3,001 |          0 |        214 |
ble_else.36306:
    fcmp    $12, $zero                  # |    227,349 |    246,171 |          0 |      3,137 |          0 |          0 |
    bne     be_else.36307               # |    227,349 |    454,706 |    227,349 |          0 |          0 |          4 |
be_then.36307:
    li      0, $1
.count b_cont
    b       be_cont.36307
be_else.36307:
    li      1, $1                       # |    227,349 |    227,349 |          0 |          0 |          0 |          0 |
be_cont.36307:
ble_cont.36306:
ble_cont.36305:
    cmp     $1, 0                       # |    804,610 |  1,098,997 |    227,349 |     11,173 |          0 |          0 |
    bne     be_else.36308               # |    804,610 |  1,609,224 |    804,610 |          0 |          0 |          2 |
be_then.36308:
    fmul    $9, $15, $1                 # |    577,261 |    733,471 |          0 |     26,035 |          0 |          0 |
    load    [$3 + 1], $3                # |    577,261 |    593,713 |          0 |          0 |      2,742 |          0 |
    load    [$2 + 5], $2                # |    577,261 |    578,863 |          0 |          0 |        267 |          0 |
    fmul    $9, $3, $3                  # |    577,261 |  1,151,548 |    574,287 |          0 |          0 |          0 |
    fadd    $1, $4, $1                  # |    577,261 |    577,261 |          0 |          0 |          0 |          0 |
    fadd    $3, $7, $3                  # |    577,261 |  2,309,044 |  1,731,783 |          0 |          0 |          0 |
    fabs    $1, $1                      # |    577,261 |    577,261 |          0 |          0 |          0 |          0 |
    fcmp    $10, $1                     # |    577,261 |  1,154,522 |    577,261 |          0 |          0 |          0 |
    bg      ble_else.36309              # |    577,261 |  1,463,406 |    551,539 |     25,722 |          0 |     90,137 |
ble_then.36309:
    li      0, $1                       # |    412,314 |    412,314 |          0 |          0 |          0 |          0 |
    ret                                 # |    412,314 |    412,314 |          0 |          0 |          0 |          0 |
ble_else.36309:
    fabs    $3, $1                      # |    164,947 |    164,947 |          0 |          0 |          0 |          0 |
    fcmp    $5, $1                      # |    164,947 |    329,894 |    164,947 |          0 |          0 |          0 |
    bg      ble_else.36310              # |    164,947 |    343,226 |    164,947 |          0 |          0 |      6,666 |
ble_then.36310:
    li      0, $1                       # |     37,478 |     37,478 |          0 |          0 |          0 |          0 |
    ret                                 # |     37,478 |     37,478 |          0 |          0 |          0 |          0 |
ble_else.36310:
    fcmp    $2, $zero                   # |    127,469 |    152,513 |          0 |      4,174 |          0 |          0 |
    bne     be_else.36311               # |    127,469 |    256,108 |    127,469 |          0 |          0 |        585 |
be_then.36311:
    li      0, $1
    ret
be_else.36311:
.count move_float
    mov     $9, $42                     # |    127,469 |    127,469 |          0 |          0 |          0 |          0 |
    li      3, $1                       # |    127,469 |    127,469 |          0 |          0 |          0 |          0 |
    ret                                 # |    127,469 |    127,469 |          0 |          0 |          0 |          0 |
be_else.36308:
.count move_float
    mov     $11, $42                    # |    227,349 |    265,467 |          0 |      6,353 |          0 |          0 |
    li      2, $1                       # |    227,349 |    251,799 |          0 |      4,075 |          0 |          0 |
    ret                                 # |    227,349 |    227,349 |          0 |          0 |          0 |          0 |
be_else.36304:
.count move_float
    mov     $6, $42                     # |    330,006 |    373,134 |          0 |      7,188 |          0 |          0 |
    li      1, $1                       # |    330,006 |    330,006 |          0 |          0 |          0 |          0 |
    ret                                 # |    330,006 |    330,006 |          0 |          0 |          0 |          0 |
be_else.36300:
    cmp     $6, 2
    bne     be_else.36312
be_then.36312:
    load    [$2 + 0], $1
    load    [$5 + 3], $2
    fcmp    $zero, $1
    bg      ble_else.36313
ble_then.36313:
    li      0, $1
    ret
ble_else.36313:
    fmul    $1, $2, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
be_else.36312:
    load    [$2 + 0], $3
    load    [$2 + 1], $6
    load    [$2 + 2], $9
    fcmp    $3, $zero
    bne     be_else.36314
be_then.36314:
    li      0, $1
    ret
be_else.36314:
    fmul    $6, $4, $4
    fmul    $9, $7, $6
    load    [$2 + 3], $7
    load    [$5 + 3], $5
    load    [$1 + 6], $1
    fmul    $7, $8, $7
    fadd    $4, $6, $4
    fmul    $3, $5, $3
    load    [$2 + 4], $5
    load    [$2 + 4], $2
    fadd    $4, $7, $4
    fmul    $4, $4, $6
    fsub    $6, $3, $3
    fcmp    $3, $zero
    bg      ble_else.36315
ble_then.36315:
    li      0, $1
    ret
ble_else.36315:
    cmp     $1, 0
    fsqrt   $3, $1
    bne     be_else.36316
be_then.36316:
    fsub    $4, $1, $1
    fmul    $1, $5, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
be_else.36316:
    fadd    $4, $1, $1
    fmul    $1, $2, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
.end solver_fast2

######################################################################
.begin iter_setup_dirvec_constants
iter_setup_dirvec_constants.2826:
    cmp     $3, 0                       # |      7,375 |      7,381 |          0 |          1 |          0 |          0 |
    bl      bge_else.36317              # |      7,375 |     14,750 |      7,375 |          0 |          0 |          0 |
bge_then.36317:
    load    [min_caml_objects + $3], $11# |      7,375 |      7,681 |          0 |          1 |         50 |          0 |
.count stack_move
    sub     $sp, 2, $sp                 # |      7,375 |      7,375 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $10               # |      7,375 |      8,575 |          0 |          0 |        200 |          0 |
    load    [$11 + 1], $14              # |      7,375 |      7,681 |          0 |          0 |         51 |          0 |
    load    [$2 + 0], $12               # |      7,375 |      8,401 |          0 |          0 |        171 |          0 |
    li      6, $13                      # |      7,375 |      7,375 |          0 |          0 |          0 |          0 |
    cmp     $14, 1                      # |      7,375 |      7,375 |          0 |          0 |          0 |          0 |
    li      4, $15                      # |      7,375 |      7,375 |          0 |          0 |          0 |          0 |
    li      5, $16                      # |      7,375 |      7,381 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |      7,375 |      7,375 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |      7,375 |      7,375 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |      7,375 |      7,375 |          0 |          0 |          0 |          0 |
    bne     be_else.36318               # |      7,375 |     15,647 |          0 |          0 |          0 |      4,136 |
be_then.36318:
.count move_args
    mov     $13, $2                     # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    load    [$12 + 0], $14              # |      3,010 |      3,118 |          0 |          0 |         18 |          0 |
.count move_ret
    mov     $1, $13                     # |      3,010 |      3,016 |          0 |          1 |          0 |          0 |
    load    [$11 + 6], $15              # |      3,010 |      3,172 |          0 |          0 |         27 |          0 |
    fcmp    $14, $zero                  # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    load    [$11 + 4], $16              # |      3,010 |      3,154 |          0 |          0 |         24 |          0 |
    bne     be_else.36319               # |      3,010 |      3,014 |          0 |          0 |          0 |          2 |
be_then.36319:
    store   $zero, [$13 + 1]
.count b_cont
    b       be_cont.36319
be_else.36319:
    fcmp    $zero, $14                  # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    bg      ble_else.36320              # |      3,010 |      7,233 |      3,009 |          1 |          0 |        604 |
ble_then.36320:
    li      0, $14                      # |      1,505 |      1,505 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36320              # |      1,505 |      1,509 |          0 |          0 |          0 |          2 |
ble_else.36320:
    li      1, $14                      # |      1,505 |      1,505 |          0 |          0 |          0 |          0 |
ble_cont.36320:
    cmp     $15, 0                      # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    be      bne_cont.36321              # |      3,010 |      6,028 |      3,010 |          0 |          0 |          4 |
bne_then.36321:
    cmp     $14, 0
    bne     be_else.36322
be_then.36322:
    li      1, $14
.count b_cont
    b       be_cont.36322
be_else.36322:
    li      0, $14
be_cont.36322:
bne_cont.36321:
    cmp     $14, 0                      # |      3,010 |      3,016 |          0 |          1 |          0 |          0 |
    load    [$16 + 0], $15              # |      3,010 |      3,184 |          0 |          0 |         29 |          0 |
    bne     be_else.36323               # |      3,010 |      3,014 |          0 |          0 |          0 |          2 |
be_then.36323:
    fneg    $15, $14                    # |      1,505 |      3,000 |      1,495 |          0 |          0 |          0 |
    store   $14, [$13 + 0]              # |      1,505 |      3,010 |      1,505 |          0 |          0 |          0 |
    load    [$12 + 0], $14              # |      1,505 |      1,511 |          0 |          0 |          1 |          0 |
    finv    $14, $14                    # |      1,505 |      4,513 |      3,008 |          0 |          0 |          0 |
    store   $14, [$13 + 1]              # |      1,505 |      7,525 |      6,020 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36323               # |      1,505 |      1,509 |          0 |          0 |          0 |          2 |
be_else.36323:
    store   $15, [$13 + 0]              # |      1,505 |      2,997 |      1,486 |          1 |          0 |          0 |
    load    [$12 + 0], $14              # |      1,505 |      1,559 |          0 |          0 |          9 |          0 |
    finv    $14, $14                    # |      1,505 |      4,497 |      2,992 |          0 |          0 |          0 |
    store   $14, [$13 + 1]              # |      1,505 |      7,525 |      6,020 |          0 |          0 |          0 |
be_cont.36323:
be_cont.36319:
    load    [$12 + 1], $14              # |      3,010 |      3,046 |          0 |          1 |          5 |          0 |
    load    [$11 + 6], $15              # |      3,010 |      3,040 |          0 |          0 |          5 |          0 |
    load    [$11 + 4], $16              # |      3,010 |      3,028 |          0 |          0 |          3 |          0 |
    fcmp    $14, $zero                  # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    bne     be_else.36324               # |      3,010 |      6,028 |      3,010 |          0 |          0 |          4 |
be_then.36324:
    store   $zero, [$13 + 3]
.count b_cont
    b       be_cont.36324
be_else.36324:
    fcmp    $zero, $14                  # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    bg      ble_else.36325              # |      3,010 |      8,269 |      3,009 |          1 |          0 |      1,122 |
ble_then.36325:
    li      0, $14                      # |      1,505 |      1,505 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36325              # |      1,505 |      1,513 |          0 |          0 |          0 |          4 |
ble_else.36325:
    li      1, $14                      # |      1,505 |      1,505 |          0 |          0 |          0 |          0 |
ble_cont.36325:
    cmp     $15, 0                      # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    be      bne_cont.36326              # |      3,010 |      6,036 |      3,010 |          0 |          0 |          8 |
bne_then.36326:
    cmp     $14, 0
    bne     be_else.36327
be_then.36327:
    li      1, $14
.count b_cont
    b       be_cont.36327
be_else.36327:
    li      0, $14
be_cont.36327:
bne_cont.36326:
    cmp     $14, 0                      # |      3,010 |      3,016 |          0 |          1 |          0 |          0 |
    load    [$16 + 1], $15              # |      3,010 |      3,064 |          0 |          0 |          9 |          0 |
    bne     be_else.36328               # |      3,010 |      3,016 |          0 |          0 |          0 |          3 |
be_then.36328:
    fneg    $15, $14                    # |      1,505 |      3,003 |      1,498 |          0 |          0 |          0 |
    store   $14, [$13 + 2]              # |      1,505 |      3,010 |      1,505 |          0 |          0 |          0 |
    load    [$12 + 1], $14              # |      1,505 |      1,541 |          0 |          1 |          5 |          0 |
    finv    $14, $14                    # |      1,505 |      4,505 |      3,000 |          0 |          0 |          0 |
    store   $14, [$13 + 3]              # |      1,505 |      7,525 |      6,020 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36328               # |      1,505 |      1,513 |          0 |          0 |          0 |          4 |
be_else.36328:
    store   $15, [$13 + 2]              # |      1,505 |      3,005 |      1,500 |          0 |          0 |          0 |
    load    [$12 + 1], $14              # |      1,505 |      1,535 |          0 |          0 |          5 |          0 |
    finv    $14, $14                    # |      1,505 |      4,505 |      3,000 |          0 |          0 |          0 |
    store   $14, [$13 + 3]              # |      1,505 |      7,525 |      6,020 |          0 |          0 |          0 |
be_cont.36328:
be_cont.36324:
    load    [$12 + 2], $14              # |      3,010 |      3,100 |          0 |          1 |         14 |          0 |
    load    [$11 + 6], $15              # |      3,010 |      3,058 |          0 |          0 |          8 |          0 |
    load    [$11 + 4], $11              # |      3,010 |      3,034 |          0 |          0 |          4 |          0 |
    fcmp    $14, $zero                  # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    bne     be_else.36329               # |      3,010 |      6,036 |      3,010 |          0 |          0 |          8 |
be_then.36329:
    store   $zero, [$13 + 5]
    mov     $13, $11
.count b_cont
    b       be_cont.36329
be_else.36329:
    fcmp    $zero, $14                  # |      3,010 |      3,910 |          0 |        150 |          0 |          0 |
    bg      ble_else.36330              # |      3,010 |      6,344 |      3,010 |          0 |          0 |        162 |
ble_then.36330:
    li      0, $14                      # |      1,510 |      1,510 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36330              # |      1,510 |      1,522 |          0 |          0 |          0 |          6 |
ble_else.36330:
    li      1, $14                      # |      1,500 |      1,500 |          0 |          0 |          0 |          0 |
ble_cont.36330:
    cmp     $15, 0                      # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    be      bne_cont.36331              # |      3,010 |      6,044 |      3,010 |          0 |          0 |         12 |
bne_then.36331:
    cmp     $14, 0
    bne     be_else.36332
be_then.36332:
    li      1, $14
.count b_cont
    b       be_cont.36332
be_else.36332:
    li      0, $14
be_cont.36332:
bne_cont.36331:
    cmp     $14, 0                      # |      3,010 |      3,910 |          0 |        150 |          0 |          0 |
    load    [$11 + 2], $11              # |      3,010 |      3,064 |          0 |          0 |          9 |          0 |
    bne     be_else.36333               # |      3,010 |      3,020 |          0 |          0 |          0 |          5 |
be_then.36333:
    fneg    $11, $11                    # |      1,510 |      3,019 |      1,509 |          0 |          0 |          0 |
    store   $11, [$13 + 4]              # |      1,510 |      3,420 |      1,430 |         80 |          0 |          0 |
    load    [$12 + 2], $11              # |      1,510 |      1,552 |          0 |          0 |          7 |          0 |
    finv    $11, $11                    # |      1,510 |      4,516 |      3,006 |          0 |          0 |          0 |
    store   $11, [$13 + 5]              # |      1,510 |      7,550 |      6,040 |          0 |          0 |          0 |
    mov     $13, $11                    # |      1,510 |      1,510 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36333               # |      1,510 |      1,518 |          0 |          0 |          0 |          4 |
be_else.36333:
    store   $11, [$13 + 4]              # |      1,500 |      3,339 |      1,419 |         70 |          0 |          0 |
    load    [$12 + 2], $11              # |      1,500 |      1,536 |          0 |          0 |          6 |          0 |
    finv    $11, $11                    # |      1,500 |      4,768 |      2,848 |         70 |          0 |          0 |
    store   $11, [$13 + 5]              # |      1,500 |      7,500 |      6,000 |          0 |          0 |          0 |
    mov     $13, $11                    # |      1,500 |      1,500 |          0 |          0 |          0 |          0 |
be_cont.36333:
be_cont.36329:
.count stack_load
    load    [$sp + 1], $13              # |      3,010 |      3,580 |          0 |         80 |         15 |          0 |
    li      6, $2                       # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
.count storer
    add     $10, $13, $tmp              # |      3,010 |      6,005 |      2,995 |          0 |          0 |          0 |
    store   $11, [$tmp + 0]             # |      3,010 |      6,020 |      3,010 |          0 |          0 |          0 |
    sub     $13, 1, $11                 # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    cmp     $11, 0                      # |      3,010 |      7,115 |      2,791 |        219 |          0 |          0 |
    bl      bge_else.36334              # |      3,010 |      8,424 |      3,010 |          0 |          0 |      1,202 |
bge_then.36334:
    load    [min_caml_objects + $11], $13# |      2,408 |      2,504 |          0 |          0 |         16 |          0 |
    li      4, $14                      # |      2,408 |      2,408 |          0 |          0 |          0 |          0 |
    li      5, $15                      # |      2,408 |      2,408 |          0 |          0 |          0 |          0 |
    load    [$13 + 1], $16              # |      2,408 |      2,492 |          0 |          0 |         14 |          0 |
.count move_args
    mov     $zero, $3                   # |      2,408 |      2,408 |          0 |          0 |          0 |          0 |
    cmp     $16, 1                      # |      2,408 |      4,802 |      2,394 |          0 |          0 |          0 |
    bne     be_else.36335               # |      2,408 |      7,629 |      2,327 |         81 |          0 |      1,204 |
be_then.36335:
    call    min_caml_create_array       # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$12 + 0], $2               # |        602 |        632 |          0 |          0 |          5 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$13 + 6], $3               # |        602 |        644 |          0 |          0 |          7 |          0 |
    fcmp    $2, $zero                   # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $4               # |        602 |        632 |          0 |          0 |          5 |          0 |
    bne     be_else.36336               # |        602 |        606 |          0 |          0 |          0 |          2 |
be_then.36336:
    store   $zero, [$1 + 1]
.count b_cont
    b       be_cont.36336
be_else.36336:
    fcmp    $zero, $2                   # |        602 |      1,568 |          0 |        161 |          0 |          0 |
    bg      ble_else.36337              # |        602 |      2,004 |        602 |          0 |          0 |        400 |
ble_then.36337:
    li      0, $2                       # |        301 |        301 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36337              # |        301 |        305 |          0 |          0 |          0 |          2 |
ble_else.36337:
    li      1, $2                       # |        301 |        301 |          0 |          0 |          0 |          0 |
ble_cont.36337:
    cmp     $3, 0                       # |        602 |        602 |          0 |          0 |          0 |          0 |
    be      bne_cont.36338              # |        602 |      1,217 |        601 |          1 |          0 |          4 |
bne_then.36338:
    cmp     $2, 0
    bne     be_else.36339
be_then.36339:
    li      1, $2
.count b_cont
    b       be_cont.36339
be_else.36339:
    li      0, $2
be_cont.36339:
bne_cont.36338:
    cmp     $2, 0                       # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$4 + 0], $3                # |        602 |        638 |          0 |          0 |          6 |          0 |
    bne     be_else.36340               # |        602 |      1,012 |          0 |          1 |          0 |        202 |
be_then.36340:
    fneg    $3, $2                      # |        301 |        599 |        298 |          0 |          0 |          0 |
    store   $2, [$1 + 0]                # |        301 |        602 |        301 |          0 |          0 |          0 |
    load    [$12 + 0], $2               # |        301 |        313 |          0 |          0 |          2 |          0 |
    finv    $2, $2                      # |        301 |        899 |        598 |          0 |          0 |          0 |
    store   $2, [$1 + 1]                # |        301 |      1,505 |      1,204 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36340               # |        301 |        305 |          0 |          0 |          0 |          2 |
be_else.36340:
    store   $3, [$1 + 0]                # |        301 |        400 |         99 |          0 |          0 |          0 |
    load    [$12 + 0], $2               # |        301 |        319 |          0 |          1 |          2 |          0 |
    finv    $2, $2                      # |        301 |        899 |        598 |          0 |          0 |          0 |
    store   $2, [$1 + 1]                # |        301 |      1,505 |      1,204 |          0 |          0 |          0 |
be_cont.36340:
be_cont.36336:
    load    [$12 + 1], $2               # |        602 |        614 |          0 |          0 |          2 |          0 |
    load    [$13 + 6], $3               # |        602 |        614 |          0 |          0 |          2 |          0 |
    load    [$13 + 4], $4               # |        602 |        608 |          0 |          0 |          1 |          0 |
    fcmp    $2, $zero                   # |        602 |        602 |          0 |          0 |          0 |          0 |
    bne     be_else.36341               # |        602 |      1,212 |        602 |          0 |          0 |          4 |
be_then.36341:
    store   $zero, [$1 + 3]
.count b_cont
    b       be_cont.36341
be_else.36341:
    fcmp    $zero, $2                   # |        602 |        608 |          0 |          1 |          0 |          0 |
    bg      ble_else.36342              # |        602 |      1,364 |        602 |          0 |          0 |         80 |
ble_then.36342:
    li      0, $2                       # |        301 |        301 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36342              # |        301 |        309 |          0 |          0 |          0 |          4 |
ble_else.36342:
    li      1, $2                       # |        301 |        301 |          0 |          0 |          0 |          0 |
ble_cont.36342:
    cmp     $3, 0                       # |        602 |        602 |          0 |          0 |          0 |          0 |
    be      bne_cont.36343              # |        602 |      1,225 |        601 |          1 |          0 |          8 |
bne_then.36343:
    cmp     $2, 0
    bne     be_else.36344
be_then.36344:
    li      1, $2
.count b_cont
    b       be_cont.36344
be_else.36344:
    li      0, $2
be_cont.36344:
bne_cont.36343:
    cmp     $2, 0                       # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$4 + 1], $3                # |        602 |        608 |          0 |          0 |          1 |          0 |
    bne     be_else.36345               # |        602 |        616 |          0 |          1 |          0 |          4 |
be_then.36345:
    fneg    $3, $2                      # |        301 |        601 |        300 |          0 |          0 |          0 |
    store   $2, [$1 + 2]                # |        301 |        602 |        301 |          0 |          0 |          0 |
    load    [$12 + 1], $2               # |        301 |        307 |          0 |          0 |          1 |          0 |
    finv    $2, $2                      # |        301 |        901 |        600 |          0 |          0 |          0 |
    store   $2, [$1 + 3]                # |        301 |      1,505 |      1,204 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36345               # |        301 |        309 |          0 |          0 |          0 |          4 |
be_else.36345:
    store   $3, [$1 + 2]                # |        301 |        597 |        296 |          0 |          0 |          0 |
    load    [$12 + 1], $2               # |        301 |        313 |          0 |          0 |          2 |          0 |
    finv    $2, $2                      # |        301 |        899 |        598 |          0 |          0 |          0 |
    store   $2, [$1 + 3]                # |        301 |      1,505 |      1,204 |          0 |          0 |          0 |
be_cont.36345:
be_cont.36341:
    load    [$12 + 2], $2               # |        602 |        608 |          0 |          1 |          0 |          0 |
    load    [$13 + 6], $3               # |        602 |        608 |          0 |          0 |          1 |          0 |
    load    [$13 + 4], $4               # |        602 |        602 |          0 |          0 |          0 |          0 |
    fcmp    $2, $zero                   # |        602 |        602 |          0 |          0 |          0 |          0 |
    bne     be_else.36346               # |        602 |      1,220 |        602 |          0 |          0 |          8 |
be_then.36346:
.count storer
    add     $10, $11, $tmp
    store   $zero, [$1 + 5]
    store   $1, [$tmp + 0]
    sub     $11, 1, $3
.count stack_load
    load    [$sp - 2], $2
    b       iter_setup_dirvec_constants.2826
be_else.36346:
    fcmp    $zero, $2                   # |        602 |        608 |          0 |          1 |          0 |          0 |
    bg      ble_else.36347              # |        602 |      1,526 |        602 |          0 |          0 |        161 |
ble_then.36347:
    li      0, $2                       # |        302 |        302 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36347              # |        302 |        314 |          0 |          0 |          0 |          6 |
ble_else.36347:
    li      1, $2                       # |        300 |        306 |          0 |          1 |          0 |          0 |
ble_cont.36347:
    cmp     $3, 0                       # |        602 |        602 |          0 |          0 |          0 |          0 |
    be      bne_cont.36348              # |        602 |      1,228 |        602 |          0 |          0 |         12 |
bne_then.36348:
    cmp     $2, 0
    bne     be_else.36349
be_then.36349:
    li      1, $2
.count b_cont
    b       be_cont.36349
be_else.36349:
    li      0, $2
be_cont.36349:
bne_cont.36348:
    cmp     $2, 0                       # |        602 |        608 |          0 |          1 |          0 |          0 |
    load    [$4 + 2], $3                # |        602 |        620 |          0 |          0 |          3 |          0 |
    bne     be_else.36350               # |        602 |        784 |          0 |          0 |          0 |         91 |
be_then.36350:
    fneg    $3, $2                      # |        302 |        603 |        301 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36350               # |        302 |        310 |          0 |          0 |          0 |          4 |
be_else.36350:
    mov     $3, $2                      # |        300 |        507 |        207 |          0 |          0 |          0 |
be_cont.36350:
    store   $2, [$1 + 4]                # |        602 |        608 |          0 |          1 |          0 |          0 |
    load    [$12 + 2], $2               # |        602 |        620 |          0 |          0 |          3 |          0 |
.count storer
    add     $10, $11, $tmp              # |        602 |        602 |          0 |          0 |          0 |          0 |
    sub     $11, 1, $3                  # |        602 |        602 |          0 |          0 |          0 |          0 |
    finv    $2, $2                      # |        602 |        602 |          0 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |        602 |        602 |          0 |          0 |          0 |          0 |
    store   $2, [$1 + 5]                # |        602 |      2,408 |      1,806 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |        602 |        614 |          0 |          0 |          2 |          0 |
    b       iter_setup_dirvec_constants.2826# |        602 |        624 |          0 |          1 |          0 |          8 |
be_else.36335:
    cmp     $16, 2                      # |      1,806 |      1,806 |          0 |          0 |          0 |          0 |
    bne     be_else.36351               # |      1,806 |      6,014 |      1,806 |          0 |          0 |      1,201 |
be_then.36351:
.count move_args
    mov     $14, $2                     # |        602 |        602 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        602 |        602 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $2               # |        602 |        614 |          0 |          0 |          2 |          0 |
    load    [$13 + 4], $3               # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $4               # |        602 |        608 |          0 |          1 |          0 |          0 |
    load    [$12 + 0], $5               # |        602 |        626 |          0 |          0 |          4 |          0 |
    load    [$2 + 0], $2                # |        602 |        644 |          0 |          0 |          7 |          0 |
    load    [$12 + 1], $6               # |        602 |        620 |          0 |          0 |          3 |          0 |
    load    [$3 + 1], $3                # |        602 |        614 |          0 |          0 |          2 |          0 |
    fmul    $5, $2, $2                  # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$12 + 2], $5               # |        602 |        614 |          0 |          0 |          2 |          0 |
    fmul    $6, $3, $3                  # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$4 + 2], $4                # |        602 |      1,514 |          0 |        150 |          2 |          0 |
.count storer
    add     $10, $11, $tmp              # |        602 |        602 |          0 |          0 |          0 |          0 |
    fmul    $5, $4, $4                  # |        602 |      1,202 |        600 |          0 |          0 |          0 |
    fadd    $2, $3, $2                  # |        602 |        602 |          0 |          0 |          0 |          0 |
    fadd    $2, $4, $2                  # |        602 |      3,010 |      2,408 |          0 |          0 |          0 |
    fcmp    $2, $zero                   # |        602 |      3,010 |      2,408 |          0 |          0 |          0 |
    bg      ble_else.36352              # |        602 |      1,538 |        602 |          0 |          0 |        167 |
ble_then.36352:
    store   $zero, [$1 + 0]             # |        301 |        301 |          0 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |        301 |      1,195 |          0 |        149 |          0 |          0 |
    sub     $11, 1, $3                  # |        301 |        301 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |        301 |        301 |          0 |          0 |          0 |          0 |
    b       iter_setup_dirvec_constants.2826# |        301 |        305 |          0 |          0 |          0 |          2 |
ble_else.36352:
    finv    $2, $2                      # |        301 |      1,189 |          0 |        148 |          0 |          0 |
    sub     $11, 1, $4                  # |        301 |        301 |          0 |          0 |          0 |          0 |
    fneg    $2, $3                      # |        301 |      1,204 |        903 |          0 |          0 |          0 |
    store   $3, [$1 + 0]                # |        301 |        602 |        301 |          0 |          0 |          0 |
    load    [$13 + 4], $3               # |        301 |      1,189 |          0 |        148 |          0 |          0 |
    load    [$3 + 0], $3                # |        301 |        915 |        602 |          0 |          2 |          0 |
    fmul    $3, $2, $3                  # |        301 |        899 |        598 |          0 |          0 |          0 |
    fneg    $3, $3                      # |        301 |      1,505 |      1,204 |          0 |          0 |          0 |
    store   $3, [$1 + 1]                # |        301 |        602 |        301 |          0 |          0 |          0 |
    load    [$13 + 4], $3               # |        301 |        301 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $3                # |        301 |        903 |        602 |          0 |          0 |          0 |
    fmul    $3, $2, $3                  # |        301 |        903 |        602 |          0 |          0 |          0 |
    fneg    $3, $3                      # |        301 |      1,801 |        612 |        148 |          0 |          0 |
    store   $3, [$1 + 2]                # |        301 |        602 |        301 |          0 |          0 |          0 |
    load    [$13 + 4], $3               # |        301 |        301 |          0 |          0 |          0 |          0 |
    load    [$3 + 2], $3                # |        301 |        903 |        602 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |        301 |        301 |          0 |          0 |          0 |          0 |
    fmul    $3, $2, $2                  # |        301 |        602 |        301 |          0 |          0 |          0 |
.count move_args
    mov     $4, $3                      # |        301 |        301 |          0 |          0 |          0 |          0 |
    fneg    $2, $2                      # |        301 |      1,204 |        903 |          0 |          0 |          0 |
    store   $2, [$1 + 3]                # |        301 |        602 |        301 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |        301 |        313 |          0 |          0 |          2 |          0 |
    b       iter_setup_dirvec_constants.2826# |        301 |        301 |          0 |          0 |          0 |          0 |
be_else.36351:
.count move_args
    mov     $15, $2                     # |      1,204 |      1,210 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$13 + 3], $2               # |      1,204 |      1,228 |          0 |          0 |          4 |          0 |
    load    [$13 + 4], $3               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $4               # |      1,204 |      1,210 |          0 |          1 |          0 |          0 |
    load    [$13 + 4], $5               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$12 + 0], $6               # |      1,204 |      1,258 |          0 |          0 |          9 |          0 |
    load    [$12 + 1], $7               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$12 + 2], $8               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fmul    $6, $6, $9                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fmul    $7, $7, $14                 # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $3                # |      1,204 |      1,270 |          0 |          0 |         11 |          0 |
    load    [$4 + 1], $4                # |      1,204 |      1,222 |          0 |          1 |          2 |          0 |
    fmul    $8, $8, $15                 # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fmul    $9, $3, $3                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fmul    $14, $4, $4                 # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$5 + 2], $5                # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fmul    $7, $8, $9                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$13 + 9], $14              # |      1,204 |      1,276 |          0 |          0 |         12 |          0 |
    fmul    $15, $5, $5                 # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fadd    $3, $4, $3                  # |      1,204 |      1,210 |          0 |          1 |          0 |          0 |
    fmul    $8, $6, $8                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$14 + 0], $4               # |      1,204 |      1,240 |          0 |          0 |          6 |          0 |
    cmp     $2, 0                       # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$13 + 9], $14              # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fmul    $6, $7, $6                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fmul    $9, $4, $4                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fadd    $3, $5, $3                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    be      bne_cont.36353              # |      1,204 |      1,214 |          0 |          1 |          0 |          2 |
bne_then.36353:
    fadd    $3, $4, $3
    load    [$14 + 1], $4
    load    [$13 + 9], $5
    fmul    $8, $4, $4
    load    [$5 + 2], $5
    fmul    $6, $5, $5
    fadd    $3, $4, $3
    fadd    $3, $5, $3
bne_cont.36353:
    store   $3, [$1 + 0]                # |      1,204 |      4,817 |      3,607 |          1 |          0 |          0 |
    load    [$13 + 4], $4               # |      1,204 |      1,222 |          0 |          0 |          3 |          0 |
    load    [$13 + 4], $5               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $6               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$12 + 0], $7               # |      1,204 |      1,246 |          0 |          0 |          7 |          0 |
    load    [$4 + 0], $4                # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$12 + 1], $8               # |      1,204 |      1,228 |          0 |          0 |          4 |          0 |
    load    [$5 + 1], $5                # |      1,204 |      1,228 |          0 |          1 |          3 |          0 |
    fmul    $7, $4, $4                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$12 + 2], $7               # |      1,204 |      1,222 |          0 |          0 |          3 |          0 |
    load    [$6 + 2], $6                # |      1,204 |      1,216 |          0 |          0 |          2 |          0 |
    fmul    $8, $5, $5                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$13 + 9], $9               # |      1,204 |      1,216 |          0 |          0 |          2 |          0 |
    fmul    $7, $6, $6                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fneg    $4, $4                      # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$13 + 9], $14              # |      1,204 |      1,210 |          0 |          1 |          0 |          0 |
    cmp     $2, 0                       # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fneg    $5, $5                      # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$9 + 1], $9                # |      1,204 |      1,210 |          0 |          0 |          1 |          0 |
    fneg    $6, $6                      # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
.count storer
    add     $10, $11, $tmp              # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    bne     be_else.36354               # |      1,204 |      1,208 |          0 |          0 |          0 |          2 |
be_then.36354:
    fcmp    $3, $zero                   # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    store   $4, [$1 + 1]                # |      1,204 |      1,210 |          0 |          1 |          0 |          0 |
    store   $5, [$1 + 2]                # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    store   $6, [$1 + 3]                # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    bne     be_else.36355               # |      1,204 |      1,208 |          0 |          0 |          0 |          2 |
be_then.36355:
    sub     $11, 1, $3
.count stack_load
    load    [$sp - 2], $2
    b       iter_setup_dirvec_constants.2826
be_else.36355:
    finv    $3, $2                      # |      1,204 |      1,210 |          0 |          1 |          0 |          0 |
    sub     $11, 1, $3                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    store   $2, [$1 + 4]                # |      1,204 |      4,816 |      3,612 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |      1,204 |      1,228 |          0 |          0 |          4 |          0 |
    b       iter_setup_dirvec_constants.2826# |      1,204 |      1,208 |          0 |          0 |          0 |          2 |
be_else.36354:
    fmul    $7, $9, $2
    load    [$14 + 2], $7
    fcmp    $3, $zero
    fmul    $8, $7, $8
    fadd    $2, $8, $2
    fmul    $2, $39, $2
    fsub    $4, $2, $2
    store   $2, [$1 + 1]
    load    [$13 + 9], $2
    load    [$12 + 2], $4
    load    [$12 + 0], $8
    load    [$2 + 0], $2
    fmul    $8, $7, $7
    fmul    $4, $2, $4
    fadd    $4, $7, $4
    finv    $3, $7
    sub     $11, 1, $3
    fmul    $4, $39, $4
    fsub    $5, $4, $4
    store   $4, [$1 + 2]
    load    [$12 + 1], $4
    load    [$12 + 0], $5
    fmul    $4, $2, $2
    fmul    $5, $9, $4
    fadd    $2, $4, $2
    fmul    $2, $39, $2
    fsub    $6, $2, $2
    store   $2, [$1 + 3]
    bne     be_else.36356
be_then.36356:
    store   $1, [$tmp + 0]
.count stack_load
    load    [$sp - 2], $2
    b       iter_setup_dirvec_constants.2826
be_else.36356:
    store   $7, [$1 + 4]
    store   $1, [$tmp + 0]
.count stack_load
    load    [$sp - 2], $2
    b       iter_setup_dirvec_constants.2826
bge_else.36334:
.count stack_move
    add     $sp, 2, $sp                 # |        602 |        602 |          0 |          0 |          0 |          0 |
    ret                                 # |        602 |        602 |          0 |          0 |          0 |          0 |
be_else.36318:
    cmp     $14, 2                      # |      4,365 |      5,253 |          0 |        148 |          0 |          0 |
    bne     be_else.36357               # |      4,365 |      8,762 |      4,365 |          0 |          0 |         16 |
be_then.36357:
.count move_args
    mov     $15, $2                     # |        151 |        151 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        151 |        151 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |        151 |        151 |          0 |          0 |          0 |          0 |
    load    [$11 + 4], $2               # |        151 |      1,039 |          0 |        148 |          0 |          0 |
    load    [$11 + 4], $3               # |        151 |        151 |          0 |          0 |          0 |          0 |
    load    [$11 + 4], $4               # |        151 |        151 |          0 |          0 |          0 |          0 |
    load    [$12 + 0], $5               # |        151 |        193 |          0 |          0 |          7 |          0 |
    load    [$2 + 0], $2                # |        151 |        151 |          0 |          0 |          0 |          0 |
    load    [$12 + 1], $6               # |        151 |        163 |          0 |          0 |          2 |          0 |
    load    [$3 + 1], $3                # |        151 |        151 |          0 |          0 |          0 |          0 |
    fmul    $5, $2, $2                  # |        151 |        151 |          0 |          0 |          0 |          0 |
    load    [$12 + 2], $5               # |        151 |      1,177 |          0 |        148 |         23 |          0 |
    fmul    $6, $3, $3                  # |        151 |        151 |          0 |          0 |          0 |          0 |
    load    [$4 + 2], $4                # |        151 |        151 |          0 |          0 |          0 |          0 |
    fmul    $5, $4, $4                  # |        151 |        453 |        302 |          0 |          0 |          0 |
    fadd    $2, $3, $2                  # |        151 |        151 |          0 |          0 |          0 |          0 |
    fadd    $2, $4, $2                  # |        151 |        755 |        604 |          0 |          0 |          0 |
    fcmp    $2, $zero                   # |        151 |        755 |        604 |          0 |          0 |          0 |
    bg      ble_else.36358              # |        151 |        404 |        151 |          0 |          0 |         51 |
ble_then.36358:
    store   $zero, [$1 + 0]             # |         80 |        494 |          0 |         69 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $2               # |         80 |         86 |          0 |          0 |          1 |          0 |
.count storer
    add     $10, $2, $tmp               # |         80 |        238 |        158 |          0 |          0 |          0 |
    sub     $2, 1, $3                   # |         80 |         80 |          0 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |         80 |         80 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |         80 |         86 |          0 |          0 |          1 |          0 |
    b       iter_setup_dirvec_constants.2826# |         80 |         84 |          0 |          0 |          0 |          2 |
ble_else.36358:
    finv    $2, $2                      # |         71 |        137 |          0 |         11 |          0 |          0 |
    fneg    $2, $3                      # |         71 |        381 |        232 |         13 |          0 |          0 |
    store   $3, [$1 + 0]                # |         71 |        142 |         71 |          0 |          0 |          0 |
    load    [$11 + 4], $3               # |         71 |         71 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $3                # |         71 |        213 |        142 |          0 |          0 |          0 |
    fmul    $3, $2, $3                  # |         71 |        213 |        142 |          0 |          0 |          0 |
    fneg    $3, $3                      # |         71 |        355 |        284 |          0 |          0 |          0 |
    store   $3, [$1 + 1]                # |         71 |        142 |         71 |          0 |          0 |          0 |
    load    [$11 + 4], $3               # |         71 |         71 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $3                # |         71 |        217 |        140 |          1 |          0 |          0 |
    fmul    $3, $2, $3                  # |         71 |        213 |        142 |          0 |          0 |          0 |
    fneg    $3, $3                      # |         71 |        355 |        284 |          0 |          0 |          0 |
    store   $3, [$1 + 2]                # |         71 |        142 |         71 |          0 |          0 |          0 |
    load    [$11 + 4], $3               # |         71 |         71 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $4               # |         71 |         83 |          0 |          0 |          2 |          0 |
    load    [$3 + 2], $3                # |         71 |        140 |         69 |          0 |          0 |          0 |
.count storer
    add     $10, $4, $tmp               # |         71 |         71 |          0 |          0 |          0 |          0 |
    sub     $4, 1, $4                   # |         71 |         77 |          0 |          1 |          0 |          0 |
    fmul    $3, $2, $2                  # |         71 |         71 |          0 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |         71 |         71 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $4, $3                      # |         71 |         71 |          0 |          0 |          0 |          0 |
    fneg    $2, $2                      # |         71 |        213 |        142 |          0 |          0 |          0 |
    store   $2, [$1 + 3]                # |         71 |        142 |         71 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |         71 |         89 |          0 |          0 |          3 |          0 |
    b       iter_setup_dirvec_constants.2826# |         71 |         75 |          0 |          0 |          0 |          2 |
be_else.36357:
.count move_args
    mov     $16, $2                     # |      4,214 |      4,220 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$11 + 3], $2               # |      4,214 |      4,322 |          0 |          0 |         18 |          0 |
    load    [$11 + 4], $3               # |      4,214 |      4,280 |          0 |          0 |         11 |          0 |
    load    [$11 + 4], $4               # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$11 + 4], $5               # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$12 + 0], $6               # |      4,214 |      4,436 |          0 |          0 |         37 |          0 |
    load    [$12 + 1], $7               # |      4,214 |      4,226 |          0 |          1 |          1 |          0 |
    load    [$12 + 2], $8               # |      4,214 |      4,292 |          0 |          0 |         13 |          0 |
    fmul    $6, $6, $9                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fmul    $7, $7, $13                 # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $3                # |      4,214 |      4,484 |          0 |          0 |         45 |          0 |
    load    [$4 + 1], $4                # |      4,214 |      4,250 |          0 |          0 |          6 |          0 |
    fmul    $8, $8, $14                 # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fmul    $9, $3, $3                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fmul    $13, $4, $4                 # |      4,214 |      4,220 |          0 |          1 |          0 |          0 |
    load    [$5 + 2], $5                # |      4,214 |      4,256 |          0 |          0 |          7 |          0 |
    fmul    $7, $8, $9                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$11 + 9], $13              # |      4,214 |      4,382 |          0 |          0 |         28 |          0 |
    fmul    $14, $5, $5                 # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fadd    $3, $4, $3                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fmul    $8, $6, $8                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$13 + 0], $4               # |      4,214 |      4,406 |          0 |          0 |         32 |          0 |
    cmp     $2, 0                       # |      4,214 |      4,220 |          0 |          1 |          0 |          0 |
    load    [$11 + 9], $13              # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fmul    $6, $7, $6                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fmul    $9, $4, $4                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fadd    $3, $5, $3                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    be      bne_cont.36359              # |      4,214 |      4,218 |          0 |          0 |          0 |          2 |
bne_then.36359:
    fadd    $3, $4, $3
    load    [$13 + 1], $4
    load    [$11 + 9], $5
    fmul    $8, $4, $4
    load    [$5 + 2], $5
    fmul    $6, $5, $5
    fadd    $3, $4, $3
    fadd    $3, $5, $3
bne_cont.36359:
    store   $3, [$1 + 0]                # |      4,214 |     16,857 |     12,637 |          1 |          0 |          0 |
    load    [$11 + 4], $4               # |      4,214 |      4,268 |          0 |          0 |          9 |          0 |
    load    [$11 + 4], $5               # |      4,214 |      4,220 |          0 |          1 |          0 |          0 |
    load    [$11 + 4], $6               # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$12 + 0], $7               # |      4,214 |      4,334 |          0 |          0 |         20 |          0 |
    load    [$4 + 0], $4                # |      4,214 |      4,226 |          0 |          0 |          2 |          0 |
    load    [$12 + 1], $8               # |      4,214 |      4,274 |          0 |          0 |         10 |          0 |
    load    [$5 + 1], $5                # |      4,214 |      4,256 |          0 |          0 |          7 |          0 |
    fmul    $7, $4, $4                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$12 + 2], $7               # |      4,214 |      4,304 |          0 |          0 |         15 |          0 |
    load    [$6 + 2], $6                # |      4,214 |      4,280 |          0 |          1 |         10 |          0 |
    fmul    $8, $5, $5                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$11 + 9], $9               # |      4,214 |      4,226 |          0 |          0 |          2 |          0 |
    fmul    $7, $6, $6                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fneg    $4, $4                      # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$11 + 9], $13              # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    cmp     $2, 0                       # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fneg    $5, $5                      # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$9 + 1], $9                # |      4,214 |      4,310 |          0 |          1 |         15 |          0 |
    fneg    $6, $6                      # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    bne     be_else.36360               # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
be_then.36360:
    fcmp    $3, $zero                   # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    store   $4, [$1 + 1]                # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    store   $5, [$1 + 2]                # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    store   $6, [$1 + 3]                # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    bne     be_else.36361               # |      4,214 |      4,218 |          0 |          0 |          0 |          2 |
be_then.36361:
.count stack_load
    load    [$sp - 1], $2
.count storer
    add     $10, $2, $tmp
    sub     $2, 1, $3
    store   $1, [$tmp + 0]
.count stack_load
    load    [$sp - 2], $2
    b       iter_setup_dirvec_constants.2826
be_else.36361:
    finv    $3, $2                      # |      4,214 |      4,220 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $3               # |      4,214 |      4,382 |          0 |          0 |         28 |          0 |
.count storer
    add     $10, $3, $tmp               # |      4,214 |     12,590 |      8,370 |          1 |          0 |          0 |
    sub     $3, 1, $3                   # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    store   $2, [$1 + 4]                # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |      4,214 |      4,358 |          0 |          0 |         24 |          0 |
    b       iter_setup_dirvec_constants.2826# |      4,214 |      4,218 |          0 |          0 |          0 |          2 |
be_else.36360:
    fmul    $7, $9, $2
    load    [$13 + 2], $7
    fcmp    $3, $zero
    fmul    $8, $7, $8
    fadd    $2, $8, $2
    fmul    $2, $39, $2
    fsub    $4, $2, $2
    store   $2, [$1 + 1]
    load    [$11 + 9], $2
    load    [$12 + 2], $4
    load    [$12 + 0], $8
    load    [$2 + 0], $2
    fmul    $8, $7, $7
    fmul    $4, $2, $4
    fadd    $4, $7, $4
    finv    $3, $7
    fmul    $4, $39, $4
    fsub    $5, $4, $4
    store   $4, [$1 + 2]
    load    [$12 + 1], $4
    load    [$12 + 0], $5
    fmul    $4, $2, $2
    fmul    $5, $9, $4
    fadd    $2, $4, $2
    fmul    $2, $39, $2
    fsub    $6, $2, $2
    store   $2, [$1 + 3]
    bne     be_else.36362
be_then.36362:
.count stack_load
    load    [$sp - 1], $2
.count storer
    add     $10, $2, $tmp
    sub     $2, 1, $3
    store   $1, [$tmp + 0]
.count stack_load
    load    [$sp - 2], $2
    b       iter_setup_dirvec_constants.2826
be_else.36362:
    store   $7, [$1 + 4]
.count stack_load
    load    [$sp - 1], $2
.count storer
    add     $10, $2, $tmp
    sub     $2, 1, $3
    store   $1, [$tmp + 0]
.count stack_load
    load    [$sp - 2], $2
    b       iter_setup_dirvec_constants.2826
bge_else.36317:
    ret
.end iter_setup_dirvec_constants

######################################################################
.begin setup_startp_constants
setup_startp_constants.2831:
    cmp     $3, 0                       # |    667,764 |    779,406 |          0 |     18,607 |          0 |          0 |
    bl      bge_else.36363              # |    667,764 |  1,492,360 |    667,764 |          0 |          0 |     78,416 |
bge_then.36363:
    load    [min_caml_objects + $3], $1 # |    630,666 |    738,006 |          0 |          0 |     17,890 |          0 |
    load    [$2 + 0], $4                # |    630,666 |    649,260 |          0 |          0 |      3,099 |          0 |
    load    [$1 + 5], $5                # |    630,666 |  2,136,027 |    610,017 |          0 |    149,224 |          0 |
    load    [$1 + 10], $6               # |    630,666 |  1,390,356 |          0 |          0 |    126,615 |          0 |
    load    [$5 + 0], $5                # |    630,666 |  2,021,757 |    420,621 |          0 |    161,745 |          0 |
    fsub    $4, $5, $4                  # |    630,666 |  1,568,508 |    937,842 |          0 |          0 |          0 |
    store   $4, [$6 + 0]                # |    630,666 |  3,190,544 |  2,448,236 |     18,607 |          0 |          0 |
    load    [$1 + 5], $4                # |    630,666 |    630,666 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $5                # |    630,666 |    641,088 |          0 |          0 |      1,737 |          0 |
    load    [$4 + 1], $4                # |    630,666 |  1,295,703 |    628,929 |          0 |      6,018 |          0 |
    fsub    $5, $4, $4                  # |    630,666 |  1,879,962 |  1,249,296 |          0 |          0 |          0 |
    store   $4, [$6 + 1]                # |    630,666 |  3,153,330 |  2,522,664 |          0 |          0 |          0 |
    load    [$1 + 5], $4                # |    630,666 |    632,220 |          0 |          0 |        259 |          0 |
    load    [$2 + 2], $5                # |    630,666 |    638,226 |          0 |          0 |      1,260 |          0 |
    load    [$4 + 2], $4                # |    630,666 |  1,454,264 |    603,446 |     25,972 |     10,720 |          0 |
    fsub    $5, $4, $4                  # |    630,666 |  1,870,558 |  1,239,892 |          0 |          0 |          0 |
    store   $4, [$6 + 2]                # |    630,666 |  3,153,330 |  2,522,664 |          0 |          0 |          0 |
    load    [$1 + 1], $4                # |    630,666 |  1,319,328 |          0 |          0 |    114,777 |          0 |
    load    [$1 + 4], $5                # |    630,666 |    682,578 |          0 |          0 |      8,652 |          0 |
    load    [$6 + 0], $7                # |    630,666 |  1,629,126 |          0 |          0 |    166,410 |          0 |
    cmp     $4, 2                       # |    630,666 |    630,666 |          0 |          0 |          0 |          0 |
    bne     be_else.36364               # |    630,666 |  1,414,526 |    630,666 |          0 |          0 |     76,597 |
be_then.36364:
    load    [$5 + 0], $1                # |     74,196 |    250,698 |          0 |     25,972 |      3,445 |          0 |
    load    [$6 + 1], $4                # |     74,196 |     75,912 |          0 |          0 |        286 |          0 |
    load    [$5 + 1], $8                # |     74,196 |     76,026 |          0 |          0 |        305 |          0 |
    fmul    $1, $7, $1                  # |     74,196 |     74,196 |          0 |          0 |          0 |          0 |
    load    [$6 + 2], $7                # |     74,196 |     76,074 |          0 |          0 |        313 |          0 |
    fmul    $8, $4, $4                  # |     74,196 |     74,196 |          0 |          0 |          0 |          0 |
    load    [$5 + 2], $5                # |     74,196 |     84,576 |          0 |          0 |      1,730 |          0 |
    sub     $3, 1, $3                   # |     74,196 |     74,196 |          0 |          0 |          0 |          0 |
    fmul    $5, $7, $5                  # |     74,196 |    275,616 |     46,980 |     25,740 |          0 |          0 |
    fadd    $1, $4, $1                  # |     74,196 |     74,196 |          0 |          0 |          0 |          0 |
    fadd    $1, $5, $1                  # |     74,196 |    370,980 |    296,784 |          0 |          0 |          0 |
    store   $1, [$6 + 3]                # |     74,196 |    370,980 |    296,784 |          0 |          0 |          0 |
    b       setup_startp_constants.2831 # |     74,196 |     74,410 |          0 |          0 |          0 |        107 |
be_else.36364:
    cmp     $4, 2                       # |    556,470 |    556,470 |          0 |          0 |          0 |          0 |
    bg      ble_else.36365              # |    556,470 |  1,738,568 |    556,470 |          0 |          0 |    312,814 |
ble_then.36365:
    sub     $3, 1, $3                   # |    222,588 |    222,588 |          0 |          0 |          0 |          0 |
    b       setup_startp_constants.2831 # |    222,588 |    222,600 |          0 |          0 |          0 |          6 |
ble_else.36365:
    load    [$1 + 4], $5                # |    333,882 |    475,044 |          0 |     23,527 |          0 |          0 |
    load    [$1 + 4], $7                # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    load    [$1 + 4], $8                # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    load    [$1 + 3], $9                # |    333,882 |    372,366 |          0 |          0 |      6,414 |          0 |
    load    [$6 + 0], $10               # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    load    [$6 + 1], $11               # |    333,882 |    473,910 |          0 |          0 |     23,338 |          0 |
    load    [$6 + 2], $12               # |    333,882 |    342,252 |          0 |          0 |      1,395 |          0 |
    fmul    $10, $10, $13               # |    333,882 |    475,044 |          0 |     23,527 |          0 |          0 |
    fmul    $11, $11, $14               # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    load    [$5 + 0], $5                # |    333,882 |    820,872 |          0 |          0 |     81,165 |          0 |
    load    [$7 + 1], $7                # |    333,882 |    361,500 |          0 |          0 |      4,603 |          0 |
    fmul    $12, $12, $15               # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    fmul    $13, $5, $5                 # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    fmul    $14, $7, $7                 # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    load    [$8 + 2], $8                # |    333,882 |    352,716 |          0 |          0 |      3,139 |          0 |
    load    [$1 + 9], $13               # |    333,882 |    926,184 |          0 |     19,235 |     79,482 |          0 |
    load    [$1 + 9], $14               # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    fmul    $15, $8, $8                 # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    fadd    $5, $7, $5                  # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    load    [$1 + 9], $1                # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    fmul    $11, $12, $7                # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    cmp     $9, 0                       # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    load    [$13 + 0], $13              # |    333,882 |  1,084,524 |          0 |          0 |    125,107 |          0 |
    fmul    $12, $10, $12               # |    333,882 |    488,118 |          0 |     25,706 |          0 |          0 |
    load    [$14 + 1], $14              # |    333,882 |    475,776 |          0 |          0 |     23,649 |          0 |
    fadd    $5, $8, $5                  # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    bne     be_else.36366               # |    333,882 |    334,136 |          0 |          0 |          0 |        127 |
be_then.36366:
    mov     $5, $1                      # |    333,882 |  1,335,274 |  1,001,392 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36366               # |    333,882 |    333,982 |          0 |          0 |          0 |         50 |
be_else.36366:
    fmul    $7, $13, $7
    fmul    $12, $14, $8
    fmul    $10, $11, $9
    load    [$1 + 2], $1
    fadd    $5, $7, $5
    fmul    $9, $1, $1
    fadd    $5, $8, $5
    fadd    $5, $1, $1
be_cont.36366:
    cmp     $4, 3                       # |    333,882 |    476,232 |          0 |     23,725 |          0 |          0 |
    sub     $3, 1, $3                   # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    bne     be_else.36367               # |    333,882 |    345,504 |          0 |      1,937 |          0 |          0 |
be_then.36367:
    fsub    $1, $36, $1                 # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    store   $1, [$6 + 3]                # |    333,882 |  1,669,410 |  1,335,528 |          0 |          0 |          0 |
    b       setup_startp_constants.2831 # |    333,882 |    333,890 |          0 |          0 |          0 |          4 |
be_else.36367:
    store   $1, [$6 + 3]
    b       setup_startp_constants.2831
bge_else.36363:
    ret                                 # |     37,098 |     37,098 |          0 |          0 |          0 |          0 |
.end setup_startp_constants

######################################################################
.begin check_all_inside
check_all_inside.2856:
    load    [$3 + $2], $1               # |  1,716,028 |  2,852,200 |          0 |    174,082 |     15,280 |          0 |
    add     $2, 1, $2                   # |  1,716,028 |  2,744,284 |          0 |    171,376 |          0 |          0 |
    cmp     $1, -1                      # |  1,716,028 |  3,245,907 |  1,529,879 |          0 |          0 |          0 |
    bne     be_else.36368               # |  1,716,028 |  3,526,320 |  1,716,028 |          0 |          0 |     47,132 |
be_then.36368:
    li      1, $1                       # |     22,090 |     22,090 |          0 |          0 |          0 |          0 |
    ret                                 # |     22,090 |     22,090 |          0 |          0 |          0 |          0 |
be_else.36368:
    load    [min_caml_objects + $1], $1 # |  1,693,938 |  1,771,260 |          0 |          0 |     12,887 |          0 |
    load    [$3 + $2], $7               # |  1,693,938 |  1,757,232 |          0 |          0 |     10,549 |          0 |
    add     $2, 1, $2                   # |  1,693,938 |  1,693,938 |          0 |          0 |          0 |          0 |
    load    [$1 + 1], $8                # |  1,693,938 |  2,868,066 |          0 |    171,373 |     24,315 |          0 |
    load    [$1 + 5], $9                # |  1,693,938 |  2,606,148 |          0 |          0 |    152,035 |          0 |
    load    [$1 + 5], $10               # |  1,693,938 |  1,693,938 |          0 |          0 |          0 |          0 |
    load    [$1 + 5], $11               # |  1,693,938 |  1,693,938 |          0 |          0 |          0 |          0 |
    load    [$9 + 0], $9                # |  1,693,938 |  2,162,622 |          0 |          0 |     78,114 |          0 |
    load    [$10 + 1], $10              # |  1,693,938 |  1,737,204 |          0 |          0 |      7,211 |          0 |
    load    [$11 + 2], $11              # |  1,693,938 |  1,951,134 |          0 |          0 |     42,866 |          0 |
    cmp     $8, 1                       # |  1,693,938 |  1,693,938 |          0 |          0 |          0 |          0 |
    fsub    $4, $9, $9                  # |  1,693,938 |  1,976,532 |          0 |     47,099 |          0 |          0 |
    fsub    $5, $10, $10                # |  1,693,938 |  1,693,938 |          0 |          0 |          0 |          0 |
    fsub    $6, $11, $11                # |  1,693,938 |  1,693,938 |          0 |          0 |          0 |          0 |
    bne     be_else.36369               # |  1,693,938 |  1,884,880 |          0 |          0 |          0 |     95,471 |
be_then.36369:
    load    [$1 + 4], $8                # |    716,909 |    720,755 |          0 |          0 |        641 |          0 |
    fabs    $9, $9                      # |    716,909 |    716,909 |          0 |          0 |          0 |          0 |
    load    [$1 + 6], $12               # |    716,909 |    758,897 |          0 |          0 |      6,998 |          0 |
    load    [$8 + 0], $8                # |    716,909 |    751,859 |          0 |          0 |      5,825 |          0 |
    load    [$1 + 4], $13               # |    716,909 |    888,239 |          0 |     28,555 |          0 |          0 |
    fabs    $10, $10                    # |    716,909 |    716,909 |          0 |          0 |          0 |          0 |
    fcmp    $8, $9                      # |    716,909 |    716,909 |          0 |          0 |          0 |          0 |
    bg      ble_else.36370              # |    716,909 |  1,764,332 |    716,909 |          0 |          0 |    165,257 |
ble_then.36370:
    cmp     $12, 0                      # |    198,344 |    198,344 |          0 |          0 |          0 |          0 |
    bne     be_else.36371               # |    198,344 |    397,250 |    198,344 |          0 |          0 |        281 |
be_then.36371:
    li      1, $1                       # |    198,344 |    198,344 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36369               # |    198,344 |    198,348 |          0 |          0 |          0 |          2 |
be_else.36371:
    li      0, $1
.count b_cont
    b       be_cont.36369
ble_else.36370:
    load    [$13 + 1], $8               # |    518,565 |  1,398,393 |          0 |    145,127 |      1,511 |          0 |
    load    [$1 + 6], $9                # |    518,565 |    518,565 |          0 |          0 |          0 |          0 |
    load    [$1 + 4], $12               # |    518,565 |    518,565 |          0 |          0 |          0 |          0 |
    fcmp    $8, $10                     # |    518,565 |    518,565 |          0 |          0 |          0 |          0 |
    bg      ble_else.36372              # |    518,565 |  1,151,294 |    518,565 |          0 |          0 |     57,082 |
ble_then.36372:
    cmp     $9, 0                       # |     55,268 |     55,268 |          0 |          0 |          0 |          0 |
    bne     be_else.36373               # |     55,268 |    133,461 |     50,683 |      4,585 |          0 |          0 |
be_then.36373:
    li      1, $1                       # |     55,268 |     55,268 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36369               # |     55,268 |     55,272 |          0 |          0 |          0 |          2 |
be_else.36373:
    li      0, $1
.count b_cont
    b       be_cont.36369
ble_else.36372:
    load    [$12 + 2], $8               # |    463,297 |  1,322,143 |          0 |    143,075 |         66 |          0 |
    fabs    $11, $9                     # |    463,297 |    463,297 |          0 |          0 |          0 |          0 |
    load    [$1 + 6], $10               # |    463,297 |    463,297 |          0 |          0 |          0 |          0 |
    fcmp    $8, $9                      # |    463,297 |  1,285,207 |          0 |    136,985 |          0 |          0 |
    bg      ble_else.36374              # |    463,297 |    954,892 |    463,297 |          0 |          0 |     14,149 |
ble_then.36374:
    cmp     $10, 0                      # |     17,085 |     17,085 |          0 |          0 |          0 |          0 |
    bne     be_else.36375               # |     17,085 |     34,170 |     17,085 |          0 |          0 |          0 |
be_then.36375:
    li      1, $1                       # |     17,085 |     17,085 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36369               # |     17,085 |     17,089 |          0 |          0 |          0 |          2 |
be_else.36375:
    li      0, $1
.count b_cont
    b       be_cont.36369
ble_else.36374:
    load    [$1 + 6], $1                # |    446,212 |  1,206,532 |          0 |    126,720 |          0 |          0 |
.count b_cont
    b       be_cont.36369               # |    446,212 |    466,734 |          0 |          0 |          0 |     10,261 |
be_else.36369:
    cmp     $8, 2                       # |    977,029 |  4,101,385 |          0 |    520,726 |          0 |          0 |
    bne     be_else.36376               # |    977,029 |  1,954,116 |    977,029 |          0 |          0 |         29 |
be_then.36376:
    load    [$1 + 6], $8                # |    460,725 |    465,231 |          0 |          0 |        751 |          0 |
    load    [$1 + 4], $1                # |    460,725 |    460,725 |          0 |          0 |          0 |          0 |
    load    [$1 + 0], $12               # |    460,725 |  1,534,539 |    921,450 |          0 |     25,394 |          0 |
    load    [$1 + 1], $13               # |    460,725 |    465,141 |          0 |          0 |        736 |          0 |
    load    [$1 + 2], $1                # |    460,725 |  3,146,439 |          0 |    445,328 |      2,291 |          0 |
    fmul    $12, $9, $9                 # |    460,725 |    460,725 |          0 |          0 |          0 |          0 |
    fmul    $13, $10, $10               # |    460,725 |    460,725 |          0 |          0 |          0 |          0 |
    fmul    $1, $11, $1                 # |    460,725 |    460,725 |          0 |          0 |          0 |          0 |
    fadd    $9, $10, $9                 # |    460,725 |  1,842,900 |  1,382,175 |          0 |          0 |          0 |
    fadd    $9, $1, $1                  # |    460,725 |  2,303,625 |  1,842,900 |          0 |          0 |          0 |
    fcmp    $zero, $1                   # |    460,725 |  2,303,625 |  1,842,900 |          0 |          0 |          0 |
    bg      ble_else.36377              # |    460,725 |    939,786 |    460,725 |          0 |          0 |      9,168 |
ble_then.36377:
    cmp     $8, 0                       # |    460,725 |  3,132,693 |          0 |    445,328 |          0 |          0 |
    bne     be_else.36378               # |    460,725 |    921,454 |    460,725 |          0 |          0 |          2 |
be_then.36378:
    li      1, $1
.count b_cont
    b       be_cont.36376
be_else.36378:
    li      0, $1                       # |    460,725 |    460,725 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36376               # |    460,725 |    460,729 |          0 |          0 |          0 |          2 |
ble_else.36377:
    cmp     $8, 0
    bne     be_else.36379
be_then.36379:
    li      0, $1
.count b_cont
    b       be_cont.36376
be_else.36379:
    li      1, $1
.count b_cont
    b       be_cont.36376
be_else.36376:
    load    [$1 + 6], $12               # |    516,304 |  2,031,334 |          0 |    172,788 |     79,717 |          0 |
    fmul    $9, $9, $13                 # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    load    [$1 + 4], $14               # |    516,304 |    523,930 |          0 |          0 |      1,271 |          0 |
    load    [$1 + 4], $15               # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    fmul    $10, $10, $16               # |    516,304 |  1,964,254 |          0 |    241,325 |          0 |          0 |
    load    [$14 + 0], $14              # |    516,304 |    609,220 |          0 |          0 |     15,486 |          0 |
    load    [$15 + 1], $15              # |    516,304 |    528,964 |          0 |          0 |      2,110 |          0 |
    fmul    $11, $11, $17               # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    fmul    $13, $14, $13               # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    fmul    $16, $15, $14               # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    load    [$1 + 4], $15               # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    load    [$1 + 3], $16               # |    516,304 |    531,586 |          0 |          0 |      2,547 |          0 |
    fmul    $10, $11, $18               # |    516,304 |  1,436,344 |          0 |    153,340 |          0 |          0 |
    load    [$15 + 2], $15              # |    516,304 |    530,308 |          0 |          0 |      2,334 |          0 |
    fadd    $13, $14, $13               # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    load    [$1 + 9], $14               # |    516,304 |  1,158,070 |          0 |          0 |    106,961 |          0 |
    fmul    $17, $15, $15               # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    fmul    $11, $9, $11                # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    load    [$14 + 0], $14              # |    516,304 |  1,079,704 |          0 |          0 |     93,900 |          0 |
    cmp     $16, 0                      # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    load    [$1 + 9], $17               # |    516,304 |  1,735,678 |          0 |    203,229 |          0 |          0 |
    fmul    $9, $10, $9                 # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    fadd    $13, $15, $10               # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    bne     be_else.36380               # |    516,304 |    526,820 |          0 |          0 |          0 |      5,258 |
be_then.36380:
    mov     $10, $1                     # |    516,304 |  2,054,700 |  1,538,396 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36380               # |    516,304 |    518,428 |          0 |          0 |          0 |      1,062 |
be_else.36380:
    fmul    $18, $14, $13
    load    [$17 + 1], $14
    load    [$1 + 9], $1
    fmul    $11, $14, $11
    fadd    $10, $13, $10
    load    [$1 + 2], $1
    fmul    $9, $1, $1
    fadd    $10, $11, $9
    fadd    $9, $1, $1
be_cont.36380:
    cmp     $8, 3                       # |    516,304 |  1,805,830 |          0 |    214,921 |          0 |          0 |
    bne     be_cont.36381               # |    516,304 |  2,107,288 |    301,368 |    214,936 |          0 |          0 |
be_then.36381:
    fsub    $1, $36, $1                 # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
be_cont.36381:
    fcmp    $zero, $1                   # |    516,304 |  2,581,520 |  2,065,216 |          0 |          0 |          0 |
    bg      ble_else.36382              # |    516,304 |  1,188,522 |    516,304 |          0 |          0 |     77,957 |
ble_then.36382:
    cmp     $12, 0                      # |    184,512 |    184,512 |          0 |          0 |          0 |          0 |
    bne     be_else.36383               # |    184,512 |    369,026 |    184,512 |          0 |          0 |          1 |
be_then.36383:
    li      1, $1                       # |    184,512 |    184,512 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36382              # |    184,512 |    184,550 |          0 |          0 |          0 |         19 |
be_else.36383:
    li      0, $1
.count b_cont
    b       ble_cont.36382
ble_else.36382:
    cmp     $12, 0                      # |    331,792 |    734,998 |          0 |     67,201 |          0 |          0 |
    bne     be_else.36384               # |    331,792 |    663,584 |    331,792 |          0 |          0 |          0 |
be_then.36384:
    li      0, $1                       # |    331,792 |    331,792 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36384               # |    331,792 |    331,798 |          0 |          0 |          0 |          3 |
be_else.36384:
    li      1, $1
be_cont.36384:
ble_cont.36382:
be_cont.36376:
be_cont.36369:
    cmp     $1, 0                       # |  1,693,938 |  2,815,348 |    414,130 |    117,880 |          0 |          0 |
    bne     be_else.36385               # |  1,693,938 |  3,765,118 |  1,618,948 |     74,990 |          0 |      1,146 |
be_then.36385:
    cmp     $7, -1                      # |  1,238,729 |  1,238,729 |          0 |          0 |          0 |          0 |
    bne     be_else.36386               # |  1,238,729 |  2,695,130 |  1,238,729 |          0 |          0 |    108,836 |
be_then.36386:
    li      1, $1                       # |    596,960 |    596,960 |          0 |          0 |          0 |          0 |
    ret                                 # |    596,960 |    596,960 |          0 |          0 |          0 |          0 |
be_else.36386:
    load    [min_caml_objects + $7], $1 # |    641,769 |    677,319 |          0 |          0 |      5,925 |          0 |
    load    [$3 + $2], $7               # |    641,769 |    706,221 |          0 |          0 |     10,742 |          0 |
    add     $2, 1, $2                   # |    641,769 |    641,769 |          0 |          0 |          0 |          0 |
    load    [$1 + 5], $8                # |    641,769 |  2,312,343 |          0 |     88,336 |    190,093 |          0 |
    load    [$1 + 5], $9                # |    641,769 |    641,769 |          0 |          0 |          0 |          0 |
    load    [$1 + 5], $10               # |    641,769 |    641,769 |          0 |          0 |          0 |          0 |
    load    [$1 + 1], $11               # |    641,769 |  1,657,965 |          0 |          0 |    169,366 |          0 |
    load    [$8 + 0], $8                # |    641,769 |  1,280,067 |          0 |          0 |    106,383 |          0 |
    load    [$9 + 1], $9                # |    641,769 |    952,389 |          0 |          0 |     51,770 |          0 |
    load    [$10 + 2], $10              # |    641,769 |    650,757 |          0 |          0 |      1,498 |          0 |
    cmp     $11, 1                      # |    641,769 |    641,769 |          0 |          0 |          0 |          0 |
    fsub    $4, $8, $8                  # |    641,769 |  1,452,729 |          0 |    135,160 |          0 |          0 |
    fsub    $5, $9, $9                  # |    641,769 |    641,769 |          0 |          0 |          0 |          0 |
    fsub    $6, $10, $10                # |    641,769 |    641,769 |          0 |          0 |          0 |          0 |
    bne     be_else.36387               # |    641,769 |    641,777 |          0 |          0 |          0 |          4 |
be_then.36387:
    load    [$1 + 4], $11
    fabs    $8, $8
    load    [$1 + 6], $12
    load    [$11 + 0], $11
    load    [$1 + 4], $13
    fabs    $9, $9
    fcmp    $11, $8
    bg      ble_else.36388
ble_then.36388:
    cmp     $12, 0
    bne     be_else.36389
be_then.36389:
    li      1, $1
.count b_cont
    b       be_cont.36387
be_else.36389:
    li      0, $1
.count b_cont
    b       be_cont.36387
ble_else.36388:
    load    [$13 + 1], $8
    load    [$1 + 6], $11
    load    [$1 + 4], $12
    fcmp    $8, $9
    bg      ble_else.36390
ble_then.36390:
    cmp     $11, 0
    bne     be_else.36391
be_then.36391:
    li      1, $1
.count b_cont
    b       be_cont.36387
be_else.36391:
    li      0, $1
.count b_cont
    b       be_cont.36387
ble_else.36390:
    load    [$12 + 2], $8
    fabs    $10, $9
    load    [$1 + 6], $10
    fcmp    $8, $9
    bg      ble_else.36392
ble_then.36392:
    cmp     $10, 0
    bne     be_else.36393
be_then.36393:
    li      1, $1
.count b_cont
    b       be_cont.36387
be_else.36393:
    li      0, $1
.count b_cont
    b       be_cont.36387
ble_else.36392:
    load    [$1 + 6], $1
.count b_cont
    b       be_cont.36387
be_else.36387:
    cmp     $11, 2                      # |    641,769 |  1,965,927 |          0 |    220,693 |          0 |          0 |
    load    [$1 + 6], $11               # |    641,769 |  1,105,479 |          0 |          0 |     77,285 |          0 |
    bne     be_else.36394               # |    641,769 |    690,405 |          0 |          0 |          0 |     24,318 |
be_then.36394:
    load    [$1 + 4], $1                # |     31,829 |     32,345 |          0 |          0 |         86 |          0 |
    load    [$1 + 0], $12               # |     31,829 |     97,769 |     63,486 |          0 |        409 |          0 |
    load    [$1 + 1], $13               # |     31,829 |     32,093 |          0 |          0 |         44 |          0 |
    load    [$1 + 2], $1                # |     31,829 |    127,457 |          0 |     15,918 |         20 |          0 |
    fmul    $12, $8, $8                 # |     31,829 |     31,829 |          0 |          0 |          0 |          0 |
    fmul    $13, $9, $9                 # |     31,829 |     31,829 |          0 |          0 |          0 |          0 |
    fmul    $1, $10, $1                 # |     31,829 |     31,829 |          0 |          0 |          0 |          0 |
    fadd    $8, $9, $8                  # |     31,829 |    127,316 |     95,487 |          0 |          0 |          0 |
    fadd    $8, $1, $1                  # |     31,829 |    159,145 |    127,316 |          0 |          0 |          0 |
    fcmp    $zero, $1                   # |     31,829 |    159,145 |    127,316 |          0 |          0 |          0 |
    bg      ble_else.36395              # |     31,829 |     79,722 |     31,829 |          0 |          0 |      8,032 |
ble_then.36395:
    cmp     $11, 0                      # |     20,422 |     75,328 |          0 |      9,151 |          0 |          0 |
    bne     be_else.36396               # |     20,422 |     40,848 |     20,422 |          0 |          0 |          2 |
be_then.36396:
    li      1, $1
.count b_cont
    b       be_cont.36394
be_else.36396:
    li      0, $1                       # |     20,422 |     20,422 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36394               # |     20,422 |     20,422 |          0 |          0 |          0 |          0 |
ble_else.36395:
    cmp     $11, 0                      # |     11,407 |     52,351 |          0 |      6,824 |          0 |          0 |
    bne     be_else.36397               # |     11,407 |     22,818 |     11,407 |          0 |          0 |          2 |
be_then.36397:
    li      0, $1
.count b_cont
    b       be_cont.36394
be_else.36397:
    li      1, $1                       # |     11,407 |     26,257 |          0 |      2,475 |          0 |          0 |
.count b_cont
    b       be_cont.36394               # |     11,407 |     11,411 |          0 |          0 |          0 |          2 |
be_else.36394:
    load    [$1 + 1], $12               # |    609,940 |  1,682,836 |          0 |    178,816 |          0 |          0 |
    load    [$1 + 4], $13               # |    609,940 |    638,914 |          0 |          0 |      4,829 |          0 |
    load    [$1 + 4], $14               # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    load    [$1 + 4], $15               # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    load    [$1 + 3], $16               # |    609,940 |  1,493,500 |          0 |    141,646 |      5,614 |          0 |
    fmul    $8, $8, $17                 # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    fmul    $9, $9, $18                 # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    load    [$13 + 0], $13              # |    609,940 |    834,772 |          0 |          0 |     37,472 |          0 |
    load    [$14 + 1], $14              # |    609,940 |    615,994 |          0 |          0 |      1,009 |          0 |
    fmul    $10, $10, $19               # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    fmul    $17, $13, $13               # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    fmul    $18, $14, $14               # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    load    [$15 + 2], $15              # |    609,940 |  1,450,708 |          0 |    132,608 |      7,520 |          0 |
    load    [$1 + 9], $17               # |    609,940 |  1,469,044 |          0 |          0 |    143,184 |          0 |
    load    [$1 + 9], $18               # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    fmul    $19, $15, $15               # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    fadd    $13, $14, $13               # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    load    [$1 + 9], $1                # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    fmul    $9, $10, $14                # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    cmp     $16, 0                      # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    load    [$17 + 0], $17              # |    609,940 |  2,732,350 |          0 |    132,608 |    221,127 |          0 |
    fmul    $10, $8, $10                # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    load    [$18 + 1], $18              # |    609,940 |    660,454 |          0 |          0 |      8,419 |          0 |
    fadd    $13, $15, $13               # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    bne     be_else.36398               # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
be_then.36398:
    mov     $13, $1                     # |    609,940 |  2,439,760 |  1,829,820 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36398               # |    609,940 |    609,948 |          0 |          0 |          0 |          4 |
be_else.36398:
    fmul    $14, $17, $14
    fmul    $10, $18, $10
    fmul    $8, $9, $8
    load    [$1 + 2], $1
    fadd    $13, $14, $9
    fmul    $8, $1, $1
    fadd    $9, $10, $8
    fadd    $8, $1, $1
be_cont.36398:
    cmp     $12, 3                      # |    609,940 |  1,546,198 |          0 |    156,043 |          0 |          0 |
    bne     be_cont.36399               # |    609,940 |  1,909,465 |    472,023 |    137,917 |          0 |          0 |
be_then.36399:
    fsub    $1, $36, $1                 # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
be_cont.36399:
    fcmp    $zero, $1                   # |    609,940 |  3,049,700 |  2,439,760 |          0 |          0 |          0 |
    bg      ble_else.36400              # |    609,940 |  1,493,888 |    609,940 |          0 |          0 |    137,004 |
ble_then.36400:
    cmp     $11, 0                      # |    299,723 |    299,723 |          0 |          0 |          0 |          0 |
    bne     be_else.36401               # |    299,723 |    825,850 |    299,723 |          0 |          0 |    113,202 |
be_then.36401:
    li      1, $1                       # |    108,345 |    108,345 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36400              # |    108,345 |    108,349 |          0 |          0 |          0 |          2 |
be_else.36401:
    li      0, $1                       # |    191,378 |    217,850 |          0 |      4,412 |          0 |          0 |
.count b_cont
    b       ble_cont.36400              # |    191,378 |    191,508 |          0 |          0 |          0 |         65 |
ble_else.36400:
    cmp     $11, 0                      # |    310,217 |    682,583 |          0 |     62,061 |          0 |          0 |
    bne     be_else.36402               # |    310,217 |    809,762 |    310,217 |          0 |          0 |     94,664 |
be_then.36402:
    li      0, $1                       # |    243,275 |    243,275 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36402               # |    243,275 |    243,279 |          0 |          0 |          0 |          2 |
be_else.36402:
    li      1, $1                       # |     66,942 |     66,942 |          0 |          0 |          0 |          0 |
be_cont.36402:
ble_cont.36400:
be_cont.36394:
be_cont.36387:
    cmp     $1, 0                       # |    641,769 |  1,059,729 |     66,942 |     58,503 |          0 |          0 |
    bne     be_else.36403               # |    641,769 |  1,617,775 |    580,010 |     61,759 |          0 |     12,721 |
be_then.36403:
    cmp     $7, -1                      # |    455,075 |    455,075 |          0 |          0 |          0 |          0 |
    bne     be_else.36404               # |    455,075 |    916,914 |    455,075 |          0 |          0 |      3,382 |
be_then.36404:
    li      1, $1                       # |    219,472 |    219,472 |          0 |          0 |          0 |          0 |
    ret                                 # |    219,472 |    219,472 |          0 |          0 |          0 |          0 |
be_else.36404:
    load    [min_caml_objects + $7], $1 # |    235,603 |    271,693 |          0 |          0 |      6,015 |          0 |
    load    [$3 + $2], $7               # |    235,603 |    274,261 |          0 |          0 |      6,443 |          0 |
    add     $2, 1, $8                   # |    235,603 |    235,603 |          0 |          0 |          0 |          0 |
    load    [$1 + 1], $9                # |    235,603 |    718,423 |          0 |     42,816 |     37,654 |          0 |
    load    [$1 + 5], $10               # |    235,603 |    517,789 |          0 |          0 |     47,031 |          0 |
    load    [$1 + 5], $11               # |    235,603 |    235,603 |          0 |          0 |          0 |          0 |
    load    [$1 + 5], $12               # |    235,603 |    235,603 |          0 |          0 |          0 |          0 |
    load    [$10 + 0], $10              # |    235,603 |    506,173 |          0 |          0 |     45,095 |          0 |
    load    [$11 + 1], $11              # |    235,603 |    268,699 |          0 |          0 |      5,516 |          0 |
    load    [$12 + 2], $12              # |    235,603 |    249,499 |          0 |          0 |      2,316 |          0 |
    cmp     $9, 1                       # |    235,603 |    235,603 |          0 |          0 |          0 |          0 |
    fsub    $4, $10, $10                # |    235,603 |    492,499 |          0 |     42,816 |          0 |          0 |
    fsub    $5, $11, $11                # |    235,603 |    235,603 |          0 |          0 |          0 |          0 |
    fsub    $6, $12, $12                # |    235,603 |    235,603 |          0 |          0 |          0 |          0 |
    bne     be_else.36405               # |    235,603 |    258,337 |          0 |          0 |          0 |     11,367 |
be_then.36405:
    load    [$1 + 4], $9
    fabs    $10, $10
    load    [$1 + 6], $13
    load    [$9 + 0], $9
    load    [$1 + 4], $14
    fabs    $11, $11
    fcmp    $9, $10
    bg      ble_else.36406
ble_then.36406:
    cmp     $13, 0
    bne     be_else.36407
be_then.36407:
    li      1, $1
.count b_cont
    b       be_cont.36405
be_else.36407:
    li      0, $1
.count b_cont
    b       be_cont.36405
ble_else.36406:
    load    [$14 + 1], $9
    load    [$1 + 6], $10
    load    [$1 + 4], $13
    fcmp    $9, $11
    bg      ble_else.36408
ble_then.36408:
    cmp     $10, 0
    bne     be_else.36409
be_then.36409:
    li      1, $1
.count b_cont
    b       be_cont.36405
be_else.36409:
    li      0, $1
.count b_cont
    b       be_cont.36405
ble_else.36408:
    load    [$13 + 2], $9
    fabs    $12, $10
    load    [$1 + 6], $11
    fcmp    $9, $10
    bg      ble_else.36410
ble_then.36410:
    cmp     $11, 0
    bne     be_else.36411
be_then.36411:
    li      1, $1
.count b_cont
    b       be_cont.36405
be_else.36411:
    li      0, $1
.count b_cont
    b       be_cont.36405
ble_else.36410:
    load    [$1 + 6], $1
.count b_cont
    b       be_cont.36405
be_else.36405:
    cmp     $9, 2                       # |    235,603 |    242,089 |          0 |      1,081 |          0 |          0 |
    load    [$1 + 6], $9                # |    235,603 |    247,003 |          0 |          0 |      1,900 |          0 |
    bne     be_else.36412               # |    235,603 |    331,929 |          0 |          0 |          0 |     48,163 |
be_then.36412:
    load    [$1 + 4], $1                # |     46,306 |     55,756 |          0 |          0 |      1,575 |          0 |
    load    [$1 + 0], $13               # |     46,306 |    136,836 |     89,462 |          0 |        178 |          0 |
    load    [$1 + 1], $14               # |     46,306 |     46,768 |          0 |          0 |         77 |          0 |
    load    [$1 + 2], $1                # |     46,306 |     51,808 |          0 |        650 |        267 |          0 |
    fmul    $13, $10, $10               # |     46,306 |     46,306 |          0 |          0 |          0 |          0 |
    fmul    $14, $11, $11               # |     46,306 |     46,306 |          0 |          0 |          0 |          0 |
    fmul    $1, $12, $1                 # |     46,306 |     46,306 |          0 |          0 |          0 |          0 |
    fadd    $10, $11, $10               # |     46,306 |    185,224 |    138,918 |          0 |          0 |          0 |
    fadd    $10, $1, $1                 # |     46,306 |    231,530 |    185,224 |          0 |          0 |          0 |
    fcmp    $zero, $1                   # |     46,306 |    231,530 |    185,224 |          0 |          0 |          0 |
    bg      ble_else.36413              # |     46,306 |    115,598 |     46,306 |          0 |          0 |     11,493 |
ble_then.36413:
    cmp     $9, 0                       # |     26,044 |     27,340 |          0 |        216 |          0 |          0 |
    bne     be_else.36414               # |     26,044 |     52,092 |     26,044 |          0 |          0 |          2 |
be_then.36414:
    li      1, $1
.count b_cont
    b       be_cont.36412
be_else.36414:
    li      0, $1                       # |     26,044 |     26,044 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36412               # |     26,044 |     26,048 |          0 |          0 |          0 |          2 |
ble_else.36413:
    cmp     $9, 0                       # |     20,262 |     22,356 |          0 |        349 |          0 |          0 |
    bne     be_else.36415               # |     20,262 |     40,528 |     20,262 |          0 |          0 |          2 |
be_then.36415:
    li      0, $1
.count b_cont
    b       be_cont.36412
be_else.36415:
    li      1, $1                       # |     20,262 |    141,462 |          0 |     20,200 |          0 |          0 |
.count b_cont
    b       be_cont.36412               # |     20,262 |     20,266 |          0 |          0 |          0 |          2 |
be_else.36412:
    load    [$1 + 1], $13               # |    189,297 |  1,318,113 |          0 |    188,136 |          0 |          0 |
    load    [$1 + 3], $14               # |    189,297 |    207,315 |          0 |          0 |      3,003 |          0 |
    fmul    $10, $10, $15               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    load    [$1 + 4], $16               # |    189,297 |    195,051 |          0 |          0 |        959 |          0 |
    load    [$1 + 4], $17               # |    189,297 |  1,318,269 |          0 |    188,162 |          0 |          0 |
    fmul    $11, $11, $18               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    load    [$16 + 0], $16              # |    189,297 |    250,275 |          0 |          0 |     10,163 |          0 |
    load    [$17 + 1], $17              # |    189,297 |    190,779 |          0 |          0 |        247 |          0 |
    fmul    $12, $12, $19               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    fmul    $15, $16, $15               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    fmul    $18, $17, $16               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    load    [$1 + 4], $17               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    fmul    $11, $12, $18               # |    189,297 |  1,318,269 |          0 |    188,162 |          0 |          0 |
    load    [$1 + 9], $20               # |    189,297 |    327,207 |          0 |          0 |     22,985 |          0 |
    load    [$17 + 2], $17              # |    189,297 |    256,029 |          0 |          0 |     11,122 |          0 |
    fadd    $15, $16, $15               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    load    [$20 + 0], $16              # |    189,297 |    458,295 |          0 |          0 |     44,833 |          0 |
    fmul    $19, $17, $17               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    fmul    $12, $10, $12               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    fmul    $18, $16, $16               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    cmp     $14, 0                      # |    189,297 |  1,195,233 |          0 |    167,656 |          0 |          0 |
    load    [$1 + 9], $18               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    fmul    $10, $11, $10               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    fadd    $15, $17, $11               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    bne     be_else.36416               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
be_then.36416:
    mov     $11, $1                     # |    189,297 |    757,188 |    567,891 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36416               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
be_else.36416:
    load    [$18 + 1], $14
    fadd    $11, $16, $11
    load    [$1 + 9], $1
    fmul    $12, $14, $12
    load    [$1 + 2], $1
    fmul    $10, $1, $1
    fadd    $11, $12, $10
    fadd    $10, $1, $1
be_cont.36416:
    cmp     $13, 3                      # |    189,297 |  1,195,233 |          0 |    167,656 |          0 |          0 |
    bne     be_cont.36417               # |    189,297 |  1,217,012 |     21,641 |    167,656 |          0 |         69 |
be_then.36417:
    fsub    $1, $36, $1                 # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
be_cont.36417:
    fcmp    $zero, $1                   # |    189,297 |    946,485 |    757,188 |          0 |          0 |          0 |
    bg      ble_else.36418              # |    189,297 |    476,850 |    189,297 |          0 |          0 |     49,128 |
ble_then.36418:
    cmp     $9, 0                       # |    153,079 |    153,079 |          0 |          0 |          0 |          0 |
    bne     be_else.36419               # |    153,079 |    306,162 |    153,079 |          0 |          0 |          2 |
be_then.36419:
    li      1, $1
.count b_cont
    b       ble_cont.36418
be_else.36419:
    li      0, $1                       # |    153,079 |    942,427 |          0 |    131,558 |          0 |          0 |
.count b_cont
    b       ble_cont.36418              # |    153,079 |    153,083 |          0 |          0 |          0 |          2 |
ble_else.36418:
    cmp     $9, 0                       # |     36,218 |    252,650 |          0 |     36,072 |          0 |          0 |
    bne     be_else.36420               # |     36,218 |     72,436 |     36,218 |          0 |          0 |          0 |
be_then.36420:
    li      0, $1
.count b_cont
    b       be_cont.36420
be_else.36420:
    li      1, $1                       # |     36,218 |     36,218 |          0 |          0 |          0 |          0 |
be_cont.36420:
ble_cont.36418:
be_cont.36412:
be_cont.36405:
    cmp     $1, 0                       # |    235,603 |    471,423 |     36,218 |     33,267 |          0 |          0 |
    bne     be_else.36421               # |    235,603 |  1,093,739 |    111,098 |    124,505 |          0 |          4 |
be_then.36421:
    cmp     $7, -1                      # |    179,123 |    179,123 |          0 |          0 |          0 |          0 |
    bne     be_else.36422               # |    179,123 |    358,246 |    179,123 |          0 |          0 |          0 |
be_then.36422:
    li      1, $1                       # |    179,123 |    179,123 |          0 |          0 |          0 |          0 |
    ret                                 # |    179,123 |    179,123 |          0 |          0 |          0 |          0 |
be_else.36422:
    load    [min_caml_objects + $7], $1
    add     $2, 1, $7
    add     $2, 1, $9
    load    [$1 + 5], $10
    load    [$1 + 5], $11
    load    [$1 + 5], $12
    load    [$1 + 1], $13
    load    [$10 + 0], $10
    load    [$11 + 1], $11
    load    [$12 + 2], $12
    cmp     $13, 1
    fsub    $4, $10, $10
    fsub    $5, $11, $11
    fsub    $6, $12, $12
    bne     be_else.36423
be_then.36423:
    load    [$1 + 4], $2
    fabs    $10, $9
    load    [$1 + 6], $10
    load    [$2 + 0], $2
    load    [$1 + 6], $13
    load    [$1 + 4], $14
    fcmp    $2, $9
    bg      ble_else.36424
ble_then.36424:
    li      0, $1
.count b_cont
    b       ble_cont.36424
ble_else.36424:
    load    [$14 + 1], $2
    fabs    $11, $9
    load    [$1 + 4], $1
    fcmp    $2, $9
    bg      ble_else.36425
ble_then.36425:
    li      0, $1
.count b_cont
    b       ble_cont.36425
ble_else.36425:
    load    [$1 + 2], $1
    fabs    $12, $2
    fcmp    $1, $2
    bg      ble_else.36426
ble_then.36426:
    li      0, $1
.count b_cont
    b       ble_cont.36426
ble_else.36426:
    li      1, $1
ble_cont.36426:
ble_cont.36425:
ble_cont.36424:
    cmp     $1, 0
    bne     be_else.36427
be_then.36427:
    cmp     $10, 0
    bne     be_else.36428
be_then.36428:
    li      0, $1
    ret
be_else.36428:
.count move_args
    mov     $8, $2
    b       check_all_inside.2856
be_else.36427:
    cmp     $13, 0
    bne     be_else.36429
be_then.36429:
.count move_args
    mov     $7, $2
    b       check_all_inside.2856
be_else.36429:
    li      0, $1
    ret
be_else.36423:
    cmp     $13, 2
    load    [$1 + 6], $7
    bne     be_else.36430
be_then.36430:
    load    [$1 + 4], $1
    add     $2, 1, $2
    load    [$1 + 0], $8
    load    [$1 + 1], $13
    load    [$1 + 2], $1
    fmul    $8, $10, $8
    fmul    $13, $11, $10
    fmul    $1, $12, $1
    fadd    $8, $10, $8
    fadd    $8, $1, $1
    fcmp    $zero, $1
    bg      ble_else.36431
ble_then.36431:
    cmp     $7, 0
    bne     be_else.36432
be_then.36432:
    li      0, $1
    ret
be_else.36432:
.count move_args
    mov     $9, $2
    b       check_all_inside.2856
ble_else.36431:
    cmp     $7, 0
    be      check_all_inside.2856
    li      0, $1
    ret
be_else.36430:
    load    [$1 + 4], $8
    load    [$1 + 4], $9
    load    [$1 + 4], $14
    load    [$1 + 3], $15
    fmul    $10, $10, $16
    fmul    $11, $11, $17
    load    [$8 + 0], $8
    load    [$9 + 1], $9
    fmul    $12, $12, $18
    fmul    $16, $8, $8
    fmul    $17, $9, $9
    load    [$14 + 2], $14
    fmul    $11, $12, $16
    load    [$1 + 9], $17
    fmul    $18, $14, $14
    fadd    $8, $9, $8
    fmul    $12, $10, $12
    load    [$17 + 0], $9
    cmp     $15, 0
    load    [$1 + 9], $17
    fmul    $10, $11, $10
    fmul    $16, $9, $9
    fadd    $8, $14, $8
    bne     be_else.36434
be_then.36434:
    mov     $8, $1
.count b_cont
    b       be_cont.36434
be_else.36434:
    fadd    $8, $9, $8
    load    [$17 + 1], $9
    load    [$1 + 9], $1
    fmul    $12, $9, $9
    load    [$1 + 2], $1
    fmul    $10, $1, $1
    fadd    $8, $9, $8
    fadd    $8, $1, $1
be_cont.36434:
    cmp     $13, 3
    bne     be_cont.36435
be_then.36435:
    fsub    $1, $36, $1
be_cont.36435:
    fcmp    $zero, $1
    bg      ble_else.36436
ble_then.36436:
    cmp     $7, 0
    bne     be_else.36437
be_then.36437:
    li      0, $1
    ret
be_else.36437:
    add     $2, 1, $2
    b       check_all_inside.2856
ble_else.36436:
    cmp     $7, 0
    bne     be_else.36438
be_then.36438:
    add     $2, 1, $2
    b       check_all_inside.2856
be_else.36438:
    li      0, $1
    ret
be_else.36421:
    li      0, $1                       # |     56,480 |    394,604 |          0 |     56,354 |          0 |          0 |
    ret                                 # |     56,480 |     56,480 |          0 |          0 |          0 |          0 |
be_else.36403:
    li      0, $1                       # |    186,694 |    805,786 |          0 |    103,182 |          0 |          0 |
    ret                                 # |    186,694 |    186,694 |          0 |          0 |          0 |          0 |
be_else.36385:
    li      0, $1                       # |    455,209 |  2,054,317 |          0 |    266,518 |          0 |          0 |
    ret                                 # |    455,209 |    455,209 |          0 |          0 |          0 |          0 |
.end check_all_inside

######################################################################
.begin shadow_check_and_group
shadow_check_and_group.2862:
    load    [$3 + $2], $21              # |  4,222,772 | 10,432,422 |  2,170,396 |    645,140 |     28,069 |          0 |
    load    [min_caml_light_dirvec + 1], $22# |  4,222,772 |  4,222,772 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 0], $23# |  4,222,772 |  4,222,772 |          0 |          0 |          0 |          0 |
    cmp     $21, -1                     # |  4,222,772 |  4,222,772 |          0 |          0 |          0 |          0 |
    bne     be_else.36439               # |  4,222,772 | 11,716,853 |  3,569,535 |    653,237 |          0 |      2,562 |
be_then.36439:
    li      0, $1                       # |    627,857 |    627,857 |          0 |          0 |          0 |          0 |
    ret                                 # |    627,857 |    627,857 |          0 |          0 |          0 |          0 |
be_else.36439:
    load    [min_caml_objects + $21], $24# |  3,594,915 |  3,669,219 |          0 |          0 |     12,384 |          0 |
    load    [min_caml_intersection_point + 1], $25# |  3,594,915 |  3,594,915 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $26# |  3,594,915 |  3,594,915 |          0 |          0 |          0 |          0 |
    load    [$24 + 5], $27              # |  3,594,915 |  5,001,753 |          0 |          0 |    234,473 |          0 |
    load    [$24 + 5], $28              # |  3,594,915 |  3,594,915 |          0 |          0 |          0 |          0 |
    load    [$24 + 5], $29              # |  3,594,915 |  7,514,337 |          0 |    653,237 |          0 |          0 |
    load    [$24 + 1], $30              # |  3,594,915 |  3,929,103 |          0 |          0 |     55,698 |          0 |
    load    [$27 + 0], $27              # |  3,594,915 |  4,846,929 |          0 |          0 |    208,669 |          0 |
    load    [$28 + 1], $28              # |  3,594,915 |  3,902,187 |          0 |          0 |     51,212 |          0 |
    load    [$29 + 2], $29              # |  3,594,915 |  3,969,813 |          0 |          0 |     62,483 |          0 |
    cmp     $30, 1                      # |  3,594,915 |  3,594,915 |          0 |          0 |          0 |          0 |
    fsub    $23, $27, $23               # |  3,594,915 |  3,594,915 |          0 |          0 |          0 |          0 |
    fsub    $25, $28, $25               # |  3,594,915 |  3,594,915 |          0 |          0 |          0 |          0 |
    fsub    $26, $29, $26               # |  3,594,915 |  7,514,397 |          0 |    653,247 |          0 |          0 |
    load    [$22 + $21], $22            # |  3,594,915 |  4,467,447 |          0 |          0 |    145,422 |          0 |
    bne     be_else.36440               # |  3,594,915 |  5,053,695 |          0 |          0 |          0 |    729,390 |
be_then.36440:
    load    [$22 + 0], $29              # |  1,409,409 |  5,403,582 |    971,253 |          0 |    503,820 |          0 |
    load    [min_caml_light_dirvec + 0], $27# |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    load    [$24 + 4], $28              # |  1,409,409 |  1,446,585 |          0 |          0 |      6,196 |          0 |
    fsub    $29, $23, $29               # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    load    [$27 + 1], $30              # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    load    [$22 + 1], $31              # |  1,409,409 |  5,344,635 |          0 |    651,216 |      4,655 |          0 |
    load    [$28 + 1], $28              # |  1,409,409 |  1,534,257 |          0 |          0 |     20,808 |          0 |
    load    [$24 + 4], $32              # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    fmul    $29, $31, $29               # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    load    [$27 + 0], $33              # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    load    [$22 + 2], $34              # |  1,409,409 |  2,234,577 |          0 |          0 |    137,528 |          0 |
    load    [$32 + 0], $31              # |  1,409,409 |  1,534,539 |          0 |          0 |     20,855 |          0 |
    load    [$24 + 4], $35              # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    fmul    $29, $30, $30               # |  1,409,409 |  5,321,889 |          0 |    652,080 |          0 |          0 |
    fsub    $34, $25, $32               # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    load    [$22 + 3], $34              # |  1,409,409 |  1,681,377 |          0 |          0 |     45,328 |          0 |
    load    [$27 + 2], $1               # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    load    [$27 + 0], $4               # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    fadd    $30, $25, $30               # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    fmul    $32, $34, $32               # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    load    [$35 + 2], $34              # |  1,409,409 |  1,439,133 |          0 |          0 |      4,954 |          0 |
    fmul    $29, $1, $35                # |  1,409,409 |  4,059,555 |          0 |    441,691 |          0 |          0 |
    load    [$24 + 4], $1               # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    fabs    $30, $30                    # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    fmul    $32, $33, $33               # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    fcmp    $28, $30                    # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    fadd    $35, $26, $35               # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    load    [$1 + 0], $1                # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    bg      ble_else.36441              # |  1,409,409 |  2,156,053 |          0 |          0 |          0 |    373,322 |
ble_then.36441:
    li      0, $28                      # |    998,347 |  3,198,571 |          0 |    366,704 |          0 |          0 |
.count b_cont
    b       ble_cont.36441              # |    998,347 |  1,003,737 |          0 |          0 |          0 |      2,695 |
ble_else.36441:
    fabs    $35, $28                    # |    411,062 |  1,212,230 |    351,246 |     74,987 |          0 |          0 |
    load    [$22 + 1], $30              # |    411,062 |    411,062 |          0 |          0 |          0 |          0 |
    fcmp    $34, $28                    # |    411,062 |    411,062 |          0 |          0 |          0 |          0 |
    bg      ble_else.36442              # |    411,062 |    978,612 |    411,062 |          0 |          0 |     78,244 |
ble_then.36442:
    li      0, $28                      # |    136,251 |    136,251 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36442              # |    136,251 |    136,893 |          0 |          0 |          0 |        321 |
ble_else.36442:
    fcmp    $30, $zero                  # |    274,811 |    636,725 |          0 |     60,319 |          0 |          0 |
    bne     be_else.36443               # |    274,811 |    549,632 |    274,811 |          0 |          0 |          5 |
be_then.36443:
    li      0, $28
.count b_cont
    b       be_cont.36443
be_else.36443:
    li      1, $28                      # |    274,811 |    274,811 |          0 |          0 |          0 |          0 |
be_cont.36443:
ble_cont.36442:
ble_cont.36441:
    cmp     $28, 0                      # |  1,409,409 |  3,970,580 |    274,811 |    381,060 |          0 |          0 |
    bne     be_else.36444               # |  1,409,409 |  2,834,740 |  1,409,409 |          0 |          0 |      7,961 |
be_then.36444:
    fadd    $33, $23, $28               # |  1,134,598 |  1,134,598 |          0 |          0 |          0 |          0 |
    load    [$22 + 4], $29              # |  1,134,598 |  5,751,952 |          0 |    417,575 |    351,984 |          0 |
    load    [$22 + 5], $30              # |  1,134,598 |  1,422,832 |          0 |          0 |     48,039 |          0 |
    load    [$24 + 4], $33              # |  1,134,598 |  1,134,598 |          0 |          0 |          0 |          0 |
    fsub    $29, $26, $29               # |  1,134,598 |  1,134,598 |          0 |          0 |          0 |          0 |
    fabs    $28, $28                    # |  1,134,598 |  1,134,598 |          0 |          0 |          0 |          0 |
    load    [$33 + 2], $33              # |  1,134,598 |  1,134,598 |          0 |          0 |          0 |          0 |
    fcmp    $31, $28                    # |  1,134,598 |  1,134,598 |          0 |          0 |          0 |          0 |
    bg      ble_else.36445              # |  1,134,598 |  2,856,338 |  1,134,598 |          0 |          0 |    293,571 |
ble_then.36445:
    li      0, $26                      # |    632,414 |  2,017,988 |          0 |    230,929 |          0 |          0 |
.count b_cont
    b       ble_cont.36445              # |    632,414 |    632,420 |          0 |          0 |          0 |          3 |
ble_else.36445:
    load    [$27 + 2], $28              # |    502,184 |  1,622,558 |          0 |    186,729 |          0 |          0 |
    load    [$22 + 3], $31              # |    502,184 |    502,184 |          0 |          0 |          0 |          0 |
    fmul    $32, $28, $28               # |    502,184 |  1,004,368 |    502,184 |          0 |          0 |          0 |
    fadd    $28, $26, $26               # |    502,184 |  2,510,920 |  2,008,736 |          0 |          0 |          0 |
    fabs    $26, $26                    # |    502,184 |  2,510,920 |  2,008,736 |          0 |          0 |          0 |
    fcmp    $33, $26                    # |    502,184 |  1,004,368 |    502,184 |          0 |          0 |          0 |
    bg      ble_else.36446              # |    502,184 |  2,490,888 |    251,356 |    250,828 |          0 |    116,190 |
ble_then.36446:
    li      0, $26                      # |    138,902 |    138,902 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36446              # |    138,902 |    138,908 |          0 |          0 |          0 |          3 |
ble_else.36446:
    fcmp    $31, $zero                  # |    363,282 |    363,282 |          0 |          0 |          0 |          0 |
    bne     be_else.36447               # |    363,282 |    726,572 |    363,282 |          0 |          0 |          4 |
be_then.36447:
    li      0, $26
.count b_cont
    b       be_cont.36447
be_else.36447:
    li      1, $26                      # |    363,282 |    363,282 |          0 |          0 |          0 |          0 |
be_cont.36447:
ble_cont.36446:
ble_cont.36445:
    cmp     $26, 0                      # |  1,134,598 |  3,861,310 |    220,764 |    417,658 |          0 |          0 |
    bne     be_else.36448               # |  1,134,598 |  2,269,762 |  1,134,598 |          0 |          0 |        283 |
be_then.36448:
    fmul    $29, $30, $26               # |    771,316 |    771,316 |          0 |          0 |          0 |          0 |
    load    [$24 + 4], $24              # |    771,316 |    771,316 |          0 |          0 |          0 |          0 |
    load    [$27 + 1], $27              # |    771,316 |    771,316 |          0 |          0 |          0 |          0 |
    load    [$22 + 5], $22              # |    771,316 |    771,316 |          0 |          0 |          0 |          0 |
    load    [$24 + 1], $24              # |    771,316 |    771,316 |          0 |          0 |          0 |          0 |
    fmul    $26, $4, $28                # |    771,316 |    771,316 |          0 |          0 |          0 |          0 |
    fmul    $26, $27, $27               # |    771,316 |  2,616,964 |          0 |    307,608 |          0 |          0 |
    fadd    $28, $23, $23               # |    771,316 |  2,162,440 |  1,391,124 |          0 |          0 |          0 |
    fadd    $27, $25, $25               # |    771,316 |  1,694,140 |    922,824 |          0 |          0 |          0 |
    fabs    $23, $23                    # |    771,316 |  2,162,440 |  1,391,124 |          0 |          0 |          0 |
    fabs    $25, $25                    # |    771,316 |  1,694,140 |    922,824 |          0 |          0 |          0 |
    fcmp    $1, $23                     # |    771,316 |    771,316 |          0 |          0 |          0 |          0 |
    bg      ble_else.36449              # |    771,316 |  1,751,910 |    771,316 |          0 |          0 |    104,639 |
ble_then.36449:
    li      0, $22                      # |    642,019 |    642,019 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36440               # |    642,019 |  2,213,015 |          0 |    260,216 |          0 |      4,850 |
ble_else.36449:
    fcmp    $24, $25                    # |    129,297 |    413,625 |          0 |     47,388 |          0 |          0 |
    bg      ble_else.36450              # |    129,297 |    289,092 |    129,297 |          0 |          0 |     15,249 |
ble_then.36450:
    li      0, $22                      # |     78,455 |     78,455 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36440               # |     78,455 |     78,467 |          0 |          0 |          0 |          6 |
ble_else.36450:
    fcmp    $22, $zero                  # |     50,842 |     50,842 |          0 |          0 |          0 |          0 |
    bne     be_else.36451               # |     50,842 |    101,692 |     50,842 |          0 |          0 |          4 |
be_then.36451:
    li      0, $22
.count b_cont
    b       be_cont.36440
be_else.36451:
.count move_float
    mov     $26, $42                    # |     50,842 |    214,552 |          0 |     27,285 |          0 |          0 |
    li      3, $22                      # |     50,842 |     50,842 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36440               # |     50,842 |     50,850 |          0 |          0 |          0 |          4 |
be_else.36448:
.count move_float
    mov     $32, $42                    # |    363,282 |  1,252,032 |          0 |    148,125 |          0 |          0 |
    li      2, $22                      # |    363,282 |    363,282 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36440               # |    363,282 |    363,286 |          0 |          0 |          0 |          2 |
be_else.36444:
.count move_float
    mov     $29, $42                    # |    274,811 |  1,053,053 |          0 |    129,707 |          0 |          0 |
    li      1, $22                      # |    274,811 |  1,046,321 |          0 |    128,585 |          0 |          0 |
.count b_cont
    b       be_cont.36440               # |    274,811 |    274,817 |          0 |          0 |          0 |          3 |
be_else.36440:
    cmp     $30, 2                      # |  2,185,506 |  4,061,394 |          0 |    312,648 |          0 |          0 |
    bne     be_else.36452               # |  2,185,506 |  4,386,304 |  2,185,506 |          0 |          0 |      7,646 |
be_then.36452:
    load    [$22 + 0], $24              # |    566,355 |    799,479 |          0 |          0 |     38,854 |          0 |
    load    [$22 + 1], $27              # |    566,355 |    569,967 |          0 |          0 |        602 |          0 |
    load    [$22 + 2], $28              # |    566,355 |    624,873 |          0 |          0 |      9,753 |          0 |
    fcmp    $zero, $24                  # |    566,355 |    566,355 |          0 |          0 |          0 |          0 |
    bg      ble_else.36453              # |    566,355 |  1,133,884 |    566,247 |        108 |          0 |        317 |
ble_then.36453:
    li      0, $22                      # |     11,416 |     11,416 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36452               # |     11,416 |     11,416 |          0 |          0 |          0 |          0 |
ble_else.36453:
    fmul    $27, $23, $23               # |    554,939 |    554,939 |          0 |          0 |          0 |          0 |
    fmul    $28, $25, $24               # |    554,939 |    554,939 |          0 |          0 |          0 |          0 |
    load    [$22 + 3], $22              # |    554,939 |    592,691 |          0 |          0 |      6,292 |          0 |
    fmul    $22, $26, $22               # |    554,939 |  1,652,233 |  1,097,294 |          0 |          0 |          0 |
    fadd    $23, $24, $23               # |    554,939 |    554,939 |          0 |          0 |          0 |          0 |
    fadd    $23, $22, $22               # |    554,939 |  2,802,811 |  2,163,524 |     14,058 |          0 |          0 |
.count move_float
    mov     $22, $42                    # |    554,939 |  2,774,695 |  2,219,756 |          0 |          0 |          0 |
    li      1, $22                      # |    554,939 |    554,939 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36452               # |    554,939 |    554,943 |          0 |          0 |          0 |          2 |
be_else.36452:
    load    [$22 + 0], $27              # |  1,619,151 |  8,035,899 |          0 |      4,743 |  1,064,715 |          0 |
    load    [$22 + 1], $28              # |  1,619,151 |  1,783,545 |          0 |          0 |     27,399 |          0 |
    load    [$22 + 2], $29              # |  1,619,151 |  1,718,349 |          0 |          0 |     16,533 |          0 |
    fcmp    $27, $zero                  # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    bne     be_else.36454               # |  1,619,151 |  6,413,514 |    985,211 |    633,940 |          0 |      2,756 |
be_then.36454:
    li      0, $22
.count b_cont
    b       be_cont.36454
be_else.36454:
    fmul    $28, $23, $28               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    fmul    $29, $25, $29               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    load    [$22 + 3], $31              # |  1,619,151 |  1,864,575 |          0 |          0 |     40,904 |          0 |
    fmul    $23, $23, $32               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    load    [$24 + 4], $33              # |  1,619,151 |  1,673,511 |          0 |          0 |      9,060 |          0 |
    load    [$24 + 4], $34              # |  1,619,151 |  5,422,791 |          0 |    633,940 |          0 |          0 |
    fadd    $28, $29, $28               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    fmul    $31, $26, $29               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    fmul    $25, $25, $31               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    load    [$33 + 0], $33              # |  1,619,151 |  2,021,259 |          0 |          0 |     67,018 |          0 |
    load    [$34 + 1], $34              # |  1,619,151 |  1,898,145 |          0 |          0 |     46,499 |          0 |
    fmul    $26, $26, $35               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    fadd    $28, $29, $28               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    load    [$24 + 4], $29              # |  1,619,151 |  5,422,791 |          0 |    633,940 |          0 |          0 |
    fmul    $32, $33, $32               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    fmul    $31, $34, $31               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    load    [$29 + 2], $29              # |  1,619,151 |  1,717,149 |          0 |          0 |     16,333 |          0 |
    fmul    $28, $28, $33               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    load    [$24 + 3], $34              # |  1,619,151 |  1,756,425 |          0 |          0 |     22,879 |          0 |
    fmul    $35, $29, $29               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    fadd    $32, $31, $31               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    load    [$24 + 6], $32              # |  1,619,151 |  5,425,569 |          0 |    633,940 |        463 |          0 |
    fmul    $25, $26, $35               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    cmp     $34, 0                      # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    load    [$24 + 9], $1               # |  1,619,151 |  2,017,959 |          0 |          0 |     66,468 |          0 |
    fmul    $26, $23, $26               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    fadd    $31, $29, $29               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    bne     be_else.36455               # |  1,619,151 |  1,623,179 |          0 |          0 |          0 |      2,014 |
be_then.36455:
    mov     $29, $23                    # |  1,619,151 |  6,472,576 |  4,853,425 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36455               # |  1,619,151 |  5,464,607 |          0 |    633,940 |          0 |     20,908 |
be_else.36455:
    load    [$1 + 0], $31
    load    [$24 + 9], $34
    fmul    $23, $25, $23
    fmul    $35, $31, $25
    load    [$34 + 1], $31
    load    [$24 + 9], $24
    fmul    $26, $31, $26
    fadd    $29, $25, $25
    load    [$24 + 2], $24
    fmul    $23, $24, $23
    fadd    $25, $26, $24
    fadd    $24, $23, $23
be_cont.36455:
    cmp     $30, 3                      # |  1,619,151 |  5,422,791 |          0 |    633,940 |          0 |          0 |
    bne     be_cont.36456               # |  1,619,151 |  3,250,864 |  1,619,151 |          0 |          0 |      6,281 |
be_then.36456:
    fsub    $23, $36, $23               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
be_cont.36456:
    fmul    $27, $23, $23               # |  1,619,151 |  8,133,083 |  6,401,948 |     18,664 |          0 |          0 |
    load    [$22 + 4], $24              # |  1,619,151 |  4,539,231 |          0 |          0 |    486,680 |          0 |
    load    [$22 + 4], $22              # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    fsub    $33, $23, $23               # |  1,619,151 |  3,884,093 |  2,264,942 |          0 |          0 |          0 |
    fcmp    $23, $zero                  # |  1,619,151 |  8,095,755 |  6,476,604 |          0 |          0 |          0 |
    bg      ble_else.36457              # |  1,619,151 |  3,804,130 |  1,619,151 |          0 |          0 |    282,914 |
ble_then.36457:
    li      0, $22                      # |  1,270,619 |  1,270,619 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36457              # |  1,270,619 |  1,270,623 |          0 |          0 |          0 |          2 |
ble_else.36457:
    cmp     $32, 0                      # |    348,532 |  1,142,236 |          0 |    132,284 |          0 |          0 |
    bne     be_else.36458               # |    348,532 |    850,526 |    348,532 |          0 |          0 |     76,731 |
be_then.36458:
    fsqrt   $23, $22                    # |    278,489 |    278,489 |          0 |          0 |          0 |          0 |
    fsub    $28, $22, $22               # |    278,489 |  1,392,445 |  1,113,956 |          0 |          0 |          0 |
    fmul    $22, $24, $22               # |    278,489 |  1,392,445 |  1,113,956 |          0 |          0 |          0 |
.count move_float
    mov     $22, $42                    # |    278,489 |  1,392,445 |  1,113,956 |          0 |          0 |          0 |
    li      1, $22                      # |    278,489 |    278,489 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36458               # |    278,489 |    278,493 |          0 |          0 |          0 |          2 |
be_else.36458:
    fsqrt   $23, $23                    # |     70,043 |     70,043 |          0 |          0 |          0 |          0 |
    fadd    $28, $23, $23               # |     70,043 |    350,215 |    280,172 |          0 |          0 |          0 |
    fmul    $23, $22, $22               # |     70,043 |    350,215 |    280,172 |          0 |          0 |          0 |
.count move_float
    mov     $22, $42                    # |     70,043 |    350,215 |    280,172 |          0 |          0 |          0 |
    li      1, $22                      # |     70,043 |     70,043 |          0 |          0 |          0 |          0 |
be_cont.36458:
ble_cont.36457:
be_cont.36454:
be_cont.36452:
be_cont.36440:
    cmp     $22, 0                      # |  3,594,915 |  7,673,222 |     70,043 |    668,044 |          0 |          0 |
    bne     be_else.36459               # |  3,594,915 |  7,195,356 |  3,594,915 |          0 |          0 |      2,763 |
be_then.36459:
    li      0, $22                      # |  2,002,509 |  2,002,509 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36459               # |  2,002,509 |  2,623,271 |          0 |     98,939 |          0 |     13,564 |
be_else.36459:
.count load_float
    load    [f.31948], $22              # |  1,592,406 |  5,678,586 |          0 |    569,105 |    111,925 |          0 |
    fcmp    $22, $42                    # |  1,592,406 |  4,553,368 |  2,960,962 |          0 |          0 |          0 |
    bg      ble_else.36460              # |  1,592,406 |  3,480,998 |  1,592,406 |          0 |          0 |    148,093 |
ble_then.36460:
    li      0, $22                      # |  1,029,338 |  1,029,338 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36460              # |  1,029,338 |  1,033,100 |          0 |          0 |          0 |      1,881 |
ble_else.36460:
    li      1, $22                      # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
ble_cont.36460:
be_cont.36459:
    cmp     $22, 0                      # |  3,594,915 |  4,157,983 |    563,068 |          0 |          0 |          0 |
    bne     be_else.36461               # |  3,594,915 |  7,568,013 |  3,579,604 |     15,311 |          0 |    150,814 |
be_then.36461:
    load    [min_caml_objects + $21], $1# |  3,031,847 |  3,031,847 |          0 |          0 |          0 |          0 |
    add     $2, 1, $2                   # |  3,031,847 |  3,031,847 |          0 |          0 |          0 |          0 |
    load    [$1 + 6], $1                # |  3,031,847 |  6,090,184 |  3,031,847 |          0 |      4,415 |          0 |
    cmp     $1, 0                       # |  3,031,847 |  9,086,711 |  6,054,864 |          0 |          0 |          0 |
    bne     shadow_check_and_group.2862 # |  3,031,847 |  6,076,744 |  3,031,847 |          0 |          0 |      6,525 |
    li      0, $1                       # |  2,406,042 |  2,406,042 |          0 |          0 |          0 |          0 |
    ret                                 # |  2,406,042 |  2,406,042 |          0 |          0 |          0 |          0 |
be_else.36461:
    load    [$3 + 0], $21               # |    563,068 |    612,406 |          0 |      8,223 |          0 |          0 |
.count load_float
    load    [f.31949], $22              # |    563,068 |  1,162,060 |          0 |          0 |     99,832 |          0 |
    cmp     $21, -1                     # |    563,068 |  1,026,304 |    463,236 |          0 |          0 |          0 |
    bne     be_else.36463               # |    563,068 |  1,180,140 |    563,068 |          0 |          0 |     27,002 |
be_then.36463:
    li      1, $1
    ret
be_else.36463:
    fadd    $42, $22, $22               # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [min_caml_objects + $21], $21# |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 0], $23# |    563,068 |    611,638 |          0 |      8,095 |          0 |          0 |
    load    [min_caml_intersection_point + 1], $29# |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [$21 + 5], $24              # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [$21 + 5], $25              # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [$21 + 5], $26              # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [$21 + 1], $27              # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [$24 + 0], $24              # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    fmul    $55, $22, $28               # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [$25 + 1], $25              # |    563,068 |    611,638 |          0 |      8,095 |          0 |          0 |
    load    [$26 + 2], $26              # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    cmp     $27, 1                      # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    fadd    $28, $23, $4                # |    563,068 |  1,118,041 |    554,973 |          0 |          0 |          0 |
    fmul    $56, $22, $23               # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    fmul    $57, $22, $22               # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $28# |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    fsub    $4, $24, $24                # |    563,068 |  1,126,136 |    563,068 |          0 |          0 |          0 |
    fadd    $23, $29, $5                # |    563,068 |    611,638 |          0 |      8,095 |          0 |          0 |
    fadd    $22, $28, $6                # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    li      1, $22                      # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    add     $2, 1, $23                  # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [$21 + 4], $28              # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    fsub    $5, $25, $25                # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    fsub    $6, $26, $26                # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    bne     be_else.36464               # |    563,068 |    599,504 |          0 |          0 |          0 |     18,218 |
be_then.36464:
    load    [$28 + 0], $27              # |    541,392 |    588,246 |          0 |      7,809 |          0 |          0 |
    fabs    $24, $24                    # |    541,392 |    541,392 |          0 |          0 |          0 |          0 |
    load    [$21 + 6], $28              # |    541,392 |    573,738 |          0 |          0 |      5,391 |          0 |
    fcmp    $27, $24                    # |    541,392 |    541,392 |          0 |          0 |          0 |          0 |
    bg      ble_else.36465              # |    541,392 |  1,161,052 |    541,392 |          0 |          0 |     39,134 |
ble_then.36465:
    cmp     $28, 0                      # |     56,355 |     56,355 |          0 |          0 |          0 |          0 |
    bne     be_else.36466               # |     56,355 |    112,710 |     56,355 |          0 |          0 |          0 |
be_then.36466:
    li      1, $21                      # |     56,355 |     56,355 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36464               # |     56,355 |     57,013 |          0 |          0 |          0 |        329 |
be_else.36466:
    li      0, $21
.count b_cont
    b       be_cont.36464
ble_else.36465:
    load    [$21 + 4], $24              # |    485,037 |    532,689 |          0 |      7,942 |          0 |          0 |
    fabs    $25, $25                    # |    485,037 |    485,037 |          0 |          0 |          0 |          0 |
    load    [$21 + 6], $27              # |    485,037 |    485,037 |          0 |          0 |          0 |          0 |
    load    [$24 + 1], $24              # |    485,037 |    485,037 |          0 |          0 |          0 |          0 |
    load    [$21 + 4], $28              # |    485,037 |    485,037 |          0 |          0 |          0 |          0 |
    fabs    $26, $26                    # |    485,037 |    532,065 |          0 |      7,838 |          0 |          0 |
    fcmp    $24, $25                    # |    485,037 |    485,037 |          0 |          0 |          0 |          0 |
    bg      ble_else.36467              # |    485,037 |  1,272,216 |    485,037 |          0 |          0 |    151,071 |
ble_then.36467:
    cmp     $27, 0                      # |      5,586 |      5,586 |          0 |          0 |          0 |          0 |
    bne     be_else.36468               # |      5,586 |     11,172 |      5,586 |          0 |          0 |          0 |
be_then.36468:
    li      1, $21                      # |      5,586 |      5,586 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36464               # |      5,586 |      6,312 |          0 |          0 |          0 |        363 |
be_else.36468:
    li      0, $21
.count b_cont
    b       be_cont.36464
ble_else.36467:
    load    [$28 + 2], $24              # |    479,451 |    526,329 |          0 |      7,813 |          0 |          0 |
    load    [$21 + 6], $25              # |    479,451 |    479,451 |          0 |          0 |          0 |          0 |
    load    [$21 + 6], $21              # |    479,451 |    479,451 |          0 |          0 |          0 |          0 |
    fcmp    $24, $26                    # |    479,451 |    479,451 |          0 |          0 |          0 |          0 |
    bg      be_cont.36464               # |    479,451 |    964,050 |    479,451 |          0 |          0 |      2,574 |
ble_then.36469:
    cmp     $25, 0                      # |      2,205 |      2,205 |          0 |          0 |          0 |          0 |
    bne     be_else.36470               # |      2,205 |      4,410 |      2,205 |          0 |          0 |          0 |
be_then.36470:
    li      1, $21                      # |      2,205 |      3,855 |          0 |        275 |          0 |          0 |
.count b_cont
    b       be_cont.36464               # |      2,205 |      2,207 |          0 |          0 |          0 |          1 |
be_else.36470:
    li      0, $21
.count b_cont
    b       be_cont.36464
be_else.36464:
    cmp     $27, 2                      # |     21,676 |     39,238 |          0 |      2,927 |          0 |          0 |
    bne     be_else.36471               # |     21,676 |     43,356 |     21,676 |          0 |          0 |          2 |
be_then.36471:
    load    [$21 + 6], $27
    load    [$21 + 4], $21
    load    [$21 + 0], $28
    load    [$21 + 1], $29
    load    [$21 + 2], $21
    fmul    $28, $24, $24
    fmul    $29, $25, $25
    fmul    $21, $26, $21
    fadd    $24, $25, $24
    fadd    $24, $21, $21
    fcmp    $zero, $21
    bg      ble_else.36472
ble_then.36472:
    cmp     $27, 0
    bne     be_else.36473
be_then.36473:
    li      1, $21
.count b_cont
    b       be_cont.36471
be_else.36473:
    li      0, $21
.count b_cont
    b       be_cont.36471
ble_else.36472:
    cmp     $27, 0
    bne     be_else.36474
be_then.36474:
    li      0, $21
.count b_cont
    b       be_cont.36471
be_else.36474:
    li      1, $21
.count b_cont
    b       be_cont.36471
be_else.36471:
    load    [$21 + 6], $28              # |     21,676 |     22,708 |          0 |        172 |          0 |          0 |
    fmul    $24, $24, $29               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    load    [$21 + 4], $30              # |     21,676 |     22,414 |          0 |        123 |          0 |          0 |
    load    [$21 + 4], $31              # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    fmul    $25, $25, $32               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    load    [$30 + 0], $30              # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    load    [$31 + 1], $31              # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    fmul    $26, $26, $33               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    fmul    $29, $30, $29               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    fmul    $32, $31, $30               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    load    [$21 + 4], $31              # |     21,676 |     22,414 |          0 |        123 |          0 |          0 |
    load    [$21 + 3], $32              # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    fmul    $25, $26, $34               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    load    [$31 + 2], $31              # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    fadd    $29, $30, $29               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    load    [$21 + 9], $30              # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    fmul    $33, $31, $31               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    fmul    $26, $24, $26               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    load    [$30 + 0], $30              # |     21,676 |    139,924 |          0 |     12,606 |      7,102 |          0 |
    cmp     $32, 0                      # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    load    [$21 + 9], $33              # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    fmul    $24, $25, $24               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    fadd    $29, $31, $25               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    bne     be_else.36475               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
be_then.36475:
    mov     $25, $21                    # |     21,676 |     86,704 |     65,028 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36475               # |     21,676 |     21,680 |          0 |          0 |          0 |          2 |
be_else.36475:
    fmul    $34, $30, $29
    load    [$33 + 1], $30
    load    [$21 + 9], $21
    fmul    $26, $30, $26
    fadd    $25, $29, $25
    load    [$21 + 2], $21
    fmul    $24, $21, $21
    fadd    $25, $26, $24
    fadd    $24, $21, $21
be_cont.36475:
    cmp     $27, 3                      # |     21,676 |     97,312 |          0 |     12,606 |          0 |          0 |
    bne     be_cont.36476               # |     21,676 |     43,352 |     21,676 |          0 |          0 |          0 |
be_then.36476:
    fsub    $21, $36, $21               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
be_cont.36476:
    fcmp    $zero, $21                  # |     21,676 |    108,380 |     86,704 |          0 |          0 |          0 |
    bg      ble_else.36477              # |     21,676 |     43,356 |     21,676 |          0 |          0 |          2 |
ble_then.36477:
    cmp     $28, 0
    bne     be_else.36478
be_then.36478:
    li      1, $21
.count b_cont
    b       ble_cont.36477
be_else.36478:
    li      0, $21
.count b_cont
    b       ble_cont.36477
ble_else.36477:
    cmp     $28, 0                      # |     21,676 |     52,576 |          0 |      5,150 |          0 |          0 |
    bne     be_else.36479               # |     21,676 |     43,734 |     21,676 |          0 |          0 |        191 |
be_then.36479:
    li      0, $21                      # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36479               # |     21,676 |     21,680 |          0 |          0 |          0 |          2 |
be_else.36479:
    li      1, $21
be_cont.36479:
ble_cont.36477:
be_cont.36471:
be_cont.36464:
    cmp     $21, 0                      # |    563,068 |    776,926 |          0 |     35,643 |          0 |          0 |
    bne     be_else.36480               # |    563,068 |  1,420,134 |    563,068 |          0 |          0 |    146,999 |
be_then.36480:
.count stack_move
    sub     $sp, 2, $sp                 # |    498,922 |    498,922 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |    498,922 |    997,844 |    498,922 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |    498,922 |    498,922 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $22, $2                     # |    498,922 |    498,922 |          0 |          0 |          0 |          0 |
    call    check_all_inside.2856       # |    498,922 |    498,922 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    498,922 |    712,756 |          0 |     35,639 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |    498,922 |    498,922 |          0 |          0 |          0 |          0 |
    bne     be_else.36481               # |    498,922 |    498,938 |          0 |          0 |          0 |          8 |
be_then.36481:
.count stack_load
    load    [$sp - 1], $1               # |    262,860 |    310,884 |          0 |          0 |      8,004 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |    262,860 |    296,466 |          0 |          0 |      5,601 |          0 |
    add     $1, 1, $2                   # |    262,860 |    517,101 |    254,241 |          0 |          0 |          0 |
    b       shadow_check_and_group.2862 # |    262,860 |    264,150 |          0 |          0 |          0 |        645 |
be_else.36481:
    li      1, $1                       # |    236,062 |    236,062 |          0 |          0 |          0 |          0 |
    ret                                 # |    236,062 |    273,394 |          0 |      6,222 |          0 |          0 |
be_else.36480:
.count move_args
    mov     $23, $2                     # |     64,146 |     86,274 |          0 |      3,688 |          0 |          0 |
    b       shadow_check_and_group.2862 # |     64,146 |     64,152 |          0 |          0 |          0 |          3 |
.end shadow_check_and_group

######################################################################
.begin shadow_check_one_or_group
shadow_check_one_or_group.2865:
    load    [$3 + $2], $1               # |    223,481 |    583,257 |    119,092 |     39,750 |        364 |          0 |
    li      0, $4                       # |    223,481 |    223,481 |          0 |          0 |          0 |          0 |
    cmp     $1, -1                      # |    223,481 |    446,598 |    223,117 |          0 |          0 |          0 |
    bne     be_else.36482               # |    223,481 |    469,266 |    223,481 |          0 |          0 |     11,152 |
be_then.36482:
    li      0, $1
    ret
be_else.36482:
.count stack_move
    sub     $sp, 9, $sp                 # |    223,481 |  1,104,773 |          0 |    146,882 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |    223,481 |    446,962 |    223,481 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |    223,481 |    223,481 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $1], $3 # |    223,481 |    223,577 |          0 |          0 |         16 |          0 |
.count move_args
    mov     $4, $2                      # |    223,481 |    223,481 |          0 |          0 |          0 |          0 |
    call    shadow_check_and_group.2862 # |    223,481 |    223,481 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    223,481 |    223,481 |          0 |          0 |          0 |          0 |
    bne     be_else.36483               # |    223,481 |    474,119 |    220,120 |      3,361 |          0 |      5,176 |
be_then.36483:
.count stack_load
    load    [$sp + 1], $1               # |    113,403 |    161,847 |          0 |          0 |      8,074 |          0 |
    li      0, $2                       # |    113,403 |    113,403 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $3               # |    113,403 |    162,603 |          0 |          0 |      8,200 |          0 |
    add     $1, 1, $1                   # |    113,403 |    113,403 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |    113,403 |    236,412 |    113,403 |          0 |      1,601 |          0 |
    cmp     $4, -1                      # |    113,403 |    337,007 |    223,604 |          0 |          0 |          0 |
    bne     be_else.36484               # |    113,403 |    226,826 |    113,403 |          0 |          0 |         10 |
be_then.36484:
.count stack_move
    add     $sp, 9, $sp
    li      0, $1
    ret
be_else.36484:
.count stack_store
    store   $1, [$sp + 2]               # |    113,403 |    616,839 |          0 |     83,906 |          0 |          0 |
    load    [min_caml_and_net + $4], $3 # |    113,403 |    113,481 |          0 |          0 |         13 |          0 |
    call    shadow_check_and_group.2862 # |    113,403 |    113,403 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    113,403 |    113,403 |          0 |          0 |          0 |          0 |
    bne     be_else.36485               # |    113,403 |    302,310 |    113,403 |          0 |          0 |     37,752 |
be_then.36485:
.count stack_load
    load    [$sp + 2], $1               # |    106,755 |    116,343 |          0 |      1,230 |        368 |          0 |
    li      0, $2                       # |    106,755 |    106,755 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $3               # |    106,755 |    106,755 |          0 |          0 |          0 |          0 |
    add     $1, 1, $1                   # |    106,755 |    106,755 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |    106,755 |    219,336 |    106,755 |          0 |        971 |          0 |
    cmp     $4, -1                      # |    106,755 |    318,323 |    211,568 |          0 |          0 |          0 |
    bne     be_else.36486               # |    106,755 |    241,308 |    106,755 |          0 |          0 |     13,899 |
be_then.36486:
.count stack_move
    add     $sp, 9, $sp                 # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    li      0, $1                       # |     10,334 |     10,556 |          0 |         37 |          0 |          0 |
    ret                                 # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
be_else.36486:
.count stack_store
    store   $1, [$sp + 3]               # |     96,421 |    102,655 |          0 |      1,039 |          0 |          0 |
    load    [min_caml_and_net + $4], $3 # |     96,421 |    106,285 |          0 |          0 |      1,644 |          0 |
    call    shadow_check_and_group.2862 # |     96,421 |     96,421 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |     96,421 |     96,421 |          0 |          0 |          0 |          0 |
    bne     be_else.36487               # |     96,421 |    203,708 |     96,421 |          0 |          0 |      5,433 |
be_then.36487:
.count stack_load
    load    [$sp + 3], $1               # |     94,249 |     97,447 |          0 |          0 |        533 |          0 |
    li      0, $2                       # |     94,249 |     97,183 |          0 |        489 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $3               # |     94,249 |     94,249 |          0 |          0 |          0 |          0 |
    add     $1, 1, $1                   # |     94,249 |     94,249 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |     94,249 |    194,774 |     94,249 |          0 |      1,046 |          0 |
    cmp     $4, -1                      # |     94,249 |    280,655 |    186,406 |          0 |          0 |          0 |
    bne     be_else.36488               # |     94,249 |    188,518 |     94,249 |          0 |          0 |         10 |
be_then.36488:
.count stack_move
    add     $sp, 9, $sp
    li      0, $1
    ret
be_else.36488:
.count stack_store
    store   $1, [$sp + 4]               # |     94,249 |     97,183 |          0 |        489 |          0 |          0 |
    load    [min_caml_and_net + $4], $3 # |     94,249 |     94,639 |          0 |          0 |         65 |          0 |
    call    shadow_check_and_group.2862 # |     94,249 |     94,249 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |     94,249 |     94,249 |          0 |          0 |          0 |          0 |
    bne     be_else.36489               # |     94,249 |    225,944 |     94,249 |          0 |          0 |     18,723 |
be_then.36489:
.count stack_load
    load    [$sp + 4], $1               # |     82,757 |     82,943 |          0 |          0 |         31 |          0 |
    li      0, $2                       # |     82,757 |     82,757 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $3               # |     82,757 |    488,333 |          0 |     67,596 |          0 |          0 |
    add     $1, 1, $1                   # |     82,757 |     82,757 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |     82,757 |    166,552 |     82,757 |          0 |        173 |          0 |
    cmp     $4, -1                      # |     82,757 |    247,925 |    165,168 |          0 |          0 |          0 |
    bne     be_else.36490               # |     82,757 |    165,514 |     82,757 |          0 |          0 |          0 |
be_then.36490:
.count stack_move
    add     $sp, 9, $sp                 # |     82,757 |     82,757 |          0 |          0 |          0 |          0 |
    li      0, $1                       # |     82,757 |     82,757 |          0 |          0 |          0 |          0 |
    ret                                 # |     82,757 |     82,757 |          0 |          0 |          0 |          0 |
be_else.36490:
.count stack_store
    store   $1, [$sp + 5]
    load    [min_caml_and_net + $4], $3
    call    shadow_check_and_group.2862
    cmp     $1, 0
    bne     be_else.36491
be_then.36491:
.count stack_load
    load    [$sp + 5], $1
    li      0, $2
.count stack_load
    load    [$sp + 0], $3
    add     $1, 1, $1
    load    [$3 + $1], $4
    cmp     $4, -1
    bne     be_else.36492
be_then.36492:
.count stack_move
    add     $sp, 9, $sp
    li      0, $1
    ret
be_else.36492:
.count stack_store
    store   $1, [$sp + 6]
    load    [min_caml_and_net + $4], $3
    call    shadow_check_and_group.2862
    cmp     $1, 0
    bne     be_else.36493
be_then.36493:
.count stack_load
    load    [$sp + 6], $1
    li      0, $2
.count stack_load
    load    [$sp + 0], $3
    add     $1, 1, $1
    load    [$3 + $1], $4
    cmp     $4, -1
    bne     be_else.36494
be_then.36494:
.count stack_move
    add     $sp, 9, $sp
    li      0, $1
    ret
be_else.36494:
.count stack_store
    store   $1, [$sp + 7]
    load    [min_caml_and_net + $4], $3
    call    shadow_check_and_group.2862
    cmp     $1, 0
    bne     be_else.36495
be_then.36495:
.count stack_load
    load    [$sp + 7], $1
    li      0, $2
.count stack_load
    load    [$sp + 0], $3
    add     $1, 1, $1
    load    [$3 + $1], $4
    cmp     $4, -1
    bne     be_else.36496
be_then.36496:
.count stack_move
    add     $sp, 9, $sp
    li      0, $1
    ret
be_else.36496:
.count stack_store
    store   $1, [$sp + 8]
    load    [min_caml_and_net + $4], $3
    call    shadow_check_and_group.2862
    cmp     $1, 0
.count stack_move
    add     $sp, 9, $sp
    bne     be_else.36497
be_then.36497:
.count stack_load
    load    [$sp - 1], $1
.count stack_load
    load    [$sp - 9], $3
    add     $1, 1, $2
    b       shadow_check_one_or_group.2865
be_else.36497:
    li      1, $1
    ret
be_else.36495:
.count stack_move
    add     $sp, 9, $sp
    li      1, $1
    ret
be_else.36493:
.count stack_move
    add     $sp, 9, $sp
    li      1, $1
    ret
be_else.36491:
.count stack_move
    add     $sp, 9, $sp
    li      1, $1
    ret
be_else.36489:
.count stack_move
    add     $sp, 9, $sp                 # |     11,492 |     45,968 |          0 |      5,746 |          0 |          0 |
    li      1, $1                       # |     11,492 |     11,492 |          0 |          0 |          0 |          0 |
    ret                                 # |     11,492 |     11,492 |          0 |          0 |          0 |          0 |
be_else.36487:
.count stack_move
    add     $sp, 9, $sp                 # |      2,172 |      8,688 |          0 |      1,086 |          0 |          0 |
    li      1, $1                       # |      2,172 |      2,172 |          0 |          0 |          0 |          0 |
    ret                                 # |      2,172 |      2,172 |          0 |          0 |          0 |          0 |
be_else.36485:
.count stack_move
    add     $sp, 9, $sp                 # |      6,648 |      6,732 |          0 |         14 |          0 |          0 |
    li      1, $1                       # |      6,648 |      6,648 |          0 |          0 |          0 |          0 |
    ret                                 # |      6,648 |      6,648 |          0 |          0 |          0 |          0 |
be_else.36483:
.count stack_move
    add     $sp, 9, $sp                 # |    110,078 |    194,768 |          0 |     14,115 |          0 |          0 |
    li      1, $1                       # |    110,078 |    110,078 |          0 |          0 |          0 |          0 |
    ret                                 # |    110,078 |    110,078 |          0 |          0 |          0 |          0 |
.end shadow_check_one_or_group

######################################################################
.begin shadow_check_one_or_matrix
shadow_check_one_or_matrix.2868:
    load    [$3 + $2], $17              # |    565,273 |  3,512,305 |          0 |    486,448 |      4,724 |          0 |
    load    [min_caml_intersection_point + 0], $18# |    565,273 |    565,273 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 1], $19# |    565,273 |  3,759,991 |          0 |    532,453 |          0 |          0 |
    load    [$17 + 0], $20              # |    565,273 |    652,795 |          0 |          0 |     14,587 |          0 |
    load    [min_caml_intersection_point + 2], $21# |    565,273 |    565,273 |          0 |          0 |          0 |          0 |
    load    [min_caml_light_dirvec + 1], $22# |    565,273 |    565,273 |          0 |          0 |          0 |          0 |
    cmp     $20, -1                     # |    565,273 |    565,273 |          0 |          0 |          0 |          0 |
    bne     be_else.36498               # |    565,273 |  1,181,132 |    565,273 |          0 |          0 |     25,293 |
be_then.36498:
    li      0, $1                       # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    ret                                 # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
be_else.36498:
.count stack_move
    sub     $sp, 7, $sp                 # |    554,939 |  3,528,935 |          0 |    495,666 |          0 |          0 |
    cmp     $20, 99                     # |    554,939 |    554,939 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $17, [$sp + 0]              # |    554,939 |    554,939 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |    554,939 |    554,939 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |    554,939 |    554,939 |          0 |          0 |          0 |          0 |
    bne     be_else.36499               # |    554,939 |    555,323 |          0 |          0 |          0 |        192 |
be_then.36499:
    li      1, $17                      # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36499               # |    544,605 |    544,621 |          0 |          0 |          0 |          8 |
be_else.36499:
    load    [min_caml_objects + $20], $23# |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    load    [$22 + $20], $20            # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [min_caml_light_dirvec + 0], $22# |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$23 + 5], $24              # |     10,334 |     24,074 |          0 |          0 |      2,290 |          0 |
    load    [$23 + 5], $25              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$23 + 5], $26              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$24 + 0], $24              # |     10,334 |     26,558 |          0 |          0 |      2,704 |          0 |
    load    [$25 + 1], $25              # |     10,334 |     18,626 |          0 |          0 |      1,382 |          0 |
    load    [$26 + 2], $26              # |     10,334 |     72,158 |          0 |     10,304 |          0 |          0 |
    fsub    $18, $24, $18               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$23 + 1], $24              # |     10,334 |     34,418 |          0 |          0 |      4,014 |          0 |
    fsub    $19, $25, $19               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fsub    $21, $26, $21               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    cmp     $24, 1                      # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$23 + 4], $25              # |     10,334 |     10,502 |          0 |          0 |         28 |          0 |
    load    [$22 + 1], $26              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    bne     be_else.36500               # |     10,334 |     39,810 |          0 |      4,812 |          0 |        302 |
be_then.36500:
    load    [$25 + 1], $24              # |     10,334 |     23,942 |          0 |          0 |      2,268 |          0 |
    load    [$20 + 0], $25              # |     10,334 |     69,302 |          0 |          0 |      9,828 |          0 |
    load    [$20 + 1], $27              # |     10,334 |     10,742 |          0 |          0 |         68 |          0 |
    load    [$23 + 4], $28              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fsub    $25, $18, $25               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$22 + 0], $29              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$28 + 0], $28              # |     10,334 |     23,942 |          0 |          0 |      2,268 |          0 |
    load    [$20 + 2], $30              # |     10,334 |     67,904 |          0 |      9,595 |          0 |          0 |
    load    [$20 + 3], $31              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $25, $27, $25               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fsub    $30, $19, $27               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$23 + 4], $30              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$22 + 2], $32              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$23 + 4], $33              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $25, $26, $26               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $27, $31, $27               # |     10,334 |     10,394 |          0 |         10 |          0 |          0 |
    load    [$30 + 2], $30              # |     10,334 |     10,550 |          0 |          0 |         36 |          0 |
    fmul    $25, $32, $31               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$33 + 0], $32              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fadd    $26, $19, $26               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $27, $29, $29               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$22 + 0], $33              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fadd    $31, $21, $31               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$20 + 4], $34              # |     10,334 |     26,906 |          0 |      2,062 |        700 |          0 |
    fabs    $26, $26                    # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fadd    $29, $18, $29               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fcmp    $24, $26                    # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    bg      ble_else.36501              # |     10,334 |     21,480 |     10,334 |          0 |          0 |        406 |
ble_then.36501:
    li      0, $24                      # |      6,459 |      6,459 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36501              # |      6,459 |     12,883 |          0 |          0 |          0 |      3,212 |
ble_else.36501:
    fabs    $31, $24                    # |      3,875 |      3,875 |          0 |          0 |          0 |          0 |
    load    [$20 + 1], $26              # |      3,875 |      9,035 |          0 |        860 |          0 |          0 |
    fcmp    $30, $24                    # |      3,875 |      3,875 |          0 |          0 |          0 |          0 |
    bg      ble_else.36502              # |      3,875 |     12,664 |      3,875 |          0 |          0 |      2,457 |
ble_then.36502:
    li      0, $24                      # |      3,875 |      3,875 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36502              # |      3,875 |      3,879 |          0 |          0 |          0 |          2 |
ble_else.36502:
    fcmp    $26, $zero
    bne     be_else.36503
be_then.36503:
    li      0, $24
.count b_cont
    b       be_cont.36503
be_else.36503:
    li      1, $24
be_cont.36503:
ble_cont.36502:
ble_cont.36501:
    cmp     $24, 0                      # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    bne     be_else.36504               # |     10,334 |     20,668 |     10,334 |          0 |          0 |          0 |
be_then.36504:
    fabs    $29, $24                    # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fsub    $34, $21, $25               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fcmp    $28, $24                    # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    bg      ble_else.36505              # |     10,334 |     21,248 |     10,334 |          0 |          0 |        290 |
ble_then.36505:
    li      0, $21                      # |      9,079 |     63,553 |          0 |      9,079 |          0 |          0 |
.count b_cont
    b       ble_cont.36505              # |      9,079 |      9,087 |          0 |          0 |          0 |          4 |
ble_else.36505:
    load    [$22 + 2], $26              # |      1,255 |      8,785 |          0 |      1,255 |          0 |          0 |
    load    [$23 + 4], $24              # |      1,255 |      1,255 |          0 |          0 |          0 |          0 |
    load    [$20 + 3], $28              # |      1,255 |      1,255 |          0 |          0 |          0 |          0 |
    fmul    $27, $26, $26               # |      1,255 |      1,255 |          0 |          0 |          0 |          0 |
    load    [$24 + 2], $24              # |      1,255 |      1,255 |          0 |          0 |          0 |          0 |
    fadd    $26, $21, $21               # |      1,255 |      5,020 |      3,765 |          0 |          0 |          0 |
    fabs    $21, $21                    # |      1,255 |      8,761 |         48 |      1,243 |          0 |          0 |
    fcmp    $24, $21                    # |      1,255 |      2,510 |      1,255 |          0 |          0 |          0 |
    bg      ble_else.36506              # |      1,255 |      2,510 |      1,255 |          0 |          0 |          0 |
ble_then.36506:
    li      0, $21                      # |      1,255 |      1,255 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36506              # |      1,255 |      1,463 |          0 |          0 |          0 |        104 |
ble_else.36506:
    fcmp    $28, $zero
    bne     be_else.36507
be_then.36507:
    li      0, $21
.count b_cont
    b       be_cont.36507
be_else.36507:
    li      1, $21
be_cont.36507:
ble_cont.36506:
ble_cont.36505:
    cmp     $21, 0                      # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    bne     be_else.36508               # |     10,334 |     24,542 |     10,334 |          0 |          0 |      1,937 |
be_then.36508:
    load    [$20 + 5], $21              # |     10,334 |     68,138 |          0 |          0 |      9,634 |          0 |
    load    [$23 + 4], $23              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$22 + 1], $22              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $25, $21, $21               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$23 + 1], $23              # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    load    [$20 + 5], $20              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $21, $33, $24               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $21, $22, $22               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fadd    $24, $18, $18               # |     10,334 |     41,336 |     31,002 |          0 |          0 |          0 |
    fadd    $22, $19, $19               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fabs    $18, $18                    # |     10,334 |     41,336 |     31,002 |          0 |          0 |          0 |
    fabs    $19, $19                    # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fcmp    $32, $18                    # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    bg      ble_else.36509              # |     10,334 |     22,604 |     10,334 |          0 |          0 |        968 |
ble_then.36509:
    li      0, $18                      # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36500               # |     10,334 |     10,346 |          0 |          0 |          0 |          6 |
ble_else.36509:
    fcmp    $23, $19
    bg      ble_else.36510
ble_then.36510:
    li      0, $18
.count b_cont
    b       be_cont.36500
ble_else.36510:
    fcmp    $20, $zero
    bne     be_else.36511
be_then.36511:
    li      0, $18
.count b_cont
    b       be_cont.36500
be_else.36511:
.count move_float
    mov     $21, $42
    li      3, $18
.count b_cont
    b       be_cont.36500
be_else.36508:
.count move_float
    mov     $27, $42
    li      2, $18
.count b_cont
    b       be_cont.36500
be_else.36504:
.count move_float
    mov     $25, $42
    li      1, $18
.count b_cont
    b       be_cont.36500
be_else.36500:
    cmp     $24, 2
    load    [$20 + 0], $22
    bne     be_else.36512
be_then.36512:
    fcmp    $zero, $22
    load    [$20 + 1], $23
    load    [$20 + 2], $24
    bg      ble_else.36513
ble_then.36513:
    li      0, $18
.count b_cont
    b       be_cont.36512
ble_else.36513:
    fmul    $23, $18, $18
    fmul    $24, $19, $19
    load    [$20 + 3], $20
    fmul    $20, $21, $20
    fadd    $18, $19, $18
    fadd    $18, $20, $18
.count move_float
    mov     $18, $42
    li      1, $18
.count b_cont
    b       be_cont.36512
be_else.36512:
    fcmp    $22, $zero
    load    [$20 + 1], $25
    load    [$20 + 2], $26
    bne     be_else.36514
be_then.36514:
    li      0, $18
.count b_cont
    b       be_cont.36514
be_else.36514:
    fmul    $25, $18, $25
    fmul    $26, $19, $26
    load    [$20 + 3], $27
    fmul    $18, $18, $28
    load    [$23 + 4], $29
    load    [$23 + 4], $30
    fadd    $25, $26, $25
    fmul    $27, $21, $26
    fmul    $19, $19, $27
    load    [$29 + 0], $29
    load    [$30 + 1], $30
    fmul    $21, $21, $31
    fadd    $25, $26, $25
    load    [$23 + 4], $26
    fmul    $28, $29, $28
    fmul    $27, $30, $27
    load    [$26 + 2], $26
    fmul    $25, $25, $29
    load    [$23 + 3], $30
    fmul    $31, $26, $26
    fadd    $28, $27, $27
    load    [$23 + 6], $28
    fmul    $19, $21, $31
    cmp     $30, 0
    load    [$23 + 9], $32
    fmul    $21, $18, $21
    fadd    $27, $26, $26
    bne     be_else.36515
be_then.36515:
    mov     $26, $18
.count b_cont
    b       be_cont.36515
be_else.36515:
    load    [$32 + 0], $27
    load    [$23 + 9], $30
    fmul    $18, $19, $18
    fmul    $31, $27, $19
    load    [$30 + 1], $27
    load    [$23 + 9], $23
    fmul    $21, $27, $21
    fadd    $26, $19, $19
    load    [$23 + 2], $23
    fmul    $18, $23, $18
    fadd    $19, $21, $19
    fadd    $19, $18, $18
be_cont.36515:
    cmp     $24, 3
    bne     be_cont.36516
be_then.36516:
    fsub    $18, $36, $18
be_cont.36516:
    fmul    $22, $18, $18
    load    [$20 + 4], $19
    load    [$20 + 4], $20
    fsub    $29, $18, $18
    fcmp    $18, $zero
    bg      ble_else.36517
ble_then.36517:
    li      0, $18
.count b_cont
    b       ble_cont.36517
ble_else.36517:
    cmp     $28, 0
    fsqrt   $18, $18
    bne     be_else.36518
be_then.36518:
    fsub    $25, $18, $18
    fmul    $18, $19, $18
.count move_float
    mov     $18, $42
    li      1, $18
.count b_cont
    b       be_cont.36518
be_else.36518:
    fadd    $25, $18, $18
    fmul    $18, $20, $18
.count move_float
    mov     $18, $42
    li      1, $18
be_cont.36518:
ble_cont.36517:
be_cont.36514:
be_cont.36512:
be_cont.36500:
    cmp     $18, 0                      # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    bne     be_else.36519               # |     10,334 |     20,786 |     10,334 |          0 |          0 |         59 |
be_then.36519:
    li      0, $17                      # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
.count b_cont
    b       be_cont.36519               # |     10,334 |     10,342 |          0 |          0 |          0 |          4 |
be_else.36519:
.count load_float
    load    [f.31950], $18
    load    [$17 + 1], $19
    li      0, $2
    fcmp    $18, $42
    bg      ble_else.36520
ble_then.36520:
    li      0, $17
.count b_cont
    b       ble_cont.36520
ble_else.36520:
    cmp     $19, -1
    bne     be_else.36521
be_then.36521:
    li      0, $17
.count b_cont
    b       be_cont.36521
be_else.36521:
    load    [min_caml_and_net + $19], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $17
    cmp     $17, 0
    bne     be_else.36522
be_then.36522:
    li      2, $2
.count stack_load
    load    [$sp + 0], $3
    call    shadow_check_one_or_group.2865
.count move_ret
    mov     $1, $17
    cmp     $17, 0
    bne     be_else.36523
be_then.36523:
    li      0, $17
.count b_cont
    b       be_cont.36522
be_else.36523:
    li      1, $17
.count b_cont
    b       be_cont.36522
be_else.36522:
    li      1, $17
be_cont.36522:
be_cont.36521:
ble_cont.36520:
be_cont.36519:
be_cont.36499:
    cmp     $17, 0                      # |    554,939 |    653,237 |          0 |     16,383 |          0 |          0 |
    bne     be_else.36524               # |    554,939 |  1,110,466 |    554,939 |          0 |          0 |        294 |
be_then.36524:
.count stack_load
    load    [$sp + 2], $17              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $18              # |     10,334 |     72,032 |          0 |     10,283 |          0 |          0 |
    add     $17, 1, $17                 # |     10,334 |     10,385 |         51 |          0 |          0 |          0 |
    load    [$18 + $17], $19            # |     10,334 |     20,668 |     10,334 |          0 |          0 |          0 |
    load    [$19 + 0], $2               # |     10,334 |     31,002 |     20,668 |          0 |          0 |          0 |
    cmp     $2, -1                      # |     10,334 |     31,002 |     20,668 |          0 |          0 |          0 |
    bne     be_else.36525               # |     10,334 |     20,676 |     10,334 |          0 |          0 |          4 |
be_then.36525:
.count stack_move
    add     $sp, 7, $sp
    li      0, $1
    ret
be_else.36525:
    cmp     $2, 99                      # |     10,334 |     72,032 |          0 |     10,283 |          0 |          0 |
.count stack_store
    store   $19, [$sp + 3]              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $17, [$sp + 4]              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    bne     be_else.36526               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
be_then.36526:
    li      1, $1                       # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36526               # |     10,334 |     10,338 |          0 |          0 |          0 |          2 |
be_else.36526:
    call    solver_fast.2796
    cmp     $1, 0
    bne     be_else.36527
be_then.36527:
    li      0, $1
.count b_cont
    b       be_cont.36527
be_else.36527:
.count load_float
    load    [f.31950], $1
    load    [$19 + 1], $2
    li      0, $3
    fcmp    $1, $42
    bg      ble_else.36528
ble_then.36528:
    li      0, $1
.count b_cont
    b       ble_cont.36528
ble_else.36528:
    cmp     $2, -1
    bne     be_else.36529
be_then.36529:
    li      0, $1
.count b_cont
    b       be_cont.36529
be_else.36529:
    load    [min_caml_and_net + $2], $1
.count move_args
    mov     $3, $2
.count move_args
    mov     $1, $3
    call    shadow_check_and_group.2862
    cmp     $1, 0
    bne     be_else.36530
be_then.36530:
.count stack_load
    load    [$sp + 3], $3
    li      0, $2
    load    [$3 + 2], $1
    cmp     $1, -1
    bne     be_else.36531
be_then.36531:
    li      0, $1
.count b_cont
    b       be_cont.36530
be_else.36531:
    load    [min_caml_and_net + $1], $3
    call    shadow_check_and_group.2862
    cmp     $1, 0
    bne     be_else.36532
be_then.36532:
    li      3, $2
.count stack_load
    load    [$sp + 3], $3
    call    shadow_check_one_or_group.2865
    cmp     $1, 0
    bne     be_else.36533
be_then.36533:
    li      0, $1
.count b_cont
    b       be_cont.36530
be_else.36533:
    li      1, $1
.count b_cont
    b       be_cont.36530
be_else.36532:
    li      1, $1
.count b_cont
    b       be_cont.36530
be_else.36530:
    li      1, $1
be_cont.36530:
be_cont.36529:
ble_cont.36528:
be_cont.36527:
be_cont.36526:
    cmp     $1, 0                       # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    bne     be_else.36534               # |     10,334 |     20,770 |     10,334 |          0 |          0 |         51 |
be_then.36534:
.count stack_move
    add     $sp, 7, $sp
.count stack_load
    load    [$sp - 3], $1
.count stack_load
    load    [$sp - 6], $3
    add     $1, 1, $2
    b       shadow_check_one_or_matrix.2868
be_else.36534:
.count stack_load
    load    [$sp + 3], $3               # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $2               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    li      0, $5                       # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $1                # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    add     $2, 1, $4                   # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    cmp     $1, -1                      # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    bne     be_else.36535               # |     10,334 |     20,672 |     10,334 |          0 |          0 |          2 |
be_then.36535:
.count stack_move
    add     $sp, 7, $sp
.count move_args
    mov     $4, $2
.count stack_load
    load    [$sp - 6], $3
    b       shadow_check_one_or_matrix.2868
be_else.36535:
    load    [min_caml_and_net + $1], $3 # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $5, $2                      # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    call    shadow_check_and_group.2862 # |     10,334 |     60,782 |          0 |      8,408 |          0 |          0 |
    cmp     $1, 0                       # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    bne     be_else.36536               # |     10,334 |     20,668 |     10,334 |          0 |          0 |          0 |
be_then.36536:
.count stack_load
    load    [$sp + 3], $3               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $2               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    li      0, $5                       # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$3 + 2], $1                # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    add     $2, 1, $4                   # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    cmp     $1, -1                      # |     10,334 |     62,708 |      1,926 |      8,408 |          0 |          0 |
    bne     be_else.36537               # |     10,334 |     20,672 |     10,334 |          0 |          0 |          2 |
be_then.36537:
.count stack_move
    add     $sp, 7, $sp
.count move_args
    mov     $4, $2
.count stack_load
    load    [$sp - 6], $3
    b       shadow_check_one_or_matrix.2868
be_else.36537:
    load    [min_caml_and_net + $1], $3 # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $5, $2                      # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    call    shadow_check_and_group.2862 # |     10,334 |     60,650 |          0 |      8,386 |          0 |          0 |
    cmp     $1, 0                       # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    bne     be_else.36538               # |     10,334 |     20,668 |     10,334 |          0 |          0 |          0 |
be_then.36538:
    li      3, $2                       # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_group.2865# |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 7, $sp                 # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    bne     be_else.36539               # |     10,334 |     79,612 |          0 |     10,334 |          0 |      3,637 |
be_then.36539:
.count stack_load
    load    [$sp - 3], $1               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 6], $3               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    add     $1, 1, $2                   # |     10,334 |     20,668 |     10,334 |          0 |          0 |          0 |
    b       shadow_check_one_or_matrix.2868# |     10,334 |     10,342 |          0 |          0 |          0 |          4 |
be_else.36539:
    li      1, $1
    ret
be_else.36538:
.count stack_move
    add     $sp, 7, $sp
    li      1, $1
    ret
be_else.36536:
.count stack_move
    add     $sp, 7, $sp
    li      1, $1
    ret
be_else.36524:
.count stack_load
    load    [$sp + 0], $3               # |    544,605 |    724,755 |          0 |     19,731 |     10,294 |          0 |
    li      0, $2                       # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $17               # |    544,605 |  1,101,908 |    534,311 |          0 |      3,832 |          0 |
    cmp     $17, -1                     # |    544,605 |  1,663,051 |  1,063,096 |      9,225 |          0 |          0 |
    bne     be_else.36540               # |    544,605 |  1,089,222 |    544,605 |          0 |          0 |          6 |
be_then.36540:
    li      0, $17
.count b_cont
    b       be_cont.36540
be_else.36540:
    load    [min_caml_and_net + $17], $3# |    544,605 |    604,989 |          0 |          0 |     10,064 |          0 |
    call    shadow_check_and_group.2862 # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
    cmp     $17, 0                      # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
    bne     be_else.36541               # |    544,605 |  1,187,765 |    524,894 |     19,711 |          0 |          0 |
be_then.36541:
.count stack_load
    load    [$sp + 0], $3               # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
    load    [$3 + 2], $17               # |    544,605 |  1,106,154 |    544,605 |          0 |      2,824 |          0 |
    cmp     $17, -1                     # |    544,605 |  1,628,167 |  1,083,562 |          0 |          0 |          0 |
    bne     be_else.36542               # |    544,605 |  1,099,900 |    544,605 |          0 |          0 |      5,345 |
be_then.36542:
    li      0, $17
.count b_cont
    b       be_cont.36541
be_else.36542:
    load    [min_caml_and_net + $17], $3# |    544,605 |    675,837 |          0 |     11,824 |     10,048 |          0 |
    call    shadow_check_and_group.2862 # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
    cmp     $17, 0                      # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
    bne     be_else.36543               # |    544,605 |  1,110,528 |    544,605 |          0 |          0 |     10,659 |
be_then.36543:
.count stack_load
    load    [$sp + 0], $3               # |    543,022 |    543,022 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |    543,022 |    543,022 |          0 |          0 |          0 |          0 |
    load    [$3 + 3], $17               # |    543,022 |  1,104,164 |    543,022 |          0 |      3,020 |          0 |
    cmp     $17, -1                     # |    543,022 |  1,670,232 |  1,056,458 |     11,792 |          0 |          0 |
    bne     be_else.36544               # |    543,022 |  1,086,052 |    543,022 |          0 |          0 |          4 |
be_then.36544:
    li      0, $17
.count b_cont
    b       be_cont.36541
be_else.36544:
    load    [min_caml_and_net + $17], $3# |    543,022 |    599,002 |          0 |          0 |      9,330 |          0 |
    call    shadow_check_and_group.2862 # |    543,022 |    543,022 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |    543,022 |    543,022 |          0 |          0 |          0 |          0 |
    cmp     $17, 0                      # |    543,022 |    543,022 |          0 |          0 |          0 |          0 |
    bne     be_else.36545               # |    543,022 |  1,109,511 |    538,347 |      4,675 |          0 |         46 |
be_then.36545:
.count stack_load
    load    [$sp + 0], $3               # |    541,069 |    541,069 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |    541,069 |    541,069 |          0 |          0 |          0 |          0 |
    load    [$3 + 4], $17               # |    541,069 |  1,136,330 |    541,069 |          0 |      9,032 |          0 |
    cmp     $17, -1                     # |    541,069 |  1,605,143 |  1,064,074 |          0 |          0 |          0 |
    bne     be_else.36546               # |    541,069 |  1,082,144 |    541,069 |          0 |          0 |          3 |
be_then.36546:
    li      0, $17
.count b_cont
    b       be_cont.36541
be_else.36546:
    load    [min_caml_and_net + $17], $3# |    541,069 |    571,867 |          0 |      3,520 |      1,613 |          0 |
    call    shadow_check_and_group.2862 # |    541,069 |    541,069 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |    541,069 |    541,069 |          0 |          0 |          0 |          0 |
    cmp     $17, 0                      # |    541,069 |    541,069 |          0 |          0 |          0 |          0 |
    bne     be_else.36547               # |    541,069 |  1,082,138 |    541,069 |          0 |          0 |          0 |
be_then.36547:
.count stack_load
    load    [$sp + 0], $3               # |    540,655 |    540,655 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |    540,655 |    540,655 |          0 |          0 |          0 |          0 |
    load    [$3 + 5], $17               # |    540,655 |  1,081,310 |    540,655 |          0 |          0 |          0 |
    cmp     $17, -1                     # |    540,655 |  1,636,317 |  1,074,134 |      3,588 |          0 |          0 |
    bne     be_else.36548               # |    540,655 |  1,081,316 |    540,655 |          0 |          0 |          3 |
be_then.36548:
    li      0, $17                      # |    540,655 |    540,655 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36541               # |    540,655 |    542,293 |          0 |          0 |          0 |        819 |
be_else.36548:
    load    [min_caml_and_net + $17], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $17
    cmp     $17, 0
    bne     be_else.36549
be_then.36549:
.count stack_load
    load    [$sp + 0], $3
    li      0, $2
    load    [$3 + 6], $17
    cmp     $17, -1
    bne     be_else.36550
be_then.36550:
    li      0, $17
.count b_cont
    b       be_cont.36541
be_else.36550:
    load    [min_caml_and_net + $17], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $17
    cmp     $17, 0
    bne     be_else.36551
be_then.36551:
.count stack_load
    load    [$sp + 0], $3
    li      0, $2
    load    [$3 + 7], $17
    cmp     $17, -1
    bne     be_else.36552
be_then.36552:
    li      0, $17
.count b_cont
    b       be_cont.36541
be_else.36552:
    load    [min_caml_and_net + $17], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $17
    cmp     $17, 0
    bne     be_else.36553
be_then.36553:
    li      8, $2
.count stack_load
    load    [$sp + 0], $3
    call    shadow_check_one_or_group.2865
.count move_ret
    mov     $1, $17
.count b_cont
    b       be_cont.36541
be_else.36553:
    li      1, $17
.count b_cont
    b       be_cont.36541
be_else.36551:
    li      1, $17
.count b_cont
    b       be_cont.36541
be_else.36549:
    li      1, $17
.count b_cont
    b       be_cont.36541
be_else.36547:
    li      1, $17                      # |        414 |      1,368 |          0 |        159 |          0 |          0 |
.count b_cont
    b       be_cont.36541               # |        414 |        418 |          0 |          0 |          0 |          2 |
be_else.36545:
    li      1, $17                      # |      1,953 |      3,615 |          0 |        277 |          0 |          0 |
.count b_cont
    b       be_cont.36541               # |      1,953 |      2,021 |          0 |          0 |          0 |         34 |
be_else.36543:
    li      1, $17                      # |      1,583 |      2,459 |          0 |        146 |          0 |          0 |
.count b_cont
    b       be_cont.36541               # |      1,583 |      1,587 |          0 |          0 |          0 |          2 |
be_else.36541:
    li      1, $17
be_cont.36541:
be_cont.36540:
    cmp     $17, 0                      # |    544,605 |    571,413 |          0 |      4,468 |          0 |          0 |
    bne     be_else.36554               # |    544,605 |  1,109,484 |    544,605 |          0 |          0 |     10,137 |
be_then.36554:
.count stack_load
    load    [$sp + 2], $17              # |    540,655 |    543,559 |          0 |          0 |        484 |          0 |
.count stack_load
    load    [$sp + 1], $18              # |    540,655 |    547,831 |          0 |          0 |      1,196 |          0 |
    add     $17, 1, $17                 # |    540,655 |  1,079,707 |    539,052 |          0 |          0 |          0 |
    load    [$18 + $17], $19            # |    540,655 |  1,177,190 |    521,479 |     19,176 |          0 |          0 |
    load    [$19 + 0], $2               # |    540,655 |  1,622,229 |  1,081,310 |          0 |         44 |          0 |
    cmp     $2, -1                      # |    540,655 |  1,621,877 |  1,081,222 |          0 |          0 |          0 |
    bne     be_else.36555               # |    540,655 |  1,081,310 |    540,655 |          0 |          0 |          0 |
be_then.36555:
.count stack_move
    add     $sp, 7, $sp                 # |    540,655 |    540,655 |          0 |          0 |          0 |          0 |
    li      0, $1                       # |    540,655 |    540,655 |          0 |          0 |          0 |          0 |
    ret                                 # |    540,655 |    540,655 |          0 |          0 |          0 |          0 |
be_else.36555:
    cmp     $2, 99
.count stack_store
    store   $19, [$sp + 5]
.count stack_store
    store   $17, [$sp + 6]
    bne     be_else.36556
be_then.36556:
    li      1, $1
.count b_cont
    b       be_cont.36556
be_else.36556:
    call    solver_fast.2796
    cmp     $1, 0
    bne     be_else.36557
be_then.36557:
    li      0, $1
.count b_cont
    b       be_cont.36557
be_else.36557:
.count load_float
    load    [f.31950], $1
    load    [$19 + 1], $2
    li      0, $3
    fcmp    $1, $42
    bg      ble_else.36558
ble_then.36558:
    li      0, $1
.count b_cont
    b       ble_cont.36558
ble_else.36558:
    cmp     $2, -1
    bne     be_else.36559
be_then.36559:
    li      0, $1
.count b_cont
    b       be_cont.36559
be_else.36559:
    load    [min_caml_and_net + $2], $1
.count move_args
    mov     $3, $2
.count move_args
    mov     $1, $3
    call    shadow_check_and_group.2862
    cmp     $1, 0
    bne     be_else.36560
be_then.36560:
.count stack_load
    load    [$sp + 5], $3
    li      0, $2
    load    [$3 + 2], $1
    cmp     $1, -1
    bne     be_else.36561
be_then.36561:
    li      0, $1
.count b_cont
    b       be_cont.36560
be_else.36561:
    load    [min_caml_and_net + $1], $3
    call    shadow_check_and_group.2862
    cmp     $1, 0
    bne     be_else.36562
be_then.36562:
    li      3, $2
.count stack_load
    load    [$sp + 5], $3
    call    shadow_check_one_or_group.2865
    cmp     $1, 0
    bne     be_else.36563
be_then.36563:
    li      0, $1
.count b_cont
    b       be_cont.36560
be_else.36563:
    li      1, $1
.count b_cont
    b       be_cont.36560
be_else.36562:
    li      1, $1
.count b_cont
    b       be_cont.36560
be_else.36560:
    li      1, $1
be_cont.36560:
be_cont.36559:
ble_cont.36558:
be_cont.36557:
be_cont.36556:
    cmp     $1, 0
    bne     be_else.36564
be_then.36564:
.count stack_move
    add     $sp, 7, $sp
.count stack_load
    load    [$sp - 1], $1
.count stack_load
    load    [$sp - 6], $3
    add     $1, 1, $2
    b       shadow_check_one_or_matrix.2868
be_else.36564:
.count stack_load
    load    [$sp + 5], $3
.count stack_load
    load    [$sp + 6], $2
    li      0, $5
    load    [$3 + 1], $1
    add     $2, 1, $4
    cmp     $1, -1
    bne     be_else.36565
be_then.36565:
.count stack_move
    add     $sp, 7, $sp
.count move_args
    mov     $4, $2
.count stack_load
    load    [$sp - 6], $3
    b       shadow_check_one_or_matrix.2868
be_else.36565:
    load    [min_caml_and_net + $1], $3
.count move_args
    mov     $5, $2
    call    shadow_check_and_group.2862
    cmp     $1, 0
    bne     be_else.36566
be_then.36566:
.count stack_load
    load    [$sp + 5], $3
.count stack_load
    load    [$sp + 6], $2
    li      0, $5
    load    [$3 + 2], $1
    add     $2, 1, $4
    cmp     $1, -1
    bne     be_else.36567
be_then.36567:
.count stack_move
    add     $sp, 7, $sp
.count move_args
    mov     $4, $2
.count stack_load
    load    [$sp - 6], $3
    b       shadow_check_one_or_matrix.2868
be_else.36567:
    load    [min_caml_and_net + $1], $3
.count move_args
    mov     $5, $2
    call    shadow_check_and_group.2862
    cmp     $1, 0
    bne     be_else.36568
be_then.36568:
    li      3, $2
.count stack_load
    load    [$sp + 5], $3
    call    shadow_check_one_or_group.2865
    cmp     $1, 0
.count stack_move
    add     $sp, 7, $sp
    bne     be_else.36569
be_then.36569:
.count stack_load
    load    [$sp - 1], $1
.count stack_load
    load    [$sp - 6], $3
    add     $1, 1, $2
    b       shadow_check_one_or_matrix.2868
be_else.36569:
    li      1, $1
    ret
be_else.36568:
.count stack_move
    add     $sp, 7, $sp
    li      1, $1
    ret
be_else.36566:
.count stack_move
    add     $sp, 7, $sp
    li      1, $1
    ret
be_else.36554:
.count stack_move
    add     $sp, 7, $sp                 # |      3,950 |     18,062 |          0 |      2,352 |          0 |          0 |
    li      1, $1                       # |      3,950 |      3,950 |          0 |          0 |          0 |          0 |
    ret                                 # |      3,950 |      3,950 |          0 |          0 |          0 |          0 |
.end shadow_check_one_or_matrix

######################################################################
.begin solve_each_element
solve_each_element.2871:
    load    [$3 + $2], $21              # |    193,311 |    302,859 |          0 |     16,580 |      1,678 |          0 |
    load    [min_caml_startp + 0], $22  # |    193,311 |    193,311 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp + 1], $23  # |    193,311 |    223,377 |          0 |      5,011 |          0 |          0 |
    cmp     $21, -1                     # |    193,311 |    193,311 |          0 |          0 |          0 |          0 |
    bne     be_else.36570               # |    193,311 |    403,668 |    193,311 |          0 |          0 |      8,523 |
be_then.36570:
    ret                                 # |     43,491 |     43,491 |          0 |          0 |          0 |          0 |
be_else.36570:
    load    [min_caml_objects + $21], $24# |    149,820 |    155,346 |          0 |          0 |        921 |          0 |
    load    [min_caml_startp + 2], $25  # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
    load    [$4 + 0], $26               # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
    load    [$24 + 5], $27              # |    149,820 |    260,652 |          0 |          0 |     18,472 |          0 |
    load    [$24 + 5], $28              # |    149,820 |    177,684 |          0 |      4,644 |          0 |          0 |
    load    [$24 + 5], $29              # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
    load    [$24 + 1], $30              # |    149,820 |    194,832 |          0 |          0 |      7,502 |          0 |
    load    [$27 + 0], $27              # |    149,820 |    258,384 |          0 |          0 |     18,094 |          0 |
    load    [$28 + 1], $28              # |    149,820 |    153,426 |          0 |          0 |        601 |          0 |
    load    [$29 + 2], $29              # |    149,820 |    172,278 |          0 |          0 |      3,743 |          0 |
    cmp     $30, 1                      # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
    fsub    $22, $27, $22               # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
    fsub    $23, $28, $23               # |    149,820 |    177,684 |          0 |      4,644 |          0 |          0 |
    fsub    $25, $29, $25               # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
    bne     be_else.36571               # |    149,820 |    168,056 |          0 |          0 |          0 |      9,118 |
be_then.36571:
    fcmp    $26, $zero                  # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    bne     be_else.36572               # |     50,858 |    110,762 |     50,858 |          0 |          0 |      4,523 |
be_then.36572:
    li      0, $26
.count b_cont
    b       be_cont.36572
be_else.36572:
    fcmp    $zero, $26                  # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    load    [$24 + 4], $27              # |     50,858 |     81,800 |          0 |      4,644 |        513 |          0 |
    load    [$24 + 6], $28              # |     50,858 |     64,712 |          0 |          0 |      2,309 |          0 |
    bg      ble_else.36573              # |     50,858 |     54,140 |          0 |          0 |          0 |      1,641 |
ble_then.36573:
    li      0, $29                      # |     50,160 |     50,160 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36573              # |     50,160 |     50,184 |          0 |          0 |          0 |         12 |
ble_else.36573:
    li      1, $29                      # |        698 |        698 |          0 |          0 |          0 |          0 |
ble_cont.36573:
    cmp     $28, 0                      # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    bne     be_else.36574               # |     50,858 |    102,066 |     50,858 |          0 |          0 |        175 |
be_then.36574:
    mov     $29, $28                    # |     50,858 |    162,350 |          0 |     18,582 |          0 |          0 |
.count b_cont
    b       be_cont.36574               # |     50,858 |     75,688 |          0 |          0 |          0 |     12,415 |
be_else.36574:
    cmp     $29, 0
    bne     be_else.36575
be_then.36575:
    li      1, $28
.count b_cont
    b       be_cont.36575
be_else.36575:
    li      0, $28
be_cont.36575:
be_cont.36574:
    cmp     $28, 0                      # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    load    [$27 + 0], $29              # |     50,858 |     67,610 |          0 |        911 |      1,881 |          0 |
    bne     be_else.36576               # |     50,858 |     50,878 |          0 |          0 |          0 |         10 |
be_then.36576:
    fneg    $29, $28                    # |     50,160 |     98,439 |     48,279 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36576               # |     50,160 |     50,176 |          0 |          0 |          0 |          8 |
be_else.36576:
    mov     $29, $28                    # |        698 |      1,386 |        688 |          0 |          0 |          0 |
be_cont.36576:
    fsub    $28, $22, $28               # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    finv    $26, $26                    # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    load    [$27 + 1], $29              # |     50,858 |     51,188 |          0 |          0 |         55 |          0 |
    load    [$4 + 1], $30               # |     50,858 |     56,324 |          0 |        911 |          0 |          0 |
    load    [$27 + 2], $27              # |     50,858 |     66,866 |          0 |          0 |      2,668 |          0 |
    load    [$4 + 2], $31               # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    fmul    $28, $26, $26               # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    fmul    $26, $30, $28               # |     50,858 |    254,290 |    203,432 |          0 |          0 |          0 |
    fmul    $26, $31, $30               # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    fadd    $28, $23, $28               # |     50,858 |    203,432 |    152,574 |          0 |          0 |          0 |
    fadd    $30, $25, $30               # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    fabs    $28, $28                    # |     50,858 |    205,064 |    150,942 |        544 |          0 |          0 |
    fabs    $30, $30                    # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    fcmp    $29, $28                    # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    bg      ble_else.36577              # |     50,858 |    132,262 |     50,858 |          0 |          0 |     15,273 |
ble_then.36577:
    li      0, $26                      # |     41,048 |     41,048 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36577              # |     41,048 |     44,302 |          0 |          0 |          0 |      1,627 |
ble_else.36577:
    fcmp    $27, $30                    # |      9,810 |      9,810 |          0 |          0 |          0 |          0 |
    bg      ble_else.36578              # |      9,810 |     20,906 |      9,810 |          0 |          0 |        643 |
ble_then.36578:
    li      0, $26                      # |      5,699 |      6,035 |          0 |         56 |          0 |          0 |
.count b_cont
    b       ble_cont.36578              # |      5,699 |     11,161 |          0 |          0 |          0 |      2,731 |
ble_else.36578:
.count move_float
    mov     $26, $42                    # |      4,111 |      4,387 |          0 |         46 |          0 |          0 |
    li      1, $26                      # |      4,111 |      4,111 |          0 |          0 |          0 |          0 |
ble_cont.36578:
ble_cont.36577:
be_cont.36572:
    cmp     $26, 0                      # |     50,858 |     57,249 |      4,111 |        380 |          0 |          0 |
    bne     be_else.36579               # |     50,858 |    102,140 |     50,858 |          0 |          0 |        212 |
be_then.36579:
    load    [$4 + 1], $26               # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    load    [$24 + 4], $27              # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    load    [$24 + 6], $28              # |     46,747 |     49,171 |          0 |        404 |          0 |          0 |
    fcmp    $26, $zero                  # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    bne     be_else.36580               # |     46,747 |     95,758 |     46,747 |          0 |          0 |      1,132 |
be_then.36580:
    li      0, $26
.count b_cont
    b       be_cont.36580
be_else.36580:
    fcmp    $zero, $26                  # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    bg      ble_else.36581              # |     46,747 |     93,582 |     46,747 |          0 |          0 |         44 |
ble_then.36581:
    li      0, $29                      # |        217 |        217 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36581              # |        217 |        699 |          0 |         72 |          0 |         25 |
ble_else.36581:
    li      1, $29                      # |     46,530 |    156,324 |          0 |     18,299 |          0 |          0 |
ble_cont.36581:
    cmp     $28, 0                      # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    bne     be_else.36582               # |     46,747 |     93,494 |     46,747 |          0 |          0 |          0 |
be_then.36582:
    mov     $29, $28                    # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36582               # |     46,747 |     46,767 |          0 |          0 |          0 |         10 |
be_else.36582:
    cmp     $29, 0
    bne     be_else.36583
be_then.36583:
    li      1, $28
.count b_cont
    b       be_cont.36583
be_else.36583:
    li      0, $28
be_cont.36583:
be_cont.36582:
    cmp     $28, 0                      # |     46,747 |    156,973 |          0 |     18,371 |          0 |          0 |
    load    [$27 + 1], $29              # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    bne     be_else.36584               # |     46,747 |     47,265 |          0 |          0 |          0 |        259 |
be_then.36584:
    fneg    $29, $28                    # |        217 |        346 |        129 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36584               # |        217 |        239 |          0 |          0 |          0 |         11 |
be_else.36584:
    mov     $29, $28                    # |     46,530 |    184,430 |     28,106 |     18,299 |          0 |          0 |
be_cont.36584:
    fsub    $28, $23, $28               # |     46,747 |     47,179 |          0 |         72 |          0 |          0 |
    finv    $26, $26                    # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    load    [$27 + 2], $29              # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    load    [$4 + 2], $30               # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    load    [$27 + 0], $27              # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    load    [$4 + 0], $31               # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    fmul    $28, $26, $26               # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    fmul    $26, $30, $28               # |     46,747 |    268,563 |    117,332 |     17,414 |          0 |          0 |
    fmul    $26, $31, $30               # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    fadd    $28, $25, $28               # |     46,747 |    186,988 |    140,241 |          0 |          0 |          0 |
    fadd    $30, $22, $30               # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    fabs    $28, $28                    # |     46,747 |    186,988 |    140,241 |          0 |          0 |          0 |
    fabs    $30, $30                    # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    fcmp    $29, $28                    # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    bg      ble_else.36585              # |     46,747 |    124,882 |     46,747 |          0 |          0 |     15,694 |
ble_then.36585:
    li      0, $26                      # |     28,211 |     82,043 |          0 |      8,972 |          0 |          0 |
.count b_cont
    b       ble_cont.36585              # |     28,211 |     28,219 |          0 |          0 |          0 |          4 |
ble_else.36585:
    fcmp    $27, $30                    # |     18,536 |     69,188 |          0 |      8,442 |          0 |          0 |
    bg      ble_else.36586              # |     18,536 |     42,368 |     18,536 |          0 |          0 |      2,648 |
ble_then.36586:
    li      0, $26                      # |      6,456 |      6,456 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36586              # |      6,456 |      6,840 |          0 |          0 |          0 |        192 |
ble_else.36586:
.count move_float
    mov     $26, $42                    # |     12,080 |     12,080 |          0 |          0 |          0 |          0 |
    li      1, $26                      # |     12,080 |     12,080 |          0 |          0 |          0 |          0 |
ble_cont.36586:
ble_cont.36585:
be_cont.36580:
    cmp     $26, 0                      # |     46,747 |    156,721 |      5,484 |     17,415 |          0 |          0 |
    bne     be_else.36587               # |     46,747 |    103,238 |     46,747 |          0 |          0 |      4,872 |
be_then.36587:
    load    [$4 + 2], $26               # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    load    [$24 + 4], $27              # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    load    [$4 + 0], $28               # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    fcmp    $26, $zero                  # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    bne     be_else.36588               # |     34,667 |     69,350 |     34,667 |          0 |          0 |          8 |
be_then.36588:
    li      0, $22
.count b_cont
    b       be_cont.36571
be_else.36588:
    fcmp    $zero, $26                  # |     34,667 |    103,775 |          0 |     11,518 |          0 |          0 |
    load    [$27 + 0], $29              # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    load    [$24 + 6], $24              # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    bg      ble_else.36589              # |     34,667 |     41,911 |          0 |          0 |          0 |      3,622 |
ble_then.36589:
    li      0, $30                      # |     24,683 |     24,683 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36589              # |     24,683 |     24,703 |          0 |          0 |          0 |         10 |
ble_else.36589:
    li      1, $30                      # |      9,984 |      9,984 |          0 |          0 |          0 |          0 |
ble_cont.36589:
    cmp     $24, 0                      # |     34,667 |    108,671 |          0 |     12,334 |          0 |          0 |
    bne     be_else.36590               # |     34,667 |     69,338 |     34,667 |          0 |          0 |          2 |
be_then.36590:
    mov     $30, $24                    # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36590               # |     34,667 |     34,703 |          0 |          0 |          0 |         18 |
be_else.36590:
    cmp     $30, 0
    bne     be_else.36591
be_then.36591:
    li      1, $24
.count b_cont
    b       be_cont.36591
be_else.36591:
    li      0, $24
be_cont.36591:
be_cont.36590:
    cmp     $24, 0                      # |     34,667 |    108,671 |          0 |     12,334 |          0 |          0 |
    load    [$27 + 2], $30              # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    bne     be_else.36592               # |     34,667 |     34,671 |          0 |          0 |          0 |          2 |
be_then.36592:
    fneg    $30, $24                    # |     24,683 |     49,366 |     24,683 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36592               # |     24,683 |     39,067 |          0 |          0 |          0 |      7,192 |
be_else.36592:
    mov     $30, $24                    # |      9,984 |     19,966 |      9,982 |          0 |          0 |          0 |
be_cont.36592:
    fsub    $24, $25, $24               # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    finv    $26, $25                    # |     34,667 |    108,671 |          0 |     12,334 |          0 |          0 |
    load    [$27 + 1], $26              # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    load    [$4 + 1], $27               # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    fmul    $24, $25, $24               # |     34,667 |    104,001 |     69,334 |          0 |          0 |          0 |
    fmul    $24, $28, $25               # |     34,667 |    173,335 |    138,668 |          0 |          0 |          0 |
    fmul    $24, $27, $27               # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    fadd    $25, $22, $22               # |     34,667 |    138,668 |    104,001 |          0 |          0 |          0 |
    fadd    $27, $23, $23               # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    fabs    $22, $22                    # |     34,667 |    175,784 |     66,885 |     12,372 |          0 |          0 |
    fabs    $23, $23                    # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    fcmp    $29, $22                    # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    bg      ble_else.36593              # |     34,667 |     89,490 |     34,667 |          0 |          0 |     10,078 |
ble_then.36593:
    li      0, $22                      # |     18,798 |     18,798 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36571               # |     18,798 |     18,908 |          0 |          0 |          0 |         55 |
ble_else.36593:
    fcmp    $26, $23                    # |     15,869 |     15,869 |          0 |          0 |          0 |          0 |
    bg      ble_else.36594              # |     15,869 |     35,522 |     15,869 |          0 |          0 |      1,892 |
ble_then.36594:
    li      0, $22                      # |     12,844 |     50,920 |          0 |      6,346 |          0 |          0 |
.count b_cont
    b       be_cont.36571               # |     12,844 |     22,586 |          0 |          0 |          0 |      4,871 |
ble_else.36594:
.count move_float
    mov     $24, $42                    # |      3,025 |     10,465 |          0 |      1,240 |          0 |          0 |
    li      3, $22                      # |      3,025 |      3,025 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36571               # |      3,025 |      3,029 |          0 |          0 |          0 |          2 |
be_else.36587:
    li      2, $22                      # |     12,080 |     53,498 |          0 |      6,903 |          0 |          0 |
.count b_cont
    b       be_cont.36571               # |     12,080 |     12,088 |          0 |          0 |          0 |          4 |
be_else.36579:
    li      1, $22                      # |      4,111 |     18,229 |          0 |      2,353 |          0 |          0 |
.count b_cont
    b       be_cont.36571               # |      4,111 |     19,269 |          0 |      2,525 |          0 |          4 |
be_else.36571:
    cmp     $30, 2                      # |     98,962 |    195,274 |          0 |     16,052 |          0 |          0 |
    bne     be_else.36595               # |     98,962 |    208,458 |     98,962 |          0 |          0 |      5,267 |
be_then.36595:
    load    [$24 + 4], $24              # |     24,693 |     25,755 |          0 |          0 |        177 |          0 |
    load    [$4 + 0], $26               # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
    load    [$4 + 1], $27               # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
    load    [$24 + 0], $28              # |     24,693 |     29,097 |          0 |          0 |        734 |          0 |
    load    [$24 + 1], $29              # |     24,693 |     25,059 |          0 |          0 |         61 |          0 |
    load    [$4 + 2], $30               # |     24,693 |     91,935 |          0 |     11,207 |          0 |          0 |
    fmul    $26, $28, $26               # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
    fmul    $27, $29, $27               # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
    load    [$24 + 2], $24              # |     24,693 |     27,033 |          0 |          0 |        390 |          0 |
    fmul    $28, $22, $22               # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
    fmul    $29, $23, $23               # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
    fmul    $30, $24, $28               # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
    fadd    $26, $27, $26               # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
    fmul    $24, $25, $24               # |     24,693 |     91,935 |          0 |     11,207 |          0 |          0 |
    fadd    $22, $23, $22               # |     24,693 |     38,179 |     13,486 |          0 |          0 |          0 |
    fadd    $26, $28, $23               # |     24,693 |     38,179 |     13,486 |          0 |          0 |          0 |
    fadd    $22, $24, $22               # |     24,693 |     85,286 |     60,593 |          0 |          0 |          0 |
    fcmp    $23, $zero                  # |     24,693 |     38,179 |     13,486 |          0 |          0 |          0 |
    bg      ble_else.36596              # |     24,693 |     51,810 |     24,693 |          0 |          0 |      1,212 |
ble_then.36596:
    li      0, $22                      # |      7,535 |      7,535 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36595               # |      7,535 |      7,669 |          0 |          0 |          0 |         67 |
ble_else.36596:
    finv    $23, $23                    # |     17,158 |     17,344 |          0 |         31 |          0 |          0 |
    fneg    $22, $22                    # |     17,158 |     17,158 |          0 |          0 |          0 |          0 |
    fmul    $22, $23, $22               # |     17,158 |     68,632 |     51,474 |          0 |          0 |          0 |
.count move_float
    mov     $22, $42                    # |     17,158 |     85,790 |     68,632 |          0 |          0 |          0 |
    li      1, $22                      # |     17,158 |     17,158 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36595               # |     17,158 |     17,170 |          0 |          0 |          0 |          6 |
be_else.36595:
    load    [$24 + 3], $26              # |     74,269 |     78,025 |          0 |         33 |        593 |          0 |
    load    [$24 + 4], $27              # |     74,269 |     75,355 |          0 |          0 |        181 |          0 |
    load    [$24 + 4], $28              # |     74,269 |     74,653 |          0 |         64 |          0 |          0 |
    load    [$24 + 4], $29              # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$4 + 0], $30               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$4 + 1], $31               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$4 + 2], $32               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $30, $30, $33               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $31, $31, $34               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$27 + 0], $27              # |     74,269 |     91,051 |          0 |          0 |      2,797 |          0 |
    load    [$28 + 1], $28              # |     74,269 |     79,855 |          0 |         64 |        867 |          0 |
    fmul    $32, $32, $35               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $33, $27, $33               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $34, $28, $34               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$29 + 2], $29              # |     74,269 |     79,123 |          0 |          0 |        809 |          0 |
    load    [$24 + 1], $1               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $30, $22, $5                # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $35, $29, $35               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $31, $23, $6                # |     74,269 |     74,653 |          0 |         64 |          0 |          0 |
    fadd    $33, $34, $33               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $32, $25, $34               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $22, $22, $7                # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    cmp     $26, 0                      # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $5, $27, $5                 # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $6, $28, $6                 # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fadd    $33, $35, $33               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    be      bne_cont.36597              # |     74,269 |     74,693 |          0 |         64 |          0 |         20 |
bne_then.36597:
    load    [$24 + 9], $8
    fmul    $31, $32, $35
    fmul    $32, $30, $9
    load    [$8 + 0], $8
    load    [$24 + 9], $10
    fmul    $30, $31, $11
    fmul    $35, $8, $35
    load    [$10 + 1], $10
    load    [$24 + 9], $8
    fmul    $9, $10, $9
    fadd    $33, $35, $33
    load    [$8 + 2], $8
    fmul    $11, $8, $35
    fadd    $33, $9, $33
    fadd    $33, $35, $33
bne_cont.36597:
    fcmp    $33, $zero                  # |     74,269 |    330,659 |    189,148 |     11,207 |          0 |          0 |
    bne     be_else.36598               # |     74,269 |    148,726 |     74,269 |          0 |          0 |         94 |
be_then.36598:
    li      0, $22
.count b_cont
    b       be_cont.36598
be_else.36598:
    fadd    $5, $6, $35                 # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $34, $29, $34               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $7, $27, $27                # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $23, $23, $5                # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    cmp     $26, 0                      # |     74,269 |    141,511 |          0 |     11,207 |          0 |          0 |
    fmul    $25, $25, $6                # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$24 + 6], $7               # |     74,269 |     76,195 |          0 |          0 |        321 |          0 |
    fadd    $35, $34, $34               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    bne     be_else.36599               # |     74,269 |     74,731 |          0 |          0 |          0 |        231 |
be_then.36599:
    mov     $34, $30                    # |     74,269 |    296,614 |    222,345 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36599               # |     74,269 |     74,785 |          0 |          0 |          0 |        258 |
be_else.36599:
    fmul    $32, $23, $35
    fmul    $31, $25, $8
    load    [$24 + 9], $9
    fmul    $30, $25, $10
    fmul    $32, $22, $32
    load    [$9 + 0], $9
    fadd    $35, $8, $35
    load    [$24 + 9], $8
    fmul    $30, $23, $30
    fadd    $10, $32, $32
    fmul    $31, $22, $31
    fmul    $35, $9, $35
    load    [$8 + 1], $8
    load    [$24 + 9], $9
    fmul    $32, $8, $32
    fadd    $30, $31, $30
    load    [$9 + 2], $31
    fadd    $35, $32, $32
    fmul    $30, $31, $30
    fadd    $32, $30, $30
    fmul    $30, $39, $30
    fadd    $34, $30, $30
be_cont.36599:
    fmul    $5, $28, $28                # |     74,269 |    185,731 |          0 |     18,577 |          0 |          0 |
    fmul    $30, $30, $31               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $6, $29, $29                # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $23, $25, $32               # |     74,269 |    185,761 |          0 |     18,582 |          0 |          0 |
    load    [$24 + 9], $34              # |     74,269 |    101,047 |          0 |          0 |      4,463 |          0 |
    fadd    $27, $28, $27               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $25, $22, $25               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$34 + 0], $28              # |     74,269 |    241,897 |          0 |          0 |     27,938 |          0 |
    cmp     $26, 0                      # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$24 + 9], $34              # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $22, $23, $22               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $32, $28, $23               # |     74,269 |    185,731 |          0 |     18,577 |          0 |          0 |
    fadd    $27, $29, $27               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    bne     be_else.36600               # |     74,269 |     74,811 |          0 |          0 |          0 |        271 |
be_then.36600:
    mov     $27, $22                    # |     74,269 |    296,534 |    222,265 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36600               # |     74,269 |     74,277 |          0 |          0 |          0 |          4 |
be_else.36600:
    load    [$34 + 1], $26
    fadd    $27, $23, $23
    load    [$24 + 9], $24
    fmul    $25, $26, $25
    load    [$24 + 2], $24
    fmul    $22, $24, $22
    fadd    $23, $25, $23
    fadd    $23, $22, $22
be_cont.36600:
    cmp     $1, 3                       # |     74,269 |    185,731 |          0 |     18,577 |          0 |          0 |
    bne     be_cont.36601               # |     74,269 |    148,538 |     74,269 |          0 |          0 |          0 |
be_then.36601:
    fsub    $22, $36, $22               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
be_cont.36601:
    fmul    $33, $22, $22               # |     74,269 |    408,489 |    222,788 |     18,572 |          0 |          0 |
    finv    $33, $23                    # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    finv    $33, $24                    # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fsub    $31, $22, $22               # |     74,269 |    222,807 |    148,538 |          0 |          0 |          0 |
    fcmp    $22, $zero                  # |     74,269 |    371,345 |    297,076 |          0 |          0 |          0 |
    bg      ble_else.36602              # |     74,269 |    180,230 |     74,269 |          0 |          0 |     15,846 |
ble_then.36602:
    li      0, $22                      # |     62,376 |     62,376 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36602              # |     62,376 |     62,380 |          0 |          0 |          0 |          2 |
ble_else.36602:
    cmp     $7, 0                       # |     11,893 |     39,193 |          0 |      4,550 |          0 |          0 |
    fsqrt   $22, $22                    # |     11,893 |     11,893 |          0 |          0 |          0 |          0 |
    bne     be_else.36603               # |     11,893 |     17,201 |          0 |          0 |          0 |      2,654 |
be_then.36603:
    fneg    $22, $22                    # |      9,138 |     33,898 |     24,760 |          0 |          0 |          0 |
    fsub    $22, $30, $22               # |      9,138 |     18,276 |      9,138 |          0 |          0 |          0 |
    fmul    $22, $23, $22               # |      9,138 |     45,690 |     36,552 |          0 |          0 |          0 |
.count move_float
    mov     $22, $42                    # |      9,138 |     45,690 |     36,552 |          0 |          0 |          0 |
    li      1, $22                      # |      9,138 |      9,138 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36603               # |      9,138 |      9,142 |          0 |          0 |          0 |          2 |
be_else.36603:
    fsub    $22, $30, $22               # |      2,755 |      8,366 |      5,611 |          0 |          0 |          0 |
    fmul    $22, $24, $22               # |      2,755 |     13,775 |     11,020 |          0 |          0 |          0 |
.count move_float
    mov     $22, $42                    # |      2,755 |     13,775 |     11,020 |          0 |          0 |          0 |
    li      1, $22                      # |      2,755 |      2,755 |          0 |          0 |          0 |          0 |
be_cont.36603:
ble_cont.36602:
be_cont.36598:
be_cont.36595:
be_cont.36571:
    cmp     $22, 0                      # |    149,820 |    264,007 |      2,755 |     18,572 |          0 |          0 |
    bne     be_else.36604               # |    149,820 |    323,556 |    149,820 |          0 |          0 |     11,958 |
be_then.36604:
    load    [min_caml_objects + $21], $1# |    101,553 |    101,553 |          0 |          0 |          0 |          0 |
    add     $2, 1, $2                   # |    101,553 |    155,199 |          0 |      8,941 |          0 |          0 |
    load    [$1 + 6], $1                # |    101,553 |    194,171 |     92,612 |          0 |          1 |          0 |
    cmp     $1, 0                       # |    101,553 |    304,657 |    203,104 |          0 |          0 |          0 |
    bne     solve_each_element.2871     # |    101,553 |    227,044 |    101,553 |          0 |          0 |     11,969 |
    ret                                 # |     92,181 |     92,181 |          0 |          0 |          0 |          0 |
be_else.36604:
    fcmp    $42, $zero                  # |     48,267 |    106,053 |          0 |      9,631 |          0 |          0 |
    add     $2, 1, $23                  # |     48,267 |     48,267 |          0 |          0 |          0 |          0 |
    bg      ble_else.36606              # |     48,267 |     51,867 |          0 |          0 |          0 |      1,800 |
ble_then.36606:
.count move_args
    mov     $23, $2                     # |        847 |      2,353 |          0 |        251 |          0 |          0 |
    b       solve_each_element.2871     # |        847 |        915 |          0 |          0 |          0 |         34 |
ble_else.36606:
    fcmp    $49, $42                    # |     47,420 |    288,206 |          0 |     40,131 |          0 |          0 |
    bg      ble_else.36607              # |     47,420 |    103,600 |     47,420 |          0 |          0 |      4,380 |
ble_then.36607:
    add     $2, 1, $2                   # |     11,681 |     11,681 |          0 |          0 |          0 |          0 |
    b       solve_each_element.2871     # |     11,681 |     11,701 |          0 |          0 |          0 |         10 |
ble_else.36607:
.count load_float
    load    [f.31949], $24              # |     35,739 |     58,899 |          0 |          0 |      3,860 |          0 |
.count stack_move
    sub     $sp, 6, $sp                 # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    fadd    $42, $24, $24               # |     35,739 |    250,173 |          0 |     35,739 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    load    [$4 + 0], $23               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp + 0], $25  # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    load    [$4 + 1], $26               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    load    [$4 + 2], $28               # |     35,739 |    250,173 |          0 |     35,739 |          0 |          0 |
    load    [min_caml_startp + 1], $27  # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp + 2], $29  # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    fmul    $23, $24, $23               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    fmul    $26, $24, $26               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    fmul    $28, $24, $28               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    fadd    $23, $25, $4                # |     35,739 |    107,217 |     71,478 |          0 |          0 |          0 |
    fadd    $26, $27, $5                # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    fadd    $28, $29, $6                # |     35,739 |    103,899 |          0 |     11,360 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 3]               # |     35,739 |     84,497 |     48,758 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 4]               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 5]               # |     35,739 |     58,459 |     22,720 |          0 |          0 |          0 |
    call    check_all_inside.2856       # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |     35,739 |    250,173 |          0 |     35,739 |          0 |          0 |
.count stack_move
    add     $sp, 6, $sp                 # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    bne     be_else.36608               # |     35,739 |     37,067 |          0 |          0 |          0 |        664 |
be_then.36608:
.count stack_load
    load    [$sp - 4], $1               # |     10,575 |     76,137 |          0 |     10,575 |        352 |          0 |
.count stack_load
    load    [$sp - 5], $3               # |     10,575 |     12,771 |          0 |          0 |        366 |          0 |
.count stack_load
    load    [$sp - 6], $4               # |     10,575 |     13,101 |          0 |          0 |        421 |          0 |
    add     $1, 1, $2                   # |     10,575 |     10,575 |          0 |          0 |          0 |          0 |
    b       solve_each_element.2871     # |     10,575 |     10,599 |          0 |          0 |          0 |         12 |
be_else.36608:
.count stack_load
    load    [$sp - 3], $1               # |     25,164 |    134,292 |          0 |     17,980 |        208 |          0 |
.count move_float
    mov     $24, $49                    # |     25,164 |     25,164 |          0 |          0 |          0 |          0 |
    store   $1, [min_caml_intersection_point + 0]# |     25,164 |     50,120 |     24,956 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $1               # |     25,164 |    142,806 |          0 |     19,567 |         40 |          0 |
    store   $1, [min_caml_intersection_point + 1]# |     25,164 |     75,412 |     50,248 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |     25,164 |     25,662 |          0 |          0 |         83 |          0 |
    store   $1, [min_caml_intersection_point + 2]# |     25,164 |     75,326 |     50,162 |          0 |          0 |          0 |
    store   $21, [min_caml_intersected_object_id + 0]# |     25,164 |     25,164 |          0 |          0 |          0 |          0 |
    store   $22, [min_caml_intsec_rectside + 0]# |     25,164 |     25,164 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 4], $1               # |     25,164 |     26,310 |          0 |          0 |        191 |          0 |
.count stack_load
    load    [$sp - 5], $3               # |     25,164 |     27,156 |          0 |          0 |        332 |          0 |
.count stack_load
    load    [$sp - 6], $4               # |     25,164 |    140,820 |          0 |     18,909 |        367 |          0 |
    add     $1, 1, $2                   # |     25,164 |     25,164 |          0 |          0 |          0 |          0 |
    b       solve_each_element.2871     # |     25,164 |     25,172 |          0 |          0 |          0 |          4 |
.end solve_each_element

######################################################################
.begin solve_one_or_network
solve_one_or_network.2875:
    load    [$3 + $2], $1               # |      6,776 |     34,904 |      1,506 |      4,437 |          0 |          0 |
    li      0, $5                       # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    cmp     $1, -1                      # |      6,776 |     13,552 |      6,776 |          0 |          0 |          0 |
    bne     be_else.36609               # |      6,776 |     13,696 |      6,776 |          0 |          0 |         72 |
be_then.36609:
    ret
be_else.36609:
.count stack_move
    sub     $sp, 10, $sp                # |      6,776 |     40,976 |          0 |      5,700 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |      6,776 |     13,552 |      6,776 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $1], $3 # |      6,776 |      9,830 |          0 |          0 |        509 |          0 |
.count move_args
    mov     $5, $2                      # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    call    solve_each_element.2871     # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $1               # |      6,776 |     27,986 |          0 |      3,377 |        158 |          0 |
    li      0, $2                       # |      6,776 |     47,420 |          0 |      6,774 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |      6,776 |      7,700 |          0 |          0 |        154 |          0 |
    add     $1, 1, $1                   # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |      6,776 |     13,618 |      6,776 |          0 |         11 |          0 |
    cmp     $4, -1                      # |      6,776 |     20,306 |     13,530 |          0 |          0 |          0 |
    bne     be_else.36610               # |      6,776 |     13,580 |      6,776 |          0 |          0 |         14 |
be_then.36610:
.count stack_move
    add     $sp, 10, $sp
    ret
be_else.36610:
.count stack_store
    store   $1, [$sp + 3]               # |      6,776 |     47,186 |          0 |      6,735 |          0 |          0 |
    load    [min_caml_and_net + $4], $3 # |      6,776 |      7,814 |          0 |          0 |        173 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |      6,776 |      7,760 |          0 |          0 |        164 |          0 |
    call    solve_each_element.2871     # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $1               # |      6,776 |      7,004 |          0 |          0 |         38 |          0 |
    li      0, $2                       # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    add     $1, 1, $1                   # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |      6,776 |     47,443 |         41 |      6,735 |         36 |          0 |
    cmp     $4, -1                      # |      6,776 |     20,256 |     13,480 |          0 |          0 |          0 |
    bne     be_else.36611               # |      6,776 |     14,000 |      6,776 |          0 |          0 |        224 |
be_then.36611:
.count stack_move
    add     $sp, 10, $sp
    ret
be_else.36611:
.count stack_store
    store   $1, [$sp + 4]               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $4], $3 # |      6,776 |      6,914 |          0 |          0 |         23 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    call    solve_each_element.2871     # |      6,776 |     39,554 |          0 |      5,463 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $1               # |      6,776 |      6,938 |          0 |          0 |         27 |          0 |
    li      0, $2                       # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    add     $1, 1, $1                   # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |      6,776 |     13,942 |      6,776 |          0 |         65 |          0 |
    cmp     $4, -1                      # |      6,776 |     20,198 |     13,422 |          0 |          0 |          0 |
    bne     be_else.36612               # |      6,776 |     13,706 |      6,776 |          0 |          0 |         77 |
be_then.36612:
.count stack_move
    add     $sp, 10, $sp
    ret
be_else.36612:
.count stack_store
    store   $1, [$sp + 5]               # |      6,776 |     39,548 |          0 |      5,462 |          0 |          0 |
    load    [min_caml_and_net + $4], $3 # |      6,776 |      6,932 |          0 |          0 |         26 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    call    solve_each_element.2871     # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $1               # |      6,776 |      7,796 |          0 |        117 |         53 |          0 |
    li      0, $2                       # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |      6,776 |     39,548 |          0 |      5,462 |          0 |          0 |
    add     $1, 1, $1                   # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |      6,776 |     14,122 |      6,776 |          0 |         95 |          0 |
    cmp     $4, -1                      # |      6,776 |     20,138 |     13,362 |          0 |          0 |          0 |
    bne     be_else.36613               # |      6,776 |     13,562 |      6,776 |          0 |          0 |          5 |
be_then.36613:
.count stack_move
    add     $sp, 10, $sp
    ret
be_else.36613:
.count stack_store
    store   $1, [$sp + 6]               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $4], $3 # |      6,776 |     39,932 |          0 |      5,462 |         64 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    call    solve_each_element.2871     # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $1               # |      6,776 |      6,998 |          0 |          0 |         37 |          0 |
    li      0, $2                       # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    add     $1, 1, $1                   # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |      6,776 |     13,606 |      6,776 |          0 |          9 |          0 |
    cmp     $4, -1                      # |      6,776 |     42,212 |      2,604 |      5,472 |          0 |          0 |
    bne     be_else.36614               # |      6,776 |     13,686 |      6,776 |          0 |          0 |         67 |
be_then.36614:
.count stack_move
    add     $sp, 10, $sp
    ret
be_else.36614:
.count stack_store
    store   $1, [$sp + 7]               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $4], $3 # |      6,776 |      7,730 |          0 |          0 |        159 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    call    solve_each_element.2871     # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $1               # |      6,776 |     40,094 |          0 |      5,472 |         81 |          0 |
    li      0, $2                       # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    add     $1, 1, $1                   # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |      6,776 |     13,672 |      6,776 |          0 |         20 |          0 |
    cmp     $4, -1                      # |      6,776 |     20,288 |     13,512 |          0 |          0 |          0 |
    bne     be_else.36615               # |      6,776 |     13,874 |      6,776 |          0 |          0 |        161 |
be_then.36615:
.count stack_move
    add     $sp, 10, $sp                # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    ret                                 # |      6,776 |     47,432 |          0 |      6,776 |          0 |          0 |
be_else.36615:
.count stack_store
    store   $1, [$sp + 8]
    load    [min_caml_and_net + $4], $3
.count stack_load
    load    [$sp + 0], $4
    call    solve_each_element.2871
.count stack_load
    load    [$sp + 8], $1
    li      0, $2
.count stack_load
    load    [$sp + 1], $3
    add     $1, 1, $1
    load    [$3 + $1], $4
    cmp     $4, -1
    bne     be_else.36616
be_then.36616:
.count stack_move
    add     $sp, 10, $sp
    ret
be_else.36616:
.count stack_store
    store   $1, [$sp + 9]
    load    [min_caml_and_net + $4], $3
.count stack_load
    load    [$sp + 0], $4
    call    solve_each_element.2871
.count stack_move
    add     $sp, 10, $sp
.count stack_load
    load    [$sp - 1], $1
.count stack_load
    load    [$sp - 9], $3
.count stack_load
    load    [$sp - 10], $4
    add     $1, 1, $2
    b       solve_one_or_network.2875
.end solve_one_or_network

######################################################################
.begin trace_or_matrix
trace_or_matrix.2879:
    load    [$3 + $2], $24              # |     23,754 |     97,158 |          0 |     12,197 |         37 |          0 |
    li      0, $25                      # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$24 + 0], $26              # |     23,754 |     48,215 |     23,717 |          0 |        124 |          0 |
    load    [$24 + 1], $27              # |     23,754 |     23,898 |          0 |          0 |         24 |          0 |
    cmp     $26, -1                     # |     23,754 |     47,360 |     23,606 |          0 |          0 |          0 |
    bne     be_else.36617               # |     23,754 |     47,656 |     23,754 |          0 |          0 |         74 |
be_then.36617:
    ret
be_else.36617:
.count stack_move
    sub     $sp, 6, $sp                 # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    cmp     $26, 99                     # |     23,754 |     90,042 |          0 |     11,048 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    bne     be_else.36618               # |     23,754 |     25,156 |          0 |          0 |          0 |        701 |
be_then.36618:
    cmp     $27, -1                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    be      bne_cont.36619              # |     23,754 |     55,090 |     23,754 |          0 |          0 |      3,791 |
bne_then.36619:
.count stack_store
    store   $24, [$sp + 3]              # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $27], $3# |     23,754 |     91,614 |          0 |     11,047 |        263 |          0 |
.count move_args
    mov     $25, $2                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    call    solve_each_element.2871     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |     23,754 |     26,622 |          0 |          0 |        478 |          0 |
    li      0, $2                       # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$3 + 2], $24               # |     23,754 |     47,486 |     23,276 |          0 |         76 |          0 |
    cmp     $24, -1                     # |     23,754 |     71,110 |     47,356 |          0 |          0 |          0 |
    be      bne_cont.36620              # |     23,754 |     47,530 |     23,754 |          0 |          0 |         11 |
bne_then.36620:
    load    [min_caml_and_net + $24], $3# |     23,754 |     91,404 |          0 |     11,047 |        228 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |     23,754 |     24,126 |          0 |          0 |         62 |          0 |
    call    solve_each_element.2871     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$3 + 3], $24               # |     23,754 |     47,982 |     23,754 |          0 |         79 |          0 |
    cmp     $24, -1                     # |     23,754 |     71,104 |     47,350 |          0 |          0 |          0 |
    be      bne_cont.36621              # |     23,754 |     47,508 |     23,754 |          0 |          0 |          0 |
bne_then.36621:
    load    [min_caml_and_net + $24], $3# |     23,754 |     91,248 |          0 |     11,047 |        202 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    call    solve_each_element.2871     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$3 + 4], $24               # |     23,754 |     47,766 |     23,754 |          0 |         43 |          0 |
    cmp     $24, -1                     # |     23,754 |     71,176 |     47,422 |          0 |          0 |          0 |
    be      bne_cont.36622              # |     23,754 |     48,076 |     23,754 |          0 |          0 |        284 |
bne_then.36622:
    load    [min_caml_and_net + $24], $3# |     23,754 |    101,094 |          0 |     12,722 |        168 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    call    solve_each_element.2871     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$3 + 5], $24               # |     23,754 |     47,832 |     23,754 |          0 |         54 |          0 |
    cmp     $24, -1                     # |     23,754 |     71,154 |     47,400 |          0 |          0 |          0 |
    be      bne_cont.36623              # |     23,754 |     48,322 |     23,754 |          0 |          0 |        407 |
bne_then.36623:
    load    [min_caml_and_net + $24], $3
.count stack_load
    load    [$sp + 0], $4
    call    solve_each_element.2871
.count stack_load
    load    [$sp + 3], $3
    li      0, $2
    load    [$3 + 6], $24
    cmp     $24, -1
    be      bne_cont.36624
bne_then.36624:
    load    [min_caml_and_net + $24], $3
.count stack_load
    load    [$sp + 0], $4
    call    solve_each_element.2871
    li      7, $2
.count stack_load
    load    [$sp + 3], $3
.count stack_load
    load    [$sp + 0], $4
    call    solve_one_or_network.2875
bne_cont.36624:
bne_cont.36623:
bne_cont.36622:
bne_cont.36621:
bne_cont.36620:
bne_cont.36619:
.count stack_load
    load    [$sp + 2], $24              # |     23,754 |     91,902 |          0 |     11,224 |        134 |          0 |
    li      0, $2                       # |     23,754 |    100,086 |          0 |     12,722 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |     23,754 |     25,152 |          0 |          0 |        233 |          0 |
    add     $24, 1, $24                 # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$3 + $24], $25             # |     23,754 |     47,508 |     23,754 |          0 |          0 |          0 |
    add     $24, 1, $26                 # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$25 + 0], $27              # |     23,754 |     47,610 |     23,754 |          0 |         17 |          0 |
    load    [$25 + 1], $28              # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    cmp     $27, -1                     # |     23,754 |     47,491 |     23,737 |          0 |          0 |          0 |
    bne     be_else.36625               # |     23,754 |    115,197 |     11,033 |     12,721 |          0 |      2,042 |
be_then.36625:
.count stack_move
    add     $sp, 6, $sp                 # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    ret                                 # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
be_else.36625:
    cmp     $27, 99
    bne     be_else.36626
be_then.36626:
    cmp     $28, -1
    bne     be_else.36627
be_then.36627:
.count stack_move
    add     $sp, 6, $sp
.count move_args
    mov     $26, $2
.count stack_load
    load    [$sp - 6], $4
    b       trace_or_matrix.2879
be_else.36627:
.count stack_store
    store   $24, [$sp + 4]
.count stack_store
    store   $25, [$sp + 5]
    load    [min_caml_and_net + $28], $3
.count stack_load
    load    [$sp + 0], $4
    call    solve_each_element.2871
.count stack_load
    load    [$sp + 5], $3
.count stack_load
    load    [$sp + 4], $2
    li      0, $5
    load    [$3 + 2], $1
    add     $2, 1, $4
    cmp     $1, -1
    bne     be_else.36628
be_then.36628:
.count stack_move
    add     $sp, 6, $sp
.count move_args
    mov     $4, $2
.count stack_load
    load    [$sp - 6], $1
.count stack_load
    load    [$sp - 5], $3
.count move_args
    mov     $1, $4
    b       trace_or_matrix.2879
be_else.36628:
    load    [min_caml_and_net + $1], $3
.count stack_load
    load    [$sp + 0], $4
.count move_args
    mov     $5, $2
    call    solve_each_element.2871
.count stack_load
    load    [$sp + 5], $3
.count stack_load
    load    [$sp + 4], $2
    li      0, $5
    load    [$3 + 3], $1
    add     $2, 1, $4
    cmp     $1, -1
    bne     be_else.36629
be_then.36629:
.count stack_move
    add     $sp, 6, $sp
.count move_args
    mov     $4, $2
.count stack_load
    load    [$sp - 6], $1
.count stack_load
    load    [$sp - 5], $3
.count move_args
    mov     $1, $4
    b       trace_or_matrix.2879
be_else.36629:
    load    [min_caml_and_net + $1], $3
.count stack_load
    load    [$sp + 0], $4
.count move_args
    mov     $5, $2
    call    solve_each_element.2871
.count stack_load
    load    [$sp + 5], $3
.count stack_load
    load    [$sp + 4], $2
    li      0, $5
    load    [$3 + 4], $1
    add     $2, 1, $4
    cmp     $1, -1
    bne     be_else.36630
be_then.36630:
.count stack_move
    add     $sp, 6, $sp
.count move_args
    mov     $4, $2
.count stack_load
    load    [$sp - 6], $1
.count stack_load
    load    [$sp - 5], $3
.count move_args
    mov     $1, $4
    b       trace_or_matrix.2879
be_else.36630:
    load    [min_caml_and_net + $1], $3
.count stack_load
    load    [$sp + 0], $4
.count move_args
    mov     $5, $2
    call    solve_each_element.2871
    li      5, $2
.count stack_load
    load    [$sp + 5], $3
.count stack_load
    load    [$sp + 0], $4
    call    solve_one_or_network.2875
.count stack_move
    add     $sp, 6, $sp
.count stack_load
    load    [$sp - 2], $1
.count stack_load
    load    [$sp - 5], $3
.count stack_load
    load    [$sp - 6], $4
    add     $1, 1, $2
    b       trace_or_matrix.2879
be_else.36626:
.count stack_load
    load    [$sp + 0], $3
.count move_args
    mov     $27, $2
    call    solver.2773
    cmp     $1, 0
    add     $24, 1, $2
    bne     be_else.36631
be_then.36631:
.count stack_move
    add     $sp, 6, $sp
.count stack_load
    load    [$sp - 5], $3
.count stack_load
    load    [$sp - 6], $4
    b       trace_or_matrix.2879
be_else.36631:
    fcmp    $49, $42
    li      1, $1
    bg      ble_else.36632
ble_then.36632:
.count stack_move
    add     $sp, 6, $sp
.count stack_load
    load    [$sp - 5], $3
.count stack_load
    load    [$sp - 6], $4
    b       trace_or_matrix.2879
ble_else.36632:
.count stack_store
    store   $24, [$sp + 4]
.count stack_load
    load    [$sp + 0], $4
.count move_args
    mov     $25, $3
.count move_args
    mov     $1, $2
    call    solve_one_or_network.2875
.count stack_move
    add     $sp, 6, $sp
.count stack_load
    load    [$sp - 2], $1
.count stack_load
    load    [$sp - 5], $3
.count stack_load
    load    [$sp - 6], $4
    add     $1, 1, $2
    b       trace_or_matrix.2879
be_else.36618:
.count move_args
    mov     $4, $3
.count move_args
    mov     $26, $2
    call    solver.2773
    cmp     $1, 0
    bne     be_else.36633
be_then.36633:
.count stack_move
    add     $sp, 6, $sp
.count stack_load
    load    [$sp - 4], $1
.count stack_load
    load    [$sp - 5], $3
.count stack_load
    load    [$sp - 6], $4
    add     $1, 1, $2
    b       trace_or_matrix.2879
be_else.36633:
.count stack_load
    load    [$sp + 2], $1
    fcmp    $49, $42
    li      1, $3
    add     $1, 1, $2
    bg      ble_else.36634
ble_then.36634:
.count stack_move
    add     $sp, 6, $sp
.count stack_load
    load    [$sp - 5], $3
.count stack_load
    load    [$sp - 6], $4
    b       trace_or_matrix.2879
ble_else.36634:
.count stack_load
    load    [$sp + 0], $4
.count move_args
    mov     $3, $2
.count move_args
    mov     $24, $3
    call    solve_one_or_network.2875
.count stack_move
    add     $sp, 6, $sp
.count stack_load
    load    [$sp - 4], $1
.count stack_load
    load    [$sp - 5], $3
.count stack_load
    load    [$sp - 6], $4
    add     $1, 1, $2
    b       trace_or_matrix.2879
.end trace_or_matrix

######################################################################
.begin solve_each_element_fast
solve_each_element_fast.2885:
    load    [$3 + $2], $21              # | 13,852,375 | 17,065,795 |          0 |    209,726 |    325,844 |          0 |
    load    [$4 + 1], $22               # | 13,852,375 | 16,076,101 |          0 |    189,552 |    181,069 |          0 |
    load    [$4 + 0], $23               # | 13,852,375 | 14,823,745 |          0 |          0 |    161,895 |          0 |
    cmp     $21, -1                     # | 13,852,375 | 13,852,375 |          0 |          0 |          0 |          0 |
    bne     be_else.36635               # | 13,852,375 | 29,806,410 | 13,852,375 |          0 |          0 |  1,050,830 |
be_then.36635:
    ret                                 # |  3,308,310 |  3,308,310 |          0 |          0 |          0 |          0 |
be_else.36635:
    load    [min_caml_objects + $21], $24# | 10,544,065 | 11,826,955 |          0 |          0 |    213,815 |          0 |
    load    [$22 + $21], $22            # | 10,544,065 | 34,991,923 |          0 |          0 |  4,074,643 |          0 |
    load    [$23 + 1], $25              # | 10,544,065 | 11,245,843 |          0 |          0 |    116,963 |          0 |
    load    [$24 + 1], $27              # | 10,544,065 | 17,705,413 |          0 |    189,730 |  1,003,828 |          0 |
    load    [$24 + 10], $26             # | 10,544,065 | 16,440,313 |          0 |          0 |    982,708 |          0 |
    load    [$24 + 4], $28              # | 10,544,065 | 11,442,385 |          0 |          0 |    149,720 |          0 |
    cmp     $27, 1                      # | 10,544,065 | 10,544,065 |          0 |          0 |          0 |          0 |
    load    [$26 + 0], $29              # | 10,544,065 | 16,786,819 |          0 |          0 |  1,040,459 |          0 |
    load    [$26 + 1], $30              # | 10,544,065 | 11,291,617 |          0 |          0 |    124,592 |          0 |
    load    [$26 + 2], $31              # | 10,544,065 | 10,883,779 |          0 |          0 |     56,619 |          0 |
    bne     be_else.36636               # | 10,544,065 | 12,941,513 |          0 |          0 |          0 |  1,198,724 |
be_then.36636:
    load    [$22 + 0], $27              # |  3,873,912 | 24,317,370 |          0 |    171,994 |  3,235,249 |          0 |
    load    [$28 + 1], $26              # |  3,873,912 |  5,000,634 |          0 |          0 |    187,787 |          0 |
    load    [$22 + 1], $28              # |  3,873,912 |  3,956,988 |          0 |          0 |     13,846 |          0 |
    fsub    $27, $29, $27               # |  3,873,912 |  3,873,912 |          0 |          0 |          0 |          0 |
    load    [$24 + 4], $32              # |  3,873,912 |  3,920,898 |          0 |          0 |      7,831 |          0 |
    load    [$23 + 0], $33              # |  3,873,912 |  4,476,030 |          0 |          0 |    100,353 |          0 |
    load    [$22 + 2], $34              # |  3,873,912 |  3,975,660 |          0 |          0 |     16,958 |          0 |
    load    [$32 + 0], $32              # |  3,873,912 |  4,949,820 |          0 |          0 |    179,318 |          0 |
    fmul    $27, $28, $27               # |  3,873,912 |  4,890,276 |          0 |    169,394 |          0 |          0 |
    load    [$22 + 3], $35              # |  3,873,912 |  7,574,598 |          0 |          0 |    616,781 |          0 |
    fsub    $34, $30, $28               # |  3,873,912 |  3,873,912 |          0 |          0 |          0 |          0 |
    load    [$24 + 4], $34              # |  3,873,912 |  3,923,676 |          0 |          0 |      8,294 |          0 |
    load    [$23 + 2], $1               # |  3,873,912 |  4,159,050 |          0 |          0 |     47,523 |          0 |
    fmul    $27, $25, $25               # |  3,873,912 |  3,873,912 |          0 |          0 |          0 |          0 |
    load    [$24 + 4], $5               # |  3,873,912 |  3,901,596 |          0 |          0 |      4,614 |          0 |
    fmul    $28, $35, $28               # |  3,873,912 |  3,873,912 |          0 |          0 |          0 |          0 |
    load    [$34 + 2], $34              # |  3,873,912 |  5,074,578 |          0 |    169,046 |     31,065 |          0 |
    fmul    $27, $1, $35                # |  3,873,912 |  3,873,912 |          0 |          0 |          0 |          0 |
    fadd    $25, $30, $25               # |  3,873,912 |  3,873,912 |          0 |          0 |          0 |          0 |
    load    [$5 + 0], $1                # |  3,873,912 |  3,905,226 |          0 |          0 |      5,219 |          0 |
    fmul    $28, $33, $33               # |  3,873,912 |  3,873,912 |          0 |          0 |          0 |          0 |
    load    [$23 + 0], $5               # |  3,873,912 |  3,922,686 |          0 |          0 |      8,129 |          0 |
    fadd    $35, $31, $35               # |  3,873,912 |  3,873,912 |          0 |          0 |          0 |          0 |
    fabs    $25, $25                    # |  3,873,912 |  3,873,912 |          0 |          0 |          0 |          0 |
    load    [$22 + 4], $6               # |  3,873,912 | 24,496,008 |          0 |    202,287 |  3,234,729 |          0 |
    fcmp    $26, $25                    # |  3,873,912 |  3,873,912 |          0 |          0 |          0 |          0 |
    fadd    $33, $29, $33               # |  3,873,912 |  3,873,912 |          0 |          0 |          0 |          0 |
    bg      ble_else.36637              # |  3,873,912 |  5,638,212 |          0 |          0 |          0 |    882,150 |
ble_then.36637:
    li      0, $25                      # |  3,045,892 |  3,045,892 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36637              # |  3,045,892 |  3,050,588 |          0 |          0 |          0 |      2,348 |
ble_else.36637:
    fabs    $35, $25                    # |    828,020 |    828,020 |          0 |          0 |          0 |          0 |
    load    [$22 + 1], $26              # |    828,020 |    835,634 |          0 |          0 |      1,269 |          0 |
    fcmp    $34, $25                    # |    828,020 |  1,580,906 |          0 |    125,481 |          0 |          0 |
    bg      ble_else.36638              # |    828,020 |  2,118,726 |    828,020 |          0 |          0 |    231,343 |
ble_then.36638:
    li      0, $25                      # |    324,595 |    324,595 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36638              # |    324,595 |    324,619 |          0 |          0 |          0 |         12 |
ble_else.36638:
    fcmp    $26, $zero                  # |    503,425 |    503,425 |          0 |          0 |          0 |          0 |
    bne     be_else.36639               # |    503,425 |  1,007,140 |    503,425 |          0 |          0 |        145 |
be_then.36639:
    li      0, $25
.count b_cont
    b       be_cont.36639
be_else.36639:
    li      1, $25                      # |    503,425 |    506,539 |          0 |        519 |          0 |          0 |
be_cont.36639:
ble_cont.36638:
ble_cont.36637:
    cmp     $25, 0                      # |  3,873,912 |  4,383,715 |    503,425 |      1,063 |          0 |          0 |
    bne     be_else.36640               # |  3,873,912 |  7,837,426 |  3,873,912 |          0 |          0 |     44,801 |
be_then.36640:
    fabs    $33, $25                    # |  3,370,487 |  3,370,487 |          0 |          0 |          0 |          0 |
    fsub    $6, $31, $26                # |  3,370,487 |  3,370,487 |          0 |          0 |          0 |          0 |
    fcmp    $32, $25                    # |  3,370,487 |  3,370,487 |          0 |          0 |          0 |          0 |
    bg      ble_else.36641              # |  3,370,487 |  8,417,310 |  3,370,487 |          0 |          0 |    838,168 |
ble_then.36641:
    li      0, $25                      # |  1,577,233 |  1,577,233 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36641              # |  1,577,233 |  1,594,389 |          0 |      2,854 |          0 |         16 |
ble_else.36641:
    load    [$23 + 2], $27              # |  1,793,254 |  1,869,736 |          0 |      1,453 |     11,294 |          0 |
    load    [$24 + 4], $25              # |  1,793,254 |  1,857,520 |          0 |          0 |     10,711 |          0 |
    load    [$22 + 3], $32              # |  1,793,254 |  1,817,680 |          0 |          0 |      4,071 |          0 |
    fmul    $28, $27, $27               # |  1,793,254 |  1,793,254 |          0 |          0 |          0 |          0 |
    load    [$25 + 2], $25              # |  1,793,254 |  1,842,238 |          0 |          0 |      8,164 |          0 |
    fadd    $27, $31, $27               # |  1,793,254 |  7,148,524 |  5,355,270 |          0 |          0 |          0 |
    fabs    $27, $27                    # |  1,793,254 |  8,966,270 |  7,173,016 |          0 |          0 |          0 |
    fcmp    $25, $27                    # |  1,793,254 |  3,595,198 |  1,791,516 |      1,738 |          0 |          0 |
    bg      ble_else.36642              # |  1,793,254 |  4,260,708 |  1,793,254 |          0 |          0 |    337,100 |
ble_then.36642:
    li      0, $25                      # |    570,589 |    570,589 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36642              # |    570,589 |    570,791 |          0 |          0 |          0 |        101 |
ble_else.36642:
    fcmp    $32, $zero                  # |  1,222,665 |  1,222,665 |          0 |          0 |          0 |          0 |
    bne     be_else.36643               # |  1,222,665 |  2,455,192 |  1,222,665 |          0 |          0 |      4,931 |
be_then.36643:
    li      0, $25
.count b_cont
    b       be_cont.36643
be_else.36643:
    li      1, $25                      # |  1,222,665 |  1,224,105 |          0 |        240 |          0 |          0 |
be_cont.36643:
ble_cont.36642:
ble_cont.36641:
    cmp     $25, 0                      # |  3,370,487 |  4,600,118 |  1,222,665 |      1,161 |          0 |          0 |
    bne     be_else.36644               # |  3,370,487 |  6,741,292 |  3,370,487 |          0 |          0 |        159 |
be_then.36644:
    load    [$22 + 5], $25              # |  2,147,822 |  2,173,232 |          0 |          0 |      4,235 |          0 |
    load    [$24 + 4], $24              # |  2,147,822 |  2,160,902 |          0 |          0 |      2,180 |          0 |
    load    [$23 + 1], $23              # |  2,147,822 |  2,189,840 |          0 |          0 |      7,003 |          0 |
    fmul    $26, $25, $25               # |  2,147,822 |  2,147,822 |          0 |          0 |          0 |          0 |
    load    [$24 + 1], $24              # |  2,147,822 |  2,209,418 |          0 |          0 |     10,266 |          0 |
    load    [$22 + 5], $22              # |  2,147,822 |  2,177,576 |          0 |      1,401 |      3,558 |          0 |
    fmul    $25, $5, $26                # |  2,147,822 |  6,416,824 |  4,269,002 |          0 |          0 |          0 |
    fmul    $25, $23, $23               # |  2,147,822 |  2,147,822 |          0 |          0 |          0 |          0 |
    fadd    $26, $29, $26               # |  2,147,822 |  8,591,288 |  6,443,466 |          0 |          0 |          0 |
    fadd    $23, $30, $23               # |  2,147,822 |  2,147,822 |          0 |          0 |          0 |          0 |
    fabs    $26, $26                    # |  2,147,822 |  8,591,288 |  6,443,466 |          0 |          0 |          0 |
    fabs    $23, $23                    # |  2,147,822 |  2,147,822 |          0 |          0 |          0 |          0 |
    fcmp    $1, $26                     # |  2,147,822 |  2,147,822 |          0 |          0 |          0 |          0 |
    bg      ble_else.36645              # |  2,147,822 |  5,413,483 |  2,146,421 |      1,401 |          0 |    555,417 |
ble_then.36645:
    li      0, $22                      # |  1,541,308 |  1,541,308 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36636               # |  1,541,308 |  1,541,320 |          0 |          0 |          0 |          6 |
ble_else.36645:
    fcmp    $24, $23                    # |    606,514 |    606,514 |          0 |          0 |          0 |          0 |
    bg      ble_else.36646              # |    606,514 |  1,500,424 |    606,514 |          0 |          0 |    143,698 |
ble_then.36646:
    li      0, $22                      # |    331,936 |    331,936 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36636               # |    331,936 |    332,060 |          0 |          0 |          0 |         62 |
ble_else.36646:
    fcmp    $22, $zero                  # |    274,578 |    274,578 |          0 |          0 |          0 |          0 |
    bne     be_else.36647               # |    274,578 |    561,399 |    274,175 |        403 |          0 |      5,114 |
be_then.36647:
    li      0, $22
.count b_cont
    b       be_cont.36636
be_else.36647:
.count move_float
    mov     $25, $42                    # |    274,578 |    274,578 |          0 |          0 |          0 |          0 |
    li      3, $22                      # |    274,578 |    274,578 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36636               # |    274,578 |    274,586 |          0 |          0 |          0 |          4 |
be_else.36644:
.count move_float
    mov     $28, $42                    # |  1,222,665 |  1,229,625 |          0 |      1,160 |          0 |          0 |
    li      2, $22                      # |  1,222,665 |  1,222,665 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36636               # |  1,222,665 |  1,229,467 |          0 |      1,133 |          0 |          2 |
be_else.36640:
.count move_float
    mov     $27, $42                    # |    503,425 |    513,301 |          0 |      1,646 |          0 |          0 |
    li      1, $22                      # |    503,425 |    503,425 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36636               # |    503,425 |    503,445 |          0 |          0 |          0 |         10 |
be_else.36636:
    cmp     $27, 2                      # |  6,670,153 |  6,679,207 |          0 |      1,509 |          0 |          0 |
    bne     be_else.36648               # |  6,670,153 | 13,561,806 |  6,670,153 |          0 |          0 |    110,750 |
be_then.36648:
    load    [$22 + 0], $22              # |  1,242,328 |  7,996,072 |          0 |          0 |  1,125,624 |          0 |
    load    [$26 + 3], $23              # |  1,242,328 |  1,264,216 |          0 |          0 |      3,648 |          0 |
    fcmp    $zero, $22                  # |  1,242,328 |  1,369,334 |    116,578 |      1,738 |          0 |          0 |
    bg      ble_else.36649              # |  1,242,328 |  2,949,990 |  1,242,328 |          0 |          0 |    232,667 |
ble_then.36649:
    li      0, $22                      # |    647,143 |    647,143 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36648               # |    647,143 |    647,161 |          0 |          0 |          0 |          9 |
ble_else.36649:
    fmul    $22, $23, $22               # |    595,185 |    595,185 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $22, $42                    # |    595,185 |  2,975,925 |  2,380,740 |          0 |          0 |          0 |
    li      1, $22                      # |    595,185 |    595,185 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36648               # |    595,185 |    595,199 |          0 |          0 |          0 |          7 |
be_else.36648:
    load    [$22 + 0], $23              # |  5,427,825 | 30,142,947 |          0 |      1,386 |  4,117,801 |          0 |
    load    [$22 + 1], $25              # |  5,427,825 |  5,488,917 |          0 |          0 |     10,182 |          0 |
    load    [$22 + 2], $27              # |  5,427,825 |  6,238,437 |          0 |          0 |    135,102 |          0 |
    fcmp    $23, $zero                  # |  5,427,825 |  5,427,825 |          0 |          0 |          0 |          0 |
    bne     be_else.36650               # |  5,427,825 | 10,877,824 |  5,427,825 |          0 |          0 |     11,087 |
be_then.36650:
    li      0, $22
.count b_cont
    b       be_cont.36650
be_else.36650:
    fmul    $25, $29, $25               # |  5,427,825 |  5,427,825 |          0 |          0 |          0 |          0 |
    fmul    $27, $30, $27               # |  5,427,825 |  5,436,141 |          0 |      1,386 |          0 |          0 |
    load    [$22 + 3], $28              # |  5,427,825 | 11,967,489 |          0 |          0 |  1,089,944 |          0 |
    load    [$26 + 3], $26              # |  5,427,825 |  6,178,233 |          0 |          0 |    125,068 |          0 |
    load    [$24 + 6], $24              # |  5,427,825 |  9,117,171 |          0 |          0 |    614,891 |          0 |
    fmul    $28, $31, $28               # |  5,427,825 |  5,427,825 |          0 |          0 |          0 |          0 |
    fadd    $25, $27, $25               # |  5,427,825 |  5,427,825 |          0 |          0 |          0 |          0 |
    fmul    $23, $26, $23               # |  5,427,825 |  5,427,825 |          0 |          0 |          0 |          0 |
    load    [$22 + 4], $26              # |  5,427,825 | 30,082,527 |          0 |          0 |  4,109,117 |          0 |
    load    [$22 + 4], $22              # |  5,427,825 |  5,436,141 |          0 |      1,386 |          0 |          0 |
    fadd    $25, $28, $25               # |  5,427,825 |  6,746,533 |  1,318,708 |          0 |          0 |          0 |
    fmul    $25, $25, $27               # |  5,427,825 | 27,139,125 | 21,711,300 |          0 |          0 |          0 |
    fsub    $27, $23, $23               # |  5,427,825 | 27,139,125 | 21,711,300 |          0 |          0 |          0 |
    fcmp    $23, $zero                  # |  5,427,825 | 27,139,125 | 21,711,300 |          0 |          0 |          0 |
    bg      ble_else.36651              # |  5,427,825 | 12,156,720 |  5,427,825 |          0 |          0 |    650,535 |
ble_then.36651:
    li      0, $22                      # |  3,746,732 |  3,746,732 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36651              # |  3,746,732 |  3,746,760 |          0 |          0 |          0 |         14 |
ble_else.36651:
    cmp     $24, 0                      # |  1,681,093 |  1,690,777 |          0 |      1,614 |          0 |          0 |
    bne     be_else.36652               # |  1,681,093 |  4,052,346 |  1,681,093 |          0 |          0 |    345,080 |
be_then.36652:
    fsqrt   $23, $22                    # |  1,260,286 |  1,260,286 |          0 |          0 |          0 |          0 |
    fsub    $25, $22, $22               # |  1,260,286 |  6,301,430 |  5,041,144 |          0 |          0 |          0 |
    fmul    $22, $26, $22               # |  1,260,286 |  6,301,430 |  5,041,144 |          0 |          0 |          0 |
.count move_float
    mov     $22, $42                    # |  1,260,286 |  6,301,430 |  5,041,144 |          0 |          0 |          0 |
    li      1, $22                      # |  1,260,286 |  1,260,286 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36652               # |  1,260,286 |  1,260,410 |          0 |          0 |          0 |         62 |
be_else.36652:
    fsqrt   $23, $23                    # |    420,807 |    420,807 |          0 |          0 |          0 |          0 |
    fadd    $25, $23, $23               # |    420,807 |  2,104,035 |  1,683,228 |          0 |          0 |          0 |
    fmul    $23, $22, $22               # |    420,807 |  2,104,035 |  1,683,228 |          0 |          0 |          0 |
.count move_float
    mov     $22, $42                    # |    420,807 |  2,104,035 |  1,683,228 |          0 |          0 |          0 |
    li      1, $22                      # |    420,807 |    420,807 |          0 |          0 |          0 |          0 |
be_cont.36652:
ble_cont.36651:
be_cont.36650:
be_cont.36648:
be_cont.36636:
    cmp     $22, 0                      # | 10,544,065 | 10,990,552 |    420,807 |      4,280 |          0 |          0 |
    bne     be_else.36653               # | 10,544,065 | 21,485,554 | 10,544,065 |          0 |          0 |    198,712 |
be_then.36653:
    load    [min_caml_objects + $21], $1# |  6,267,119 |  6,460,469 |          0 |          0 |     32,225 |          0 |
    add     $2, 1, $2                   # |  6,267,119 |  6,272,951 |          0 |        972 |          0 |          0 |
    load    [$1 + 6], $1                # |  6,267,119 | 13,582,799 |  6,233,922 |          0 |    180,293 |          0 |
    cmp     $1, 0                       # |  6,267,119 | 18,440,771 | 12,173,652 |          0 |          0 |          0 |
    bne     solve_each_element_fast.2885# |  6,267,119 | 13,427,778 |  6,267,119 |          0 |          0 |    446,770 |
    ret                                 # |  5,339,098 |  5,339,098 |          0 |          0 |          0 |          0 |
be_else.36653:
    fcmp    $42, $zero                  # |  4,276,946 |  4,281,542 |          0 |        766 |          0 |          0 |
    add     $2, 1, $23                  # |  4,276,946 |  4,276,946 |          0 |          0 |          0 |          0 |
    load    [$4 + 0], $24               # |  4,276,946 |  4,581,614 |          0 |          0 |     50,778 |          0 |
    bg      ble_else.36655              # |  4,276,946 |  5,708,744 |          0 |     57,740 |          0 |    542,679 |
ble_then.36655:
.count move_args
    mov     $23, $2                     # |  2,880,318 |  2,880,318 |          0 |          0 |          0 |          0 |
    b       solve_each_element_fast.2885# |  2,880,318 |  2,881,394 |          0 |          0 |          0 |        538 |
ble_else.36655:
    fcmp    $49, $42                    # |  1,396,628 |  1,396,628 |          0 |          0 |          0 |          0 |
    add     $2, 1, $23                  # |  1,396,628 |  1,396,628 |          0 |          0 |          0 |          0 |
    li      0, $25                      # |  1,396,628 |  1,396,628 |          0 |          0 |          0 |          0 |
    bg      ble_else.36656              # |  1,396,628 |  1,842,230 |          0 |          0 |          0 |    222,801 |
ble_then.36656:
.count move_args
    mov     $23, $2                     # |    215,261 |    215,261 |          0 |          0 |          0 |          0 |
    b       solve_each_element_fast.2885# |    215,261 |    383,099 |          0 |     27,969 |          0 |         12 |
ble_else.36656:
.count load_float
    load    [f.31949], $26              # |  1,181,367 |  9,134,277 |          0 |    986,860 |    338,625 |          0 |
.count stack_move
    sub     $sp, 6, $sp                 # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
    fadd    $42, $26, $26               # |  1,181,367 |  2,024,109 |    842,742 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
    load    [$24 + 0], $23              # |  1,181,367 |  1,278,873 |          0 |          0 |     16,251 |          0 |
    load    [$24 + 1], $27              # |  1,181,367 |  5,113,167 |          0 |    653,281 |      2,019 |          0 |
    load    [$24 + 2], $24              # |  1,181,367 |  1,230,705 |          0 |          0 |      8,223 |          0 |
    fmul    $23, $26, $23               # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
    fmul    $27, $26, $27               # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
    fmul    $24, $26, $24               # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $25, $2                     # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
    fadd    $23, $51, $4                # |  1,181,367 |  2,362,734 |  1,181,367 |          0 |          0 |          0 |
    fadd    $27, $52, $5                # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
    fadd    $24, $53, $6                # |  1,181,367 |  5,101,053 |          0 |    653,281 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 3]               # |  1,181,367 |  2,237,539 |  1,056,172 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 4]               # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 5]               # |  1,181,367 |  2,487,929 |  1,306,562 |          0 |          0 |          0 |
    call    check_all_inside.2856       # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 6, $sp                 # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
    bne     be_else.36657               # |  1,181,367 |  1,182,121 |          0 |          0 |          0 |        377 |
be_then.36657:
.count stack_load
    load    [$sp - 4], $1               # |    424,948 |  1,815,370 |          0 |    190,497 |     41,240 |          0 |
.count stack_load
    load    [$sp - 5], $3               # |    424,948 |    676,558 |          0 |          0 |     41,935 |          0 |
.count stack_load
    load    [$sp - 6], $4               # |    424,948 |    675,772 |          0 |          0 |     41,804 |          0 |
    add     $1, 1, $2                   # |    424,948 |    424,948 |          0 |          0 |          0 |          0 |
    b       solve_each_element_fast.2885# |    424,948 |    424,972 |          0 |          0 |          0 |         12 |
be_else.36657:
.count stack_load
    load    [$sp - 3], $1               # |    756,419 |  3,748,103 |          0 |    463,105 |     35,509 |          0 |
.count move_float
    mov     $26, $49                    # |    756,419 |    756,419 |          0 |          0 |          0 |          0 |
    store   $1, [min_caml_intersection_point + 0]# |    756,419 |  1,477,329 |    720,910 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $1               # |    756,419 |  4,692,215 |          0 |    651,099 |      4,867 |          0 |
    store   $1, [min_caml_intersection_point + 1]# |    756,419 |  2,259,523 |  1,503,104 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |    756,419 |    786,137 |          0 |          0 |      4,953 |          0 |
    store   $1, [min_caml_intersection_point + 2]# |    756,419 |  2,259,351 |  1,502,932 |          0 |          0 |          0 |
    store   $21, [min_caml_intersected_object_id + 0]# |    756,419 |    756,419 |          0 |          0 |          0 |          0 |
    store   $22, [min_caml_intsec_rectside + 0]# |    756,419 |    756,419 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 4], $1               # |    756,419 |    999,827 |          0 |          0 |     40,568 |          0 |
.count stack_load
    load    [$sp - 5], $3               # |    756,419 |  1,140,245 |          0 |          0 |     63,971 |          0 |
.count stack_load
    load    [$sp - 6], $4               # |    756,419 |  2,371,937 |          0 |    210,831 |     58,422 |          0 |
    add     $1, 1, $2                   # |    756,419 |    756,419 |          0 |          0 |          0 |          0 |
    b       solve_each_element_fast.2885# |    756,419 |    756,435 |          0 |          0 |          0 |          8 |
.end solve_each_element_fast

######################################################################
.begin solve_one_or_network_fast
solve_one_or_network_fast.2889:
    load    [$3 + $2], $1               # |    684,824 |  3,579,987 |    240,751 |    441,278 |      1,124 |          0 |
    li      0, $5                       # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    cmp     $1, -1                      # |    684,824 |  1,368,524 |    683,700 |          0 |          0 |          0 |
    bne     be_else.36658               # |    684,824 |  1,369,660 |    684,824 |          0 |          0 |          6 |
be_then.36658:
    ret
be_else.36658:
.count stack_move
    sub     $sp, 10, $sp                # |    684,824 |  3,333,734 |          0 |    441,485 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |    684,824 |  1,369,648 |    684,824 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $1], $3 # |    684,824 |    883,382 |          0 |          0 |     33,093 |          0 |
.count move_args
    mov     $5, $2                      # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    call    solve_each_element_fast.2885# |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $1               # |    684,824 |    964,622 |          0 |          0 |     46,633 |          0 |
    li      0, $2                       # |    684,824 |  3,333,734 |          0 |    441,485 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |    684,824 |    946,472 |          0 |          0 |     43,608 |          0 |
    add     $1, 1, $1                   # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |    684,824 |  1,497,928 |    684,824 |          0 |     21,380 |          0 |
    cmp     $4, -1                      # |    684,824 |  2,011,712 |  1,326,888 |          0 |          0 |          0 |
    bne     be_else.36659               # |    684,824 |  1,376,352 |    684,824 |          0 |          0 |      3,352 |
be_then.36659:
.count stack_move
    add     $sp, 10, $sp
    ret
be_else.36659:
.count stack_store
    store   $1, [$sp + 3]               # |    684,824 |  3,333,098 |          0 |    441,379 |          0 |          0 |
    load    [min_caml_and_net + $4], $3 # |    684,824 |    697,496 |          0 |          0 |      2,112 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |    684,824 |    951,260 |          0 |          0 |     44,406 |          0 |
    call    solve_each_element_fast.2885# |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $1               # |    684,824 |    762,614 |          0 |          0 |     12,965 |          0 |
    li      0, $2                       # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |    684,824 |    725,102 |          0 |          0 |      6,713 |          0 |
    add     $1, 1, $1                   # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |    684,824 |  3,505,901 |    267,249 |    417,575 |      8,063 |          0 |
    cmp     $4, -1                      # |    684,824 |  2,038,346 |  1,353,522 |          0 |          0 |          0 |
    bne     be_else.36660               # |    684,824 |  1,512,912 |    684,824 |          0 |          0 |     71,632 |
be_then.36660:
.count stack_move
    add     $sp, 10, $sp
    ret
be_else.36660:
.count stack_store
    store   $1, [$sp + 4]               # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $4], $3 # |    684,824 |    724,952 |          0 |          0 |      6,688 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |    684,824 |    716,126 |          0 |          0 |      5,217 |          0 |
    call    solve_each_element_fast.2885# |    684,824 |  3,190,280 |          0 |    417,576 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $1               # |    684,824 |    746,594 |          0 |          0 |     10,295 |          0 |
    li      0, $2                       # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |    684,824 |    716,642 |          0 |          0 |      5,303 |          0 |
    add     $1, 1, $1                   # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |    684,824 |  1,518,022 |    684,824 |          0 |     24,729 |          0 |
    cmp     $4, -1                      # |    684,824 |  2,005,014 |  1,320,190 |          0 |          0 |          0 |
    bne     be_else.36661               # |    684,824 |  1,369,706 |    684,824 |          0 |          0 |         29 |
be_then.36661:
.count stack_move
    add     $sp, 10, $sp
    ret
be_else.36661:
.count stack_store
    store   $1, [$sp + 5]               # |    684,824 |  2,189,336 |          0 |    250,752 |          0 |          0 |
    load    [min_caml_and_net + $4], $3 # |    684,824 |    788,966 |          0 |          0 |     17,357 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |    684,824 |    707,612 |          0 |          0 |      3,798 |          0 |
    call    solve_each_element_fast.2885# |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $1               # |    684,824 |    758,522 |          0 |          0 |     12,283 |          0 |
    li      0, $2                       # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |    684,824 |  3,214,106 |          0 |    417,576 |      3,971 |          0 |
    add     $1, 1, $1                   # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |    684,824 |  1,416,640 |    684,824 |          0 |      7,832 |          0 |
    cmp     $4, -1                      # |    684,824 |  2,038,808 |  1,353,984 |          0 |          0 |          0 |
    bne     be_else.36662               # |    684,824 |  1,369,664 |    684,824 |          0 |          0 |          8 |
be_then.36662:
.count stack_move
    add     $sp, 10, $sp
    ret
be_else.36662:
.count stack_store
    store   $1, [$sp + 6]               # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $4], $3 # |    684,824 |  2,658,296 |          0 |    307,623 |     21,289 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |    684,824 |    701,180 |          0 |          0 |      2,726 |          0 |
    call    solve_each_element_fast.2885# |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $1               # |    684,824 |    814,352 |          0 |          0 |     21,588 |          0 |
    li      0, $2                       # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |    684,824 |    742,196 |          0 |          0 |      9,562 |          0 |
    add     $1, 1, $1                   # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |    684,824 |  1,458,118 |    684,824 |          0 |     14,745 |          0 |
    cmp     $4, -1                      # |    684,824 |  3,265,544 |    735,042 |    307,613 |          0 |          0 |
    bne     be_else.36663               # |    684,824 |  1,371,290 |    684,824 |          0 |          0 |        821 |
be_then.36663:
.count stack_move
    add     $sp, 10, $sp
    ret
be_else.36663:
.count stack_store
    store   $1, [$sp + 7]               # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $4], $3 # |    684,824 |    774,020 |          0 |          0 |     14,866 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |    684,824 |    727,202 |          0 |          0 |      7,063 |          0 |
    call    solve_each_element_fast.2885# |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $1               # |    684,824 |  2,617,160 |          0 |    305,054 |     17,002 |          0 |
    li      0, $2                       # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |    684,824 |    754,592 |          0 |          0 |     11,628 |          0 |
    add     $1, 1, $1                   # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $4               # |    684,824 |  1,430,062 |    684,824 |          0 |     10,069 |          0 |
    cmp     $4, -1                      # |    684,824 |  2,034,334 |  1,349,510 |          0 |          0 |          0 |
    bne     be_else.36664               # |    684,824 |  1,369,656 |    684,824 |          0 |          0 |          4 |
be_then.36664:
.count stack_move
    add     $sp, 10, $sp                # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    ret                                 # |    684,824 |  3,331,826 |          0 |    441,167 |          0 |          0 |
be_else.36664:
.count stack_store
    store   $1, [$sp + 8]
    load    [min_caml_and_net + $4], $3
.count stack_load
    load    [$sp + 0], $4
    call    solve_each_element_fast.2885
.count stack_load
    load    [$sp + 8], $1
    li      0, $2
.count stack_load
    load    [$sp + 1], $3
    add     $1, 1, $1
    load    [$3 + $1], $4
    cmp     $4, -1
    bne     be_else.36665
be_then.36665:
.count stack_move
    add     $sp, 10, $sp
    ret
be_else.36665:
.count stack_store
    store   $1, [$sp + 9]
    load    [min_caml_and_net + $4], $3
.count stack_load
    load    [$sp + 0], $4
    call    solve_each_element_fast.2885
.count stack_move
    add     $sp, 10, $sp
.count stack_load
    load    [$sp - 1], $1
.count stack_load
    load    [$sp - 9], $3
.count stack_load
    load    [$sp - 10], $4
    add     $1, 1, $2
    b       solve_one_or_network_fast.2889
.end solve_one_or_network_fast

######################################################################
.begin trace_or_matrix_fast
trace_or_matrix_fast.2893:
    load    [$3 + $2], $17              # |  1,134,616 |  5,052,514 |          0 |    624,225 |     28,758 |          0 |
    li      0, $18                      # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$17 + 0], $19              # |  1,134,616 |  2,309,798 |  1,105,858 |          0 |     11,554 |          0 |
    load    [$17 + 1], $20              # |  1,134,616 |  1,166,206 |          0 |          0 |      5,265 |          0 |
    cmp     $19, -1                     # |  1,134,616 |  2,252,413 |  1,117,797 |          0 |          0 |          0 |
    bne     be_else.36666               # |  1,134,616 |  2,269,268 |  1,134,616 |          0 |          0 |         18 |
be_then.36666:
    ret
be_else.36666:
.count stack_move
    sub     $sp, 6, $sp                 # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    cmp     $19, 99                     # |  1,134,616 |  4,879,966 |          0 |    624,225 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    bne     be_else.36667               # |  1,134,616 |  1,134,784 |          0 |          0 |          0 |         84 |
be_then.36667:
    cmp     $20, -1                     # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    be      bne_cont.36668              # |  1,134,616 |  2,282,380 |  1,134,616 |          0 |          0 |      6,574 |
bne_then.36668:
.count stack_store
    store   $17, [$sp + 3]              # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $20], $3# |  1,134,616 |  5,173,288 |          0 |    624,225 |     48,887 |          0 |
.count move_args
    mov     $18, $2                     # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    call    solve_each_element_fast.2885# |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |  1,134,616 |  1,246,360 |          0 |          0 |     18,624 |          0 |
    li      0, $2                       # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$3 + 2], $17               # |  1,134,616 |  2,360,252 |  1,115,992 |          0 |     18,274 |          0 |
    cmp     $17, -1                     # |  1,134,616 |  3,367,300 |  2,232,684 |          0 |          0 |          0 |
    be      bne_cont.36669              # |  1,134,616 |  2,329,720 |  1,134,616 |          0 |          0 |     30,244 |
bne_then.36669:
    load    [min_caml_and_net + $17], $3# |  1,134,616 |  5,167,690 |          0 |    624,225 |     47,954 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |  1,134,616 |  1,259,224 |          0 |          0 |     20,768 |          0 |
    call    solve_each_element_fast.2885# |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |  1,134,616 |  1,182,040 |          0 |          0 |      7,904 |          0 |
    li      0, $2                       # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$3 + 3], $17               # |  1,134,616 |  2,392,938 |  1,126,712 |          0 |     21,935 |          0 |
    cmp     $17, -1                     # |  1,134,616 |  3,359,978 |  2,225,362 |          0 |          0 |          0 |
    be      bne_cont.36670              # |  1,134,616 |  2,269,236 |  1,134,616 |          0 |          0 |          2 |
bne_then.36670:
    load    [min_caml_and_net + $17], $3# |  1,134,616 |  5,062,762 |          0 |    624,327 |     30,364 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |  1,134,616 |  1,185,172 |          0 |          0 |      8,426 |          0 |
    call    solve_each_element_fast.2885# |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |  1,134,616 |  1,204,054 |          0 |          0 |     11,573 |          0 |
    li      0, $2                       # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$3 + 4], $17               # |  1,134,616 |  2,422,467 |  1,123,043 |          0 |     27,468 |          0 |
    cmp     $17, -1                     # |  1,134,616 |  3,348,912 |  2,214,296 |          0 |          0 |          0 |
    be      bne_cont.36671              # |  1,134,616 |  2,270,538 |  1,134,616 |          0 |          0 |        653 |
bne_then.36671:
    load    [min_caml_and_net + $17], $3# |  1,134,616 |  4,974,994 |          0 |    624,328 |     15,735 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |  1,134,616 |  1,187,674 |          0 |          0 |      8,843 |          0 |
    call    solve_each_element_fast.2885# |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |  1,134,616 |  1,240,960 |          0 |          0 |     17,724 |          0 |
    li      0, $2                       # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$3 + 5], $17               # |  1,134,616 |  2,416,778 |  1,116,892 |          0 |     27,545 |          0 |
    cmp     $17, -1                     # |  1,134,616 |  3,348,758 |  2,214,142 |          0 |          0 |          0 |
    be      bne_cont.36672              # |  1,134,616 |  2,269,566 |  1,134,616 |          0 |          0 |        167 |
bne_then.36672:
    load    [min_caml_and_net + $17], $3
.count stack_load
    load    [$sp + 0], $4
    call    solve_each_element_fast.2885
.count stack_load
    load    [$sp + 3], $3
    li      0, $2
    load    [$3 + 6], $17
    cmp     $17, -1
    be      bne_cont.36673
bne_then.36673:
    load    [min_caml_and_net + $17], $3
.count stack_load
    load    [$sp + 0], $4
    call    solve_each_element_fast.2885
    li      7, $2
.count stack_load
    load    [$sp + 3], $3
.count stack_load
    load    [$sp + 0], $4
    call    solve_one_or_network_fast.2889
bne_cont.36673:
bne_cont.36672:
bne_cont.36671:
bne_cont.36670:
bne_cont.36669:
bne_cont.36668:
.count stack_load
    load    [$sp + 2], $17              # |  1,134,616 |  2,160,940 |          0 |    146,097 |     24,957 |          0 |
    li      0, $2                       # |  1,134,616 |  5,099,842 |          0 |    660,871 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |  1,134,616 |  1,304,734 |          0 |          0 |     28,353 |          0 |
    add     $17, 1, $17                 # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$3 + $17], $18             # |  1,134,616 |  2,523,968 |  1,134,616 |          0 |     42,456 |          0 |
    add     $17, 1, $19                 # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$18 + 0], $20              # |  1,134,616 |  2,285,996 |  1,092,160 |          0 |      9,870 |          0 |
    load    [$18 + 1], $21              # |  1,134,616 |  1,151,146 |          0 |          0 |      2,755 |          0 |
    cmp     $20, -1                     # |  1,134,616 |  2,256,607 |  1,121,991 |          0 |          0 |          0 |
    bne     be_else.36674               # |  1,134,616 |  5,573,637 |    473,745 |    660,871 |          0 |         25 |
be_then.36674:
.count stack_move
    add     $sp, 6, $sp                 # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    ret                                 # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
be_else.36674:
    cmp     $20, 99
    bne     be_else.36675
be_then.36675:
    cmp     $21, -1
    bne     be_else.36676
be_then.36676:
.count stack_move
    add     $sp, 6, $sp
.count move_args
    mov     $19, $2
.count stack_load
    load    [$sp - 6], $4
    b       trace_or_matrix_fast.2893
be_else.36676:
.count stack_store
    store   $17, [$sp + 4]
.count stack_store
    store   $18, [$sp + 5]
    load    [min_caml_and_net + $21], $3
.count stack_load
    load    [$sp + 0], $4
    call    solve_each_element_fast.2885
.count stack_load
    load    [$sp + 5], $3
.count stack_load
    load    [$sp + 4], $2
    li      0, $5
    load    [$3 + 2], $1
    add     $2, 1, $4
    cmp     $1, -1
    bne     be_else.36677
be_then.36677:
.count stack_move
    add     $sp, 6, $sp
.count move_args
    mov     $4, $2
.count stack_load
    load    [$sp - 6], $1
.count stack_load
    load    [$sp - 5], $3
.count move_args
    mov     $1, $4
    b       trace_or_matrix_fast.2893
be_else.36677:
    load    [min_caml_and_net + $1], $3
.count stack_load
    load    [$sp + 0], $4
.count move_args
    mov     $5, $2
    call    solve_each_element_fast.2885
.count stack_load
    load    [$sp + 5], $3
.count stack_load
    load    [$sp + 4], $2
    li      0, $5
    load    [$3 + 3], $1
    add     $2, 1, $4
    cmp     $1, -1
    bne     be_else.36678
be_then.36678:
.count stack_move
    add     $sp, 6, $sp
.count move_args
    mov     $4, $2
.count stack_load
    load    [$sp - 6], $1
.count stack_load
    load    [$sp - 5], $3
.count move_args
    mov     $1, $4
    b       trace_or_matrix_fast.2893
be_else.36678:
    load    [min_caml_and_net + $1], $3
.count stack_load
    load    [$sp + 0], $4
.count move_args
    mov     $5, $2
    call    solve_each_element_fast.2885
.count stack_load
    load    [$sp + 5], $3
.count stack_load
    load    [$sp + 4], $2
    li      0, $5
    load    [$3 + 4], $1
    add     $2, 1, $4
    cmp     $1, -1
    bne     be_else.36679
be_then.36679:
.count stack_move
    add     $sp, 6, $sp
.count move_args
    mov     $4, $2
.count stack_load
    load    [$sp - 6], $1
.count stack_load
    load    [$sp - 5], $3
.count move_args
    mov     $1, $4
    b       trace_or_matrix_fast.2893
be_else.36679:
    load    [min_caml_and_net + $1], $3
.count stack_load
    load    [$sp + 0], $4
.count move_args
    mov     $5, $2
    call    solve_each_element_fast.2885
    li      5, $2
.count stack_load
    load    [$sp + 5], $3
.count stack_load
    load    [$sp + 0], $4
    call    solve_one_or_network_fast.2889
.count stack_move
    add     $sp, 6, $sp
.count stack_load
    load    [$sp - 2], $1
.count stack_load
    load    [$sp - 5], $3
.count stack_load
    load    [$sp - 6], $4
    add     $1, 1, $2
    b       trace_or_matrix_fast.2893
be_else.36675:
.count stack_load
    load    [$sp + 0], $3
.count move_args
    mov     $20, $2
    call    solver_fast2.2814
    cmp     $1, 0
    add     $17, 1, $2
    bne     be_else.36680
be_then.36680:
.count stack_move
    add     $sp, 6, $sp
.count stack_load
    load    [$sp - 5], $3
.count stack_load
    load    [$sp - 6], $4
    b       trace_or_matrix_fast.2893
be_else.36680:
    fcmp    $49, $42
    li      1, $1
    bg      ble_else.36681
ble_then.36681:
.count stack_move
    add     $sp, 6, $sp
.count stack_load
    load    [$sp - 5], $3
.count stack_load
    load    [$sp - 6], $4
    b       trace_or_matrix_fast.2893
ble_else.36681:
.count stack_store
    store   $17, [$sp + 4]
.count stack_load
    load    [$sp + 0], $4
.count move_args
    mov     $18, $3
.count move_args
    mov     $1, $2
    call    solve_one_or_network_fast.2889
.count stack_move
    add     $sp, 6, $sp
.count stack_load
    load    [$sp - 2], $1
.count stack_load
    load    [$sp - 5], $3
.count stack_load
    load    [$sp - 6], $4
    add     $1, 1, $2
    b       trace_or_matrix_fast.2893
be_else.36667:
.count move_args
    mov     $4, $3
.count move_args
    mov     $19, $2
    call    solver_fast2.2814
    cmp     $1, 0
    bne     be_else.36682
be_then.36682:
.count stack_move
    add     $sp, 6, $sp
.count stack_load
    load    [$sp - 4], $1
.count stack_load
    load    [$sp - 5], $3
.count stack_load
    load    [$sp - 6], $4
    add     $1, 1, $2
    b       trace_or_matrix_fast.2893
be_else.36682:
.count stack_load
    load    [$sp + 2], $1
    fcmp    $49, $42
    li      1, $3
    add     $1, 1, $2
    bg      ble_else.36683
ble_then.36683:
.count stack_move
    add     $sp, 6, $sp
.count stack_load
    load    [$sp - 5], $3
.count stack_load
    load    [$sp - 6], $4
    b       trace_or_matrix_fast.2893
ble_else.36683:
.count stack_load
    load    [$sp + 0], $4
.count move_args
    mov     $3, $2
.count move_args
    mov     $17, $3
    call    solve_one_or_network_fast.2889
.count stack_move
    add     $sp, 6, $sp
.count stack_load
    load    [$sp - 4], $1
.count stack_load
    load    [$sp - 5], $3
.count stack_load
    load    [$sp - 6], $4
    add     $1, 1, $2
    b       trace_or_matrix_fast.2893
.end trace_or_matrix_fast

######################################################################
.begin utexture
utexture.2908:
    load    [$2 + 8], $10               # |    660,661 |    927,661 |          0 |     12,739 |     31,761 |          0 |
    load    [$10 + 0], $10              # |    660,661 |  2,794,759 |  1,257,798 |          1 |    146,049 |          0 |
    store   $10, [min_caml_texture_color + 0]# |    660,661 |  1,689,885 |  1,029,224 |          0 |          0 |          0 |
    load    [$2 + 8], $10               # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $11               # |    660,661 |    665,935 |          0 |          0 |        879 |          0 |
    load    [$2 + 5], $12               # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $10              # |    660,661 |    971,527 |          0 |          0 |     51,811 |          0 |
.count move_float
    mov     $10, $54                    # |    660,661 |  1,878,361 |  1,217,700 |          0 |          0 |          0 |
    load    [$2 + 8], $10               # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$10 + 2], $10              # |    660,661 |  2,122,213 |  1,295,844 |     12,739 |     14,879 |          0 |
.count move_float
    mov     $10, $58                    # |    660,661 |  1,952,225 |  1,291,564 |          0 |          0 |          0 |
    load    [$2 + 0], $10               # |    660,661 |  1,191,229 |          0 |          0 |     88,428 |          0 |
    cmp     $10, 1                      # |    660,661 |  1,805,127 |  1,144,466 |          0 |          0 |          0 |
    bne     be_else.36684               # |    660,661 |  1,343,594 |    660,661 |          0 |          0 |     11,136 |
be_then.36684:
.count stack_move
    sub     $sp, 2, $sp                 # |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 0], $10# |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
    load    [$11 + 0], $11              # |     94,582 |     96,046 |          0 |          0 |        244 |          0 |
.count load_float
    load    [f.31961], $13              # |     94,582 |    345,106 |          0 |      5,707 |     36,047 |          0 |
    fsub    $10, $11, $10               # |     94,582 |    152,057 |     57,475 |          0 |          0 |          0 |
    fmul    $10, $13, $2                # |     94,582 |    472,910 |    378,328 |          0 |          0 |          0 |
    call    min_caml_floor              # |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |     94,582 |    326,008 |    231,426 |          0 |          0 |          0 |
.count load_float
    load    [f.31962], $14              # |     94,582 |    246,724 |          0 |          0 |     25,357 |          0 |
.count load_float
    load    [f.31963], $15              # |     94,582 |    243,736 |          0 |          0 |     24,859 |          0 |
    load    [min_caml_intersection_point + 2], $16# |     94,582 |     94,594 |          0 |          0 |          2 |          0 |
    load    [$12 + 2], $12              # |     94,582 |    306,958 |          0 |     35,383 |         13 |          0 |
    fmul    $11, $14, $11               # |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
    fsub    $16, $12, $12               # |     94,582 |    189,151 |     94,569 |          0 |          0 |          0 |
    fsub    $10, $11, $10               # |     94,582 |    283,759 |    189,177 |          0 |          0 |          0 |
    fmul    $12, $13, $2                # |     94,582 |    189,151 |     94,569 |          0 |          0 |          0 |
    call    min_caml_floor              # |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
    fmul    $1, $14, $1                 # |     94,582 |    363,295 |    268,713 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.31957], $2               # |     94,582 |    742,612 |          0 |     35,379 |     72,626 |          0 |
    fcmp    $15, $10                    # |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.31957], $3               # |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
    fsub    $12, $1, $1                 # |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
    bg      ble_else.36685              # |     94,582 |    179,552 |          0 |          0 |          0 |     42,485 |
ble_then.36685:
    li      0, $4                       # |     50,346 |     50,346 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36685              # |     50,346 |     53,580 |          0 |          0 |          0 |      1,617 |
ble_else.36685:
    li      1, $4                       # |     44,236 |     44,236 |          0 |          0 |          0 |          0 |
ble_cont.36685:
    fcmp    $15, $1                     # |     94,582 |    422,763 |     32,141 |     49,340 |          0 |          0 |
    bg      ble_else.36686              # |     94,582 |    277,158 |     94,582 |          0 |          0 |     43,997 |
ble_then.36686:
    cmp     $4, 0                       # |     45,724 |     45,724 |          0 |          0 |          0 |          0 |
    bne     be_else.36687               # |     45,724 |     93,488 |     45,724 |          0 |          0 |      1,020 |
be_then.36687:
.count move_float
    mov     $2, $54                     # |     24,135 |     24,135 |          0 |          0 |          0 |          0 |
    ret                                 # |     24,135 |     24,135 |          0 |          0 |          0 |          0 |
be_else.36687:
.count move_float
    mov     $zero, $54                  # |     21,589 |     21,589 |          0 |          0 |          0 |          0 |
    ret                                 # |     21,589 |     21,589 |          0 |          0 |          0 |          0 |
ble_else.36686:
    cmp     $4, 0                       # |     48,858 |    159,696 |          0 |     18,473 |          0 |          0 |
    bne     be_else.36688               # |     48,858 |    112,234 |     48,858 |          0 |          0 |      7,259 |
be_then.36688:
.count move_float
    mov     $zero, $54                  # |     26,211 |     26,211 |          0 |          0 |          0 |          0 |
    ret                                 # |     26,211 |     26,211 |          0 |          0 |          0 |          0 |
be_else.36688:
.count move_float
    mov     $3, $54                     # |     22,647 |     22,647 |          0 |          0 |          0 |          0 |
    ret                                 # |     22,647 |     22,647 |          0 |          0 |          0 |          0 |
be_else.36684:
    cmp     $10, 2                      # |    566,079 |  1,342,617 |          0 |    129,423 |          0 |          0 |
    bne     be_else.36689               # |    566,079 |  1,141,446 |    566,079 |          0 |          0 |      4,644 |
be_then.36689:
.count stack_move
    sub     $sp, 2, $sp                 # |      2,885 |     17,351 |          0 |      2,411 |          0 |          0 |
    load    [min_caml_intersection_point + 1], $11# |      2,885 |      2,885 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.31960], $12              # |      2,885 |     17,753 |          0 |          0 |      2,478 |          0 |
    fmul    $11, $12, $2                # |      2,885 |      3,699 |        814 |          0 |          0 |          0 |
    call    min_caml_sin                # |      2,885 |      2,885 |          0 |          0 |          0 |          0 |
    fmul    $1, $1, $1                  # |      2,885 |      2,885 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |      2,885 |      2,885 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.31957], $2               # |      2,885 |      2,903 |          0 |          0 |          3 |          0 |
    fmul    $2, $1, $3                  # |      2,885 |      9,227 |      5,478 |        144 |          0 |          0 |
    fsub    $36, $1, $1                 # |      2,885 |      2,885 |          0 |          0 |          0 |          0 |
    store   $3, [min_caml_texture_color + 0]# |      2,885 |     11,540 |      8,655 |          0 |          0 |          0 |
    fmul    $2, $1, $1                  # |      2,885 |      2,885 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $1, $54                     # |      2,885 |     14,425 |     11,540 |          0 |          0 |          0 |
    ret                                 # |      2,885 |      2,885 |          0 |          0 |          0 |          0 |
be_else.36689:
    cmp     $10, 3                      # |    563,194 |  1,071,520 |          0 |     84,721 |          0 |          0 |
    bne     be_else.36690               # |    563,194 |  1,126,418 |    563,194 |          0 |          0 |         15 |
be_then.36690:
.count stack_move
    sub     $sp, 2, $sp
    load    [$2 + 5], $10
    load    [$2 + 5], $11
    load    [min_caml_intersection_point + 0], $12
    load    [$10 + 0], $10
    load    [min_caml_intersection_point + 2], $13
    load    [$11 + 2], $11
    fsub    $12, $10, $10
.count load_float
    load    [f.31959], $12
    fsub    $13, $11, $11
    fmul    $10, $10, $10
    fmul    $11, $11, $11
    fadd    $10, $11, $10
    fsqrt   $10, $10
    fmul    $10, $12, $2
.count stack_store
    store   $2, [$sp + 0]
    call    min_caml_floor
.count stack_load
    load    [$sp + 0], $12
.count move_ret
    mov     $1, $11
    fsub    $12, $11, $11
.count load_float
    load    [f.31954], $12
    fmul    $11, $12, $2
    call    min_caml_cos
    fmul    $1, $1, $1
.count stack_move
    add     $sp, 2, $sp
.count load_float
    load    [f.31957], $2
    fmul    $1, $2, $3
    fsub    $36, $1, $1
.count move_float
    mov     $3, $54
    fmul    $1, $2, $1
.count move_float
    mov     $1, $58
    ret
be_else.36690:
    cmp     $10, 4                      # |    563,194 |    971,470 |          0 |     68,046 |          0 |          0 |
    bne     be_else.36691               # |    563,194 |  1,129,936 |    563,194 |          0 |          0 |      1,774 |
be_then.36691:
.count stack_move
    sub     $sp, 2, $sp
.count load_float
    load    [f.31951], $15
.count stack_store
    store   $2, [$sp + 1]
    load    [$2 + 5], $11
    load    [$2 + 4], $12
    load    [$2 + 5], $13
    load    [$2 + 4], $14
    load    [min_caml_intersection_point + 0], $16
    load    [$11 + 0], $11
    load    [$12 + 0], $12
    load    [min_caml_intersection_point + 2], $17
    fsub    $16, $11, $11
    fsqrt   $12, $12
    load    [$13 + 2], $13
    load    [$14 + 2], $14
    fsub    $17, $13, $13
    fmul    $11, $12, $11
    fsqrt   $14, $12
    fabs    $11, $14
    fmul    $13, $12, $12
    fcmp    $15, $14
    bg      ble_else.36692
ble_then.36692:
    finv    $11, $13
    fmul    $12, $13, $13
    fabs    $13, $2
    call    min_caml_atan
.count load_float
    load    [f.31953], $14
.count move_ret
    mov     $1, $13
.count load_float
    load    [f.31954], $16
    fmul    $13, $14, $13
.count load_float
    load    [f.31955], $16
    fmul    $13, $16, $13
.count b_cont
    b       ble_cont.36692
ble_else.36692:
.count load_float
    load    [f.31952], $13
ble_cont.36692:
.count stack_load
    load    [$sp + 1], $14
    fmul    $11, $11, $11
    fmul    $12, $12, $12
    load    [$14 + 5], $16
    load    [$14 + 4], $14
    load    [min_caml_intersection_point + 1], $17
    load    [$16 + 1], $16
    fadd    $11, $12, $11
    load    [$14 + 1], $14
    fsub    $17, $16, $12
    fsqrt   $14, $14
    fabs    $11, $16
    finv    $11, $11
    fcmp    $15, $16
    fmul    $12, $14, $12
    bg      ble_else.36693
ble_then.36693:
    fmul    $12, $11, $11
    fabs    $11, $2
    call    min_caml_atan
.count load_float
    load    [f.31953], $11
.count move_ret
    mov     $1, $10
.count load_float
    load    [f.31954], $12
    fmul    $10, $11, $10
.count load_float
    load    [f.31955], $12
    fmul    $10, $12, $10
.count b_cont
    b       ble_cont.36693
ble_else.36693:
.count load_float
    load    [f.31952], $10
ble_cont.36693:
.count load_float
    load    [f.31956], $11
.count move_args
    mov     $13, $2
    call    min_caml_floor
.count move_ret
    mov     $1, $12
    fsub    $13, $12, $12
.count move_args
    mov     $10, $2
    fsub    $39, $12, $12
    fmul    $12, $12, $12
    fsub    $11, $12, $11
    call    min_caml_floor
    fsub    $10, $1, $1
.count stack_move
    add     $sp, 2, $sp
.count load_float
    load    [f.31957], $2
.count load_float
    load    [f.31958], $3
    fsub    $39, $1, $1
    fmul    $1, $1, $1
    fsub    $11, $1, $1
    fcmp    $zero, $1
    bg      ble_else.36694
ble_then.36694:
    fmul    $2, $1, $1
    fmul    $1, $3, $1
.count move_float
    mov     $1, $58
    ret
ble_else.36694:
.count move_float
    mov     $zero, $58
    ret
be_else.36691:
    ret                                 # |    563,194 |  3,398,110 |          0 |    472,486 |          0 |          0 |
.end utexture

######################################################################
.begin trace_reflections
trace_reflections.2915:
    cmp     $2, 0                       # |     36,992 |    207,164 |          0 |     28,362 |          0 |          0 |
    bl      bge_else.36695              # |     36,992 |     84,076 |     36,992 |          0 |          0 |      5,046 |
bge_then.36695:
.count stack_move
    sub     $sp, 7, $sp                 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.31964], $18              # |     18,496 |     26,008 |          0 |          0 |      1,252 |          0 |
.count stack_store
    store   $5, [$sp + 0]               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 1]               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 2]               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 3]               # |     18,496 |    128,248 |          0 |     18,292 |          0 |          0 |
    load    [min_caml_reflections + $2], $17# |     18,496 |     81,070 |          0 |          0 |     10,429 |          0 |
.count move_float
    mov     $18, $49                    # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $17, [$sp + 4]              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$17 + 1], $4               # |     18,496 |     94,522 |          0 |          0 |     12,671 |          0 |
    li      0, $17                      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 5]               # |     18,496 |     24,321 |      5,825 |          0 |          0 |          0 |
    load    [$59 + 0], $3               # |     18,496 |    123,028 |          0 |     17,422 |          0 |          0 |
    load    [$3 + 0], $18               # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    load    [$3 + 1], $19               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    cmp     $18, -1                     # |     18,496 |     36,992 |     18,496 |          0 |          0 |          0 |
    be      bne_cont.36696              # |     18,496 |     36,992 |     18,496 |          0 |          0 |          0 |
bne_then.36696:
    cmp     $18, 99                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    bne     be_else.36697               # |     18,496 |     36,996 |     18,496 |          0 |          0 |          2 |
be_then.36697:
    cmp     $19, -1
    bne     be_else.36698
be_then.36698:
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
.count b_cont
    b       be_cont.36697
be_else.36698:
.count stack_store
    store   $3, [$sp + 6]
    load    [min_caml_and_net + $19], $3
.count move_args
    mov     $17, $2
    call    solve_each_element_fast.2885
.count stack_load
    load    [$sp + 6], $3
    li      1, $2
.count stack_load
    load    [$sp + 5], $4
    load    [$3 + 2], $1
    cmp     $1, -1
    bne     be_else.36699
be_then.36699:
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
.count b_cont
    b       be_cont.36697
be_else.36699:
    li      0, $2
    load    [min_caml_and_net + $1], $3
    call    solve_each_element_fast.2885
.count stack_load
    load    [$sp + 6], $3
    li      1, $2
.count stack_load
    load    [$sp + 5], $4
    load    [$3 + 3], $1
    cmp     $1, -1
    bne     be_else.36700
be_then.36700:
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
.count b_cont
    b       be_cont.36697
be_else.36700:
    li      0, $2
    load    [min_caml_and_net + $1], $3
    call    solve_each_element_fast.2885
.count stack_load
    load    [$sp + 6], $3
    li      1, $2
.count stack_load
    load    [$sp + 5], $4
    load    [$3 + 4], $1
    cmp     $1, -1
    bne     be_else.36701
be_then.36701:
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
.count b_cont
    b       be_cont.36697
be_else.36701:
    li      0, $2
    load    [min_caml_and_net + $1], $3
    call    solve_each_element_fast.2885
    li      5, $2
.count stack_load
    load    [$sp + 6], $3
.count stack_load
    load    [$sp + 5], $4
    call    solve_one_or_network_fast.2889
    li      1, $2
.count stack_load
    load    [$sp + 5], $4
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
.count b_cont
    b       be_cont.36697
be_else.36697:
.count stack_store
    store   $3, [$sp + 6]               # |     18,496 |     81,112 |          0 |     10,436 |          0 |          0 |
.count move_args
    mov     $4, $3                      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $18, $2                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    call    solver_fast2.2814           # |     18,496 |     81,112 |          0 |     10,436 |          0 |          0 |
    cmp     $1, 0                       # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $4               # |     18,496 |     35,800 |          0 |          0 |      2,884 |          0 |
    bne     be_else.36702               # |     18,496 |     19,046 |          0 |          0 |          0 |        275 |
be_then.36702:
.count move_args
    mov     $59, $3                     # |     13,470 |     13,470 |          0 |          0 |          0 |          0 |
    call    trace_or_matrix_fast.2893   # |     13,470 |     13,470 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36702               # |     13,470 |     13,484 |          0 |          0 |          0 |          7 |
be_else.36702:
    fcmp    $49, $42                    # |      5,026 |     15,208 |          0 |      1,697 |          0 |          0 |
    bg      ble_else.36703              # |      5,026 |     10,064 |      5,026 |          0 |          0 |          6 |
ble_then.36703:
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
.count b_cont
    b       ble_cont.36703
ble_else.36703:
    li      1, $2                       # |      5,026 |      5,026 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $3               # |      5,026 |      7,354 |          0 |          0 |        388 |          0 |
    call    solve_one_or_network_fast.2889# |      5,026 |      5,026 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |      5,026 |     24,442 |          0 |      3,236 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $4               # |      5,026 |      5,026 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $59, $3                     # |      5,026 |      5,026 |          0 |          0 |          0 |          0 |
    call    trace_or_matrix_fast.2893   # |      5,026 |      5,026 |          0 |          0 |          0 |          0 |
ble_cont.36703:
be_cont.36702:
be_cont.36697:
bne_cont.36696:
.count load_float
    load    [f.31950], $1               # |     18,496 |     92,278 |          0 |      7,200 |      5,097 |          0 |
.count stack_load
    load    [$sp + 3], $2               # |     18,496 |     18,904 |          0 |          0 |         68 |          0 |
.count stack_load
    load    [$sp + 4], $4               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    fcmp    $49, $1                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    sub     $2, 1, $3                   # |     18,496 |     81,112 |          0 |     10,436 |          0 |          0 |
    load    [$4 + 0], $5                # |     18,496 |     68,398 |          0 |          0 |      8,317 |          0 |
    bg      ble_else.36704              # |     18,496 |     18,512 |          0 |          0 |          0 |          8 |
ble_then.36704:
    li      0, $1
.count b_cont
    b       ble_cont.36704
ble_else.36704:
.count load_float
    load    [f.31965], $1               # |     18,496 |     25,174 |          0 |          0 |      1,113 |          0 |
    fcmp    $1, $49                     # |     18,496 |     53,262 |     34,766 |          0 |          0 |          0 |
    bg      ble_else.36705              # |     18,496 |     37,602 |     18,496 |          0 |          0 |        305 |
ble_then.36705:
    li      0, $1                       # |      7,212 |     20,016 |          0 |      2,134 |          0 |          0 |
.count b_cont
    b       ble_cont.36705              # |      7,212 |      7,220 |          0 |          0 |          0 |          4 |
ble_else.36705:
    li      1, $1                       # |     11,284 |     61,096 |          0 |      8,302 |          0 |          0 |
ble_cont.36705:
ble_cont.36704:
    cmp     $1, 0                       # |     18,496 |     29,780 |     11,284 |          0 |          0 |          0 |
    bne     be_else.36706               # |     18,496 |     37,444 |     18,496 |          0 |          0 |        226 |
be_then.36706:
.count stack_move
    add     $sp, 7, $sp                 # |      7,212 |      7,212 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $3, $2                      # |      7,212 |      7,212 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 5], $1               # |      7,212 |      7,212 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 6], $4               # |      7,212 |     18,996 |          0 |      1,964 |          0 |          0 |
.count stack_load
    load    [$sp - 7], $5               # |      7,212 |      7,212 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $1, $3                      # |      7,212 |      7,212 |          0 |          0 |          0 |          0 |
    b       trace_reflections.2915      # |      7,212 |      7,220 |          0 |          0 |          0 |          4 |
be_else.36706:
    load    [min_caml_intersected_object_id + 0], $1# |     11,284 |     12,106 |          0 |         71 |         66 |          0 |
    load    [min_caml_intsec_rectside + 0], $3# |     11,284 |     12,262 |          0 |          0 |        163 |          0 |
    li      0, $6                       # |     11,284 |     11,284 |          0 |          0 |          0 |          0 |
    sll     $1, 2, $1                   # |     11,284 |     11,284 |          0 |          0 |          0 |          0 |
    add     $1, $3, $1                  # |     11,284 |     32,743 |      9,249 |      2,035 |          0 |          0 |
    sub     $2, 1, $3                   # |     11,284 |     11,284 |          0 |          0 |          0 |          0 |
    cmp     $1, $5                      # |     11,284 |     11,284 |          0 |          0 |          0 |          0 |
    bne     be_else.36707               # |     11,284 |     23,440 |     11,284 |          0 |          0 |        436 |
be_then.36707:
.count move_args
    mov     $59, $3                     # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $6, $2                      # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_matrix.2868# |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 7, $sp                 # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    bne     be_else.36708               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
be_then.36708:
.count stack_load
    load    [$sp - 2], $2               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 3], $1               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [min_caml_nvector + 0], $3  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $2                # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 5], $4               # |     10,334 |     10,370 |          0 |          0 |          6 |          0 |
    load    [$2 + 0], $6                # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    load    [min_caml_nvector + 1], $7  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $8                # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $1, $4, $5                  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $3, $6, $3                  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $7, $8, $7                  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $9  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$2 + 2], $2                # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [min_caml_texture_color + 0], $10# |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    fmul    $9, $2, $9                  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fadd    $3, $7, $3                  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fadd    $3, $9, $3                  # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    fmul    $5, $3, $3                  # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    fcmp    $3, $zero                   # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    ble     bg_cont.36709               # |     10,334 |     21,680 |     10,334 |          0 |          0 |        506 |
bg_then.36709:
    fmul    $3, $10, $5                 # |      9,373 |      9,373 |          0 |          0 |          0 |          0 |
    fadd    $46, $5, $5                 # |      9,373 |     65,611 |          0 |      9,373 |          0 |          0 |
.count move_float
    mov     $5, $46                     # |      9,373 |     46,865 |     37,492 |          0 |          0 |          0 |
    fmul    $3, $54, $5                 # |      9,373 |      9,373 |          0 |          0 |          0 |          0 |
    fmul    $3, $58, $3                 # |      9,373 |      9,373 |          0 |          0 |          0 |          0 |
    fadd    $47, $5, $5                 # |      9,373 |     37,492 |     28,119 |          0 |          0 |          0 |
    fadd    $48, $3, $3                 # |      9,373 |      9,373 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $5, $47                     # |      9,373 |     37,492 |     28,119 |          0 |          0 |          0 |
.count move_float
    mov     $3, $48                     # |      9,373 |      9,373 |          0 |          0 |          0 |          0 |
bg_cont.36709:
.count stack_load
    load    [$sp - 7], $5               # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    load    [$5 + 0], $3                # |     10,334 |     31,002 |     20,668 |          0 |          0 |          0 |
    load    [$5 + 1], $7                # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$5 + 2], $9                # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $3, $6, $3                  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $7, $8, $6                  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $9, $2, $2                  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 4], $7               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fadd    $3, $6, $3                  # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    sub     $7, 1, $8                   # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fadd    $3, $2, $2                  # |     10,334 |     41,336 |     31,002 |          0 |          0 |          0 |
    fmul    $1, $2, $1                  # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    fcmp    $1, $zero                   # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    bg      ble_else.36710              # |     10,334 |     23,962 |     10,334 |          0 |          0 |      1,647 |
ble_then.36710:
.count stack_load
    load    [$sp - 6], $1               # |      2,614 |      2,638 |          0 |          0 |          4 |          0 |
.count move_args
    mov     $4, $3                      # |      2,614 |      2,614 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $8, $2                      # |      2,614 |     18,298 |          0 |      2,614 |          0 |          0 |
.count move_args
    mov     $1, $4                      # |      2,614 |      2,614 |          0 |          0 |          0 |          0 |
    b       trace_reflections.2915      # |      2,614 |      2,622 |          0 |          0 |          0 |          4 |
ble_else.36710:
    fmul    $1, $1, $1                  # |      7,720 |     54,040 |          0 |      7,720 |          0 |          0 |
.count stack_load
    load    [$sp - 6], $2               # |      7,720 |      7,732 |          0 |          0 |          2 |          0 |
.count move_args
    mov     $4, $tmp                    # |      7,720 |      7,720 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $2, $4                      # |      7,720 |     15,438 |      7,718 |          0 |          0 |          0 |
    fmul    $1, $1, $1                  # |      7,720 |      7,720 |          0 |          0 |          0 |          0 |
    fmul    $1, $2, $1                  # |      7,720 |     54,040 |          0 |      7,720 |          0 |          0 |
    fadd    $46, $1, $3                 # |      7,720 |     38,600 |     30,880 |          0 |          0 |          0 |
.count move_float
    mov     $3, $46                     # |      7,720 |     38,600 |     30,880 |          0 |          0 |          0 |
    fadd    $47, $1, $3                 # |      7,720 |      7,720 |          0 |          0 |          0 |          0 |
    fadd    $48, $1, $1                 # |      7,720 |      7,720 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $3, $47                     # |      7,720 |     30,880 |     23,160 |          0 |          0 |          0 |
    sub     $7, 1, $3                   # |      7,720 |      7,720 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $1, $48                     # |      7,720 |      7,720 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $3, $2                      # |      7,720 |     54,040 |          0 |      7,720 |          0 |          0 |
.count move_args
    mov     $tmp, $3                    # |      7,720 |      7,720 |          0 |          0 |          0 |          0 |
    b       trace_reflections.2915      # |      7,720 |      7,720 |          0 |          0 |          0 |          0 |
be_else.36708:
.count stack_load
    load    [$sp - 4], $1
.count stack_load
    load    [$sp - 5], $3
.count stack_load
    load    [$sp - 6], $4
    sub     $1, 1, $2
.count stack_load
    load    [$sp - 7], $5
    b       trace_reflections.2915
be_else.36707:
.count stack_move
    add     $sp, 7, $sp                 # |        950 |      6,650 |          0 |        950 |          0 |          0 |
.count move_args
    mov     $3, $2                      # |        950 |        950 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 5], $1               # |        950 |        974 |          0 |          0 |          4 |          0 |
.count stack_load
    load    [$sp - 6], $4               # |        950 |        974 |          0 |          0 |          4 |          0 |
.count stack_load
    load    [$sp - 7], $5               # |        950 |        950 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $1, $3                      # |        950 |        950 |          0 |          0 |          0 |          0 |
    b       trace_reflections.2915      # |        950 |        958 |          0 |          0 |          0 |          4 |
bge_else.36695:
    ret                                 # |     18,496 |    125,710 |          0 |     17,869 |          0 |          0 |
.end trace_reflections

######################################################################
.begin trace_ray
trace_ray.2920:
    cmp     $2, 4                       # |     23,754 |    122,058 |          0 |     16,384 |          0 |          0 |
    bg      ble_else.36711              # |     23,754 |     49,702 |     23,754 |          0 |          0 |      1,097 |
ble_then.36711:
.count stack_move
    sub     $sp, 10, $sp                # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.31964], $24              # |     23,754 |     24,894 |          0 |          0 |        190 |          0 |
.count stack_store
    store   $6, [$sp + 0]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 2]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 3]               # |     23,754 |    166,092 |          0 |     23,723 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 4]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$59 + 0], $3               # |     23,754 |     24,996 |          0 |          0 |        207 |          0 |
.count move_float
    mov     $24, $49                    # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $25               # |     23,754 |     24,606 |          0 |          0 |        142 |          0 |
    li      0, $24                      # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $26               # |     23,754 |     23,958 |          0 |          0 |         34 |          0 |
    cmp     $25, -1                     # |     23,754 |    122,934 |          0 |     16,530 |          0 |          0 |
    be      bne_cont.36712              # |     23,754 |     49,492 |     23,754 |          0 |          0 |        992 |
bne_then.36712:
    cmp     $25, 99                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    bne     be_else.36713               # |     23,754 |     51,292 |     23,754 |          0 |          0 |      1,892 |
be_then.36713:
    cmp     $26, -1
    bne     be_else.36714
be_then.36714:
.count move_args
    mov     $59, $3
    call    trace_or_matrix.2879
.count b_cont
    b       be_cont.36713
be_else.36714:
.count stack_store
    store   $3, [$sp + 5]
    load    [min_caml_and_net + $26], $3
.count move_args
    mov     $24, $2
    call    solve_each_element.2871
.count stack_load
    load    [$sp + 5], $3
    li      1, $2
.count stack_load
    load    [$sp + 2], $4
    load    [$3 + 2], $18
    cmp     $18, -1
    bne     be_else.36715
be_then.36715:
.count move_args
    mov     $59, $3
    call    trace_or_matrix.2879
.count b_cont
    b       be_cont.36713
be_else.36715:
    li      0, $2
    load    [min_caml_and_net + $18], $3
    call    solve_each_element.2871
.count stack_load
    load    [$sp + 5], $3
    li      1, $2
.count stack_load
    load    [$sp + 2], $4
    load    [$3 + 3], $18
    cmp     $18, -1
    bne     be_else.36716
be_then.36716:
.count move_args
    mov     $59, $3
    call    trace_or_matrix.2879
.count b_cont
    b       be_cont.36713
be_else.36716:
    li      0, $2
    load    [min_caml_and_net + $18], $3
    call    solve_each_element.2871
.count stack_load
    load    [$sp + 5], $3
    li      1, $2
.count stack_load
    load    [$sp + 2], $4
    load    [$3 + 4], $18
    cmp     $18, -1
    bne     be_else.36717
be_then.36717:
.count move_args
    mov     $59, $3
    call    trace_or_matrix.2879
.count b_cont
    b       be_cont.36713
be_else.36717:
    li      0, $2
    load    [min_caml_and_net + $18], $3
    call    solve_each_element.2871
    li      5, $2
.count stack_load
    load    [$sp + 5], $3
.count stack_load
    load    [$sp + 2], $4
    call    solve_one_or_network.2875
    li      1, $2
.count stack_load
    load    [$sp + 2], $4
.count move_args
    mov     $59, $3
    call    trace_or_matrix.2879
.count b_cont
    b       be_cont.36713
be_else.36713:
.count stack_store
    store   $3, [$sp + 5]               # |     23,754 |    122,058 |          0 |     16,384 |          0 |          0 |
.count move_args
    mov     $4, $3                      # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $25, $2                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    call    solver.2773                 # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    cmp     $18, 0                      # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |     23,754 |    122,058 |          0 |     16,384 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $4               # |     23,754 |     26,424 |          0 |          0 |        445 |          0 |
    bne     be_else.36718               # |     23,754 |     24,456 |          0 |          0 |          0 |        351 |
be_then.36718:
.count move_args
    mov     $59, $3                     # |     16,978 |     16,978 |          0 |          0 |          0 |          0 |
    call    trace_or_matrix.2879        # |     16,978 |     16,978 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36718               # |     16,978 |     17,756 |          0 |          0 |          0 |        389 |
be_else.36718:
    fcmp    $49, $42                    # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    bg      ble_else.36719              # |      6,776 |     15,326 |      6,776 |          0 |          0 |        887 |
ble_then.36719:
.count move_args
    mov     $59, $3
    call    trace_or_matrix.2879
.count b_cont
    b       ble_cont.36719
ble_else.36719:
    li      1, $2                       # |      6,776 |     32,252 |          0 |      4,246 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $3               # |      6,776 |     13,640 |          0 |          0 |      1,144 |          0 |
    call    solve_one_or_network.2875   # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $4               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $59, $3                     # |      6,776 |     34,124 |          0 |      4,558 |          0 |          0 |
    call    trace_or_matrix.2879        # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
ble_cont.36719:
be_cont.36718:
be_cont.36713:
bne_cont.36712:
.count load_float
    load    [f.31950], $20              # |     23,754 |     89,136 |          0 |      6,585 |      4,312 |          0 |
.count stack_load
    load    [$sp + 4], $18              # |     23,754 |     28,068 |          0 |          0 |        719 |          0 |
    add     $zero, -1, $21              # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    fcmp    $49, $20                    # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$18 + 2], $19              # |     23,754 |    125,712 |          0 |          0 |     16,993 |          0 |
    load    [min_caml_intersected_object_id + 0], $22# |     23,754 |     25,548 |          0 |          0 |        299 |          0 |
    bg      ble_else.36720              # |     23,754 |     93,252 |          0 |     11,143 |          0 |      1,320 |
ble_then.36720:
    li      0, $23
.count b_cont
    b       ble_cont.36720
ble_else.36720:
.count load_float
    load    [f.31965], $23              # |     23,754 |     24,924 |          0 |          0 |        195 |          0 |
    fcmp    $23, $49                    # |     23,754 |     70,872 |     47,118 |          0 |          0 |          0 |
    bg      ble_else.36721              # |     23,754 |     50,238 |     23,754 |          0 |          0 |      1,365 |
ble_then.36721:
    li      0, $23                      # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36721              # |      5,258 |      5,274 |          0 |          0 |          0 |          8 |
ble_else.36721:
    li      1, $23                      # |     18,496 |     85,216 |          0 |     11,120 |          0 |          0 |
ble_cont.36721:
ble_cont.36720:
    cmp     $23, 0                      # |     23,754 |     42,388 |     18,496 |         23 |          0 |          0 |
    bne     be_else.36722               # |     23,754 |     47,826 |     23,754 |          0 |          0 |        159 |
be_then.36722:
.count stack_move
    add     $sp, 10, $sp                # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 7], $1               # |      5,258 |     10,582 |      5,258 |          0 |         11 |          0 |
.count storer
    add     $19, $1, $tmp               # |      5,258 |     15,752 |     10,494 |          0 |          0 |          0 |
    cmp     $1, 0                       # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    store   $21, [$tmp + 0]             # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    bne     be_else.36723               # |      5,258 |      6,618 |          0 |        217 |          0 |         29 |
be_then.36723:
    ret
be_else.36723:
.count stack_load
    load    [$sp - 8], $1               # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    load    [min_caml_beam + 0], $4     # |      5,258 |      6,686 |          0 |          0 |        238 |          0 |
    load    [$1 + 0], $2                # |      5,258 |     10,350 |      5,020 |          0 |         12 |          0 |
    load    [$1 + 1], $3                # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    fmul    $2, $55, $2                 # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    fmul    $3, $56, $3                 # |      5,258 |      6,560 |          0 |        217 |          0 |          0 |
    fmul    $1, $57, $1                 # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    fadd    $2, $3, $2                  # |      5,258 |     21,032 |     15,774 |          0 |          0 |          0 |
    fadd    $2, $1, $1                  # |      5,258 |     26,290 |     21,032 |          0 |          0 |          0 |
    fneg    $1, $1                      # |      5,258 |     26,290 |     21,032 |          0 |          0 |          0 |
    fcmp    $1, $zero                   # |      5,258 |     10,516 |      5,258 |          0 |          0 |          0 |
    bg      ble_else.36724              # |      5,258 |     10,908 |      5,258 |          0 |          0 |        196 |
ble_then.36724:
    ret                                 # |      3,274 |      3,274 |          0 |          0 |          0 |          0 |
ble_else.36724:
    fmul    $1, $1, $2                  # |      1,984 |      2,692 |          0 |        118 |          0 |          0 |
    fmul    $2, $1, $1                  # |      1,984 |      9,920 |      7,936 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 9], $2               # |      1,984 |      1,984 |          0 |          0 |          0 |          0 |
    fmul    $1, $2, $1                  # |      1,984 |      7,936 |      5,952 |          0 |          0 |          0 |
    fmul    $1, $4, $1                  # |      1,984 |      9,920 |      7,936 |          0 |          0 |          0 |
    fadd    $46, $1, $2                 # |      1,984 |      9,920 |      7,936 |          0 |          0 |          0 |
.count move_float
    mov     $2, $46                     # |      1,984 |      9,920 |      7,936 |          0 |          0 |          0 |
    fadd    $47, $1, $2                 # |      1,984 |      1,984 |          0 |          0 |          0 |          0 |
    fadd    $48, $1, $1                 # |      1,984 |      2,122 |          0 |         23 |          0 |          0 |
.count move_float
    mov     $2, $47                     # |      1,984 |      7,867 |      5,883 |          0 |          0 |          0 |
.count move_float
    mov     $1, $48                     # |      1,984 |      2,053 |         69 |          0 |          0 |          0 |
    ret                                 # |      1,984 |      1,984 |          0 |          0 |          0 |          0 |
be_else.36722:
.count stack_store
    store   $19, [$sp + 6]              # |     18,496 |    117,364 |          0 |     16,478 |          0 |          0 |
    load    [min_caml_objects + $22], $2# |     18,496 |     18,838 |          0 |          0 |         57 |          0 |
.count stack_store
    store   $2, [$sp + 7]               # |     18,496 |     55,374 |     36,878 |          0 |          0 |          0 |
    load    [$2 + 1], $24               # |     18,496 |     18,520 |          0 |          0 |          4 |          0 |
    load    [min_caml_intersection_point + 0], $21# |     18,496 |    135,256 |          0 |     18,481 |        979 |          0 |
    load    [min_caml_intersection_point + 1], $23# |     18,496 |     18,544 |          0 |          0 |          8 |          0 |
    cmp     $24, 1                      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$2 + 4], $25               # |     18,496 |     18,910 |          0 |          0 |         69 |          0 |
    load    [$2 + 3], $26               # |     18,496 |     28,690 |          0 |          0 |      1,699 |          0 |
    bne     be_else.36725               # |     18,496 |     19,872 |          0 |          0 |          0 |        688 |
be_then.36725:
    store   $zero, [min_caml_nvector + 0]# |      7,910 |      7,910 |          0 |          0 |          0 |          0 |
    store   $zero, [min_caml_nvector + 1]# |      7,910 |      7,910 |          0 |          0 |          0 |          0 |
    store   $zero, [min_caml_nvector + 2]# |      7,910 |     55,370 |          0 |      7,910 |          0 |          0 |
    load    [min_caml_intsec_rectside + 0], $21# |      7,910 |     33,542 |          0 |          0 |      4,272 |          0 |
.count stack_load
    load    [$sp + 2], $23              # |      7,910 |      7,910 |          0 |          0 |          0 |          0 |
    sub     $21, 1, $21                 # |      7,910 |     11,548 |      3,638 |          0 |          0 |          0 |
    load    [$23 + $21], $23            # |      7,910 |     15,922 |      7,910 |          0 |         17 |          0 |
    fcmp    $23, $zero                  # |      7,910 |     23,696 |     15,786 |          0 |          0 |          0 |
    bne     be_else.36726               # |      7,910 |     19,246 |      7,910 |          0 |          0 |      1,713 |
be_then.36726:
    store   $zero, [min_caml_nvector + $21]
.count b_cont
    b       be_cont.36725
be_else.36726:
    fcmp    $23, $zero                  # |      7,910 |     55,280 |          0 |      7,895 |          0 |          0 |
    bg      ble_else.36727              # |      7,910 |     16,958 |      7,910 |          0 |          0 |        569 |
ble_then.36727:
    store   $36, [min_caml_nvector + $21]# |      6,667 |      6,667 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36725               # |      6,667 |      6,675 |          0 |          0 |          0 |          4 |
ble_else.36727:
    store   $40, [min_caml_nvector + $21]# |      1,243 |      1,243 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36725               # |      1,243 |      1,251 |          0 |          0 |          0 |          4 |
be_else.36725:
    cmp     $24, 2                      # |     10,586 |     74,084 |          0 |     10,583 |          0 |          0 |
    bne     be_else.36728               # |     10,586 |     76,446 |          2 |     10,584 |          0 |      1,177 |
be_then.36728:
    load    [$25 + 0], $21              # |      7,226 |      7,460 |          0 |          0 |         39 |          0 |
    fneg    $21, $21                    # |      7,226 |     21,600 |     14,374 |          0 |          0 |          0 |
    store   $21, [min_caml_nvector + 0] # |      7,226 |     14,452 |      7,226 |          0 |          0 |          0 |
    load    [$2 + 4], $21               # |      7,226 |      7,226 |          0 |          0 |          0 |          0 |
    load    [$21 + 1], $21              # |      7,226 |     21,678 |     14,452 |          0 |          0 |          0 |
    fneg    $21, $21                    # |      7,226 |     21,678 |     14,452 |          0 |          0 |          0 |
    store   $21, [min_caml_nvector + 1] # |      7,226 |     14,452 |      7,226 |          0 |          0 |          0 |
    load    [$2 + 4], $21               # |      7,226 |     50,570 |          0 |      7,224 |          0 |          0 |
    load    [$21 + 2], $21              # |      7,226 |     21,678 |     14,452 |          0 |          0 |          0 |
    fneg    $21, $21                    # |      7,226 |     21,678 |     14,452 |          0 |          0 |          0 |
    store   $21, [min_caml_nvector + 2] # |      7,226 |     14,452 |      7,226 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36728               # |      7,226 |      7,296 |          0 |          0 |          0 |         35 |
be_else.36728:
    load    [$2 + 5], $25               # |      3,360 |     23,520 |          0 |      3,360 |          0 |          0 |
    load    [$2 + 4], $24               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$2 + 4], $27               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$25 + 0], $25              # |      3,360 |     23,526 |          0 |      3,360 |          1 |          0 |
    load    [$24 + 0], $24              # |      3,360 |      3,420 |          0 |          0 |         10 |          0 |
    load    [$27 + 1], $27              # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $28               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fsub    $21, $25, $21               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $25               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$28 + 1], $28              # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$2 + 4], $29               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $30# |      3,360 |     23,520 |          0 |      3,360 |          0 |          0 |
    load    [$25 + 2], $25              # |      3,360 |      3,378 |          0 |          0 |          3 |          0 |
    fmul    $21, $24, $24               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fsub    $23, $28, $23               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fsub    $30, $25, $25               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$29 + 2], $28              # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$2 + 9], $29               # |      3,360 |      9,846 |          0 |          0 |      1,081 |          0 |
    cmp     $26, 0                      # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fmul    $23, $27, $27               # |      3,360 |     23,520 |          0 |      3,360 |          0 |          0 |
    load    [$29 + 2], $29              # |      3,360 |      3,726 |          0 |          0 |         61 |          0 |
    load    [$2 + 9], $30               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fmul    $25, $28, $28               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    bne     be_else.36729               # |      3,360 |      3,564 |          0 |          0 |          0 |        102 |
be_then.36729:
    store   $24, [min_caml_nvector + 0] # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    store   $27, [min_caml_nvector + 1] # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    store   $28, [min_caml_nvector + 2] # |      3,360 |      6,618 |      3,258 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36729               # |      3,360 |      3,916 |          0 |         92 |          0 |          2 |
be_else.36729:
    fmul    $23, $29, $26
    load    [$30 + 1], $29
    fmul    $25, $29, $29
    fadd    $26, $29, $26
    fmul    $26, $39, $26
    fadd    $24, $26, $24
    store   $24, [min_caml_nvector + 0]
    load    [$2 + 9], $24
    load    [$2 + 9], $26
    load    [$24 + 2], $24
    load    [$26 + 0], $26
    fmul    $21, $24, $24
    fmul    $25, $26, $25
    fadd    $24, $25, $24
    fmul    $24, $39, $24
    fadd    $27, $24, $24
    store   $24, [min_caml_nvector + 1]
    load    [$2 + 9], $24
    load    [$2 + 9], $25
    load    [$24 + 1], $24
    load    [$25 + 0], $25
    fmul    $21, $24, $21
    fmul    $23, $25, $23
    fadd    $21, $23, $21
    fmul    $21, $39, $21
    fadd    $28, $21, $21
    store   $21, [min_caml_nvector + 2]
be_cont.36729:
    load    [min_caml_nvector + 0], $21 # |      3,360 |      4,068 |          0 |         92 |         26 |          0 |
    load    [min_caml_nvector + 1], $24 # |      3,360 |      3,384 |          0 |          0 |          4 |          0 |
    load    [$2 + 6], $23               # |      3,360 |      9,846 |          0 |          0 |      1,081 |          0 |
    fmul    $21, $21, $25               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fmul    $24, $24, $24               # |      3,360 |      5,112 |          0 |        292 |          0 |          0 |
    load    [min_caml_nvector + 2], $26 # |      3,360 |      3,516 |          0 |          0 |         26 |          0 |
    fmul    $26, $26, $26               # |      3,360 |     10,028 |      6,668 |          0 |          0 |          0 |
    fadd    $25, $24, $24               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fadd    $24, $26, $24               # |      3,360 |     16,800 |     13,440 |          0 |          0 |          0 |
    fsqrt   $24, $24                    # |      3,360 |     16,800 |     13,440 |          0 |          0 |          0 |
    fcmp    $24, $zero                  # |      3,360 |     16,800 |     13,440 |          0 |          0 |          0 |
    bne     be_else.36730               # |      3,360 |      6,722 |      3,360 |          0 |          0 |          1 |
be_then.36730:
    mov     $36, $23
.count b_cont
    b       be_cont.36730
be_else.36730:
    cmp     $23, 0                      # |      3,360 |     23,520 |          0 |      3,360 |          0 |          0 |
    finv    $24, $23                    # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    be      bne_cont.36731              # |      3,360 |      3,708 |          0 |          0 |          0 |        174 |
bne_then.36731:
    fneg    $23, $23                    # |        232 |        758 |        526 |          0 |          0 |          0 |
bne_cont.36731:
be_cont.36730:
    fmul    $21, $23, $21               # |      3,360 |     12,798 |      9,438 |          0 |          0 |          0 |
    store   $21, [min_caml_nvector + 0] # |      3,360 |     16,800 |     13,440 |          0 |          0 |          0 |
    load    [min_caml_nvector + 1], $21 # |      3,360 |     23,514 |          0 |      3,359 |          0 |          0 |
    fmul    $21, $23, $21               # |      3,360 |     10,080 |      6,720 |          0 |          0 |          0 |
    store   $21, [min_caml_nvector + 1] # |      3,360 |     16,800 |     13,440 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $21 # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fmul    $21, $23, $21               # |      3,360 |     10,080 |      6,720 |          0 |          0 |          0 |
    store   $21, [min_caml_nvector + 2] # |      3,360 |     16,800 |     13,440 |          0 |          0 |          0 |
be_cont.36728:
be_cont.36725:
    load    [min_caml_intersection_point + 0], $21# |     18,496 |    109,048 |          0 |     15,092 |          0 |          0 |
    store   $21, [min_caml_startp + 0]  # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 1], $21# |     18,496 |     19,252 |          0 |        126 |          0 |          0 |
    store   $21, [min_caml_startp + 1]  # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $21# |     18,496 |     18,706 |          0 |          0 |         35 |          0 |
    store   $21, [min_caml_startp + 2]  # |     18,496 |     55,418 |     36,922 |          0 |          0 |          0 |
    call    utexture.2908               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    sll     $22, 2, $17                 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [min_caml_intsec_rectside + 0], $21# |     18,496 |     35,380 |          0 |          0 |      2,814 |          0 |
    li      1, $22                      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    li      0, $23                      # |     18,496 |     19,252 |          0 |        126 |          0 |          0 |
    add     $17, $21, $17               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $21              # |     18,496 |     19,528 |          0 |          0 |        172 |          0 |
.count storer
    add     $19, $21, $tmp              # |     18,496 |     55,144 |     36,648 |          0 |          0 |          0 |
    store   $17, [$tmp + 0]             # |     18,496 |     36,992 |     18,496 |          0 |          0 |          0 |
    load    [$18 + 1], $17              # |     18,496 |    119,632 |          0 |          0 |     16,856 |          0 |
    load    [min_caml_intersection_point + 0], $19# |     18,496 |     19,012 |          0 |          0 |         86 |          0 |
    load    [$17 + $21], $17            # |     18,496 |    121,458 |      1,640 |          0 |     16,887 |          0 |
    store   $19, [$17 + 0]              # |     18,496 |     22,470 |      3,218 |        126 |          0 |          0 |
    load    [min_caml_intersection_point + 1], $19# |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    store   $19, [$17 + 1]              # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $19# |     18,496 |     18,754 |          0 |          0 |         43 |          0 |
    store   $19, [$17 + 2]              # |     18,496 |     55,402 |     36,906 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $17              # |     18,496 |     29,362 |          0 |          0 |      1,811 |          0 |
    load    [$18 + 3], $19              # |     18,496 |     19,192 |          0 |          0 |        116 |          0 |
.count stack_load
    load    [$sp + 1], $24              # |     18,496 |     21,160 |          0 |          0 |        444 |          0 |
    load    [$17 + 7], $17              # |     18,496 |     26,386 |          0 |        108 |      1,207 |          0 |
.count storer
    add     $19, $21, $tmp              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$17 + 0], $17              # |     18,496 |     46,321 |     17,289 |          0 |      1,756 |          0 |
    fmul    $17, $24, $24               # |     18,496 |     51,976 |     33,480 |          0 |          0 |          0 |
    fcmp    $39, $17                    # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $24, [$sp + 8]              # |     18,496 |     73,984 |     55,488 |          0 |          0 |          0 |
    bg      ble_else.36732              # |     18,496 |     22,752 |          0 |          0 |          0 |      2,128 |
ble_then.36732:
    store   $22, [$tmp + 0]             # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    load    [$18 + 4], $17              # |     11,126 |     12,602 |          0 |        108 |        138 |          0 |
    load    [min_caml_texture_color + 0], $19# |     11,126 |     17,378 |          0 |          0 |      1,042 |          0 |
    load    [$17 + $21], $22            # |     11,126 |     87,841 |      9,959 |          0 |     11,126 |          0 |
    store   $19, [$22 + 0]              # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    store   $54, [$22 + 1]              # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    store   $58, [$22 + 2]              # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    load    [$17 + $21], $17            # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.31966], $19              # |     11,126 |     63,014 |          0 |          0 |      8,648 |          0 |
    load    [$17 + 0], $22              # |     11,126 |     80,956 |      2,426 |        108 |     11,126 |          0 |
.count load_float
    load    [f.31967], $19              # |     11,126 |     56,060 |          0 |          0 |      7,489 |          0 |
    fmul    $19, $24, $19               # |     11,126 |     18,400 |      7,274 |          0 |          0 |          0 |
    fmul    $22, $19, $22               # |     11,126 |     55,630 |     44,504 |          0 |          0 |          0 |
    store   $22, [$17 + 0]              # |     11,126 |     55,630 |     44,504 |          0 |          0 |          0 |
    load    [$17 + 1], $22              # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    fmul    $22, $19, $22               # |     11,126 |     33,378 |     22,252 |          0 |          0 |          0 |
    store   $22, [$17 + 1]              # |     11,126 |     55,630 |     44,504 |          0 |          0 |          0 |
    load    [$17 + 2], $22              # |     11,126 |     11,774 |          0 |        108 |          0 |          0 |
    fmul    $22, $19, $19               # |     11,126 |     33,378 |     22,252 |          0 |          0 |          0 |
    store   $19, [$17 + 2]              # |     11,126 |     55,630 |     44,504 |          0 |          0 |          0 |
    load    [$18 + 7], $17              # |     11,126 |     77,072 |          0 |          0 |     10,991 |          0 |
    load    [min_caml_nvector + 0], $18 # |     11,126 |     12,098 |          0 |          0 |        162 |          0 |
    load    [$17 + $21], $17            # |     11,126 |     78,016 |        134 |          0 |     11,126 |          0 |
    store   $18, [$17 + 0]              # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    load    [min_caml_nvector + 1], $18 # |     11,126 |     11,492 |          0 |          0 |         61 |          0 |
    store   $18, [$17 + 1]              # |     11,126 |     33,464 |     22,026 |         52 |          0 |          0 |
    load    [min_caml_nvector + 2], $18 # |     11,126 |     11,486 |          0 |          0 |         60 |          0 |
    store   $18, [$17 + 2]              # |     11,126 |     33,258 |     22,132 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36732              # |     11,126 |     11,178 |          0 |          0 |          0 |         26 |
ble_else.36732:
    store   $23, [$tmp + 0]             # |      7,370 |      7,706 |          0 |         56 |          0 |          0 |
ble_cont.36732:
.count stack_load
    load    [$sp + 2], $19              # |     18,496 |     19,486 |          0 |          0 |        165 |          0 |
    load    [min_caml_nvector + 0], $17 # |     18,496 |     19,462 |          0 |          0 |        161 |          0 |
.count load_float
    load    [f.31968], $18              # |     18,496 |     88,414 |          0 |          0 |     11,653 |          0 |
    load    [$19 + 0], $21              # |     18,496 |     20,308 |          0 |        108 |        194 |          0 |
    load    [$19 + 1], $22              # |     18,496 |     18,640 |          0 |          0 |         24 |          0 |
    load    [min_caml_nvector + 1], $23 # |     18,496 |     18,676 |          0 |          0 |         30 |          0 |
    fmul    $21, $17, $24               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$19 + 2], $25              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    fmul    $22, $23, $22               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $23 # |     18,496 |     18,532 |          0 |          0 |          6 |          0 |
    fmul    $25, $23, $23               # |     18,496 |     55,476 |     36,980 |          0 |          0 |          0 |
    fadd    $24, $22, $22               # |     18,496 |     19,144 |          0 |        108 |          0 |          0 |
    fadd    $22, $23, $22               # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    fmul    $18, $22, $18               # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    fmul    $18, $17, $17               # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    fadd    $21, $17, $17               # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    store   $17, [$19 + 0]              # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    load    [min_caml_nvector + 1], $21 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$19 + 1], $17              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    fmul    $18, $21, $21               # |     18,496 |     37,532 |     18,388 |        108 |          0 |          0 |
    fadd    $17, $21, $17               # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    store   $17, [$19 + 1]              # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $21 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$19 + 2], $17              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    fmul    $18, $21, $18               # |     18,496 |     36,992 |     18,496 |          0 |          0 |          0 |
    fadd    $17, $18, $17               # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    store   $17, [$19 + 2]              # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    load    [$59 + 0], $17              # |     18,496 |     20,422 |          0 |        127 |        194 |          0 |
    load    [$17 + 0], $2               # |     18,496 |     55,700 |     36,604 |          0 |        100 |          0 |
    cmp     $2, -1                      # |     18,496 |     55,288 |     36,792 |          0 |          0 |          0 |
    bne     be_else.36733               # |     18,496 |     39,458 |     18,496 |          0 |          0 |      1,233 |
be_then.36733:
    li      0, $16
.count b_cont
    b       be_cont.36733
be_else.36733:
    cmp     $2, 99                      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $17, [$sp + 9]              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    bne     be_else.36734               # |     18,496 |     19,400 |          0 |        127 |          0 |         71 |
be_then.36734:
    li      1, $16
.count b_cont
    b       be_cont.36734
be_else.36734:
    call    solver_fast.2796            # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    cmp     $16, 0                      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    bne     be_else.36735               # |     18,496 |     37,734 |     18,496 |          0 |          0 |        371 |
be_then.36735:
    li      0, $16                      # |     13,405 |     13,405 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36735               # |     13,405 |     93,951 |          0 |     13,405 |          0 |         58 |
be_else.36735:
    fcmp    $20, $42                    # |      5,091 |     35,637 |          0 |      5,091 |          0 |          0 |
    load    [$17 + 1], $16              # |      5,091 |      5,091 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |      5,091 |      5,091 |          0 |          0 |          0 |          0 |
    bg      ble_else.36736              # |      5,091 |      5,579 |          0 |          0 |          0 |        244 |
ble_then.36736:
    li      0, $16                      # |        207 |        207 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36736              # |        207 |        621 |          0 |          0 |          0 |        207 |
ble_else.36736:
    cmp     $16, -1                     # |      4,884 |      4,884 |          0 |          0 |          0 |          0 |
    bne     be_else.36737               # |      4,884 |     34,200 |          0 |      4,884 |          0 |          6 |
be_then.36737:
    li      0, $16
.count b_cont
    b       be_cont.36737
be_else.36737:
    load    [min_caml_and_net + $16], $3# |      4,884 |      5,208 |          0 |          0 |         54 |          0 |
    call    shadow_check_and_group.2862 # |      4,884 |      4,884 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |      4,884 |      4,884 |          0 |          0 |          0 |          0 |
    cmp     $16, 0                      # |      4,884 |      4,884 |          0 |          0 |          0 |          0 |
    bne     be_else.36738               # |      4,884 |      9,972 |      4,884 |          0 |          0 |        102 |
be_then.36738:
.count stack_load
    load    [$sp + 9], $3               # |      4,517 |     33,167 |          0 |      4,517 |        258 |          0 |
    li      0, $2                       # |      4,517 |      4,517 |          0 |          0 |          0 |          0 |
    load    [$3 + 2], $16               # |      4,517 |      8,782 |      4,259 |          0 |          1 |          0 |
    cmp     $16, -1                     # |      4,517 |     13,549 |      9,032 |          0 |          0 |          0 |
    bne     be_else.36739               # |      4,517 |      9,054 |      4,517 |          0 |          0 |         10 |
be_then.36739:
    li      0, $16
.count b_cont
    b       be_cont.36738
be_else.36739:
    load    [min_caml_and_net + $16], $3# |      4,517 |      4,643 |          0 |          0 |         21 |          0 |
    call    shadow_check_and_group.2862 # |      4,517 |     31,619 |          0 |      4,517 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |      4,517 |      4,517 |          0 |          0 |          0 |          0 |
    cmp     $16, 0                      # |      4,517 |      4,517 |          0 |          0 |          0 |          0 |
    bne     be_else.36740               # |      4,517 |      9,366 |      4,517 |          0 |          0 |        166 |
be_then.36740:
    li      3, $2                       # |      4,439 |      4,439 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 9], $3               # |      4,439 |      4,439 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_group.2865# |      4,439 |      4,439 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |      4,439 |      4,439 |          0 |          0 |          0 |          0 |
    cmp     $16, 0                      # |      4,439 |     31,073 |          0 |      4,439 |          0 |          0 |
    bne     be_else.36741               # |      4,439 |      8,920 |      4,439 |          0 |          0 |         21 |
be_then.36741:
    li      0, $16                      # |      4,100 |      4,100 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36738               # |      4,100 |      4,108 |          0 |          0 |          0 |          4 |
be_else.36741:
    li      1, $16                      # |        339 |        339 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36738               # |        339 |        457 |          0 |          0 |          0 |         59 |
be_else.36740:
    li      1, $16                      # |         78 |        546 |          0 |         78 |          0 |          0 |
.count b_cont
    b       be_cont.36738               # |         78 |         82 |          0 |          0 |          0 |          2 |
be_else.36738:
    li      1, $16                      # |        367 |      2,569 |          0 |        367 |          0 |          0 |
be_cont.36738:
be_cont.36737:
ble_cont.36736:
be_cont.36735:
be_cont.36734:
    cmp     $16, 0                      # |     18,496 |    127,637 |        367 |     18,129 |          0 |          0 |
    li      1, $2                       # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    bne     be_else.36742               # |     18,496 |     18,888 |          0 |          0 |          0 |        196 |
be_then.36742:
.count move_args
    mov     $59, $3                     # |     17,712 |     17,712 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_matrix.2868# |     17,712 |     17,712 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |     17,712 |     17,712 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36742               # |     17,712 |     17,720 |          0 |          0 |          0 |          4 |
be_else.36742:
.count stack_load
    load    [$sp + 9], $3               # |        784 |      5,626 |          0 |        784 |         23 |          0 |
    li      0, $17                      # |        784 |        784 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $16               # |        784 |      1,545 |        761 |          0 |          0 |          0 |
    cmp     $16, -1                     # |        784 |      2,352 |      1,568 |          0 |          0 |          0 |
    bne     be_else.36743               # |        784 |      1,584 |        784 |          0 |          0 |          8 |
be_then.36743:
.count move_args
    mov     $59, $3
    call    shadow_check_one_or_matrix.2868
.count move_ret
    mov     $1, $16
.count b_cont
    b       be_cont.36743
be_else.36743:
    load    [min_caml_and_net + $16], $3# |        784 |      5,488 |          0 |        784 |          0 |          0 |
.count move_args
    mov     $17, $2                     # |        784 |        784 |          0 |          0 |          0 |          0 |
    call    shadow_check_and_group.2862 # |        784 |        784 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |        784 |        784 |          0 |          0 |          0 |          0 |
    cmp     $16, 0                      # |        784 |        784 |          0 |          0 |          0 |          0 |
    bne     be_else.36744               # |        784 |      2,338 |        784 |          0 |          0 |        385 |
be_then.36744:
.count stack_load
    load    [$sp + 9], $3               # |        417 |        417 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |        417 |      2,919 |          0 |        417 |          0 |          0 |
    li      0, $17                      # |        417 |        417 |          0 |          0 |          0 |          0 |
    load    [$3 + 2], $16               # |        417 |        417 |          0 |          0 |          0 |          0 |
    cmp     $16, -1                     # |        417 |      1,251 |        834 |          0 |          0 |          0 |
    bne     be_else.36745               # |        417 |        852 |        417 |          0 |          0 |          9 |
be_then.36745:
.count move_args
    mov     $59, $3
    call    shadow_check_one_or_matrix.2868
.count move_ret
    mov     $1, $16
.count b_cont
    b       be_cont.36744
be_else.36745:
    load    [min_caml_and_net + $16], $3# |        417 |      2,919 |          0 |        417 |          0 |          0 |
.count move_args
    mov     $17, $2                     # |        417 |        417 |          0 |          0 |          0 |          0 |
    call    shadow_check_and_group.2862 # |        417 |        417 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |        417 |        417 |          0 |          0 |          0 |          0 |
    cmp     $16, 0                      # |        417 |        417 |          0 |          0 |          0 |          0 |
    bne     be_else.36746               # |        417 |        872 |        417 |          0 |          0 |         19 |
be_then.36746:
    li      3, $2                       # |        339 |        339 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 9], $3               # |        339 |      2,373 |          0 |        339 |          0 |          0 |
    call    shadow_check_one_or_group.2865# |        339 |        339 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |        339 |        339 |          0 |          0 |          0 |          0 |
    cmp     $16, 0                      # |        339 |        339 |          0 |          0 |          0 |          0 |
    bne     be_else.36747               # |        339 |        686 |        339 |          0 |          0 |          4 |
be_then.36747:
    li      1, $2
.count move_args
    mov     $59, $3
    call    shadow_check_one_or_matrix.2868
.count move_ret
    mov     $1, $16
.count b_cont
    b       be_cont.36744
be_else.36747:
    li      1, $16                      # |        339 |      2,373 |          0 |        339 |          0 |          0 |
.count b_cont
    b       be_cont.36744               # |        339 |        347 |          0 |          0 |          0 |          4 |
be_else.36746:
    li      1, $16                      # |         78 |        546 |          0 |         78 |          0 |          0 |
.count b_cont
    b       be_cont.36744               # |         78 |         82 |          0 |          0 |          0 |          2 |
be_else.36744:
    li      1, $16                      # |        367 |      2,569 |          0 |        367 |          0 |          0 |
be_cont.36744:
be_cont.36743:
be_cont.36742:
be_cont.36733:
.count stack_load
    load    [$sp + 7], $17              # |     18,496 |    123,940 |          0 |     17,501 |         73 |          0 |
    load    [min_caml_nvector + 0], $18 # |     18,496 |    128,206 |          0 |     18,285 |          0 |          0 |
    load    [min_caml_nvector + 1], $19 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$17 + 7], $17              # |     18,496 |     33,016 |          0 |          0 |      2,420 |          0 |
    fmul    $18, $55, $18               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $20              # |     18,496 |     18,928 |          0 |          0 |         72 |          0 |
    load    [$17 + 1], $17              # |     18,496 |     56,788 |          0 |          0 |      6,382 |          0 |
    cmp     $16, 0                      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    fmul    $20, $17, $17               # |     18,496 |     30,610 |     12,114 |          0 |          0 |          0 |
    bne     be_cont.36748               # |     18,496 |    128,296 |          0 |     18,285 |          0 |         45 |
be_then.36748:
    fmul    $19, $56, $19               # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $16 # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $20              # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    fmul    $16, $57, $16               # |     17,539 |     35,078 |     17,539 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    load    [$20 + 0], $21              # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    load    [$20 + 1], $22              # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    load    [$20 + 2], $20              # |     17,539 |    121,507 |          0 |     17,328 |          0 |          0 |
    fmul    $21, $55, $21               # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    fmul    $22, $56, $19               # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    fadd    $18, $16, $16               # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    load    [min_caml_texture_color + 0], $22# |     17,539 |     18,229 |          0 |          0 |        115 |          0 |
    fadd    $21, $19, $18               # |     17,539 |     52,387 |     34,848 |          0 |          0 |          0 |
    fmul    $20, $57, $19               # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 8], $20              # |     17,539 |     19,993 |          0 |          0 |        409 |          0 |
    fneg    $16, $16                    # |     17,539 |    121,507 |          0 |     17,328 |          0 |          0 |
    fmul    $16, $20, $16               # |     17,539 |     35,078 |     17,539 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    fcmp    $16, $zero                  # |     17,539 |     70,156 |     52,617 |          0 |          0 |          0 |
    fmul    $16, $22, $19               # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    fneg    $18, $18                    # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    ble     bg_cont.36749               # |     17,539 |     31,461 |          0 |          0 |          0 |      6,961 |
bg_then.36749:
    fadd    $46, $19, $19               # |     17,537 |     38,691 |     21,154 |          0 |          0 |          0 |
.count move_float
    mov     $19, $46                    # |     17,537 |    122,337 |        844 |     17,326 |          0 |          0 |
    fmul    $16, $54, $19               # |     17,537 |     17,537 |          0 |          0 |          0 |          0 |
    fmul    $16, $58, $16               # |     17,537 |     17,537 |          0 |          0 |          0 |          0 |
    fadd    $47, $19, $19               # |     17,537 |     70,148 |     52,611 |          0 |          0 |          0 |
    fadd    $48, $16, $16               # |     17,537 |     17,537 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $19, $47                    # |     17,537 |     70,148 |     52,611 |          0 |          0 |          0 |
.count move_float
    mov     $16, $48                    # |     17,537 |     17,537 |          0 |          0 |          0 |          0 |
bg_cont.36749:
    fcmp    $18, $zero                  # |     17,539 |     17,551 |          0 |          2 |          0 |          0 |
    ble     bg_cont.36750               # |     17,539 |     93,936 |      6,061 |     11,478 |          0 |        734 |
bg_then.36750:
    fmul    $18, $18, $16               # |      6,452 |      6,452 |          0 |          0 |          0 |          0 |
    fmul    $16, $16, $16               # |      6,452 |     32,260 |     25,808 |          0 |          0 |          0 |
    fmul    $16, $17, $16               # |      6,452 |     32,260 |     25,808 |          0 |          0 |          0 |
    fadd    $46, $16, $18               # |      6,452 |     32,260 |     25,808 |          0 |          0 |          0 |
.count move_float
    mov     $18, $46                    # |      6,452 |     32,260 |     25,808 |          0 |          0 |          0 |
    fadd    $47, $16, $18               # |      6,452 |      6,452 |          0 |          0 |          0 |          0 |
    fadd    $48, $16, $16               # |      6,452 |      6,452 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $18, $47                    # |      6,452 |     40,598 |      4,566 |      4,930 |          0 |          0 |
.count move_float
    mov     $16, $48                    # |      6,452 |      6,452 |          0 |          0 |          0 |          0 |
bg_cont.36750:
be_cont.36748:
    li      min_caml_intersection_point, $2# |     18,496 |     62,680 |          0 |      7,364 |          0 |          0 |
    load    [min_caml_intersection_point + 0], $16# |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $3                  # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $16, $51                    # |     18,496 |     36,992 |     18,496 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 1], $16# |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $16, $52                    # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $16# |     18,496 |     92,260 |          0 |     12,294 |          0 |          0 |
.count move_float
    mov     $16, $53                    # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [min_caml_n_reflections + 0], $1# |     18,496 |     85,120 |          0 |          0 |     11,104 |          0 |
.count stack_load
    load    [$sp + 8], $3               # |     18,496 |     18,856 |          0 |          0 |         60 |          0 |
.count stack_load
    load    [$sp + 2], $5               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    sub     $1, 1, $2                   # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $17, $4                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    call    trace_reflections.2915      # |     18,496 |     92,260 |          0 |     12,294 |          0 |          0 |
.count stack_move
    add     $sp, 10, $sp                # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.31959], $1               # |     18,496 |    129,472 |          0 |          0 |     18,496 |          0 |
.count stack_load
    load    [$sp - 9], $5               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 7], $2               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    add     $zero, -1, $4               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    fcmp    $5, $1                      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    add     $2, 1, $3                   # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    bg      ble_else.36751              # |     18,496 |     92,280 |          0 |     12,294 |          0 |         10 |
ble_then.36751:
    ret
ble_else.36751:
    cmp     $2, 4                       # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    bge     bl_cont.36752               # |     18,496 |     39,220 |     18,496 |          0 |          0 |      1,114 |
bl_then.36752:
.count stack_load
    load    [$sp - 4], $1               # |     18,496 |     29,116 |          0 |          0 |      1,770 |          0 |
.count storer
    add     $1, $3, $tmp                # |     18,496 |     51,948 |     33,452 |          0 |          0 |          0 |
    store   $4, [$tmp + 0]              # |     18,496 |     36,992 |     18,496 |          0 |          0 |          0 |
bl_cont.36752:
.count stack_load
    load    [$sp - 3], $1               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $3                # |     18,496 |    127,980 |      3,308 |     16,842 |        854 |          0 |
    load    [$1 + 7], $1                # |     18,496 |     30,784 |          0 |          0 |      2,048 |          0 |
    cmp     $3, 2                       # |     18,496 |     34,683 |     16,187 |          0 |          0 |          0 |
    bne     be_else.36753               # |     18,496 |     37,260 |     18,496 |          0 |          0 |        134 |
be_then.36753:
    load    [$1 + 0], $1                # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 10], $3              # |      7,370 |      7,742 |          0 |          0 |         62 |          0 |
    add     $2, 1, $2                   # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
    fsub    $36, $1, $1                 # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
    fadd    $3, $49, $6                 # |      7,370 |     51,590 |          0 |      7,370 |          0 |          0 |
.count stack_load
    load    [$sp - 8], $4               # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
    fmul    $5, $1, $3                  # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 6], $5               # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
    b       trace_ray.2920              # |      7,370 |     11,322 |          0 |          0 |          0 |      1,976 |
be_else.36753:
    ret                                 # |     11,126 |     77,882 |          0 |     11,126 |          0 |          0 |
ble_else.36711:
    ret
.end trace_ray

######################################################################
.begin trace_diffuse_ray
trace_diffuse_ray.2926:
.count stack_move
    sub     $sp, 5, $sp                 # |  1,116,120 |  1,116,702 |          0 |         97 |          0 |          0 |
.count load_float
    load    [f.31964], $17              # |  1,116,120 |  1,366,680 |          0 |     11,223 |     30,537 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |  1,116,120 |  1,116,533 |        413 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    load    [$59 + 0], $3               # |  1,116,120 |  1,179,156 |          0 |          0 |     10,506 |          0 |
.count move_float
    mov     $17, $49                    # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    li      1, $17                      # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $19               # |  1,116,120 |  1,176,462 |          0 |          0 |     10,057 |          0 |
    li      0, $18                      # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $20               # |  1,116,120 |  1,284,288 |          0 |     11,223 |     16,805 |          0 |
    cmp     $19, -1                     # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    be      bne_cont.36754              # |  1,116,120 |  2,263,512 |  1,116,120 |          0 |          0 |     15,636 |
bne_then.36754:
    cmp     $19, 99                     # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    bne     be_else.36755               # |  1,116,120 |  2,238,282 |  1,116,120 |          0 |          0 |      3,021 |
be_then.36755:
    cmp     $20, -1
.count move_args
    mov     $2, $4
    bne     be_else.36756
be_then.36756:
.count move_args
    mov     $59, $3
.count move_args
    mov     $17, $2
    call    trace_or_matrix_fast.2893
.count b_cont
    b       be_cont.36755
be_else.36756:
.count stack_store
    store   $3, [$sp + 2]
    load    [min_caml_and_net + $20], $3
.count move_args
    mov     $18, $2
    call    solve_each_element_fast.2885
.count stack_load
    load    [$sp + 2], $3
    li      1, $2
.count stack_load
    load    [$sp + 1], $4
    load    [$3 + 2], $18
    cmp     $18, -1
    bne     be_else.36757
be_then.36757:
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
.count b_cont
    b       be_cont.36755
be_else.36757:
    li      0, $2
    load    [min_caml_and_net + $18], $3
    call    solve_each_element_fast.2885
.count stack_load
    load    [$sp + 2], $3
    li      1, $2
.count stack_load
    load    [$sp + 1], $4
    load    [$3 + 3], $18
    cmp     $18, -1
    bne     be_else.36758
be_then.36758:
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
.count b_cont
    b       be_cont.36755
be_else.36758:
    li      0, $2
    load    [min_caml_and_net + $18], $3
    call    solve_each_element_fast.2885
.count stack_load
    load    [$sp + 2], $3
    li      1, $2
.count stack_load
    load    [$sp + 1], $4
    load    [$3 + 4], $18
    cmp     $18, -1
    bne     be_else.36759
be_then.36759:
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
.count b_cont
    b       be_cont.36755
be_else.36759:
    li      0, $2
    load    [min_caml_and_net + $18], $3
    call    solve_each_element_fast.2885
    li      5, $2
.count stack_load
    load    [$sp + 2], $3
.count stack_load
    load    [$sp + 1], $4
    call    solve_one_or_network_fast.2889
    li      1, $2
.count stack_load
    load    [$sp + 1], $4
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
.count b_cont
    b       be_cont.36755
be_else.36755:
.count stack_store
    store   $3, [$sp + 2]               # |  1,116,120 |  1,183,464 |          0 |     11,224 |          0 |          0 |
.count move_args
    mov     $2, $3                      # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $19, $2                     # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    call    solver_fast2.2814           # |  1,116,120 |  1,183,338 |          0 |     11,203 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    cmp     $18, 0                      # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $4               # |  1,116,120 |  1,362,210 |          0 |          0 |     41,015 |          0 |
    bne     be_else.36760               # |  1,116,120 |  1,126,656 |          0 |          0 |          0 |      5,268 |
be_then.36760:
.count move_args
    mov     $59, $3                     # |    436,322 |    436,322 |          0 |          0 |          0 |          0 |
    call    trace_or_matrix_fast.2893   # |    436,322 |    436,322 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36760               # |    436,322 |    478,952 |          0 |      7,103 |          0 |          6 |
be_else.36760:
    fcmp    $49, $42                    # |    679,798 |    748,792 |          0 |     11,499 |          0 |          0 |
    bg      ble_else.36761              # |    679,798 |  1,359,606 |    679,798 |          0 |          0 |          5 |
ble_then.36761:
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
.count b_cont
    b       ble_cont.36761
ble_else.36761:
    li      1, $2                       # |    679,798 |    679,798 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |    679,798 |    714,316 |          0 |          0 |      5,753 |          0 |
    call    solve_one_or_network_fast.2889# |    679,798 |    748,792 |          0 |     11,499 |          0 |          0 |
    li      1, $2                       # |    679,798 |    679,798 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $4               # |    679,798 |    812,812 |          0 |          0 |     22,169 |          0 |
.count move_args
    mov     $59, $3                     # |    679,798 |    679,798 |          0 |          0 |          0 |          0 |
    call    trace_or_matrix_fast.2893   # |    679,798 |    679,798 |          0 |          0 |          0 |          0 |
ble_cont.36761:
be_cont.36760:
be_cont.36755:
bne_cont.36754:
.count load_float
    load    [f.31950], $18              # |  1,116,120 |  4,227,030 |          0 |      7,103 |    511,382 |          0 |
.count stack_load
    load    [$sp + 1], $19              # |  1,116,120 |  1,273,878 |          0 |          0 |     26,293 |          0 |
    load    [min_caml_intersected_object_id + 0], $20# |  1,116,120 |  1,541,910 |          0 |          0 |     70,965 |          0 |
    fcmp    $49, $18                    # |  1,116,120 |  1,227,732 |          0 |     18,602 |          0 |          0 |
    load    [$19 + 0], $19              # |  1,116,120 |  1,241,370 |          0 |          0 |     20,875 |          0 |
    bg      ble_else.36762              # |  1,116,120 |  1,126,224 |          0 |          0 |          0 |      5,052 |
ble_then.36762:
    li      0, $21
.count b_cont
    b       ble_cont.36762
ble_else.36762:
.count load_float
    load    [f.31965], $21              # |  1,116,120 |  1,469,850 |          0 |          0 |     58,955 |          0 |
    fcmp    $21, $49                    # |  1,116,120 |  3,230,450 |  2,114,330 |          0 |          0 |          0 |
    bg      ble_else.36763              # |  1,116,120 |  2,787,262 |  1,116,120 |          0 |          0 |    277,511 |
ble_then.36763:
    li      0, $21                      # |    473,955 |    577,095 |          0 |     17,190 |          0 |          0 |
.count b_cont
    b       ble_cont.36763              # |    473,955 |    474,223 |          0 |          0 |          0 |        134 |
ble_else.36763:
    li      1, $21                      # |    642,165 |    650,637 |          0 |      1,412 |          0 |          0 |
ble_cont.36763:
ble_cont.36762:
    cmp     $21, 0                      # |  1,116,120 |  1,758,285 |    642,165 |          0 |          0 |          0 |
    bne     be_else.36764               # |  1,116,120 |  2,237,040 |  1,116,120 |          0 |          0 |      2,400 |
be_then.36764:
.count stack_move
    add     $sp, 5, $sp                 # |    473,955 |    473,955 |          0 |          0 |          0 |          0 |
    ret                                 # |    473,955 |    473,955 |          0 |          0 |          0 |          0 |
be_else.36764:
    load    [min_caml_objects + $20], $2# |    642,165 |    659,943 |          0 |          0 |      2,963 |          0 |
.count stack_store
    store   $2, [$sp + 3]               # |    642,165 |  1,993,841 |  1,242,452 |     18,204 |          0 |          0 |
    load    [$2 + 1], $22               # |    642,165 |    670,125 |          0 |          0 |      4,660 |          0 |
    load    [min_caml_intersection_point + 0], $20# |    642,165 |  1,010,163 |          0 |          0 |     61,333 |          0 |
    load    [min_caml_intersection_point + 1], $21# |    642,165 |    654,693 |          0 |          0 |      2,088 |          0 |
    cmp     $22, 1                      # |    642,165 |    642,165 |          0 |          0 |          0 |          0 |
    load    [$2 + 4], $23               # |    642,165 |    647,373 |          0 |          0 |        868 |          0 |
    load    [$2 + 3], $24               # |    642,165 |    686,715 |          0 |          0 |      7,425 |          0 |
    bne     be_else.36765               # |    642,165 |    714,623 |          0 |          0 |          0 |     36,229 |
be_then.36765:
    store   $zero, [min_caml_nvector + 0]# |    114,993 |    194,871 |          0 |     13,313 |          0 |          0 |
    store   $zero, [min_caml_nvector + 1]# |    114,993 |    114,993 |          0 |          0 |          0 |          0 |
    store   $zero, [min_caml_nvector + 2]# |    114,993 |    114,993 |          0 |          0 |          0 |          0 |
    load    [min_caml_intsec_rectside + 0], $20# |    114,993 |    273,987 |          0 |          0 |     26,499 |          0 |
    sub     $20, 1, $20                 # |    114,993 |    291,981 |    176,988 |          0 |          0 |          0 |
    load    [$19 + $20], $19            # |    114,993 |    246,990 |    114,993 |          0 |      2,834 |          0 |
    fcmp    $19, $zero                  # |    114,993 |    339,311 |    224,318 |          0 |          0 |          0 |
    bne     be_else.36766               # |    114,993 |    230,000 |    114,993 |          0 |          0 |          7 |
be_then.36766:
    store   $zero, [min_caml_nvector + $20]
.count b_cont
    b       be_cont.36765
be_else.36766:
    fcmp    $19, $zero                  # |    114,993 |    194,871 |          0 |     13,313 |          0 |          0 |
    bg      ble_else.36767              # |    114,993 |    268,518 |    114,993 |          0 |          0 |     19,266 |
ble_then.36767:
    store   $36, [min_caml_nvector + $20]# |     90,204 |     90,204 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36765               # |     90,204 |     90,212 |          0 |          0 |          0 |          4 |
ble_else.36767:
    store   $40, [min_caml_nvector + $20]# |     24,789 |     24,789 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36765               # |     24,789 |     24,793 |          0 |          0 |          0 |          2 |
be_else.36765:
    cmp     $22, 2                      # |    527,172 |    635,934 |          0 |     18,127 |          0 |          0 |
    bne     be_else.36768               # |    527,172 |  1,199,236 |    527,172 |          0 |          0 |     72,446 |
be_then.36768:
    load    [$23 + 0], $19              # |    391,509 |    445,881 |          0 |          0 |      9,062 |          0 |
    fneg    $19, $19                    # |    391,509 |  1,156,403 |    764,894 |          0 |          0 |          0 |
    store   $19, [min_caml_nvector + 0] # |    391,509 |    783,018 |    391,509 |          0 |          0 |          0 |
    load    [$2 + 4], $19               # |    391,509 |    391,509 |          0 |          0 |          0 |          0 |
    load    [$19 + 1], $19              # |    391,509 |  1,191,603 |    783,018 |          0 |      2,846 |          0 |
    fneg    $19, $19                    # |    391,509 |  1,168,835 |    777,326 |          0 |          0 |          0 |
    store   $19, [min_caml_nvector + 1] # |    391,509 |    845,198 |    379,073 |     12,436 |          0 |          0 |
    load    [$2 + 4], $19               # |    391,509 |    391,509 |          0 |          0 |          0 |          0 |
    load    [$19 + 2], $19              # |    391,509 |  1,192,509 |    783,018 |          0 |      2,997 |          0 |
    fneg    $19, $19                    # |    391,509 |  1,168,533 |    777,024 |          0 |          0 |          0 |
    store   $19, [min_caml_nvector + 2] # |    391,509 |    783,018 |    391,509 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36768               # |    391,509 |    391,599 |          0 |          0 |          0 |         45 |
be_else.36768:
    load    [$2 + 5], $22               # |    135,663 |    187,797 |          0 |      5,691 |      2,998 |          0 |
    load    [$2 + 4], $19               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    load    [$2 + 4], $23               # |    135,663 |    219,693 |          0 |     14,005 |          0 |          0 |
    load    [$22 + 0], $22              # |    135,663 |    160,017 |          0 |          0 |      4,059 |          0 |
    load    [$19 + 0], $19              # |    135,663 |    159,081 |          0 |          0 |      3,903 |          0 |
    load    [$23 + 1], $23              # |    135,663 |    137,577 |          0 |          0 |        319 |          0 |
    load    [$2 + 5], $25               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    fsub    $20, $22, $20               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $22               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    load    [$25 + 1], $25              # |    135,663 |    136,191 |          0 |          0 |         88 |          0 |
    load    [$2 + 4], $26               # |    135,663 |    949,641 |          0 |    135,663 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $27# |    135,663 |    135,777 |          0 |          0 |         19 |          0 |
    load    [$22 + 2], $22              # |    135,663 |    137,289 |          0 |          0 |        271 |          0 |
    fmul    $20, $19, $19               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    fsub    $21, $25, $21               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    fsub    $27, $22, $22               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    load    [$26 + 2], $25              # |    135,663 |    137,175 |          0 |          0 |        252 |          0 |
    load    [$2 + 9], $26               # |    135,663 |    272,799 |          0 |          0 |     22,856 |          0 |
    cmp     $24, 0                      # |    135,663 |    949,641 |          0 |    135,663 |          0 |          0 |
    fmul    $21, $23, $23               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    load    [$26 + 2], $26              # |    135,663 |    165,687 |          0 |          0 |      5,004 |          0 |
    load    [$2 + 9], $27               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    fmul    $22, $25, $25               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    bne     be_else.36769               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
be_then.36769:
    store   $19, [min_caml_nvector + 0] # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    store   $23, [min_caml_nvector + 1] # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    store   $25, [min_caml_nvector + 2] # |    135,663 |    949,641 |          0 |    135,663 |          0 |          0 |
.count b_cont
    b       be_cont.36769               # |    135,663 |    135,671 |          0 |          0 |          0 |          4 |
be_else.36769:
    fmul    $21, $26, $24
    load    [$27 + 1], $26
    fmul    $22, $26, $26
    fadd    $24, $26, $24
    fmul    $24, $39, $24
    fadd    $19, $24, $19
    store   $19, [min_caml_nvector + 0]
    load    [$2 + 9], $19
    load    [$2 + 9], $24
    load    [$19 + 2], $19
    load    [$24 + 0], $24
    fmul    $20, $19, $19
    fmul    $22, $24, $22
    fadd    $19, $22, $19
    fmul    $19, $39, $19
    fadd    $23, $19, $19
    store   $19, [min_caml_nvector + 1]
    load    [$2 + 9], $19
    load    [$2 + 9], $22
    load    [$19 + 1], $19
    load    [$22 + 0], $22
    fmul    $20, $19, $19
    fmul    $21, $22, $20
    fadd    $19, $20, $19
    fmul    $19, $39, $19
    fadd    $25, $19, $19
    store   $19, [min_caml_nvector + 2]
be_cont.36769:
    load    [min_caml_nvector + 0], $19 # |    135,663 |    915,531 |          0 |    129,799 |        179 |          0 |
    load    [min_caml_nvector + 1], $21 # |    135,663 |    144,645 |          0 |          0 |      1,497 |          0 |
    load    [$2 + 6], $20               # |    135,663 |    251,943 |          0 |          0 |     19,380 |          0 |
    fmul    $19, $19, $22               # |    135,663 |    914,457 |          0 |    129,799 |          0 |          0 |
    fmul    $21, $21, $21               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $23 # |    135,663 |    137,061 |          0 |          0 |        233 |          0 |
    fmul    $23, $23, $23               # |    135,663 |    406,523 |    270,860 |          0 |          0 |          0 |
    fadd    $22, $21, $21               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    fadd    $21, $23, $21               # |    135,663 |    678,315 |    542,652 |          0 |          0 |          0 |
    fsqrt   $21, $21                    # |    135,663 |    678,315 |    542,652 |          0 |          0 |          0 |
    fcmp    $21, $zero                  # |    135,663 |    678,315 |    542,652 |          0 |          0 |          0 |
    bne     be_else.36770               # |    135,663 |    920,310 |      5,867 |    129,796 |          0 |          2 |
be_then.36770:
    mov     $36, $20
.count b_cont
    b       be_cont.36770
be_else.36770:
    cmp     $20, 0                      # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    finv    $21, $20                    # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    be      bne_cont.36771              # |    135,663 |    160,547 |          0 |          0 |          0 |     12,442 |
bne_then.36771:
    fneg    $20, $20                    # |     31,877 |    115,184 |     83,307 |          0 |          0 |          0 |
bne_cont.36771:
be_cont.36770:
    fmul    $19, $20, $19               # |    135,663 |    466,338 |    330,675 |          0 |          0 |          0 |
    store   $19, [min_caml_nvector + 0] # |    135,663 |    949,641 |          0 |    135,663 |          0 |          0 |
    load    [min_caml_nvector + 1], $19 # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    fmul    $19, $20, $19               # |    135,663 |    406,989 |    271,326 |          0 |          0 |          0 |
    store   $19, [min_caml_nvector + 1] # |    135,663 |    678,315 |    542,652 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $19 # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    fmul    $19, $20, $19               # |    135,663 |    406,989 |    271,326 |          0 |          0 |          0 |
    store   $19, [min_caml_nvector + 2] # |    135,663 |    678,315 |    542,652 |          0 |          0 |          0 |
be_cont.36768:
be_cont.36765:
    call    utexture.2908               # |    642,165 |  3,681,177 |          0 |    506,502 |          0 |          0 |
    load    [$59 + 0], $17              # |    642,165 |  3,302,589 |          0 |    443,347 |         57 |          0 |
    load    [$17 + 0], $2               # |    642,165 |  2,028,045 |  1,284,216 |          0 |     16,944 |          0 |
    cmp     $2, -1                      # |    642,165 |  1,892,607 |  1,250,442 |          0 |          0 |          0 |
    bne     be_else.36772               # |    642,165 |  1,296,442 |    642,165 |          0 |          0 |      6,056 |
be_then.36772:
    li      0, $1
.count b_cont
    b       be_cont.36772
be_else.36772:
    cmp     $2, 99                      # |    642,165 |    642,165 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $17, [$sp + 4]              # |    642,165 |    642,165 |          0 |          0 |          0 |          0 |
    bne     be_else.36773               # |    642,165 |  3,307,085 |          0 |    443,347 |          0 |      2,419 |
be_then.36773:
    li      1, $1
.count b_cont
    b       be_cont.36773
be_else.36773:
    call    solver_fast.2796            # |    642,165 |    642,165 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    642,165 |    642,165 |          0 |          0 |          0 |          0 |
    bne     be_else.36774               # |    642,165 |  1,284,358 |    642,165 |          0 |          0 |         14 |
be_then.36774:
    li      0, $1                       # |    441,283 |    441,283 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36774               # |    441,283 |    441,695 |          0 |          0 |          0 |        206 |
be_else.36774:
    fcmp    $18, $42                    # |    200,882 |  1,218,800 |          0 |    169,653 |          0 |          0 |
    load    [$17 + 1], $1               # |    200,882 |    225,740 |          0 |          0 |      4,143 |          0 |
    li      0, $2                       # |    200,882 |    200,882 |          0 |          0 |          0 |          0 |
    bg      ble_else.36775              # |    200,882 |    215,796 |          0 |          0 |          0 |      7,457 |
ble_then.36775:
    li      0, $1                       # |      6,953 |      6,953 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36775              # |      6,953 |      6,961 |          0 |          0 |          0 |          4 |
ble_else.36775:
    cmp     $1, -1                      # |    193,929 |    193,929 |          0 |          0 |          0 |          0 |
    bne     be_else.36776               # |    193,929 |    389,178 |    193,929 |          0 |          0 |        660 |
be_then.36776:
    li      0, $1
.count b_cont
    b       be_cont.36776
be_else.36776:
    load    [min_caml_and_net + $1], $3 # |    193,929 |  1,165,683 |          0 |    153,226 |      8,733 |          0 |
    call    shadow_check_and_group.2862 # |    193,929 |    193,929 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    193,929 |    705,885 |          0 |     85,326 |          0 |          0 |
    bne     be_else.36777               # |    193,929 |    394,524 |    193,929 |          0 |          0 |      3,333 |
be_then.36777:
.count stack_load
    load    [$sp + 4], $3               # |    153,646 |    182,938 |          0 |          0 |      4,882 |          0 |
    li      0, $2                       # |    153,646 |    153,646 |          0 |          0 |          0 |          0 |
    load    [$3 + 2], $1                # |    153,646 |    957,058 |     23,718 |    128,980 |        969 |          0 |
    cmp     $1, -1                      # |    153,646 |    459,000 |    305,354 |          0 |          0 |          0 |
    bne     be_else.36778               # |    153,646 |    307,312 |    153,646 |          0 |          0 |         10 |
be_then.36778:
    li      0, $1
.count b_cont
    b       be_cont.36777
be_else.36778:
    load    [min_caml_and_net + $1], $3 # |    153,646 |    153,922 |          0 |          0 |         46 |          0 |
    call    shadow_check_and_group.2862 # |    153,646 |    153,646 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    153,646 |    282,340 |          0 |     21,449 |          0 |          0 |
    bne     be_else.36779               # |    153,646 |    905,302 |     34,748 |    118,898 |          0 |      1,760 |
be_then.36779:
    li      3, $2                       # |    143,513 |    143,513 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $3               # |    143,513 |    143,513 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_group.2865# |    143,513 |    143,513 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    143,513 |    635,993 |          0 |     82,080 |          0 |          0 |
    bne     be_else.36780               # |    143,513 |    287,116 |    143,513 |          0 |          0 |         45 |
be_then.36780:
    li      0, $1                       # |     78,657 |     78,657 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36777               # |     78,657 |     81,121 |          0 |          0 |          0 |      1,232 |
be_else.36780:
    li      1, $1                       # |     64,856 |    453,992 |          0 |     64,856 |          0 |          0 |
.count b_cont
    b       be_cont.36777               # |     64,856 |     64,898 |          0 |          0 |          0 |         21 |
be_else.36779:
    li      1, $1                       # |     10,133 |     70,931 |          0 |     10,133 |          0 |          0 |
.count b_cont
    b       be_cont.36777               # |     10,133 |     10,137 |          0 |          0 |          0 |          2 |
be_else.36777:
    li      1, $1                       # |     40,283 |    281,981 |          0 |     40,283 |          0 |          0 |
be_cont.36777:
be_cont.36776:
ble_cont.36775:
be_cont.36774:
be_cont.36773:
    cmp     $1, 0                       # |    642,165 |  1,282,016 |     40,283 |     99,928 |          0 |          0 |
    li      1, $2                       # |    642,165 |    642,165 |          0 |          0 |          0 |          0 |
    bne     be_else.36781               # |    642,165 |    770,041 |          0 |          0 |          0 |     63,938 |
be_then.36781:
.count move_args
    mov     $59, $3                     # |    526,893 |  1,126,461 |          0 |     99,928 |          0 |          0 |
    call    shadow_check_one_or_matrix.2868# |    526,893 |    526,893 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36781               # |    526,893 |    526,909 |          0 |          0 |          0 |          8 |
be_else.36781:
.count stack_load
    load    [$sp + 4], $3               # |    115,272 |    814,152 |          0 |    115,272 |      1,208 |          0 |
    li      0, $4                       # |    115,272 |    115,272 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $1                # |    115,272 |    229,336 |    114,064 |          0 |          0 |          0 |
    cmp     $1, -1                      # |    115,272 |    345,816 |    230,544 |          0 |          0 |          0 |
    bne     be_else.36782               # |    115,272 |    273,318 |    115,272 |          0 |          0 |     21,387 |
be_then.36782:
.count move_args
    mov     $59, $3
    call    shadow_check_one_or_matrix.2868
.count b_cont
    b       be_cont.36782
be_else.36782:
    load    [min_caml_and_net + $1], $3 # |    115,272 |    806,904 |          0 |    115,272 |          0 |          0 |
.count move_args
    mov     $4, $2                      # |    115,272 |    115,272 |          0 |          0 |          0 |          0 |
    call    shadow_check_and_group.2862 # |    115,272 |    115,272 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    115,272 |    493,512 |          0 |     63,040 |          0 |          0 |
    bne     be_else.36783               # |    115,272 |    230,574 |    115,272 |          0 |          0 |         15 |
be_then.36783:
.count stack_load
    load    [$sp + 4], $3               # |     74,989 |    524,923 |          0 |     74,989 |          0 |          0 |
    li      1, $2                       # |     74,989 |     74,989 |          0 |          0 |          0 |          0 |
    li      0, $4                       # |     74,989 |     74,989 |          0 |          0 |          0 |          0 |
    load    [$3 + 2], $1                # |     74,989 |     74,989 |          0 |          0 |          0 |          0 |
    cmp     $1, -1                      # |     74,989 |    224,967 |    149,978 |          0 |          0 |          0 |
    bne     be_else.36784               # |     74,989 |    150,410 |     74,989 |          0 |          0 |        216 |
be_then.36784:
.count move_args
    mov     $59, $3
    call    shadow_check_one_or_matrix.2868
.count b_cont
    b       be_cont.36783
be_else.36784:
    load    [min_caml_and_net + $1], $3 # |     74,989 |    524,347 |          0 |     74,893 |          0 |          0 |
.count move_args
    mov     $4, $2                      # |     74,989 |     74,989 |          0 |          0 |          0 |          0 |
    call    shadow_check_and_group.2862 # |     74,989 |     74,989 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |     74,989 |    155,641 |          0 |     13,442 |          0 |          0 |
    bne     be_else.36785               # |     74,989 |    150,076 |     74,989 |          0 |          0 |         49 |
be_then.36785:
    li      3, $2                       # |     64,856 |     64,856 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $3               # |     64,856 |     64,856 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_group.2865# |     64,856 |    452,690 |          0 |     64,639 |          0 |          0 |
    cmp     $1, 0                       # |     64,856 |    424,502 |          0 |     59,941 |          0 |          0 |
    bne     be_else.36786               # |     64,856 |    129,720 |     64,856 |          0 |          0 |          4 |
be_then.36786:
    li      1, $2
.count move_args
    mov     $59, $3
    call    shadow_check_one_or_matrix.2868
.count b_cont
    b       be_cont.36783
be_else.36786:
    li      1, $1                       # |     64,856 |     64,856 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36783               # |     64,856 |     72,166 |          0 |      1,217 |          0 |          4 |
be_else.36785:
    li      1, $1                       # |     10,133 |     11,747 |          0 |        269 |          0 |          0 |
.count b_cont
    b       be_cont.36783               # |     10,133 |     10,335 |          0 |          0 |          0 |        101 |
be_else.36783:
    li      1, $1                       # |     40,283 |     47,417 |          0 |      1,189 |          0 |          0 |
be_cont.36783:
be_cont.36782:
be_cont.36781:
be_cont.36772:
    cmp     $1, 0                       # |    642,165 |    732,686 |     40,283 |      8,373 |          0 |          0 |
.count stack_move
    add     $sp, 5, $sp                 # |    642,165 |    642,165 |          0 |          0 |          0 |          0 |
    bne     be_else.36787               # |    642,165 |    642,407 |          0 |          0 |          0 |        121 |
be_then.36787:
.count stack_load
    load    [$sp - 2], $1               # |    523,116 |    571,104 |          0 |          0 |      7,998 |          0 |
    load    [min_caml_texture_color + 0], $2# |    523,116 |    887,862 |          0 |     11,047 |     49,744 |          0 |
    load    [min_caml_nvector + 0], $3  # |    523,116 |    533,952 |          0 |          0 |      1,806 |          0 |
    load    [min_caml_nvector + 1], $4  # |    523,116 |    541,182 |          0 |          0 |      3,011 |          0 |
    load    [$1 + 7], $1                # |    523,116 |    745,122 |          0 |          0 |     37,001 |          0 |
    fmul    $3, $55, $3                 # |    523,116 |    523,116 |          0 |          0 |          0 |          0 |
    fmul    $4, $56, $4                 # |    523,116 |    523,116 |          0 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $5  # |    523,116 |    529,518 |          0 |          0 |      1,067 |          0 |
    load    [$1 + 0], $1                # |    523,116 |    637,500 |          0 |          0 |     19,064 |          0 |
    fmul    $5, $57, $5                 # |    523,116 |  1,082,072 |    492,674 |     11,047 |          0 |          0 |
    fadd    $3, $4, $3                  # |    523,116 |    523,116 |          0 |          0 |          0 |          0 |
    fadd    $3, $5, $3                  # |    523,116 |  2,615,580 |  2,092,464 |          0 |          0 |          0 |
    fneg    $3, $3                      # |    523,116 |  2,615,580 |  2,092,464 |          0 |          0 |          0 |
    fcmp    $3, $zero                   # |    523,116 |  1,046,232 |    523,116 |          0 |          0 |          0 |
    bg      ble_cont.36788              # |    523,116 |  1,119,008 |    523,116 |          0 |          0 |     36,388 |
ble_then.36788:
    mov     $zero, $3                   # |        709 |        709 |          0 |          0 |          0 |          0 |
ble_cont.36788:
.count stack_load
    load    [$sp - 5], $4               # |    523,116 |    683,982 |          0 |          0 |     26,811 |          0 |
    fmul    $4, $3, $3                  # |    523,116 |  1,560,942 |    971,544 |     11,047 |          0 |          0 |
    fmul    $3, $1, $1                  # |    523,116 |  2,615,580 |  2,092,464 |          0 |          0 |          0 |
    fmul    $1, $2, $2                  # |    523,116 |  2,615,580 |  2,092,464 |          0 |          0 |          0 |
    fadd    $43, $2, $2                 # |    523,116 |  2,615,580 |  2,092,464 |          0 |          0 |          0 |
.count move_float
    mov     $2, $43                     # |    523,116 |  2,615,580 |  2,092,464 |          0 |          0 |          0 |
    fmul    $1, $54, $2                 # |    523,116 |    523,116 |          0 |          0 |          0 |          0 |
    fmul    $1, $58, $1                 # |    523,116 |    523,116 |          0 |          0 |          0 |          0 |
    fadd    $44, $2, $2                 # |    523,116 |  2,092,464 |  1,569,348 |          0 |          0 |          0 |
    fadd    $45, $1, $1                 # |    523,116 |  1,001,274 |          0 |     79,693 |          0 |          0 |
.count move_float
    mov     $2, $44                     # |    523,116 |  1,853,385 |  1,330,269 |          0 |          0 |          0 |
.count move_float
    mov     $1, $45                     # |    523,116 |    762,195 |    239,079 |          0 |          0 |          0 |
    ret                                 # |    523,116 |    523,116 |          0 |          0 |          0 |          0 |
be_else.36787:
    ret                                 # |    119,049 |    819,117 |          0 |    116,678 |          0 |          0 |
.end trace_diffuse_ray

######################################################################
.begin iter_trace_diffuse_rays
iter_trace_diffuse_rays.2929:
    cmp     $4, 0                       # |    558,060 |    725,076 |          0 |     27,836 |          0 |          0 |
    bl      bge_else.36789              # |    558,060 |  1,116,678 |    558,060 |          0 |          0 |        279 |
bge_then.36789:
    load    [$2 + $4], $1               # |    558,060 |  3,893,670 |          0 |          0 |    555,935 |          0 |
.count stack_move
    sub     $sp, 5, $sp                 # |    558,060 |    653,574 |          0 |     15,919 |          0 |          0 |
    load    [$3 + 0], $5                # |    558,060 |  1,050,618 |          0 |          0 |     82,093 |          0 |
    load    [$1 + 0], $1                # |    558,060 |  3,905,400 |          0 |          0 |    557,890 |          0 |
    load    [$3 + 1], $6                # |    558,060 |    692,430 |          0 |          0 |     22,395 |          0 |
    load    [$3 + 2], $7                # |    558,060 |    634,290 |          0 |          0 |     12,705 |          0 |
    load    [$2 + $4], $8               # |    558,060 |    561,930 |          0 |          0 |        645 |          0 |
    load    [$1 + 0], $9                # |    558,060 |  3,906,054 |          0 |          0 |    557,999 |          0 |
    load    [$1 + 1], $10               # |    558,060 |    558,180 |          0 |          0 |         20 |          0 |
    load    [$1 + 2], $1                # |    558,060 |    719,526 |          0 |     26,906 |          5 |          0 |
    fmul    $9, $5, $5                  # |    558,060 |    558,060 |          0 |          0 |          0 |          0 |
    fmul    $10, $6, $6                 # |    558,060 |    558,060 |          0 |          0 |          0 |          0 |
    fmul    $1, $7, $1                  # |    558,060 |    558,060 |          0 |          0 |          0 |          0 |
    add     $4, 1, $7                   # |    558,060 |    558,060 |          0 |          0 |          0 |          0 |
    load    [$2 + $7], $7               # |    558,060 |  1,124,394 |    558,060 |          0 |      1,379 |          0 |
    fadd    $5, $6, $5                  # |    558,060 |    558,060 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |    558,060 |    558,060 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |    558,060 |  1,664,430 |          0 |    184,395 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 2]               # |    558,060 |    558,060 |          0 |          0 |          0 |          0 |
    fadd    $5, $1, $1                  # |    558,060 |    931,725 |    373,665 |          0 |          0 |          0 |
    fcmp    $zero, $1                   # |    558,060 |  2,790,300 |  2,232,240 |          0 |          0 |          0 |
    bg      ble_else.36790              # |    558,060 |  1,373,324 |    558,060 |          0 |          0 |    128,602 |
ble_then.36790:
    fmul    $1, $37, $3                 # |    381,307 |    381,307 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $8, $2                      # |    381,307 |    381,307 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |    381,307 |    381,307 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $1               # |    381,307 |  1,347,613 |          0 |    140,706 |     20,345 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |    381,307 |    485,629 |          0 |          0 |     17,387 |          0 |
    sub     $1, 2, $1                   # |    381,307 |    740,923 |    359,616 |          0 |          0 |          0 |
    load    [$3 + 0], $2                # |    381,307 |    706,917 |      4,304 |          0 |     53,551 |          0 |
    cmp     $1, 0                       # |    381,307 |    381,307 |          0 |          0 |          0 |          0 |
    bl      bge_else.36791              # |    381,307 |    827,286 |    381,307 |          0 |          0 |     32,336 |
bge_then.36791:
.count stack_load
    load    [$sp + 0], $4               # |    365,736 |    461,934 |          0 |          0 |     16,033 |          0 |
    load    [$3 + 1], $6                # |    365,736 |    452,418 |          0 |          0 |     14,447 |          0 |
    load    [$3 + 2], $7                # |    365,736 |  1,213,356 |          0 |    132,609 |      8,661 |          0 |
    load    [$4 + $1], $5               # |    365,736 |  2,552,196 |          0 |          0 |    364,410 |          0 |
    load    [$4 + $1], $8               # |    365,736 |    365,736 |          0 |          0 |          0 |          0 |
    add     $1, 1, $9                   # |    365,736 |    365,736 |          0 |          0 |          0 |          0 |
    load    [$5 + 0], $5                # |    365,736 |  2,549,142 |          0 |          0 |    363,901 |          0 |
    load    [$5 + 0], $10               # |    365,736 |  2,555,638 |      3,670 |          0 |    364,372 |          0 |
    load    [$5 + 1], $11               # |    365,736 |    368,520 |          0 |          0 |        464 |          0 |
    load    [$5 + 2], $5                # |    365,736 |    366,138 |          0 |          0 |         67 |          0 |
    fmul    $10, $2, $2                 # |    365,736 |  1,161,390 |          0 |    132,609 |          0 |          0 |
    fmul    $11, $6, $6                 # |    365,736 |    365,736 |          0 |          0 |          0 |          0 |
    fmul    $5, $7, $5                  # |    365,736 |    365,736 |          0 |          0 |          0 |          0 |
    load    [$4 + $9], $7               # |    365,736 |    400,428 |          0 |          0 |      5,782 |          0 |
.count stack_store
    store   $1, [$sp + 3]               # |    365,736 |    365,736 |          0 |          0 |          0 |          0 |
    fadd    $2, $6, $2                  # |    365,736 |    725,690 |    359,954 |          0 |          0 |          0 |
    fadd    $2, $5, $2                  # |    365,736 |  1,828,680 |  1,462,944 |          0 |          0 |          0 |
    fcmp    $zero, $2                   # |    365,736 |  1,828,680 |  1,462,944 |          0 |          0 |          0 |
    bg      ble_else.36792              # |    365,736 |  1,457,852 |    262,440 |    103,296 |          0 |    104,950 |
ble_then.36792:
    fmul    $2, $37, $3                 # |    191,017 |    191,017 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $8, $2                      # |    191,017 |    191,017 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |    191,017 |    191,017 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 5, $sp                 # |    191,017 |    507,505 |          0 |     52,748 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $1               # |    191,017 |    420,068 |    191,017 |          0 |      6,339 |          0 |
.count stack_load
    load    [$sp - 5], $2               # |    191,017 |    225,805 |          0 |          0 |      5,798 |          0 |
.count stack_load
    load    [$sp - 4], $3               # |    191,017 |    193,993 |          0 |          0 |        496 |          0 |
    sub     $1, 2, $4                   # |    191,017 |    592,537 |          0 |     66,920 |          0 |          0 |
    b       iter_trace_diffuse_rays.2929# |    191,017 |    191,875 |          0 |          0 |          0 |        429 |
ble_else.36792:
    fmul    $2, $38, $3                 # |    174,719 |    467,009 |          0 |     48,715 |          0 |          0 |
.count move_args
    mov     $7, $2                      # |    174,719 |    174,719 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |    174,719 |    174,719 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 5, $sp                 # |    174,719 |    308,417 |          0 |     22,283 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $1               # |    174,719 |    406,414 |    174,719 |          0 |      9,496 |          0 |
.count stack_load
    load    [$sp - 5], $2               # |    174,719 |    224,891 |          0 |          0 |      8,362 |          0 |
.count stack_load
    load    [$sp - 4], $3               # |    174,719 |    620,213 |          0 |     73,482 |        767 |          0 |
    sub     $1, 2, $4                   # |    174,719 |    174,719 |          0 |          0 |          0 |          0 |
    b       iter_trace_diffuse_rays.2929# |    174,719 |    179,673 |          0 |          0 |          0 |      2,477 |
bge_else.36791:
.count stack_move
    add     $sp, 5, $sp                 # |     15,571 |     62,395 |          0 |      7,804 |          0 |          0 |
    ret                                 # |     15,571 |     15,571 |          0 |          0 |          0 |          0 |
ble_else.36790:
    fmul    $1, $38, $3                 # |    176,753 |    438,899 |          0 |     43,691 |          0 |          0 |
.count move_args
    mov     $7, $2                      # |    176,753 |    176,753 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |    176,753 |    176,753 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $1               # |    176,753 |    596,639 |          0 |     61,760 |      8,221 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |    176,753 |    217,361 |          0 |          0 |      6,768 |          0 |
    sub     $1, 2, $1                   # |    176,753 |    345,066 |    168,313 |          0 |          0 |          0 |
    load    [$3 + 0], $2                # |    176,753 |    348,831 |      1,672 |          0 |     28,401 |          0 |
    cmp     $1, 0                       # |    176,753 |    176,753 |          0 |          0 |          0 |          0 |
    bl      bge_else.36793              # |    176,753 |    369,340 |    176,753 |          0 |          0 |      7,917 |
bge_then.36793:
.count stack_load
    load    [$sp + 0], $4               # |    173,722 |    215,056 |          0 |          0 |      6,889 |          0 |
    load    [$3 + 1], $6                # |    173,722 |    214,510 |          0 |          0 |      6,798 |          0 |
    load    [$3 + 2], $7                # |    173,722 |    453,832 |          0 |     42,817 |      3,868 |          0 |
    load    [$4 + $1], $5               # |    173,722 |  1,213,954 |          0 |          0 |    173,372 |          0 |
    load    [$4 + $1], $8               # |    173,722 |    173,722 |          0 |          0 |          0 |          0 |
    add     $1, 1, $9                   # |    173,722 |    173,722 |          0 |          0 |          0 |          0 |
    load    [$5 + 0], $5                # |    173,722 |  1,213,366 |          0 |          0 |    173,274 |          0 |
    load    [$5 + 0], $10               # |    173,722 |  1,214,736 |        896 |          0 |    173,353 |          0 |
    load    [$5 + 1], $11               # |    173,722 |    174,112 |          0 |          0 |         65 |          0 |
    load    [$5 + 2], $5                # |    173,722 |    173,848 |          0 |          0 |         21 |          0 |
    fmul    $10, $2, $2                 # |    173,722 |    430,624 |          0 |     42,817 |          0 |          0 |
    fmul    $11, $6, $6                 # |    173,722 |    173,722 |          0 |          0 |          0 |          0 |
    fmul    $5, $7, $5                  # |    173,722 |    173,722 |          0 |          0 |          0 |          0 |
    load    [$4 + $9], $7               # |    173,722 |    256,138 |          0 |          0 |     13,736 |          0 |
.count stack_store
    store   $1, [$sp + 4]               # |    173,722 |    173,722 |          0 |          0 |          0 |          0 |
    fadd    $2, $6, $2                  # |    173,722 |    333,708 |    159,986 |          0 |          0 |          0 |
    fadd    $2, $5, $2                  # |    173,722 |    868,610 |    694,888 |          0 |          0 |          0 |
    fcmp    $zero, $2                   # |    173,722 |    868,610 |    694,888 |          0 |          0 |          0 |
    bg      ble_else.36794              # |    173,722 |    443,955 |    173,721 |          1 |          0 |     48,253 |
ble_then.36794:
    fmul    $2, $37, $3                 # |     20,153 |     20,153 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $8, $2                      # |     20,153 |     20,153 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |     20,153 |     20,153 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 5, $sp                 # |     20,153 |     20,153 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |     20,153 |     46,564 |     20,153 |          0 |      1,043 |          0 |
.count stack_load
    load    [$sp - 5], $2               # |     20,153 |     24,845 |          0 |          0 |        782 |          0 |
.count stack_load
    load    [$sp - 4], $3               # |     20,153 |     20,309 |          0 |          0 |         26 |          0 |
    sub     $1, 2, $4                   # |     20,153 |     20,159 |          0 |          1 |          0 |          0 |
    b       iter_trace_diffuse_rays.2929# |     20,153 |     21,719 |          0 |          0 |          0 |        783 |
ble_else.36794:
    fmul    $2, $38, $3                 # |    153,569 |    153,569 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $7, $2                      # |    153,569 |    153,569 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |    153,569 |    153,569 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 5, $sp                 # |    153,569 |    153,569 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |    153,569 |    395,488 |    153,569 |          0 |     14,725 |          0 |
.count stack_load
    load    [$sp - 5], $2               # |    153,569 |    212,651 |          0 |          0 |      9,847 |          0 |
.count stack_load
    load    [$sp - 4], $3               # |    153,569 |    161,153 |          0 |          1 |      1,263 |          0 |
    sub     $1, 2, $4                   # |    153,569 |    153,569 |          0 |          0 |          0 |          0 |
    b       iter_trace_diffuse_rays.2929# |    153,569 |    153,595 |          0 |          0 |          0 |         13 |
bge_else.36793:
.count stack_move
    add     $sp, 5, $sp                 # |      3,031 |      3,031 |          0 |          0 |          0 |          0 |
    ret                                 # |      3,031 |      3,031 |          0 |          0 |          0 |          0 |
bge_else.36789:
    ret
.end iter_trace_diffuse_rays

######################################################################
.begin calc_diffuse_using_1point
calc_diffuse_using_1point.2942:
.count stack_move
    sub     $sp, 10, $sp                # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |      1,737 |      3,474 |      1,737 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |      1,737 |      1,743 |          0 |          1 |          0 |          0 |
    load    [$2 + 5], $16               # |      1,737 |      8,679 |          0 |          0 |      1,157 |          0 |
    load    [$2 + 6], $18               # |      1,737 |      5,211 |          0 |          0 |        579 |          0 |
    load    [$16 + $3], $16             # |      1,737 |      9,286 |          1 |          0 |      1,258 |          0 |
    load    [$16 + 0], $17              # |      1,737 |     10,225 |        958 |          0 |      1,255 |          0 |
.count move_float
    mov     $17, $43                    # |      1,737 |      2,701 |        964 |          0 |          0 |          0 |
    load    [$16 + 1], $17              # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    load    [$16 + 2], $16              # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $17, $44                    # |      1,737 |      8,879 |        656 |      1,081 |          0 |          0 |
.count move_float
    mov     $16, $45                    # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    load    [$2 + 7], $16               # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $17               # |      1,737 |      1,779 |          0 |          0 |          7 |          0 |
    load    [$16 + $3], $16             # |      1,737 |     13,889 |      1,730 |          0 |      1,737 |          0 |
.count stack_store
    store   $16, [$sp + 2]              # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    load    [$17 + $3], $2              # |      1,737 |     12,159 |          0 |          0 |      1,737 |          0 |
.count stack_store
    store   $2, [$sp + 3]               # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    load    [$18 + 0], $17              # |      1,737 |     16,065 |          0 |        651 |      1,737 |          0 |
    cmp     $17, 0                      # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $17, [$sp + 4]              # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + 0], $18 # |      1,737 |     11,865 |          0 |          0 |      1,688 |          0 |
    load    [$2 + 0], $19               # |      1,737 |      3,855 |          0 |          0 |        353 |          0 |
    be      bne_cont.36795              # |      1,737 |      3,115 |          0 |          0 |          0 |        689 |
bne_then.36795:
.count move_float
    mov     $19, $51                    # |      1,389 |      2,152 |        763 |          0 |          0 |          0 |
    load    [$2 + 1], $17               # |      1,389 |      7,983 |          0 |          0 |      1,099 |          0 |
    sub     $41, 1, $3                  # |      1,389 |      4,785 |          0 |        566 |          0 |          0 |
.count move_float
    mov     $17, $52                    # |      1,389 |      1,526 |        137 |          0 |          0 |          0 |
    load    [$2 + 2], $17               # |      1,389 |      1,395 |          0 |          0 |          1 |          0 |
.count move_float
    mov     $17, $53                    # |      1,389 |      4,165 |      2,776 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    load    [$18 + 118], $17            # |      1,389 |      9,723 |          0 |          0 |      1,389 |          0 |
    load    [$16 + 0], $19              # |      1,389 |      4,425 |          0 |          0 |        506 |          0 |
    load    [$16 + 1], $20              # |      1,389 |      1,527 |          0 |          0 |         23 |          0 |
    load    [$17 + 0], $17              # |      1,389 |     18,057 |          0 |      1,389 |      1,389 |          0 |
    load    [$16 + 2], $21              # |      1,389 |      1,521 |          0 |          0 |         22 |          0 |
    load    [$18 + 118], $2             # |      1,389 |      1,419 |          0 |          0 |          5 |          0 |
    load    [$17 + 0], $22              # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    load    [$17 + 1], $23              # |      1,389 |      1,479 |          0 |          0 |         15 |          0 |
    load    [$17 + 2], $17              # |      1,389 |      9,549 |          0 |          0 |      1,360 |          0 |
    fmul    $22, $19, $19               # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    fmul    $23, $20, $20               # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    fmul    $17, $21, $17               # |      1,389 |      9,723 |          0 |      1,389 |          0 |          0 |
.count load_float
    load    [f.31972], $21              # |      1,389 |      9,723 |          0 |          0 |      1,389 |          0 |
.count load_float
    load    [f.31971], $22              # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    fadd    $19, $20, $19               # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    load    [$18 + 119], $21            # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $18, [$sp + 5]              # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    fadd    $19, $17, $17               # |      1,389 |      4,167 |      2,778 |          0 |          0 |          0 |
    fcmp    $zero, $17                  # |      1,389 |      6,945 |      5,556 |          0 |          0 |          0 |
    bg      ble_else.36796              # |      1,389 |      9,935 |          0 |      1,389 |          0 |        106 |
ble_then.36796:
    fmul    $17, $37, $3                # |         89 |         89 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |         89 |         89 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |         89 |        623 |          0 |         89 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $2               # |         89 |        533 |          0 |          0 |         74 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |         89 |        143 |          0 |          0 |          9 |          0 |
    call    iter_trace_diffuse_rays.2929# |         89 |         89 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36796              # |         89 |        637 |          0 |         89 |          0 |          7 |
ble_else.36796:
    fmul    $17, $38, $3                # |      1,300 |      9,100 |          0 |      1,300 |          0 |          0 |
.count move_args
    mov     $21, $2                     # |      1,300 |      1,300 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |      1,300 |      1,300 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |      1,300 |      9,100 |          0 |      1,300 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $2               # |      1,300 |      6,502 |          0 |          0 |        867 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |      1,300 |      6,496 |          0 |          0 |        866 |          0 |
    call    iter_trace_diffuse_rays.2929# |      1,300 |      1,300 |          0 |          0 |          0 |          0 |
ble_cont.36796:
bne_cont.36795:
.count stack_load
    load    [$sp + 4], $16              # |      1,737 |     21,501 |          0 |      1,737 |      1,557 |          0 |
    cmp     $16, 1                      # |      1,737 |     12,159 |          0 |      1,737 |          0 |          0 |
    be      bne_cont.36797              # |      1,737 |      4,578 |      1,737 |          0 |          0 |        552 |
bne_then.36797:
.count stack_load
    load    [$sp + 3], $2               # |      1,389 |      8,649 |          0 |          0 |      1,210 |          0 |
    load    [min_caml_dirvecs + 1], $16 # |      1,389 |      7,005 |          0 |          0 |        936 |          0 |
    sub     $41, 1, $3                  # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $17               # |      1,389 |      7,245 |          0 |          0 |        976 |          0 |
.count move_float
    mov     $17, $51                    # |      1,389 |      2,215 |        826 |          0 |          0 |          0 |
    load    [$2 + 1], $17               # |      1,389 |      3,057 |          0 |          0 |        278 |          0 |
.count move_float
    mov     $17, $52                    # |      1,389 |      9,723 |          0 |      1,389 |          0 |          0 |
    load    [$2 + 2], $17               # |      1,389 |      1,479 |          0 |          0 |         15 |          0 |
.count move_float
    mov     $17, $53                    # |      1,389 |      4,137 |      2,748 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    load    [$16 + 118], $17            # |      1,389 |      9,723 |          0 |          0 |      1,389 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |      1,389 |      8,283 |          0 |          0 |      1,149 |          0 |
    load    [$16 + 118], $2             # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    load    [$17 + 0], $17              # |      1,389 |      9,723 |          0 |          0 |      1,389 |          0 |
    load    [$3 + 0], $18               # |      1,389 |     11,583 |          0 |      1,389 |        310 |          0 |
    load    [$3 + 1], $19               # |      1,389 |      1,653 |          0 |          0 |         44 |          0 |
    load    [$3 + 2], $20               # |      1,389 |      1,587 |          0 |          0 |         33 |          0 |
    load    [$17 + 0], $21              # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    load    [$17 + 1], $22              # |      1,389 |      1,407 |          0 |          0 |          3 |          0 |
    load    [$17 + 2], $17              # |      1,389 |      9,657 |          0 |          0 |      1,378 |          0 |
    fmul    $21, $18, $18               # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    fmul    $22, $19, $19               # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    fmul    $17, $20, $17               # |      1,389 |      9,723 |          0 |      1,389 |          0 |          0 |
.count load_float
    load    [f.31972], $20              # |      1,389 |      9,723 |          0 |          0 |      1,389 |          0 |
.count load_float
    load    [f.31971], $21              # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    load    [$16 + 119], $20            # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $16, [$sp + 6]              # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    fadd    $18, $17, $17               # |      1,389 |      4,167 |      2,778 |          0 |          0 |          0 |
    fcmp    $zero, $17                  # |      1,389 |      6,945 |      5,556 |          0 |          0 |          0 |
    bg      ble_else.36798              # |      1,389 |     10,189 |          0 |      1,389 |          0 |        233 |
ble_then.36798:
    fmul    $17, $37, $3                # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |         96 |        672 |          0 |         96 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $2               # |         96 |        228 |          0 |          0 |         22 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    iter_trace_diffuse_rays.2929# |         96 |         96 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36798              # |         96 |        694 |          0 |         96 |          0 |         11 |
ble_else.36798:
    fmul    $17, $38, $3                # |      1,293 |      9,051 |          0 |      1,293 |          0 |          0 |
.count move_args
    mov     $20, $2                     # |      1,293 |      1,293 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |      1,293 |      1,293 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |      1,293 |      8,949 |          0 |      1,276 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $2               # |      1,293 |      7,059 |          0 |          0 |        961 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |      1,293 |      6,741 |          0 |          0 |        908 |          0 |
    call    iter_trace_diffuse_rays.2929# |      1,293 |      1,293 |          0 |          0 |          0 |          0 |
ble_cont.36798:
bne_cont.36797:
.count stack_load
    load    [$sp + 4], $16              # |      1,737 |     20,343 |          0 |      1,737 |      1,364 |          0 |
    cmp     $16, 2                      # |      1,737 |     12,159 |          0 |      1,737 |          0 |          0 |
    be      bne_cont.36799              # |      1,737 |      4,814 |      1,737 |          0 |          0 |        670 |
bne_then.36799:
.count stack_load
    load    [$sp + 3], $2               # |      1,400 |      9,680 |          0 |          0 |      1,380 |          0 |
    load    [min_caml_dirvecs + 2], $16 # |      1,400 |      9,776 |          0 |          0 |      1,396 |          0 |
    sub     $41, 1, $3                  # |      1,400 |      1,400 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $17               # |      1,400 |      9,326 |          0 |          0 |      1,321 |          0 |
.count move_float
    mov     $17, $51                    # |      1,400 |      1,558 |        158 |          0 |          0 |          0 |
    load    [$2 + 1], $17               # |      1,400 |      1,430 |          0 |          0 |          5 |          0 |
.count move_float
    mov     $17, $52                    # |      1,400 |      9,800 |          0 |      1,400 |          0 |          0 |
    load    [$2 + 2], $17               # |      1,400 |      1,484 |          0 |          0 |         14 |          0 |
.count move_float
    mov     $17, $53                    # |      1,400 |      4,172 |      2,772 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |      1,400 |      1,400 |          0 |          0 |          0 |          0 |
    load    [$16 + 118], $17            # |      1,400 |      9,800 |          0 |          0 |      1,400 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |      1,400 |      8,378 |          0 |          0 |      1,163 |          0 |
    load    [$16 + 118], $2             # |      1,400 |      1,400 |          0 |          0 |          0 |          0 |
    load    [$17 + 0], $17              # |      1,400 |      9,800 |          0 |          0 |      1,400 |          0 |
    load    [$3 + 0], $18               # |      1,400 |     11,240 |          0 |      1,400 |        240 |          0 |
    load    [$3 + 1], $19               # |      1,400 |      1,712 |          0 |          0 |         52 |          0 |
    load    [$3 + 2], $20               # |      1,400 |      1,652 |          0 |          0 |         42 |          0 |
    load    [$17 + 0], $21              # |      1,400 |      1,442 |          0 |          0 |          7 |          0 |
    load    [$17 + 1], $22              # |      1,400 |      1,400 |          0 |          0 |          0 |          0 |
    load    [$17 + 2], $17              # |      1,400 |      9,758 |          0 |          0 |      1,393 |          0 |
    fmul    $21, $18, $18               # |      1,400 |      1,400 |          0 |          0 |          0 |          0 |
    fmul    $22, $19, $19               # |      1,400 |      1,400 |          0 |          0 |          0 |          0 |
    fmul    $17, $20, $17               # |      1,400 |      9,800 |          0 |      1,400 |          0 |          0 |
.count load_float
    load    [f.31972], $20              # |      1,400 |      9,800 |          0 |          0 |      1,400 |          0 |
.count load_float
    load    [f.31971], $21              # |      1,400 |      1,400 |          0 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |      1,400 |      1,400 |          0 |          0 |          0 |          0 |
    load    [$16 + 119], $20            # |      1,400 |      1,442 |          0 |          0 |          7 |          0 |
.count stack_store
    store   $16, [$sp + 7]              # |      1,400 |      1,400 |          0 |          0 |          0 |          0 |
    fadd    $18, $17, $17               # |      1,400 |      4,186 |      2,786 |          0 |          0 |          0 |
    fcmp    $zero, $17                  # |      1,400 |      7,000 |      5,600 |          0 |          0 |          0 |
    bg      ble_else.36800              # |      1,400 |     10,154 |          0 |      1,400 |          0 |        177 |
ble_then.36800:
    fmul    $17, $37, $3                # |        125 |        125 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |        125 |        125 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |        125 |        347 |          0 |         37 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $2               # |        125 |        131 |          0 |          0 |          1 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |        125 |        125 |          0 |          0 |          0 |          0 |
    call    iter_trace_diffuse_rays.2929# |        125 |        125 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36800              # |        125 |        895 |          0 |        125 |          0 |         10 |
ble_else.36800:
    fmul    $17, $38, $3                # |      1,275 |      8,925 |          0 |      1,275 |          0 |          0 |
.count move_args
    mov     $20, $2                     # |      1,275 |      1,275 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |      1,275 |      1,275 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |      1,275 |      8,925 |          0 |      1,275 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $2               # |      1,275 |      1,383 |          0 |          0 |         18 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |      1,275 |      1,305 |          0 |          0 |          5 |          0 |
    call    iter_trace_diffuse_rays.2929# |      1,275 |      1,275 |          0 |          0 |          0 |          0 |
ble_cont.36800:
bne_cont.36799:
.count stack_load
    load    [$sp + 4], $16              # |      1,737 |     17,859 |          0 |      1,737 |        950 |          0 |
    cmp     $16, 3                      # |      1,737 |     12,159 |          0 |      1,737 |          0 |          0 |
    be      bne_cont.36801              # |      1,737 |      4,630 |      1,737 |          0 |          0 |        578 |
bne_then.36801:
.count stack_load
    load    [$sp + 3], $2               # |      1,385 |      7,661 |          0 |          0 |      1,046 |          0 |
    load    [min_caml_dirvecs + 3], $16 # |      1,385 |      6,779 |          0 |          0 |        899 |          0 |
    sub     $41, 1, $3                  # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $17               # |      1,385 |      9,161 |          0 |          0 |      1,296 |          0 |
.count move_float
    mov     $17, $51                    # |      1,385 |      1,563 |        178 |          0 |          0 |          0 |
    load    [$2 + 1], $17               # |      1,385 |      1,469 |          0 |          0 |         14 |          0 |
.count move_float
    mov     $17, $52                    # |      1,385 |      9,695 |          0 |      1,385 |          0 |          0 |
    load    [$2 + 2], $17               # |      1,385 |      1,493 |          0 |          0 |         18 |          0 |
.count move_float
    mov     $17, $53                    # |      1,385 |      4,119 |      2,734 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$16 + 118], $17            # |      1,385 |      9,695 |          0 |          0 |      1,385 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |      1,385 |      6,701 |          0 |          0 |        886 |          0 |
    load    [$16 + 118], $2             # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$17 + 0], $17              # |      1,385 |      9,695 |          0 |          0 |      1,385 |          0 |
    load    [$3 + 0], $18               # |      1,385 |     11,075 |          0 |      1,385 |        230 |          0 |
    load    [$3 + 1], $19               # |      1,385 |      1,709 |          0 |          0 |         54 |          0 |
    load    [$3 + 2], $20               # |      1,385 |      1,631 |          0 |          0 |         41 |          0 |
    load    [$17 + 0], $21              # |      1,385 |      1,421 |          0 |          0 |          6 |          0 |
    load    [$17 + 1], $22              # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$17 + 2], $17              # |      1,385 |      9,659 |          0 |          0 |      1,379 |          0 |
    fmul    $21, $18, $18               # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    fmul    $22, $19, $19               # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    fmul    $17, $20, $17               # |      1,385 |      9,695 |          0 |      1,385 |          0 |          0 |
.count load_float
    load    [f.31972], $20              # |      1,385 |      9,695 |          0 |          0 |      1,385 |          0 |
.count load_float
    load    [f.31971], $21              # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$16 + 119], $20            # |      1,385 |      1,421 |          0 |          0 |          6 |          0 |
.count stack_store
    store   $16, [$sp + 8]              # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    fadd    $18, $17, $17               # |      1,385 |      4,143 |      2,758 |          0 |          0 |          0 |
    fcmp    $zero, $17                  # |      1,385 |      6,925 |      5,540 |          0 |          0 |          0 |
    bg      ble_else.36802              # |      1,385 |      9,975 |          0 |      1,385 |          0 |        140 |
ble_then.36802:
    fmul    $17, $37, $3                # |        114 |        114 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |        114 |        114 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |        114 |        798 |          0 |        114 |          0 |          0 |
.count stack_load
    load    [$sp + 8], $2               # |        114 |        744 |          0 |          0 |        105 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |        114 |        114 |          0 |          0 |          0 |          0 |
    call    iter_trace_diffuse_rays.2929# |        114 |        114 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36802              # |        114 |        812 |          0 |        114 |          0 |          7 |
ble_else.36802:
    fmul    $17, $38, $3                # |      1,271 |      8,897 |          0 |      1,271 |          0 |          0 |
.count move_args
    mov     $20, $2                     # |      1,271 |      1,271 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |      1,271 |      1,271 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |      1,271 |      8,897 |          0 |      1,271 |          0 |          0 |
.count stack_load
    load    [$sp + 8], $2               # |      1,271 |      8,723 |          0 |          0 |      1,242 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |      1,271 |      1,289 |          0 |          0 |          3 |          0 |
    call    iter_trace_diffuse_rays.2929# |      1,271 |      1,271 |          0 |          0 |          0 |          0 |
ble_cont.36802:
bne_cont.36801:
.count stack_load
    load    [$sp + 4], $16              # |      1,737 |     20,469 |          0 |      1,737 |      1,385 |          0 |
    cmp     $16, 4                      # |      1,737 |     12,159 |          0 |      1,737 |          0 |          0 |
    be      bne_cont.36803              # |      1,737 |      4,734 |      1,737 |          0 |          0 |        630 |
bne_then.36803:
.count stack_load
    load    [$sp + 3], $2               # |      1,385 |      8,993 |          0 |          0 |      1,268 |          0 |
    load    [min_caml_dirvecs + 4], $16 # |      1,385 |      8,789 |          0 |          0 |      1,234 |          0 |
    sub     $41, 1, $3                  # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $17               # |      1,385 |      9,215 |          0 |          0 |      1,305 |          0 |
.count move_float
    mov     $17, $51                    # |      1,385 |      1,545 |        160 |          0 |          0 |          0 |
    load    [$2 + 1], $17               # |      1,385 |      1,409 |          0 |          0 |          4 |          0 |
.count move_float
    mov     $17, $52                    # |      1,385 |      9,695 |          0 |      1,385 |          0 |          0 |
    load    [$2 + 2], $17               # |      1,385 |      1,457 |          0 |          0 |         12 |          0 |
.count move_float
    mov     $17, $53                    # |      1,385 |      4,131 |      2,746 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$16 + 118], $1             # |      1,385 |      9,695 |          0 |          0 |      1,385 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |      1,385 |      5,897 |          0 |          0 |        752 |          0 |
    load    [$16 + 118], $6             # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$1 + 0], $1                # |      1,385 |      9,695 |          0 |          0 |      1,385 |          0 |
    load    [$3 + 0], $2                # |      1,385 |     10,949 |          0 |      1,347 |        247 |          0 |
    load    [$3 + 1], $4                # |      1,385 |      1,685 |          0 |          0 |         50 |          0 |
    load    [$3 + 2], $5                # |      1,385 |      1,577 |          0 |          0 |         32 |          0 |
    load    [$1 + 0], $7                # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$1 + 1], $8                # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |      1,385 |      9,695 |          0 |          0 |      1,385 |          0 |
    fmul    $7, $2, $2                  # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    fmul    $8, $4, $4                  # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    fmul    $1, $5, $1                  # |      1,385 |      9,467 |          0 |      1,347 |          0 |          0 |
.count load_float
    load    [f.31972], $5               # |      1,385 |      9,695 |          0 |          0 |      1,385 |          0 |
.count load_float
    load    [f.31971], $7               # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    fadd    $2, $4, $2                  # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$16 + 119], $5             # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $16, [$sp + 9]              # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    fadd    $2, $1, $1                  # |      1,385 |      4,155 |      2,770 |          0 |          0 |          0 |
    fcmp    $zero, $1                   # |      1,385 |      6,925 |      5,540 |          0 |          0 |          0 |
    bg      ble_else.36804              # |      1,385 |      9,737 |         38 |      1,347 |          0 |        116 |
ble_then.36804:
    fmul    $1, $37, $3                 # |         97 |         97 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $6, $2                      # |         97 |         97 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |         97 |         97 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |         97 |        679 |          0 |         97 |          0 |          0 |
.count stack_load
    load    [$sp + 9], $2               # |         97 |        679 |          0 |          0 |         97 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |         97 |         97 |          0 |          0 |          0 |          0 |
    call    iter_trace_diffuse_rays.2929# |         97 |         97 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36804              # |         97 |        691 |          0 |         97 |          0 |          6 |
ble_else.36804:
    fmul    $1, $38, $3                 # |      1,288 |      8,788 |          0 |      1,250 |          0 |          0 |
.count move_args
    mov     $5, $2                      # |      1,288 |      1,288 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |      1,288 |      1,288 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |      1,288 |      3,478 |          0 |        365 |          0 |          0 |
.count stack_load
    load    [$sp + 9], $2               # |      1,288 |      8,968 |          0 |          0 |      1,280 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |      1,288 |      1,312 |          0 |          0 |          4 |          0 |
    call    iter_trace_diffuse_rays.2929# |      1,288 |      1,288 |          0 |          0 |          0 |          0 |
ble_cont.36804:
bne_cont.36803:
.count stack_move
    add     $sp, 10, $sp                # |      1,737 |     11,793 |          0 |      1,676 |          0 |          0 |
.count stack_load
    load    [$sp - 9], $1               # |      1,737 |     10,230 |      1,737 |          0 |      1,126 |          0 |
.count stack_load
    load    [$sp - 10], $2              # |      1,737 |      1,929 |          0 |          0 |         32 |          0 |
    load    [$1 + 4], $1                # |      1,737 |     12,758 |        611 |          0 |      1,735 |          0 |
    load    [$1 + $2], $1               # |      1,737 |     12,163 |          4 |          0 |      1,737 |          0 |
    load    [$1 + 0], $2                # |      1,737 |     12,159 |          0 |          0 |      1,737 |          0 |
    fmul    $2, $43, $2                 # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    fadd    $46, $2, $2                 # |      1,737 |      8,685 |      6,948 |          0 |          0 |          0 |
.count move_float
    mov     $2, $46                     # |      1,737 |     12,159 |          0 |      1,737 |          0 |          0 |
    load    [$1 + 1], $2                # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    fmul    $2, $44, $2                 # |      1,737 |      3,474 |      1,737 |          0 |          0 |          0 |
    fmul    $1, $45, $1                 # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    fadd    $47, $2, $2                 # |      1,737 |      6,948 |      5,211 |          0 |          0 |          0 |
    fadd    $48, $1, $1                 # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $2, $47                     # |      1,737 |      6,948 |      5,211 |          0 |          0 |          0 |
.count move_float
    mov     $1, $48                     # |      1,737 |     12,159 |          0 |      1,737 |          0 |          0 |
    ret                                 # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
.end calc_diffuse_using_1point

######################################################################
.begin do_without_neighbors
do_without_neighbors.2951:
    cmp     $3, 4                       # |      2,430 |      3,618 |          0 |        198 |          0 |          0 |
    bg      ble_else.36805              # |      2,430 |      5,764 |      2,430 |          0 |          0 |        452 |
ble_then.36805:
    load    [$2 + 2], $16               # |      2,430 |     12,834 |          0 |          0 |      1,734 |          0 |
    load    [$2 + 3], $17               # |      2,430 |      2,430 |          0 |          0 |          0 |          0 |
    add     $3, 1, $18                  # |      2,430 |      2,430 |          0 |          0 |          0 |          0 |
    load    [$16 + $3], $19             # |      2,430 |     12,840 |          0 |          0 |      1,735 |          0 |
    load    [$17 + $3], $20             # |      2,430 |     24,444 |          0 |      1,935 |      1,734 |          0 |
    load    [$2 + 5], $21               # |      2,430 |      5,238 |          0 |          0 |        468 |          0 |
    cmp     $19, 0                      # |      2,430 |      2,430 |          0 |          0 |          0 |          0 |
    bl      bge_else.36806              # |      2,430 |      5,588 |      2,430 |          0 |          0 |        364 |
bge_then.36806:
    cmp     $20, 0                      # |        143 |        143 |          0 |          0 |          0 |          0 |
    bne     be_else.36807               # |        143 |        330 |        143 |          0 |          0 |         22 |
be_then.36807:
    cmp     $18, 4                      # |         11 |         11 |          0 |          0 |          0 |          0 |
    bg      ble_else.36808              # |         11 |         32 |         11 |          0 |          0 |          5 |
ble_then.36808:
    load    [$16 + $18], $1             # |         11 |         59 |          0 |          8 |          0 |          0 |
    load    [$17 + $18], $3             # |         11 |         11 |          0 |          0 |          0 |          0 |
    add     $18, 1, $4                  # |         11 |         11 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |         11 |         11 |          0 |          0 |          0 |          0 |
    bl      bge_else.36809              # |         11 |         26 |         11 |          0 |          0 |          2 |
bge_then.36809:
    cmp     $3, 0                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.36810               # |          1 |          4 |          1 |          0 |          0 |          1 |
be_then.36810:
.count move_args
    mov     $4, $3
    b       do_without_neighbors.2951
be_else.36810:
.count stack_move
    sub     $sp, 14, $sp                # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $18, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $18, [$sp + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    calc_diffuse_using_1point.2942# |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 14, $sp                # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 13], $1              # |          1 |          8 |          1 |          0 |          1 |          0 |
.count stack_load
    load    [$sp - 14], $2              # |          1 |         13 |          0 |          1 |          1 |          0 |
    add     $1, 1, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       do_without_neighbors.2951   # |          1 |          3 |          0 |          0 |          0 |          1 |
bge_else.36809:
    ret                                 # |         10 |         46 |          0 |          6 |          0 |          0 |
ble_else.36808:
    ret
be_else.36807:
.count stack_move
    sub     $sp, 14, $sp                # |        132 |        924 |          0 |        132 |          0 |          0 |
.count stack_store
    store   $17, [$sp + 2]              # |        132 |        264 |        132 |          0 |          0 |          0 |
.count stack_store
    store   $16, [$sp + 3]              # |        132 |        132 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 4]               # |        132 |        924 |          0 |        132 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$21 + $3], $16             # |        132 |        768 |          0 |          0 |        106 |          0 |
    load    [$2 + 6], $18               # |        132 |        282 |          0 |          0 |         25 |          0 |
    load    [$16 + 0], $17              # |        132 |        769 |          1 |          0 |        106 |          0 |
.count move_float
    mov     $17, $43                    # |        132 |        184 |         52 |          0 |          0 |          0 |
    load    [$16 + 1], $17              # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$16 + 2], $16              # |        132 |        132 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $17, $44                    # |        132 |        924 |          0 |        132 |          0 |          0 |
.count move_float
    mov     $16, $45                    # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$2 + 7], $16               # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $17               # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$16 + $3], $16             # |        132 |      1,056 |        132 |          0 |        132 |          0 |
.count stack_store
    store   $16, [$sp + 5]              # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$17 + $3], $2              # |        132 |        924 |          0 |          0 |        132 |          0 |
.count stack_store
    store   $2, [$sp + 6]               # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$18 + 0], $17              # |        132 |      1,716 |          0 |        132 |        132 |          0 |
    cmp     $17, 0                      # |        132 |        132 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $17, [$sp + 7]              # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + 0], $18 # |        132 |        870 |          0 |          0 |        123 |          0 |
    load    [$2 + 0], $19               # |        132 |        924 |          0 |          0 |        132 |          0 |
    be      bne_cont.36811              # |        132 |        228 |          0 |          0 |          0 |         48 |
bne_then.36811:
.count move_float
    mov     $19, $51                    # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $17               # |        107 |        107 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $3                  # |        107 |        749 |          0 |        107 |          0 |          0 |
.count move_float
    mov     $17, $52                    # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$2 + 2], $17               # |        107 |        107 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $17, $53                    # |        107 |        321 |        214 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$18 + 118], $17            # |        107 |        749 |          0 |          0 |        107 |          0 |
    load    [$16 + 0], $19              # |        107 |        749 |          0 |          0 |        107 |          0 |
    load    [$16 + 1], $20              # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$17 + 0], $17              # |        107 |      1,391 |          0 |        107 |        107 |          0 |
    load    [$16 + 2], $21              # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$18 + 118], $2             # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$17 + 0], $22              # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$17 + 1], $23              # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$17 + 2], $17              # |        107 |        749 |          0 |          0 |        107 |          0 |
    fmul    $22, $19, $19               # |        107 |        107 |          0 |          0 |          0 |          0 |
    fmul    $23, $20, $20               # |        107 |        107 |          0 |          0 |          0 |          0 |
    fmul    $17, $21, $17               # |        107 |        749 |          0 |        107 |          0 |          0 |
    load    [$18 + 119], $21            # |        107 |        107 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $18, [$sp + 8]              # |        107 |        107 |          0 |          0 |          0 |          0 |
    fadd    $19, $20, $19               # |        107 |        107 |          0 |          0 |          0 |          0 |
    fadd    $19, $17, $17               # |        107 |        535 |        428 |          0 |          0 |          0 |
    fcmp    $zero, $17                  # |        107 |        535 |        428 |          0 |          0 |          0 |
    bg      ble_else.36812              # |        107 |        218 |        107 |          0 |          0 |          2 |
ble_then.36812:
    fmul    $17, $37, $3
    call    trace_diffuse_ray.2926
    li      116, $4
.count stack_load
    load    [$sp + 8], $2
.count stack_load
    load    [$sp + 5], $3
    call    iter_trace_diffuse_rays.2929
.count b_cont
    b       ble_cont.36812
ble_else.36812:
    fmul    $17, $38, $3                # |        107 |        749 |          0 |        107 |          0 |          0 |
.count move_args
    mov     $21, $2                     # |        107 |        107 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |        107 |        749 |          0 |        107 |          0 |          0 |
    li      116, $4                     # |        107 |        137 |          0 |          5 |          0 |          0 |
.count stack_load
    load    [$sp + 8], $2               # |        107 |        479 |          0 |          0 |         62 |          0 |
.count stack_load
    load    [$sp + 5], $3               # |        107 |        683 |          0 |          0 |         96 |          0 |
    call    iter_trace_diffuse_rays.2929# |        107 |        107 |          0 |          0 |          0 |          0 |
ble_cont.36812:
bne_cont.36811:
.count stack_load
    load    [$sp + 7], $16              # |        132 |      1,602 |          0 |        132 |        113 |          0 |
    cmp     $16, 1                      # |        132 |        170 |         38 |          0 |          0 |          0 |
    be      bne_cont.36813              # |        132 |        416 |        132 |          0 |          0 |         76 |
bne_then.36813:
.count stack_load
    load    [$sp + 6], $2               # |        104 |      1,214 |          0 |        104 |         81 |          0 |
    load    [min_caml_dirvecs + 1], $16 # |        104 |        590 |          0 |          0 |         81 |          0 |
    sub     $41, 1, $3                  # |        104 |        104 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $17               # |        104 |        530 |          0 |          0 |         71 |          0 |
.count move_float
    mov     $17, $51                    # |        104 |        170 |         66 |          0 |          0 |          0 |
    load    [$2 + 1], $17               # |        104 |        110 |          0 |          0 |          1 |          0 |
.count move_float
    mov     $17, $52                    # |        104 |        310 |        206 |          0 |          0 |          0 |
    load    [$2 + 2], $17               # |        104 |        104 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $17, $53                    # |        104 |        728 |          0 |        104 |          0 |          0 |
    call    setup_startp_constants.2831 # |        104 |        104 |          0 |          0 |          0 |          0 |
    load    [$16 + 118], $17            # |        104 |        728 |          0 |          0 |        104 |          0 |
.count stack_load
    load    [$sp + 5], $3               # |        104 |        584 |          0 |          0 |         80 |          0 |
    load    [$16 + 118], $2             # |        104 |        104 |          0 |          0 |          0 |          0 |
    load    [$17 + 0], $17              # |        104 |        728 |          0 |          0 |        104 |          0 |
    load    [$3 + 0], $18               # |        104 |        338 |          0 |          0 |         39 |          0 |
    load    [$3 + 1], $19               # |        104 |        152 |          0 |          0 |          8 |          0 |
    load    [$3 + 2], $20               # |        104 |        746 |          0 |        104 |          3 |          0 |
    load    [$17 + 0], $21              # |        104 |        104 |          0 |          0 |          0 |          0 |
    load    [$17 + 1], $22              # |        104 |        104 |          0 |          0 |          0 |          0 |
    load    [$17 + 2], $17              # |        104 |        728 |          0 |          0 |        104 |          0 |
    fmul    $21, $18, $18               # |        104 |        104 |          0 |          0 |          0 |          0 |
    fmul    $22, $19, $19               # |        104 |        104 |          0 |          0 |          0 |          0 |
    fmul    $17, $20, $17               # |        104 |        104 |          0 |          0 |          0 |          0 |
    load    [$16 + 119], $20            # |        104 |        104 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $16, [$sp + 9]              # |        104 |        728 |          0 |        104 |          0 |          0 |
    fadd    $18, $19, $18               # |        104 |        104 |          0 |          0 |          0 |          0 |
    fadd    $18, $17, $17               # |        104 |        520 |        416 |          0 |          0 |          0 |
    fcmp    $zero, $17                  # |        104 |        520 |        416 |          0 |          0 |          0 |
    bg      ble_else.36814              # |        104 |        208 |        104 |          0 |          0 |          0 |
ble_then.36814:
    fmul    $17, $37, $3
    call    trace_diffuse_ray.2926
    li      116, $4
.count stack_load
    load    [$sp + 9], $2
.count stack_load
    load    [$sp + 5], $3
    call    iter_trace_diffuse_rays.2929
.count b_cont
    b       ble_cont.36814
ble_else.36814:
    fmul    $17, $38, $3                # |        104 |        728 |          0 |        104 |          0 |          0 |
.count move_args
    mov     $20, $2                     # |        104 |        104 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |        104 |        104 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |        104 |        728 |          0 |        104 |          0 |          0 |
.count stack_load
    load    [$sp + 9], $2               # |        104 |        968 |          0 |        104 |         40 |          0 |
.count stack_load
    load    [$sp + 5], $3               # |        104 |        266 |          0 |          0 |         27 |          0 |
    call    iter_trace_diffuse_rays.2929# |        104 |        104 |          0 |          0 |          0 |          0 |
ble_cont.36814:
bne_cont.36813:
.count stack_load
    load    [$sp + 7], $16              # |        132 |      1,500 |          0 |        132 |         96 |          0 |
    cmp     $16, 2                      # |        132 |        204 |         72 |          0 |          0 |          0 |
    be      bne_cont.36815              # |        132 |        316 |        132 |          0 |          0 |         26 |
bne_then.36815:
.count stack_load
    load    [$sp + 6], $2               # |        107 |        707 |          0 |          0 |        100 |          0 |
    load    [min_caml_dirvecs + 2], $16 # |        107 |        749 |          0 |          0 |        107 |          0 |
    sub     $41, 1, $3                  # |        107 |        749 |          0 |        107 |          0 |          0 |
    load    [$2 + 0], $17               # |        107 |        635 |          0 |          0 |         88 |          0 |
.count move_float
    mov     $17, $51                    # |        107 |        145 |         38 |          0 |          0 |          0 |
    load    [$2 + 1], $17               # |        107 |        131 |          0 |          0 |          4 |          0 |
.count move_float
    mov     $17, $52                    # |        107 |        313 |        206 |          0 |          0 |          0 |
    load    [$2 + 2], $17               # |        107 |        113 |          0 |          0 |          1 |          0 |
.count move_float
    mov     $17, $53                    # |        107 |        319 |        212 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$16 + 118], $17            # |        107 |      1,391 |          0 |        107 |        107 |          0 |
.count stack_load
    load    [$sp + 5], $3               # |        107 |        707 |          0 |          0 |        100 |          0 |
    load    [$16 + 118], $2             # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$17 + 0], $17              # |        107 |        749 |          0 |          0 |        107 |          0 |
    load    [$3 + 0], $18               # |        107 |        251 |          0 |          0 |         24 |          0 |
    load    [$3 + 1], $19               # |        107 |        137 |          0 |          0 |          5 |          0 |
    load    [$3 + 2], $20               # |        107 |        143 |          0 |          0 |          6 |          0 |
    load    [$17 + 0], $21              # |        107 |        119 |          0 |          0 |          2 |          0 |
    load    [$17 + 1], $22              # |        107 |        749 |          0 |        107 |          0 |          0 |
    load    [$17 + 2], $17              # |        107 |        737 |          0 |          0 |        105 |          0 |
    fmul    $21, $18, $18               # |        107 |        107 |          0 |          0 |          0 |          0 |
    fmul    $22, $19, $19               # |        107 |        107 |          0 |          0 |          0 |          0 |
    fmul    $17, $20, $17               # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$16 + 119], $20            # |        107 |        119 |          0 |          0 |          2 |          0 |
.count stack_store
    store   $16, [$sp + 10]             # |        107 |        107 |          0 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |        107 |        212 |        105 |          0 |          0 |          0 |
    fadd    $18, $17, $17               # |        107 |        749 |          0 |        107 |          0 |          0 |
    fcmp    $zero, $17                  # |        107 |        535 |        428 |          0 |          0 |          0 |
    bg      ble_else.36816              # |        107 |        328 |        107 |          0 |          0 |         57 |
ble_then.36816:
    fmul    $17, $37, $3
    call    trace_diffuse_ray.2926
    li      116, $4
.count stack_load
    load    [$sp + 10], $2
.count stack_load
    load    [$sp + 5], $3
    call    iter_trace_diffuse_rays.2929
.count b_cont
    b       ble_cont.36816
ble_else.36816:
    fmul    $17, $38, $3                # |        107 |        749 |          0 |        107 |          0 |          0 |
.count move_args
    mov     $20, $2                     # |        107 |        107 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |        107 |        107 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |        107 |        119 |          0 |          2 |          0 |          0 |
.count stack_load
    load    [$sp + 10], $2              # |        107 |        143 |          0 |          0 |          6 |          0 |
.count stack_load
    load    [$sp + 5], $3               # |        107 |        113 |          0 |          0 |          1 |          0 |
    call    iter_trace_diffuse_rays.2929# |        107 |        749 |          0 |        107 |          0 |          0 |
ble_cont.36816:
bne_cont.36815:
.count stack_load
    load    [$sp + 7], $16              # |        132 |      1,074 |          0 |        124 |         33 |          0 |
    cmp     $16, 3                      # |        132 |        330 |        198 |          0 |          0 |          0 |
    be      bne_cont.36817              # |        132 |        408 |        132 |          0 |          0 |         72 |
bne_then.36817:
.count stack_load
    load    [$sp + 6], $2               # |        103 |        379 |          0 |          0 |         46 |          0 |
    load    [min_caml_dirvecs + 3], $16 # |        103 |        259 |          0 |          0 |         26 |          0 |
    sub     $41, 1, $3                  # |        103 |        103 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $17               # |        103 |        631 |          0 |          0 |         88 |          0 |
.count move_float
    mov     $17, $51                    # |        103 |        721 |          0 |        103 |          0 |          0 |
    load    [$2 + 1], $17               # |        103 |        103 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $17, $52                    # |        103 |        309 |        206 |          0 |          0 |          0 |
    load    [$2 + 2], $17               # |        103 |        121 |          0 |          0 |          3 |          0 |
.count move_float
    mov     $17, $53                    # |        103 |        303 |        200 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |        103 |        103 |          0 |          0 |          0 |          0 |
    load    [$16 + 118], $17            # |        103 |        721 |          0 |          0 |        103 |          0 |
.count stack_load
    load    [$sp + 5], $3               # |        103 |        385 |          0 |          0 |         47 |          0 |
    load    [$16 + 118], $2             # |        103 |        721 |          0 |        103 |          0 |          0 |
    load    [$17 + 0], $17              # |        103 |        721 |          0 |          0 |        103 |          0 |
    load    [$3 + 0], $18               # |        103 |        235 |          0 |          0 |         22 |          0 |
    load    [$3 + 1], $19               # |        103 |        115 |          0 |          0 |          2 |          0 |
    load    [$3 + 2], $20               # |        103 |        133 |          0 |          0 |          5 |          0 |
    load    [$17 + 0], $21              # |        103 |        109 |          0 |          0 |          1 |          0 |
    load    [$17 + 1], $22              # |        103 |        103 |          0 |          0 |          0 |          0 |
    load    [$17 + 2], $17              # |        103 |        715 |          0 |          0 |        102 |          0 |
    fmul    $21, $18, $18               # |        103 |        721 |          0 |        103 |          0 |          0 |
    fmul    $22, $19, $19               # |        103 |        103 |          0 |          0 |          0 |          0 |
    fmul    $17, $20, $17               # |        103 |        103 |          0 |          0 |          0 |          0 |
    load    [$16 + 119], $20            # |        103 |        109 |          0 |          0 |          1 |          0 |
.count stack_store
    store   $16, [$sp + 11]             # |        103 |        103 |          0 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |        103 |        205 |        102 |          0 |          0 |          0 |
    fadd    $18, $17, $17               # |        103 |        515 |        412 |          0 |          0 |          0 |
    fcmp    $zero, $17                  # |        103 |        515 |        412 |          0 |          0 |          0 |
    bg      ble_else.36818              # |        103 |        725 |          0 |        103 |          0 |          2 |
ble_then.36818:
    fmul    $17, $37, $3
    call    trace_diffuse_ray.2926
    li      116, $4
.count stack_load
    load    [$sp + 11], $2
.count stack_load
    load    [$sp + 5], $3
    call    iter_trace_diffuse_rays.2929
.count b_cont
    b       ble_cont.36818
ble_else.36818:
    fmul    $17, $38, $3                # |        103 |        721 |          0 |        103 |          0 |          0 |
.count move_args
    mov     $20, $2                     # |        103 |        103 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |        103 |        103 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |        103 |        115 |          0 |          2 |          0 |          0 |
.count stack_load
    load    [$sp + 11], $2              # |        103 |        655 |          0 |          0 |         92 |          0 |
.count stack_load
    load    [$sp + 5], $3               # |        103 |        103 |          0 |          0 |          0 |          0 |
    call    iter_trace_diffuse_rays.2929# |        103 |        103 |          0 |          0 |          0 |          0 |
ble_cont.36818:
bne_cont.36817:
.count stack_load
    load    [$sp + 7], $16              # |        132 |      1,536 |          0 |        131 |        103 |          0 |
    cmp     $16, 4                      # |        132 |        924 |          0 |        132 |          0 |          0 |
    be      bne_cont.36819              # |        132 |        348 |        132 |          0 |          0 |         42 |
bne_then.36819:
.count stack_load
    load    [$sp + 6], $2               # |        107 |        635 |          0 |          0 |         88 |          0 |
    load    [min_caml_dirvecs + 4], $16 # |        107 |        599 |          0 |          0 |         82 |          0 |
    sub     $41, 1, $3                  # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $17               # |        107 |        659 |          0 |          0 |         92 |          0 |
.count move_float
    mov     $17, $51                    # |        107 |        137 |         30 |          0 |          0 |          0 |
    load    [$2 + 1], $17               # |        107 |        119 |          0 |          0 |          2 |          0 |
.count move_float
    mov     $17, $52                    # |        107 |        749 |          0 |        107 |          0 |          0 |
    load    [$2 + 2], $17               # |        107 |        119 |          0 |          0 |          2 |          0 |
.count move_float
    mov     $17, $53                    # |        107 |        317 |        210 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$16 + 118], $1             # |        107 |        749 |          0 |          0 |        107 |          0 |
.count stack_load
    load    [$sp + 5], $3               # |        107 |        635 |          0 |          0 |         88 |          0 |
    load    [$16 + 118], $6             # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$1 + 0], $1                # |        107 |        749 |          0 |          0 |        107 |          0 |
    load    [$3 + 0], $2                # |        107 |        863 |          0 |        102 |         24 |          0 |
    load    [$3 + 1], $4                # |        107 |        125 |          0 |          0 |          3 |          0 |
    load    [$3 + 2], $5                # |        107 |        137 |          0 |          0 |          5 |          0 |
    load    [$1 + 0], $7                # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$1 + 1], $8                # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |        107 |        749 |          0 |          0 |        107 |          0 |
    fmul    $7, $2, $2                  # |        107 |        107 |          0 |          0 |          0 |          0 |
    fmul    $8, $4, $4                  # |        107 |        107 |          0 |          0 |          0 |          0 |
    fmul    $1, $5, $1                  # |        107 |        323 |          0 |         36 |          0 |          0 |
    load    [$16 + 119], $5             # |        107 |        107 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $16, [$sp + 12]             # |        107 |        107 |          0 |          0 |          0 |          0 |
    fadd    $2, $4, $2                  # |        107 |        178 |         71 |          0 |          0 |          0 |
    fadd    $2, $1, $1                  # |        107 |        535 |        428 |          0 |          0 |          0 |
    fcmp    $zero, $1                   # |        107 |        535 |        428 |          0 |          0 |          0 |
    bg      ble_else.36820              # |        107 |        218 |        107 |          0 |          0 |          2 |
ble_then.36820:
    fmul    $1, $37, $3
.count move_args
    mov     $6, $2
    call    trace_diffuse_ray.2926
    li      116, $4
.count stack_load
    load    [$sp + 12], $2
.count stack_load
    load    [$sp + 5], $3
    call    iter_trace_diffuse_rays.2929
.count b_cont
    b       ble_cont.36820
ble_else.36820:
    fmul    $1, $38, $3                 # |        107 |        113 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $5, $2                      # |        107 |        611 |          0 |         84 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |        107 |        107 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |        107 |        107 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 12], $2              # |        107 |        743 |          0 |          0 |        106 |          0 |
.count stack_load
    load    [$sp + 5], $3               # |        107 |        107 |          0 |          0 |          0 |          0 |
    call    iter_trace_diffuse_rays.2929# |        107 |        107 |          0 |          0 |          0 |          0 |
ble_cont.36820:
bne_cont.36819:
.count stack_load
    load    [$sp + 0], $2               # |        132 |        654 |          0 |         87 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $3               # |        132 |        924 |          0 |          0 |        132 |          0 |
    load    [$2 + 4], $1                # |        132 |      1,656 |          0 |        122 |        132 |          0 |
    load    [$1 + $3], $1               # |        132 |        924 |          0 |          0 |        132 |          0 |
    add     $3, 1, $3                   # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$1 + 0], $4                # |        132 |        924 |          0 |          0 |        132 |          0 |
    cmp     $3, 4                       # |        132 |        132 |          0 |          0 |          0 |          0 |
    fmul    $4, $43, $4                 # |        132 |        132 |          0 |          0 |          0 |          0 |
    fadd    $46, $4, $4                 # |        132 |        660 |        528 |          0 |          0 |          0 |
.count move_float
    mov     $4, $46                     # |        132 |        660 |        528 |          0 |          0 |          0 |
    load    [$1 + 1], $4                # |        132 |        864 |          0 |        122 |          0 |          0 |
    load    [$1 + 2], $1                # |        132 |        132 |          0 |          0 |          0 |          0 |
    fmul    $4, $44, $4                 # |        132 |        264 |        132 |          0 |          0 |          0 |
    fmul    $1, $45, $1                 # |        132 |        132 |          0 |          0 |          0 |          0 |
    fadd    $47, $4, $4                 # |        132 |        528 |        396 |          0 |          0 |          0 |
    fadd    $48, $1, $1                 # |        132 |        132 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $4, $47                     # |        132 |        528 |        396 |          0 |          0 |          0 |
.count move_float
    mov     $1, $48                     # |        132 |        132 |          0 |          0 |          0 |          0 |
    bg      ble_else.36821              # |        132 |        934 |          0 |        132 |          0 |          5 |
ble_then.36821:
.count stack_load
    load    [$sp + 3], $1               # |        132 |        924 |          0 |          0 |        132 |          0 |
.count stack_load
    load    [$sp + 2], $4               # |        132 |        774 |          0 |          0 |        107 |          0 |
    add     $3, 1, $5                   # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$1 + $3], $1               # |        132 |        918 |          0 |          0 |        131 |          0 |
    load    [$4 + $3], $4               # |        132 |        924 |          0 |          0 |        132 |          0 |
    cmp     $1, 0                       # |        132 |        132 |          0 |          0 |          0 |          0 |
    bl      bge_else.36822              # |        132 |        270 |        132 |          0 |          0 |          3 |
bge_then.36822:
    cmp     $4, 0
    bne     be_else.36823
be_then.36823:
.count stack_move
    add     $sp, 14, $sp
.count move_args
    mov     $5, $3
    b       do_without_neighbors.2951
be_else.36823:
.count stack_store
    store   $3, [$sp + 13]
    call    calc_diffuse_using_1point.2942
.count stack_move
    add     $sp, 14, $sp
.count stack_load
    load    [$sp - 1], $1
.count stack_load
    load    [$sp - 14], $2
    add     $1, 1, $3
    b       do_without_neighbors.2951
bge_else.36822:
.count stack_move
    add     $sp, 14, $sp                # |        132 |        924 |          0 |        132 |          0 |          0 |
    ret                                 # |        132 |        132 |          0 |          0 |          0 |          0 |
ble_else.36821:
.count stack_move
    add     $sp, 14, $sp
    ret
bge_else.36806:
    ret                                 # |      2,287 |     10,189 |          0 |      1,317 |          0 |          0 |
ble_else.36805:
    ret
.end do_without_neighbors

######################################################################
.begin try_exploit_neighbors
try_exploit_neighbors.2967:
    cmp     $6, 4                       # |     23,861 |     24,359 |          0 |         83 |          0 |          0 |
    bg      ble_else.36824              # |     23,861 |     47,760 |     23,861 |          0 |          0 |         19 |
ble_then.36824:
    load    [$4 + $2], $1               # |     23,861 |     25,085 |          0 |          0 |        204 |          0 |
    load    [$3 + $2], $7               # |     23,861 |     42,311 |          0 |          0 |      3,075 |          0 |
    load    [$5 + $2], $8               # |     23,861 |     39,827 |          0 |          0 |      2,661 |          0 |
    load    [$1 + 2], $9                # |     23,861 |     24,827 |          0 |          0 |        161 |          0 |
    load    [$7 + 2], $10               # |     23,861 |     79,229 |          0 |      1,211 |      8,017 |          0 |
    load    [$1 + 3], $1                # |     23,861 |     23,861 |          0 |          0 |          0 |          0 |
    load    [$9 + $6], $9               # |     23,861 |     30,311 |          0 |          0 |      1,075 |          0 |
    load    [$10 + $6], $10             # |     23,861 |     72,173 |          0 |          0 |      8,052 |          0 |
    load    [$1 + $6], $1               # |     23,861 |     72,323 |          0 |          0 |      8,077 |          0 |
    cmp     $9, 0                       # |     23,861 |     23,861 |          0 |          0 |          0 |          0 |
    bl      bge_else.36825              # |     23,861 |     50,268 |     23,861 |          0 |          0 |      1,273 |
bge_then.36825:
    cmp     $10, $9                     # |      9,906 |      9,906 |          0 |          0 |          0 |          0 |
    bne     be_else.36826               # |      9,906 |     28,947 |      8,695 |      1,211 |          0 |      1,540 |
be_then.36826:
    load    [$8 + 2], $8                # |      9,429 |     52,911 |          0 |          0 |      7,247 |          0 |
    sub     $2, 1, $10                  # |      9,429 |      9,429 |          0 |          0 |          0 |          0 |
    add     $2, 1, $11                  # |      9,429 |      9,429 |          0 |          0 |          0 |          0 |
    load    [$8 + $6], $8               # |      9,429 |     53,499 |          0 |          0 |      7,345 |          0 |
    load    [$4 + $10], $10             # |      9,429 |     15,243 |          0 |          0 |        969 |          0 |
    load    [$4 + $11], $11             # |      9,429 |     19,677 |          0 |          0 |      1,708 |          0 |
    cmp     $8, $9                      # |      9,429 |      9,429 |          0 |          0 |          0 |          0 |
    bne     be_else.36827               # |      9,429 |     25,277 |      8,418 |      1,011 |          0 |        682 |
be_then.36827:
    load    [$10 + 2], $8               # |      9,028 |      9,520 |          0 |          0 |         82 |          0 |
    load    [$11 + 2], $10              # |      9,028 |     52,990 |          0 |          0 |      7,327 |          0 |
    load    [$8 + $6], $8               # |      9,028 |     14,071 |      1,701 |          0 |        557 |          0 |
    load    [$10 + $6], $10             # |      9,028 |     52,990 |          0 |          0 |      7,327 |          0 |
    cmp     $8, $9                      # |      9,028 |     10,715 |      1,687 |          0 |          0 |          0 |
    bne     be_else.36828               # |      9,028 |     18,596 |      9,028 |          0 |          0 |        270 |
be_then.36828:
    cmp     $10, $9                     # |      8,880 |      8,880 |          0 |          0 |          0 |          0 |
    bne     be_else.36829               # |      8,880 |     24,917 |      8,083 |        797 |          0 |      1,586 |
be_then.36829:
    li      1, $8                       # |      8,752 |      8,752 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36826               # |      8,752 |      8,764 |          0 |          0 |          0 |          6 |
be_else.36829:
    li      0, $8                       # |        128 |        128 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36826               # |        128 |        136 |          0 |          0 |          0 |          4 |
be_else.36828:
    li      0, $8                       # |        148 |        670 |          0 |         87 |          0 |          0 |
.count b_cont
    b       be_cont.36826               # |        148 |        156 |          0 |          0 |          0 |          4 |
be_else.36827:
    li      0, $8                       # |        401 |      1,871 |          0 |        245 |          0 |          0 |
.count b_cont
    b       be_cont.36826               # |        401 |      1,705 |          0 |        216 |          0 |          4 |
be_else.36826:
    li      0, $8                       # |        477 |      1,803 |          0 |        221 |          0 |          0 |
be_cont.36826:
    cmp     $8, 0                       # |      9,906 |     14,895 |        477 |        752 |          0 |          0 |
    bne     be_else.36830               # |      9,906 |     20,490 |      9,906 |          0 |          0 |        339 |
be_then.36830:
    cmp     $6, 4                       # |      1,154 |      1,154 |          0 |          0 |          0 |          0 |
    bg      ble_else.36831              # |      1,154 |      2,634 |      1,154 |          0 |          0 |        163 |
ble_then.36831:
    load    [$4 + $2], $2               # |      1,154 |      1,262 |          0 |          0 |         18 |          0 |
    add     $6, 1, $3                   # |      1,154 |      1,154 |          0 |          0 |          0 |          0 |
    load    [$2 + 2], $1                # |      1,154 |      7,783 |         59 |      1,095 |          0 |          0 |
    load    [$2 + 3], $4                # |      1,154 |      1,154 |          0 |          0 |          0 |          0 |
    load    [$1 + $6], $1               # |      1,154 |      2,308 |      1,154 |          0 |          0 |          0 |
    load    [$4 + $6], $4               # |      1,154 |      1,280 |          0 |          0 |         21 |          0 |
    cmp     $1, 0                       # |      1,154 |      2,287 |      1,133 |          0 |          0 |          0 |
    bl      bge_else.36832              # |      1,154 |      2,308 |      1,154 |          0 |          0 |          0 |
bge_then.36832:
    cmp     $4, 0                       # |      1,154 |      1,154 |          0 |          0 |          0 |          0 |
    be      do_without_neighbors.2951   # |      1,154 |      2,874 |      1,154 |          0 |          0 |        283 |
.count stack_move
    sub     $sp, 2, $sp                 # |        976 |      3,874 |          0 |        483 |          0 |          0 |
.count move_args
    mov     $6, $3                      # |        976 |        976 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |        976 |        976 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 1]               # |        976 |        976 |          0 |          0 |          0 |          0 |
    call    calc_diffuse_using_1point.2942# |        976 |        976 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |        976 |      5,452 |          0 |        746 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |        976 |      6,872 |        976 |          0 |        820 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |        976 |      6,046 |          0 |          0 |        845 |          0 |
    add     $1, 1, $3                   # |        976 |      5,727 |         47 |        784 |          0 |          0 |
    b       do_without_neighbors.2951   # |        976 |      1,224 |          0 |          0 |          0 |        124 |
bge_else.36832:
    ret
ble_else.36831:
    ret
be_else.36830:
    cmp     $1, 0                       # |      8,752 |     10,504 |          0 |        292 |          0 |          0 |
    bne     be_else.36834               # |      8,752 |     18,790 |      8,752 |          0 |          0 |        643 |
be_then.36834:
    add     $6, 1, $6                   # |      3,348 |      3,348 |          0 |          0 |          0 |          0 |
    b       try_exploit_neighbors.2967  # |      3,348 |      3,352 |          0 |          0 |          0 |          2 |
be_else.36834:
    load    [$7 + 5], $1                # |      5,404 |      8,332 |          0 |        488 |          0 |          0 |
    load    [$1 + $6], $1               # |      5,404 |     48,636 |     10,808 |          0 |      5,404 |          0 |
    load    [$1 + 0], $7                # |      5,404 |     37,828 |          0 |          0 |      5,404 |          0 |
.count move_float
    mov     $7, $43                     # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$1 + 1], $7                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $7, $44                     # |      5,404 |     10,808 |      5,404 |          0 |          0 |          0 |
    sub     $2, 1, $7                   # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $1, $45                     # |      5,404 |      8,332 |          0 |        488 |          0 |          0 |
    load    [$4 + $7], $1               # |      5,404 |      5,584 |          0 |          0 |         30 |          0 |
    load    [$1 + 5], $1                # |      5,404 |     16,308 |     10,748 |          0 |         26 |          0 |
    load    [$1 + $6], $1               # |      5,404 |     18,452 |     10,756 |          0 |        382 |          0 |
    load    [$1 + 0], $7                # |      5,404 |     17,860 |     10,044 |          0 |        402 |          0 |
    fadd    $43, $7, $7                 # |      5,404 |     15,408 |     10,004 |          0 |          0 |          0 |
.count move_float
    mov     $7, $43                     # |      5,404 |     27,020 |     21,616 |          0 |          0 |          0 |
    load    [$1 + 1], $7                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |      5,404 |      8,392 |          0 |        497 |          1 |          0 |
    fadd    $44, $7, $7                 # |      5,404 |     10,311 |      4,907 |          0 |          0 |          0 |
    fadd    $45, $1, $1                 # |      5,404 |      5,900 |        496 |          0 |          0 |          0 |
.count move_float
    mov     $7, $44                     # |      5,404 |     21,120 |     15,716 |          0 |          0 |          0 |
.count move_float
    mov     $1, $45                     # |      5,404 |      5,900 |        496 |          0 |          0 |          0 |
    load    [$4 + $2], $1               # |      5,404 |      5,842 |          0 |          0 |         73 |          0 |
    load    [$1 + 5], $1                # |      5,404 |     18,064 |     10,662 |          0 |        333 |          0 |
    load    [$1 + $6], $1               # |      5,404 |     17,910 |     10,142 |          0 |        394 |          0 |
    load    [$1 + 0], $7                # |      5,404 |     17,806 |     10,020 |          1 |        396 |          0 |
    fadd    $43, $7, $7                 # |      5,404 |     15,420 |     10,016 |          0 |          0 |          0 |
.count move_float
    mov     $7, $43                     # |      5,404 |     27,020 |     21,616 |          0 |          0 |          0 |
    load    [$1 + 1], $7                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    fadd    $44, $7, $7                 # |      5,404 |     10,808 |      5,404 |          0 |          0 |          0 |
    fadd    $45, $1, $1                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $7, $44                     # |      5,404 |     21,616 |     16,212 |          0 |          0 |          0 |
    add     $2, 1, $7                   # |      5,404 |      8,386 |          0 |        497 |          0 |          0 |
.count move_float
    mov     $1, $45                     # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$4 + $7], $1               # |      5,404 |      5,614 |          0 |          0 |         35 |          0 |
    load    [$1 + 5], $1                # |      5,404 |     16,142 |     10,738 |          0 |          0 |          0 |
    load    [$1 + $6], $1               # |      5,404 |     48,636 |     10,808 |          0 |      5,404 |          0 |
    load    [$1 + 0], $7                # |      5,404 |     37,828 |          0 |          0 |      5,404 |          0 |
    fadd    $43, $7, $7                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $7, $43                     # |      5,404 |     27,020 |     21,616 |          0 |          0 |          0 |
    load    [$1 + 1], $7                # |      5,404 |      8,386 |          0 |        497 |          0 |          0 |
    load    [$1 + 2], $1                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    fadd    $44, $7, $7                 # |      5,404 |     10,808 |      5,404 |          0 |          0 |          0 |
    fadd    $45, $1, $1                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $7, $44                     # |      5,404 |     21,616 |     16,212 |          0 |          0 |          0 |
.count move_float
    mov     $1, $45                     # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$5 + $2], $1               # |      5,404 |      6,208 |          0 |          0 |        134 |          0 |
    load    [$1 + 5], $1                # |      5,404 |     16,106 |     10,540 |          0 |         27 |          0 |
    load    [$1 + $6], $1               # |      5,404 |     50,530 |      9,762 |        497 |      5,397 |          0 |
    load    [$1 + 0], $7                # |      5,404 |     37,842 |         14 |          0 |      5,404 |          0 |
    fadd    $43, $7, $7                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $7, $43                     # |      5,404 |     27,020 |     21,616 |          0 |          0 |          0 |
    load    [$1 + 1], $7                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    fadd    $44, $7, $7                 # |      5,404 |     10,808 |      5,404 |          0 |          0 |          0 |
    fadd    $45, $1, $1                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $7, $44                     # |      5,404 |     23,107 |     14,721 |        497 |          0 |          0 |
.count move_float
    mov     $1, $45                     # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$4 + $2], $1               # |      5,404 |      5,854 |          0 |          0 |         75 |          0 |
    load    [$1 + 4], $1                # |      5,404 |     18,060 |     10,658 |          0 |        333 |          0 |
    load    [$1 + $6], $1               # |      5,404 |     47,970 |     10,142 |          0 |      5,404 |          0 |
    add     $6, 1, $6                   # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$1 + 0], $7                # |      5,404 |     37,828 |          0 |          0 |      5,404 |          0 |
    fmul    $7, $43, $7                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    fadd    $46, $7, $7                 # |      5,404 |     28,014 |     19,628 |        497 |          0 |          0 |
.count move_float
    mov     $7, $46                     # |      5,404 |     27,020 |     21,616 |          0 |          0 |          0 |
    load    [$1 + 1], $7                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    fmul    $7, $44, $7                 # |      5,404 |     10,808 |      5,404 |          0 |          0 |          0 |
    fmul    $1, $45, $1                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    fadd    $47, $7, $7                 # |      5,404 |     21,616 |     16,212 |          0 |          0 |          0 |
    fadd    $48, $1, $1                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $7, $47                     # |      5,404 |     22,555 |     15,273 |        313 |          0 |          0 |
.count move_float
    mov     $1, $48                     # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    b       try_exploit_neighbors.2967  # |      5,404 |      5,408 |          0 |          0 |          0 |          2 |
bge_else.36825:
    ret                                 # |     13,955 |     15,815 |          0 |        310 |          0 |          0 |
ble_else.36824:
    ret
.end try_exploit_neighbors

######################################################################
.begin pretrace_diffuse_rays
pretrace_diffuse_rays.2980:
    cmp     $3, 4                       # |     16,395 |    114,753 |          0 |     16,393 |          0 |          0 |
    bg      ble_else.36835              # |     16,395 |     32,902 |     16,395 |          0 |          0 |         56 |
ble_then.36835:
    load    [$2 + 2], $16               # |     16,395 |     66,615 |          0 |          0 |      8,370 |          0 |
    load    [$2 + 3], $17               # |     16,395 |    115,785 |          0 |     16,393 |        172 |          0 |
    add     $3, 1, $18                  # |     16,395 |     16,395 |          0 |          0 |          0 |          0 |
    load    [$16 + $3], $19             # |     16,395 |     68,559 |          0 |          0 |      8,694 |          0 |
    load    [$17 + $3], $20             # |     16,395 |     66,381 |          0 |          0 |      8,331 |          0 |
    load    [$16 + $18], $21            # |     16,395 |     17,331 |          0 |          0 |        156 |          0 |
    cmp     $19, 0                      # |     16,395 |     16,395 |          0 |          0 |          0 |          0 |
    bl      bge_else.36836              # |     16,395 |     33,192 |     16,395 |          0 |          0 |        201 |
bge_then.36836:
    cmp     $20, 0                      # |      2,101 |      2,101 |          0 |          0 |          0 |          0 |
    bne     be_else.36837               # |      2,101 |     14,761 |          0 |      2,101 |          0 |         27 |
be_then.36837:
    cmp     $18, 4                      # |         67 |         67 |          0 |          0 |          0 |          0 |
    bg      ble_else.36838              # |         67 |        152 |         67 |          0 |          0 |          9 |
ble_then.36838:
    cmp     $21, 0                      # |         67 |         67 |          0 |          0 |          0 |          0 |
    bl      bge_else.36839              # |         67 |        146 |         67 |          0 |          0 |          6 |
bge_then.36839:
    load    [$17 + $18], $16            # |         11 |         11 |          0 |          0 |          0 |          0 |
    add     $18, 1, $3                  # |         11 |         11 |          0 |          0 |          0 |          0 |
    cmp     $16, 0                      # |         11 |         22 |         11 |          0 |          0 |          0 |
    be      pretrace_diffuse_rays.2980  # |         11 |         81 |          0 |         11 |          0 |          2 |
.count stack_move
    sub     $sp, 15, $sp                # |          9 |          9 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $43                  # |          9 |          9 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $18, [$sp + 0]              # |          9 |          9 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $19               # |          9 |          9 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $44                  # |          9 |          9 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $45                  # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$2 + 6], $16               # |          9 |         63 |          0 |          9 |          0 |          0 |
    load    [$2 + 7], $17               # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$19 + $18], $2             # |          9 |          9 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $3                  # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $19               # |          9 |         72 |          9 |          0 |          9 |          0 |
.count move_float
    mov     $19, $51                    # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $19               # |          9 |          9 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $19, $52                    # |          9 |         27 |         18 |          0 |          0 |          0 |
    load    [$2 + 2], $19               # |          9 |         63 |          0 |          9 |          0 |          0 |
.count move_float
    mov     $19, $53                    # |          9 |         27 |         18 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$16 + 0], $1               # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$17 + $18], $3             # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + $1], $2 # |          9 |         54 |          9 |          0 |          6 |          0 |
    load    [$3 + 0], $1                # |          9 |         63 |          0 |          0 |          9 |          0 |
    load    [$3 + 1], $4                # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$2 + 118], $5              # |          9 |        117 |          0 |          9 |          9 |          0 |
    load    [$3 + 2], $6                # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$2 + 118], $7              # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$5 + 0], $5                # |          9 |         63 |          0 |          0 |          9 |          0 |
    load    [$2 + 119], $8              # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$5 + 0], $9                # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$5 + 1], $10               # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$5 + 2], $5                # |          9 |         63 |          0 |          0 |          9 |          0 |
    fmul    $9, $1, $1                  # |          9 |         63 |          0 |          9 |          0 |          0 |
    fmul    $10, $4, $4                 # |          9 |          9 |          0 |          0 |          0 |          0 |
    fmul    $5, $6, $5                  # |          9 |          9 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 2]               # |          9 |          9 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 3]               # |          9 |          9 |          0 |          0 |          0 |          0 |
    fadd    $1, $4, $1                  # |          9 |         18 |          9 |          0 |          0 |          0 |
    fadd    $1, $5, $1                  # |          9 |         45 |         36 |          0 |          0 |          0 |
    fcmp    $zero, $1                   # |          9 |         45 |         36 |          0 |          0 |          0 |
    bg      ble_else.36841              # |          9 |         63 |          0 |          9 |          0 |          0 |
ble_then.36841:
    fmul    $1, $37, $3
.count move_args
    mov     $7, $2
    call    trace_diffuse_ray.2926
    li      116, $4
.count stack_load
    load    [$sp + 3], $2
.count stack_load
    load    [$sp + 2], $3
    call    iter_trace_diffuse_rays.2929
.count b_cont
    b       ble_cont.36841
ble_else.36841:
    fmul    $1, $38, $3                 # |          9 |         63 |          0 |          9 |          0 |          0 |
.count move_args
    mov     $8, $2                      # |          9 |          9 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |          9 |          9 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |          9 |          9 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $2               # |          9 |         27 |          0 |          0 |          3 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |          9 |         27 |          0 |          0 |          3 |          0 |
    call    iter_trace_diffuse_rays.2929# |          9 |          9 |          0 |          0 |          0 |          0 |
ble_cont.36841:
.count stack_move
    add     $sp, 15, $sp                # |          9 |         63 |          0 |          9 |          0 |          0 |
.count stack_load
    load    [$sp - 14], $2              # |          9 |         60 |          9 |          0 |          7 |          0 |
.count stack_load
    load    [$sp - 15], $3              # |          9 |         21 |          0 |          0 |          2 |          0 |
    load    [$2 + 5], $1                # |          9 |         53 |          2 |          0 |          7 |          0 |
    load    [$1 + $3], $1               # |          9 |         67 |          4 |          0 |          9 |          0 |
    add     $3, 1, $3                   # |          9 |          9 |          0 |          0 |          0 |          0 |
    store   $43, [$1 + 0]               # |          9 |          9 |          0 |          0 |          0 |          0 |
    store   $44, [$1 + 1]               # |          9 |          9 |          0 |          0 |          0 |          0 |
    store   $45, [$1 + 2]               # |          9 |         63 |          0 |          9 |          0 |          0 |
    b       pretrace_diffuse_rays.2980  # |          9 |         13 |          0 |          0 |          0 |          2 |
bge_else.36839:
    ret                                 # |         56 |        386 |          0 |         55 |          0 |          0 |
ble_else.36838:
    ret
be_else.36837:
.count stack_move
    sub     $sp, 15, $sp                # |      2,034 |     13,638 |          0 |      1,934 |          0 |          0 |
.count move_float
    mov     $zero, $43                  # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $17, [$sp + 4]              # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $16, [$sp + 5]              # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |      2,034 |      7,014 |          0 |        830 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 6]               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [$2 + 7], $17               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $44                  # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $45                  # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [$2 + 6], $16               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $17, [$sp + 7]              # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $18               # |      2,034 |      2,082 |          0 |          0 |          8 |          0 |
.count stack_store
    store   $18, [$sp + 8]              # |      2,034 |     14,238 |          0 |      2,034 |          0 |          0 |
    load    [$18 + $3], $2              # |      2,034 |      4,620 |          0 |          0 |        431 |          0 |
    sub     $41, 1, $3                  # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $18               # |      2,034 |     15,841 |      1,603 |          0 |      2,034 |          0 |
.count move_float
    mov     $18, $51                    # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $18               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $18, $52                    # |      2,034 |      6,102 |      4,068 |          0 |          0 |          0 |
    load    [$2 + 2], $18               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $18, $53                    # |      2,034 |     14,238 |          0 |      2,034 |          0 |          0 |
    call    setup_startp_constants.2831 # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $18              # |      2,034 |      2,304 |          0 |          0 |         45 |          0 |
    load    [$16 + 0], $16              # |      2,034 |      3,564 |          0 |          0 |        255 |          0 |
.count load_float
    load    [f.31971], $21              # |      2,034 |     14,238 |          0 |          0 |      2,034 |          0 |
    load    [$17 + $18], $3             # |      2,034 |      5,316 |          0 |          0 |        547 |          0 |
.count load_float
    load    [f.31972], $17              # |      2,034 |     14,238 |          0 |          0 |      2,034 |          0 |
.count stack_store
    store   $3, [$sp + 9]               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + $16], $2# |      2,034 |     17,040 |          0 |      1,102 |      1,399 |          0 |
.count stack_store
    store   $2, [$sp + 10]              # |      2,034 |      3,304 |      1,270 |          0 |          0 |          0 |
    load    [$2 + 118], $18             # |      2,034 |     14,238 |          0 |          0 |      2,034 |          0 |
    load    [$3 + 0], $16               # |      2,034 |     14,238 |          0 |          0 |      2,034 |          0 |
    load    [$3 + 1], $17               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [$18 + 0], $18              # |      2,034 |     14,238 |          0 |          0 |      2,034 |          0 |
    load    [$3 + 2], $19               # |      2,034 |      2,052 |          0 |          0 |          3 |          0 |
    load    [$2 + 118], $20             # |      2,034 |      2,052 |          0 |          0 |          3 |          0 |
    load    [$2 + 119], $2              # |      2,034 |     14,244 |          0 |      2,034 |          1 |          0 |
    load    [$18 + 0], $21              # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [$18 + 1], $22              # |      2,034 |      2,040 |          0 |          0 |          1 |          0 |
    load    [$18 + 2], $18              # |      2,034 |     14,208 |          0 |          0 |      2,029 |          0 |
    fmul    $21, $16, $16               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    fmul    $22, $17, $17               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    fmul    $18, $19, $18               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    fadd    $16, $17, $16               # |      2,034 |      8,136 |      6,102 |          0 |          0 |          0 |
    fadd    $16, $18, $16               # |      2,034 |     14,238 |          0 |      2,034 |          0 |          0 |
    fcmp    $zero, $16                  # |      2,034 |     10,170 |      8,136 |          0 |          0 |          0 |
    bg      ble_else.36842              # |      2,034 |      4,488 |      2,034 |          0 |          0 |        210 |
ble_then.36842:
    fmul    $16, $37, $3                # |        292 |        292 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $20, $2                     # |        292 |        292 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |        292 |        292 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36842              # |        292 |        306 |          0 |          0 |          0 |          7 |
ble_else.36842:
    fmul    $16, $38, $3                # |      1,742 |      1,742 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |      1,742 |     12,194 |          0 |      1,742 |          0 |          0 |
ble_cont.36842:
    li      116, $4                     # |      2,034 |      3,786 |          0 |        292 |          0 |          0 |
.count stack_load
    load    [$sp + 10], $2              # |      2,034 |      7,770 |          0 |          0 |        956 |          0 |
.count stack_load
    load    [$sp + 9], $3               # |      2,034 |      3,474 |          0 |          0 |        240 |          0 |
    call    iter_trace_diffuse_rays.2929# |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |      2,034 |      8,508 |          0 |          0 |      1,079 |          0 |
.count stack_load
    load    [$sp + 6], $17              # |      2,034 |     13,152 |          0 |          0 |      1,853 |          0 |
    load    [$2 + 5], $16               # |      2,034 |     13,159 |        181 |          0 |      1,824 |          0 |
    load    [$16 + $17], $18            # |      2,034 |     26,442 |          0 |      2,034 |      2,034 |          0 |
    add     $17, 1, $17                 # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    cmp     $17, 4                      # |      2,034 |      4,068 |      2,034 |          0 |          0 |          0 |
    store   $43, [$18 + 0]              # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    store   $44, [$18 + 1]              # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    store   $45, [$18 + 2]              # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    bg      ble_else.36843              # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
ble_then.36843:
.count stack_load
    load    [$sp + 5], $18              # |      2,034 |     13,164 |          0 |          0 |      1,855 |          0 |
.count stack_load
    load    [$sp + 4], $19              # |      2,034 |     18,570 |          0 |      2,034 |        722 |          0 |
    add     $17, 1, $3                  # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [$18 + $17], $18            # |      2,034 |     12,978 |          0 |          0 |      1,824 |          0 |
    load    [$19 + $17], $19            # |      2,034 |     12,834 |          0 |          0 |      1,800 |          0 |
    cmp     $18, 0                      # |      2,034 |      2,153 |        119 |          0 |          0 |          0 |
    bl      bge_else.36844              # |      2,034 |      4,166 |      2,034 |          0 |          0 |         49 |
bge_then.36844:
    cmp     $19, 0
    bne     be_else.36845
be_then.36845:
.count stack_move
    add     $sp, 15, $sp
    b       pretrace_diffuse_rays.2980
be_else.36845:
.count stack_store
    store   $17, [$sp + 11]
.count stack_store
    store   $16, [$sp + 12]
.count stack_load
    load    [$sp + 8], $18
.count move_float
    mov     $zero, $43
.count move_float
    mov     $zero, $44
.count move_float
    mov     $zero, $45
    load    [$2 + 6], $16
    load    [$18 + $17], $2
    sub     $41, 1, $3
    load    [$2 + 0], $18
.count move_float
    mov     $18, $51
    load    [$2 + 1], $18
.count move_float
    mov     $18, $52
    load    [$2 + 2], $18
.count move_float
    mov     $18, $53
    call    setup_startp_constants.2831
    load    [$16 + 0], $1
.count stack_load
    load    [$sp + 7], $2
    load    [$2 + $17], $3
    load    [min_caml_dirvecs + $1], $2
    load    [$3 + 0], $1
    load    [$2 + 118], $5
    load    [$3 + 1], $4
    load    [$3 + 2], $6
    load    [$5 + 0], $5
    load    [$2 + 118], $7
    load    [$2 + 119], $8
    load    [$5 + 0], $9
    load    [$5 + 1], $10
    load    [$5 + 2], $5
    fmul    $9, $1, $1
    fmul    $10, $4, $4
    fmul    $5, $6, $5
.count stack_store
    store   $3, [$sp + 13]
.count stack_store
    store   $2, [$sp + 14]
    fadd    $1, $4, $1
    fadd    $1, $5, $1
    fcmp    $zero, $1
    bg      ble_else.36846
ble_then.36846:
    fmul    $1, $37, $3
.count move_args
    mov     $7, $2
    call    trace_diffuse_ray.2926
    li      116, $4
.count stack_load
    load    [$sp + 14], $2
.count stack_load
    load    [$sp + 13], $3
    call    iter_trace_diffuse_rays.2929
.count b_cont
    b       ble_cont.36846
ble_else.36846:
    fmul    $1, $38, $3
.count move_args
    mov     $8, $2
    call    trace_diffuse_ray.2926
    li      116, $4
.count stack_load
    load    [$sp + 14], $2
.count stack_load
    load    [$sp + 13], $3
    call    iter_trace_diffuse_rays.2929
ble_cont.36846:
.count stack_move
    add     $sp, 15, $sp
.count stack_load
    load    [$sp - 4], $1
.count stack_load
    load    [$sp - 3], $2
    add     $1, 1, $3
    load    [$2 + $1], $2
    store   $43, [$2 + 0]
    store   $44, [$2 + 1]
    store   $45, [$2 + 2]
.count stack_load
    load    [$sp - 14], $2
    b       pretrace_diffuse_rays.2980
bge_else.36844:
.count stack_move
    add     $sp, 15, $sp                # |      2,034 |     14,238 |          0 |      2,034 |          0 |          0 |
    ret                                 # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
ble_else.36843:
.count stack_move
    add     $sp, 15, $sp
    ret
bge_else.36836:
    ret                                 # |     14,294 |    100,058 |          0 |     14,294 |          0 |          0 |
ble_else.36835:
    ret
.end pretrace_diffuse_rays

######################################################################
.begin pretrace_pixels
pretrace_pixels.2983:
    cmp     $3, 0                       # |     16,512 |    115,518 |          0 |     16,501 |          0 |          0 |
    bl      bge_else.36847              # |     16,512 |     35,618 |     16,512 |          0 |          0 |      1,297 |
bge_then.36847:
.count stack_move
    sub     $sp, 9, $sp                 # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |     16,384 |     32,768 |     16,384 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $7, [$sp + 3]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 4]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 5]               # |     16,384 |    114,688 |          0 |     16,384 |          0 |          0 |
    load    [min_caml_image_center + 0], $12# |     16,384 |     82,834 |          0 |          0 |     11,075 |          0 |
    load    [min_caml_screenx_dir + 0], $10# |     16,384 |     78,046 |          0 |          0 |     10,277 |          0 |
    load    [min_caml_scan_pitch + 0], $11# |     16,384 |     17,764 |          0 |          0 |        230 |          0 |
    sub     $3, $12, $2                 # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |     16,384 |     40,960 |     24,576 |          0 |          0 |          0 |
    fmul    $11, $16, $16               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $18              # |     16,384 |    115,048 |          0 |     16,384 |         60 |          0 |
    fmul    $16, $10, $17               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    fadd    $17, $18, $17               # |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    store   $17, [min_caml_ptrace_dirvec + 0]# |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    load    [min_caml_screenx_dir + 1], $17# |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $18              # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    fmul    $16, $17, $17               # |     16,384 |     32,768 |     16,384 |          0 |          0 |          0 |
    fadd    $17, $18, $17               # |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    store   $17, [min_caml_ptrace_dirvec + 1]# |     16,384 |    114,688 |          0 |     16,384 |          0 |          0 |
    load    [min_caml_screenx_dir + 2], $17# |     16,384 |     16,678 |          0 |          0 |         49 |          0 |
    fmul    $16, $17, $16               # |     16,384 |     49,054 |     32,670 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $17              # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    fadd    $16, $17, $16               # |     16,384 |     65,536 |     49,152 |          0 |          0 |          0 |
    store   $16, [min_caml_ptrace_dirvec + 2]# |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    load    [min_caml_ptrace_dirvec + 0], $16# |     16,384 |     64,984 |          0 |          0 |      8,100 |          0 |
    load    [min_caml_ptrace_dirvec + 1], $17# |     16,384 |     16,666 |          0 |          0 |         47 |          0 |
    load    [min_caml_ptrace_dirvec + 2], $18# |     16,384 |     84,766 |          0 |     11,263 |        134 |          0 |
    fmul    $16, $16, $19               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    fmul    $17, $17, $17               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    fmul    $18, $18, $18               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    fadd    $19, $17, $17               # |     16,384 |     65,536 |     49,152 |          0 |          0 |          0 |
    fadd    $17, $18, $17               # |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    fsqrt   $17, $17                    # |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    fcmp    $17, $zero                  # |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    bne     be_else.36848               # |     16,384 |    114,853 |          1 |     16,383 |          0 |         85 |
be_then.36848:
    mov     $36, $17
.count b_cont
    b       be_cont.36848
be_else.36848:
    finv    $17, $17                    # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
be_cont.36848:
    fmul    $16, $17, $16               # |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $46                  # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $47                  # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $48                  # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    li      min_caml_ptrace_dirvec, $4  # |     16,384 |     78,088 |          0 |     10,284 |          0 |          0 |
    store   $16, [min_caml_ptrace_dirvec + 0]# |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [min_caml_ptrace_dirvec + 1], $16# |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $6                   # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    fmul    $16, $17, $16               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $36, $3                     # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    store   $16, [min_caml_ptrace_dirvec + 1]# |     16,384 |     65,536 |     49,152 |          0 |          0 |          0 |
    load    [min_caml_ptrace_dirvec + 2], $16# |     16,384 |     78,088 |          0 |     10,284 |          0 |          0 |
    fmul    $16, $17, $16               # |     16,384 |     49,152 |     32,768 |          0 |          0 |          0 |
    store   $16, [min_caml_ptrace_dirvec + 2]# |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    load    [min_caml_viewpoint + 0], $16# |     16,384 |     75,928 |          0 |          0 |      9,924 |          0 |
    store   $16, [min_caml_startp + 0]  # |     16,384 |     29,304 |     12,920 |          0 |          0 |          0 |
    load    [min_caml_viewpoint + 1], $16# |     16,384 |     16,456 |          0 |          0 |         12 |          0 |
    store   $16, [min_caml_startp + 1]  # |     16,384 |     49,128 |     32,744 |          0 |          0 |          0 |
    load    [min_caml_viewpoint + 2], $16# |     16,384 |     16,450 |          0 |          0 |         11 |          0 |
    store   $16, [min_caml_startp + 2]  # |     16,384 |     49,134 |     32,744 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $16              # |     16,384 |     16,522 |          0 |          0 |         23 |          0 |
.count stack_load
    load    [$sp + 2], $17              # |     16,384 |     16,402 |          0 |          0 |          3 |          0 |
    load    [$17 + $16], $5             # |     16,384 |    143,946 |     32,762 |          0 |     15,800 |          0 |
    call    trace_ray.2920              # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $16              # |     16,384 |     17,422 |          0 |          0 |        173 |          0 |
.count stack_load
    load    [$sp + 2], $17              # |     16,384 |     16,822 |          0 |          0 |         73 |          0 |
    li      1, $3                       # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [$17 + $16], $18            # |     16,384 |     62,958 |     16,310 |          1 |      5,043 |          0 |
    load    [$18 + 0], $18              # |     16,384 |    137,250 |     22,682 |          0 |     16,364 |          0 |
    store   $46, [$18 + 0]              # |     16,384 |     16,424 |         40 |          0 |          0 |          0 |
    store   $47, [$18 + 1]              # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    store   $48, [$18 + 2]              # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [$17 + $16], $18            # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $19              # |     16,384 |     17,806 |          0 |          0 |        237 |          0 |
    load    [$18 + 6], $18              # |     16,384 |    130,799 |     16,147 |          0 |     16,378 |          0 |
    store   $19, [$18 + 0]              # |     16,384 |    114,688 |          0 |     16,384 |          0 |          0 |
    load    [$17 + $16], $2             # |     16,384 |     16,642 |          0 |          0 |         43 |          0 |
    load    [$2 + 2], $16               # |     16,384 |     49,324 |     32,682 |          0 |         43 |          0 |
    load    [$2 + 3], $17               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [$2 + 6], $18               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [$16 + 0], $16              # |     16,384 |    108,778 |          0 |          0 |     15,399 |          0 |
    load    [$17 + 0], $17              # |     16,384 |    114,688 |          0 |          0 |     16,384 |          0 |
    load    [$18 + 0], $18              # |     16,384 |    114,688 |          0 |          0 |     16,384 |          0 |
    cmp     $16, 0                      # |     16,384 |    114,688 |          0 |     16,384 |          0 |          0 |
    bl      bge_cont.36849              # |     16,384 |     32,848 |     16,384 |          0 |          0 |         40 |
bge_then.36849:
    cmp     $17, 0                      # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    bne     be_else.36850               # |     16,384 |     47,076 |     16,384 |          0 |          0 |      7,154 |
be_then.36850:
    call    pretrace_diffuse_rays.2980  # |      7,301 |      7,301 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36850               # |      7,301 |      7,375 |          0 |          0 |          0 |         37 |
be_else.36850:
.count stack_store
    store   $2, [$sp + 6]               # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $17               # |      9,083 |      9,233 |          0 |          0 |         25 |          0 |
.count move_float
    mov     $zero, $43                  # |      9,083 |     34,559 |          0 |      4,246 |          0 |          0 |
.count move_float
    mov     $zero, $44                  # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $45                  # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    load    [$2 + 7], $16               # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    load    [$17 + 0], $2               # |      9,083 |     21,305 |          0 |          0 |      2,037 |          0 |
    load    [min_caml_dirvecs + $18], $18# |      9,083 |     45,905 |          0 |          0 |      6,137 |          0 |
    load    [$16 + 0], $16              # |      9,083 |     21,767 |          0 |          0 |      2,114 |          0 |
    load    [$2 + 0], $17               # |      9,083 |     63,581 |          0 |          0 |      9,083 |          0 |
    sub     $41, 1, $3                  # |      9,083 |     63,581 |          0 |      9,083 |          0 |          0 |
.count move_float
    mov     $17, $51                    # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $17               # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $17, $52                    # |      9,083 |     27,249 |     18,166 |          0 |          0 |          0 |
    load    [$2 + 2], $17               # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $17, $53                    # |      9,083 |     27,249 |     18,166 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    load    [$18 + 118], $1             # |      9,083 |     63,581 |          0 |          0 |      9,083 |          0 |
    load    [$16 + 0], $2               # |      9,083 |     73,607 |          0 |      9,083 |      1,671 |          0 |
    load    [$16 + 1], $3               # |      9,083 |     10,937 |          0 |          0 |        309 |          0 |
    load    [$1 + 0], $1                # |      9,083 |     63,581 |          0 |          0 |      9,083 |          0 |
    load    [$16 + 2], $4               # |      9,083 |     10,187 |          0 |          0 |        184 |          0 |
    load    [$18 + 118], $5             # |      9,083 |      9,149 |          0 |          0 |         11 |          0 |
    load    [$1 + 0], $6                # |      9,083 |      9,119 |          0 |          0 |          6 |          0 |
    load    [$1 + 1], $7                # |      9,083 |      9,137 |          0 |          0 |          9 |          0 |
    load    [$1 + 2], $1                # |      9,083 |     63,491 |          0 |          0 |      9,068 |          0 |
    fmul    $6, $2, $2                  # |      9,083 |     63,581 |          0 |      9,083 |          0 |          0 |
    fmul    $7, $3, $3                  # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    fmul    $1, $4, $1                  # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    load    [$18 + 119], $4             # |      9,083 |      9,119 |          0 |          0 |          6 |          0 |
.count stack_store
    store   $16, [$sp + 7]              # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $18, [$sp + 8]              # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    fadd    $2, $3, $2                  # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    fadd    $2, $1, $1                  # |      9,083 |     45,415 |     36,332 |          0 |          0 |          0 |
    fcmp    $zero, $1                   # |      9,083 |     62,043 |      3,076 |      8,314 |          0 |          0 |
    bg      ble_else.36851              # |      9,083 |     18,226 |      9,083 |          0 |          0 |         30 |
ble_then.36851:
    fmul    $1, $37, $3                 # |         14 |         14 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $5, $2                      # |         14 |         14 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |         14 |         14 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |         14 |         14 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 8], $2               # |         14 |         14 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $3               # |         14 |         14 |          0 |          0 |          0 |          0 |
    call    iter_trace_diffuse_rays.2929# |         14 |         80 |          0 |         11 |          0 |          0 |
.count b_cont
    b       ble_cont.36851              # |         14 |         26 |          0 |          0 |          0 |          6 |
ble_else.36851:
    fmul    $1, $38, $3                 # |      9,069 |     58,887 |          0 |      8,303 |          0 |          0 |
.count move_args
    mov     $4, $2                      # |      9,069 |      9,069 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |      9,069 |      9,069 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |      9,069 |      9,069 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 8], $2               # |      9,069 |     17,277 |          0 |          0 |      1,368 |          0 |
.count stack_load
    load    [$sp + 7], $3               # |      9,069 |     17,049 |          0 |          0 |      1,330 |          0 |
    call    iter_trace_diffuse_rays.2929# |      9,069 |     58,695 |          0 |      8,271 |          0 |          0 |
ble_cont.36851:
.count stack_load
    load    [$sp + 6], $2               # |      9,083 |     63,281 |          0 |         11 |      9,022 |          0 |
    li      1, $3                       # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $1                # |      9,083 |     59,130 |         61 |          0 |      8,331 |          0 |
    load    [$1 + 0], $1                # |      9,083 |     65,085 |      1,504 |          0 |      9,083 |          0 |
    store   $43, [$1 + 0]               # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    store   $44, [$1 + 1]               # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    store   $45, [$1 + 2]               # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    call    pretrace_diffuse_rays.2980  # |      9,083 |     63,581 |          0 |      9,083 |          0 |          0 |
be_cont.36850:
bge_cont.36849:
.count stack_move
    add     $sp, 9, $sp                 # |     16,384 |     60,190 |          0 |      7,301 |          0 |          0 |
.count stack_load
    load    [$sp - 8], $1               # |     16,384 |     61,160 |     16,384 |          0 |      4,732 |          0 |
.count stack_load
    load    [$sp - 6], $7               # |     16,384 |     44,086 |          0 |          0 |      4,617 |          0 |
.count stack_load
    load    [$sp - 5], $6               # |     16,384 |     27,598 |          0 |          0 |      1,869 |          0 |
    sub     $1, 1, $3                   # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 9], $1               # |     16,384 |     26,434 |          0 |          0 |      1,675 |          0 |
.count stack_load
    load    [$sp - 4], $5               # |     16,384 |     44,734 |          0 |          0 |      4,725 |          0 |
.count stack_load
    load    [$sp - 7], $2               # |     16,384 |    129,328 |          0 |     16,384 |      2,440 |          0 |
    add     $1, 1, $4                   # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    cmp     $4, 5                       # |     16,384 |     32,768 |     16,384 |          0 |          0 |          0 |
    bl      pretrace_pixels.2983        # |     16,384 |     45,426 |     16,384 |          0 |          0 |      6,329 |
    sub     $4, 5, $4                   # |      3,277 |      3,277 |          0 |          0 |          0 |          0 |
    b       pretrace_pixels.2983        # |      3,277 |      3,329 |          0 |          0 |          0 |         26 |
bge_else.36847:
    ret                                 # |        128 |        128 |          0 |          0 |          0 |          0 |
.end pretrace_pixels

######################################################################
.begin scan_pixel
scan_pixel.2994:
    cmp     $50, $2                     # |      8,256 |     15,642 |          0 |      1,231 |          0 |          0 |
    load    [$5 + $2], $10              # |      8,256 |     24,252 |          0 |      1,338 |      1,328 |          0 |
    bg      ble_else.36853              # |      8,256 |      9,202 |          0 |          0 |          0 |        473 |
ble_then.36853:
    ret                                 # |         64 |         64 |          0 |          0 |          0 |          0 |
ble_else.36853:
.count stack_move
    sub     $sp, 10, $sp                # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 0]               # |      8,192 |     16,384 |      8,192 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 1]               # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 2]               # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 3]               # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 4]               # |      8,192 |     16,082 |          0 |      1,315 |          0 |          0 |
    load    [$10 + 0], $10              # |      8,192 |     57,344 |          0 |          0 |      8,192 |          0 |
    load    [$10 + 0], $11              # |      8,192 |     57,050 |          0 |          0 |      8,143 |          0 |
.count move_float
    mov     $11, $46                    # |      8,192 |      8,290 |         98 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |      8,192 |      8,270 |          0 |          0 |         13 |          0 |
    load    [$10 + 2], $10              # |      8,192 |      8,408 |          0 |          0 |         36 |          0 |
.count move_float
    mov     $11, $47                    # |      8,192 |     16,335 |      8,143 |          0 |          0 |          0 |
.count move_float
    mov     $10, $48                    # |      8,192 |      8,205 |         13 |          0 |          0 |          0 |
    add     $3, 1, $10                  # |      8,192 |     16,082 |          0 |      1,315 |          0 |          0 |
    cmp     $60, $10                    # |      8,192 |     16,384 |      8,192 |          0 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 5]              # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    load    [$5 + $2], $11              # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    bg      ble_else.36854              # |      8,192 |      8,278 |          0 |          0 |          0 |         43 |
ble_then.36854:
    li      0, $10                      # |         64 |         64 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36854              # |         64 |         74 |          0 |          0 |          0 |          5 |
ble_else.36854:
    cmp     $3, 0                       # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    bg      ble_else.36855              # |      8,128 |     22,700 |      6,846 |      1,282 |          0 |         17 |
ble_then.36855:
    li      0, $10                      # |         64 |         64 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36855              # |         64 |         70 |          0 |          0 |          0 |          3 |
ble_else.36855:
    add     $2, 1, $10                  # |      8,064 |      8,064 |          0 |          0 |          0 |          0 |
    cmp     $50, $10                    # |      8,064 |     16,128 |      8,064 |          0 |          0 |          0 |
    bg      ble_else.36856              # |      8,064 |     16,852 |      8,064 |          0 |          0 |        362 |
ble_then.36856:
    li      0, $10                      # |         63 |         63 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36856              # |         63 |         73 |          0 |          0 |          0 |          5 |
ble_else.36856:
    cmp     $2, 0                       # |      8,001 |     15,651 |          0 |      1,275 |          0 |          0 |
    bg      ble_else.36857              # |      8,001 |     16,050 |      8,001 |          0 |          0 |         24 |
ble_then.36857:
    li      0, $10                      # |         63 |         63 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36857              # |         63 |         73 |          0 |          0 |          0 |          5 |
ble_else.36857:
    li      1, $10                      # |      7,938 |      7,938 |          0 |          0 |          0 |          0 |
ble_cont.36857:
ble_cont.36856:
ble_cont.36855:
ble_cont.36854:
    cmp     $10, 0                      # |      8,192 |     16,370 |      7,938 |         40 |          0 |          0 |
    li      0, $3                       # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    bne     be_else.36858               # |      8,192 |      8,232 |          0 |          0 |          0 |         20 |
be_then.36858:
    load    [$11 + 2], $10              # |        254 |      1,214 |          0 |        160 |          0 |          0 |
    load    [$11 + 3], $12              # |        254 |        254 |          0 |          0 |          0 |          0 |
    li      1, $13                      # |        254 |        254 |          0 |          0 |          0 |          0 |
    load    [$10 + 0], $10              # |        254 |      1,430 |          0 |          0 |        196 |          0 |
    load    [$12 + 0], $12              # |        254 |      1,778 |          0 |          0 |        254 |          0 |
    cmp     $10, 0                      # |        254 |        254 |          0 |          0 |          0 |          0 |
    bl      be_cont.36858               # |        254 |        514 |        254 |          0 |          0 |          3 |
bge_then.36859:
    cmp     $12, 0                      # |        254 |        254 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $2                     # |        254 |      1,208 |          0 |        159 |          0 |          0 |
    bne     be_else.36860               # |        254 |        312 |          0 |          0 |          0 |         29 |
be_then.36860:
.count move_args
    mov     $13, $3                     # |        180 |        180 |          0 |          0 |          0 |          0 |
    call    do_without_neighbors.2951   # |        180 |        180 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36858               # |        180 |        274 |          0 |         14 |          0 |          5 |
be_else.36860:
.count stack_store
    store   $11, [$sp + 6]              # |         74 |         74 |          0 |          0 |          0 |          0 |
    call    calc_diffuse_using_1point.2942# |         74 |         74 |          0 |          0 |          0 |          0 |
    li      1, $3                       # |         74 |        446 |          0 |         62 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $2               # |         74 |        560 |          0 |          7 |         74 |          0 |
    call    do_without_neighbors.2951   # |         74 |         74 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36858               # |         74 |        110 |          0 |          0 |          0 |         18 |
be_else.36858:
    load    [$5 + $2], $10              # |      7,938 |      8,454 |          0 |         86 |          0 |          0 |
    load    [$4 + $2], $11              # |      7,938 |     24,234 |          0 |          0 |      2,716 |          0 |
    load    [$5 + $2], $12              # |      7,938 |      7,938 |          0 |          0 |          0 |          0 |
    load    [$10 + 2], $13              # |      7,938 |      8,316 |          0 |          0 |         63 |          0 |
    load    [$11 + 2], $14              # |      7,938 |     55,566 |          0 |          0 |      7,938 |          0 |
    load    [$12 + 2], $15              # |      7,938 |      7,944 |          0 |          1 |          0 |          0 |
    load    [$13 + 0], $13              # |      7,938 |     14,202 |          0 |          0 |      1,044 |          0 |
    load    [$14 + 0], $14              # |      7,938 |     55,566 |          0 |          0 |      7,938 |          0 |
    load    [$15 + 0], $15              # |      7,938 |      7,938 |          0 |          0 |          0 |          0 |
    cmp     $13, 0                      # |      7,938 |      7,938 |          0 |          0 |          0 |          0 |
    bl      bge_cont.36861              # |      7,938 |     15,876 |      7,938 |          0 |          0 |          0 |
bge_then.36861:
    cmp     $14, $13                    # |      7,938 |      7,938 |          0 |          0 |          0 |          0 |
    bne     be_else.36862               # |      7,938 |     17,038 |      7,938 |          0 |          0 |        581 |
be_then.36862:
    load    [$6 + $2], $14              # |      7,620 |     21,810 |          0 |          1 |      2,364 |          0 |
    sub     $2, 1, $16                  # |      7,620 |      7,620 |          0 |          0 |          0 |          0 |
    add     $2, 1, $17                  # |      7,620 |      7,620 |          0 |          0 |          0 |          0 |
    load    [$14 + 2], $14              # |      7,620 |     51,006 |          0 |          0 |      7,231 |          0 |
    load    [$5 + $16], $16             # |      7,620 |     12,720 |          0 |          0 |        850 |          0 |
    load    [$5 + $17], $17             # |      7,620 |     17,556 |          0 |          0 |      1,656 |          0 |
    load    [$14 + 0], $14              # |      7,620 |     51,606 |          0 |          0 |      7,331 |          0 |
    load    [$16 + 2], $16              # |      7,620 |      8,580 |          0 |          0 |        160 |          0 |
    load    [$17 + 2], $17              # |      7,620 |     53,898 |          0 |         93 |      7,620 |          0 |
    cmp     $14, $13                    # |      7,620 |      7,620 |          0 |          0 |          0 |          0 |
    bne     be_else.36863               # |      7,620 |     16,174 |      7,620 |          0 |          0 |        467 |
be_then.36863:
    load    [$16 + 0], $14              # |      7,330 |     10,642 |          0 |          0 |        552 |          0 |
    load    [$17 + 0], $16              # |      7,330 |     51,310 |          0 |          0 |      7,330 |          0 |
    cmp     $14, $13                    # |      7,330 |      7,330 |          0 |          0 |          0 |          0 |
    bne     be_else.36864               # |      7,330 |     16,486 |      7,330 |          0 |          0 |        913 |
be_then.36864:
    cmp     $16, $13                    # |      7,251 |      7,251 |          0 |          0 |          0 |          0 |
    bne     be_else.36865               # |      7,251 |     15,966 |      7,015 |        236 |          0 |        142 |
be_then.36865:
    li      1, $13                      # |      7,171 |      7,171 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36862               # |      7,171 |      7,175 |          0 |          0 |          0 |          2 |
be_else.36865:
    li      0, $13                      # |         80 |         80 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36862               # |         80 |         80 |          0 |          0 |          0 |          0 |
be_else.36864:
    li      0, $13                      # |         79 |        133 |          0 |          9 |          0 |          0 |
.count b_cont
    b       be_cont.36862               # |         79 |         83 |          0 |          0 |          0 |          2 |
be_else.36863:
    li      0, $13                      # |        290 |        416 |          0 |         21 |          0 |          0 |
.count b_cont
    b       be_cont.36862               # |        290 |      1,590 |          0 |        216 |          0 |          2 |
be_else.36862:
    li      0, $13                      # |        318 |      1,542 |          0 |        204 |          0 |          0 |
be_cont.36862:
    cmp     $13, 0                      # |      7,938 |     13,254 |        318 |        833 |          0 |          0 |
    bne     be_else.36866               # |      7,938 |     15,880 |      7,938 |          0 |          0 |          2 |
be_then.36866:
    cmp     $15, 0                      # |        767 |        767 |          0 |          0 |          0 |          0 |
    bl      be_cont.36866               # |        767 |      1,534 |        767 |          0 |          0 |          0 |
bge_then.36867:
    load    [$12 + 3], $10              # |        767 |        767 |          0 |          0 |          0 |          0 |
    li      1, $11                      # |        767 |        767 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $12, $2                     # |        767 |      5,159 |          0 |        732 |          0 |          0 |
    load    [$10 + 0], $10              # |        767 |      5,369 |          0 |          0 |        767 |          0 |
    cmp     $10, 0                      # |        767 |        767 |          0 |          0 |          0 |          0 |
    bne     be_else.36868               # |        767 |      1,852 |        767 |          0 |          0 |        159 |
be_then.36868:
.count move_args
    mov     $11, $3                     # |        155 |        155 |          0 |          0 |          0 |          0 |
    call    do_without_neighbors.2951   # |        155 |        155 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36866               # |        155 |        423 |          0 |         43 |          0 |          5 |
be_else.36868:
.count stack_store
    store   $12, [$sp + 7]              # |        612 |        612 |          0 |          0 |          0 |          0 |
    call    calc_diffuse_using_1point.2942# |        612 |        654 |          0 |          7 |          0 |          0 |
    li      1, $3                       # |        612 |        612 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $2               # |        612 |      4,284 |          0 |          0 |        612 |          0 |
    call    do_without_neighbors.2951   # |        612 |        612 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36866               # |        612 |        648 |          0 |          0 |          0 |         18 |
be_else.36866:
    load    [$10 + 3], $10              # |      7,171 |      7,885 |          0 |        119 |          0 |          0 |
    li      1, $12                      # |      7,171 |      7,171 |          0 |          0 |          0 |          0 |
    load    [$11 + 5], $11              # |      7,171 |      7,399 |          0 |          0 |         38 |          0 |
    load    [$10 + 0], $10              # |      7,171 |     50,953 |          0 |        126 |      7,171 |          0 |
.count move_args
    mov     $4, $3                      # |      7,171 |      7,171 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $5, $4                      # |      7,171 |      7,171 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |      7,171 |      7,171 |          0 |          0 |          0 |          0 |
    bne     be_else.36869               # |      7,171 |     15,190 |      7,171 |          0 |          0 |        424 |
be_then.36869:
.count move_args
    mov     $6, $5                      # |      3,318 |      3,318 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $12, $6                     # |      3,318 |      3,318 |          0 |          0 |          0 |          0 |
    call    try_exploit_neighbors.2967  # |      3,318 |      3,318 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36869               # |      3,318 |      4,002 |          0 |        107 |          0 |         21 |
be_else.36869:
    load    [$11 + 0], $10              # |      3,853 |     27,085 |          0 |         19 |      3,853 |          0 |
    load    [$10 + 0], $11              # |      3,853 |     26,971 |          0 |          0 |      3,853 |          0 |
.count move_float
    mov     $11, $43                    # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$10 + 2], $10              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $44                    # |      3,853 |      7,706 |      3,853 |          0 |          0 |          0 |
    sub     $2, 1, $11                  # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $10, $45                    # |      3,853 |      4,501 |          0 |        108 |          0 |          0 |
    load    [$5 + $11], $10             # |      3,853 |      4,147 |          0 |          0 |         49 |          0 |
    load    [$10 + 5], $10              # |      3,853 |     11,623 |      7,608 |          0 |         27 |          0 |
    load    [$10 + 0], $10              # |      3,853 |     13,101 |      7,652 |          0 |        266 |          0 |
    load    [$10 + 0], $11              # |      3,853 |     12,467 |      7,174 |          0 |        240 |          0 |
    fadd    $43, $11, $11               # |      3,853 |     11,079 |      7,226 |          0 |          0 |          0 |
.count move_float
    mov     $11, $43                    # |      3,853 |     19,265 |     15,412 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$10 + 2], $10              # |      3,853 |      4,507 |          0 |        108 |          1 |          0 |
    fadd    $44, $11, $11               # |      3,853 |      7,598 |      3,745 |          0 |          0 |          0 |
    fadd    $45, $10, $10               # |      3,853 |      3,960 |        107 |          0 |          0 |          0 |
.count move_float
    mov     $11, $44                    # |      3,853 |     15,305 |     11,452 |          0 |          0 |          0 |
.count move_float
    mov     $10, $45                    # |      3,853 |      3,960 |        107 |          0 |          0 |          0 |
    load    [$5 + $2], $10              # |      3,853 |      4,219 |          0 |          0 |         61 |          0 |
    load    [$10 + 5], $10              # |      3,853 |     12,763 |      7,584 |          0 |        221 |          0 |
    load    [$10 + 0], $10              # |      3,853 |     12,695 |      7,264 |          0 |        263 |          0 |
    load    [$10 + 0], $11              # |      3,853 |     13,029 |      7,082 |        108 |        241 |          0 |
    fadd    $43, $11, $11               # |      3,853 |     11,077 |      7,224 |          0 |          0 |          0 |
.count move_float
    mov     $11, $43                    # |      3,853 |     19,265 |     15,412 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$10 + 2], $10              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    fadd    $44, $11, $11               # |      3,853 |      7,706 |      3,853 |          0 |          0 |          0 |
    fadd    $45, $10, $10               # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $44                    # |      3,853 |     15,412 |     11,559 |          0 |          0 |          0 |
    add     $2, 1, $11                  # |      3,853 |      4,501 |          0 |        108 |          0 |          0 |
.count move_float
    mov     $10, $45                    # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$5 + $11], $10             # |      3,853 |      4,063 |          0 |          0 |         35 |          0 |
    load    [$10 + 5], $10              # |      3,853 |     11,489 |      7,636 |          0 |          0 |          0 |
    load    [$10 + 0], $10              # |      3,853 |     34,677 |      7,706 |          0 |      3,853 |          0 |
    load    [$10 + 0], $11              # |      3,853 |     26,971 |          0 |          0 |      3,853 |          0 |
    fadd    $43, $11, $11               # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $43                    # |      3,853 |     19,265 |     15,412 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |      3,853 |      4,501 |          0 |        108 |          0 |          0 |
    load    [$10 + 2], $10              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    fadd    $44, $11, $11               # |      3,853 |      7,706 |      3,853 |          0 |          0 |          0 |
    fadd    $45, $10, $10               # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $44                    # |      3,853 |     15,412 |     11,559 |          0 |          0 |          0 |
.count move_float
    mov     $10, $45                    # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$6 + $2], $10              # |      3,853 |      4,249 |          0 |          0 |         66 |          0 |
    load    [$10 + 5], $10              # |      3,853 |     11,583 |      7,574 |          0 |         26 |          0 |
    load    [$10 + 0], $10              # |      3,853 |     35,039 |      7,438 |        108 |      3,850 |          0 |
    load    [$10 + 0], $11              # |      3,853 |     26,977 |          6 |          0 |      3,853 |          0 |
    fadd    $43, $11, $11               # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $43                    # |      3,853 |     19,265 |     15,412 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$10 + 2], $10              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    fadd    $44, $11, $11               # |      3,853 |      7,706 |      3,853 |          0 |          0 |          0 |
    fadd    $45, $10, $10               # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $44                    # |      3,853 |     15,736 |     11,235 |        108 |          0 |          0 |
.count move_float
    mov     $10, $45                    # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$5 + $2], $10              # |      3,853 |      4,063 |          0 |          0 |         35 |          0 |
.count move_args
    mov     $6, $5                      # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$10 + 4], $10              # |      3,853 |      8,997 |      3,818 |          0 |        221 |          0 |
    load    [$10 + 0], $10              # |      3,853 |     34,235 |      7,264 |          0 |      3,853 |          0 |
    load    [$10 + 0], $11              # |      3,853 |     26,971 |          0 |          0 |      3,853 |          0 |
    fmul    $11, $43, $11               # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    fadd    $46, $11, $11               # |      3,853 |     19,481 |     14,980 |        108 |          0 |          0 |
.count move_float
    mov     $11, $46                    # |      3,853 |     19,265 |     15,412 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$10 + 2], $10              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    fmul    $11, $44, $11               # |      3,853 |      7,706 |      3,853 |          0 |          0 |          0 |
    fmul    $10, $45, $10               # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    fadd    $47, $11, $11               # |      3,853 |     15,412 |     11,559 |          0 |          0 |          0 |
    fadd    $48, $10, $10               # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $47                    # |      3,853 |     15,424 |     11,547 |          4 |          0 |          0 |
    li      1, $11                      # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $10, $48                    # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $6                     # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    call    try_exploit_neighbors.2967  # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
be_cont.36869:
be_cont.36866:
bge_cont.36861:
be_cont.36858:
.count move_args
    mov     $46, $2                     # |      8,192 |      8,930 |          0 |        123 |          0 |          0 |
    call    min_caml_int_of_float       # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    mov     $1, $2                      # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    cmp     $2, 255                     # |      8,192 |      8,954 |          0 |        127 |          0 |          0 |
    bg      ble_else.36870              # |      8,192 |     18,258 |      8,192 |          0 |          0 |        937 |
ble_then.36870:
    cmp     $2, 0                       # |      5,132 |      5,132 |          0 |          0 |          0 |          0 |
    bl      bge_else.36871              # |      5,132 |     10,496 |      5,132 |          0 |          0 |        116 |
bge_then.36871:
    call    min_caml_write              # |      5,132 |      5,132 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36870              # |      5,132 |      5,140 |          0 |          0 |          0 |          4 |
bge_else.36871:
    li      0, $2
    call    min_caml_write
.count b_cont
    b       ble_cont.36870
ble_else.36870:
    li      255, $2                     # |      3,060 |      3,936 |          0 |        146 |          0 |          0 |
    call    min_caml_write              # |      3,060 |      3,060 |          0 |          0 |          0 |          0 |
ble_cont.36870:
.count move_args
    mov     $47, $2                     # |      8,192 |     10,022 |          0 |        305 |          0 |          0 |
    call    min_caml_int_of_float       # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    mov     $1, $2                      # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    cmp     $2, 255                     # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    bg      ble_else.36872              # |      8,192 |     20,346 |      8,192 |          0 |          0 |      1,981 |
ble_then.36872:
    cmp     $2, 0                       # |      6,128 |      6,776 |          0 |        108 |          0 |          0 |
    bl      bge_else.36873              # |      6,128 |     12,256 |      6,128 |          0 |          0 |          0 |
bge_then.36873:
    call    min_caml_write              # |      6,128 |      6,128 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36872              # |      6,128 |      6,174 |          0 |          0 |          0 |         23 |
bge_else.36873:
    li      0, $2
    call    min_caml_write
.count b_cont
    b       ble_cont.36872
ble_else.36872:
    li      255, $2                     # |      2,064 |      2,178 |          0 |         19 |          0 |          0 |
    call    min_caml_write              # |      2,064 |      2,178 |          0 |         19 |          0 |          0 |
ble_cont.36872:
.count move_args
    mov     $48, $2                     # |      8,192 |      8,840 |          0 |        108 |          0 |          0 |
    call    min_caml_int_of_float       # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    mov     $1, $2                      # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    cmp     $2, 255                     # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    bg      ble_else.36874              # |      8,192 |     17,010 |      8,192 |          0 |          0 |        313 |
ble_then.36874:
    cmp     $2, 0                       # |      5,450 |      5,450 |          0 |          0 |          0 |          0 |
    bl      bge_else.36875              # |      5,450 |     10,900 |      5,450 |          0 |          0 |          0 |
bge_then.36875:
    call    min_caml_write              # |      5,450 |      6,146 |          0 |        116 |          0 |          0 |
.count b_cont
    b       ble_cont.36874              # |      5,450 |      5,458 |          0 |          0 |          0 |          4 |
bge_else.36875:
    li      0, $2
    call    min_caml_write
.count b_cont
    b       ble_cont.36874
ble_else.36874:
    li      255, $2                     # |      2,742 |      2,808 |          0 |         11 |          0 |          0 |
    call    min_caml_write              # |      2,742 |      2,742 |          0 |          0 |          0 |          0 |
ble_cont.36874:
.count stack_load
    load    [$sp + 4], $10              # |      8,192 |     16,958 |          0 |          0 |      1,461 |          0 |
    add     $10, 1, $2                  # |      8,192 |     22,224 |     13,270 |        127 |          0 |          0 |
    cmp     $50, $2                     # |      8,192 |     16,384 |      8,192 |          0 |          0 |          0 |
    bg      ble_else.36876              # |      8,192 |     16,660 |      8,192 |          0 |          0 |        138 |
ble_then.36876:
.count stack_move
    add     $sp, 10, $sp                # |         64 |         64 |          0 |          0 |          0 |          0 |
    ret                                 # |         64 |         64 |          0 |          0 |          0 |          0 |
ble_else.36876:
.count stack_store
    store   $2, [$sp + 8]               # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $4               # |      8,128 |     16,960 |          0 |          0 |      1,472 |          0 |
    li      0, $3                       # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    load    [$4 + $2], $10              # |      8,128 |     22,069 |      6,555 |        127 |      1,104 |          0 |
    load    [$10 + 0], $10              # |      8,128 |     70,944 |     14,048 |          0 |      8,128 |          0 |
    load    [$10 + 0], $11              # |      8,128 |     56,596 |          0 |          0 |      8,078 |          0 |
.count move_float
    mov     $11, $46                    # |      8,128 |      8,228 |        100 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |      8,128 |      8,236 |          0 |          0 |         18 |          0 |
    load    [$10 + 2], $10              # |      8,128 |      8,320 |          0 |          0 |         32 |          0 |
.count move_float
    mov     $11, $47                    # |      8,128 |     16,206 |      8,078 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $11              # |      8,128 |      9,748 |          0 |          0 |        270 |          0 |
.count move_float
    mov     $10, $48                    # |      8,128 |      8,890 |          0 |        127 |          0 |          0 |
    load    [$4 + $2], $10              # |      8,128 |      8,392 |          0 |          0 |         44 |          0 |
    cmp     $60, $11                    # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    bg      ble_else.36877              # |      8,128 |     18,194 |      8,128 |          0 |          0 |        969 |
ble_then.36877:
    li      0, $11                      # |         64 |         64 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36877              # |         64 |         68 |          0 |          0 |          0 |          2 |
ble_else.36877:
.count stack_load
    load    [$sp + 2], $11              # |      8,064 |     15,246 |          0 |          0 |      1,197 |          0 |
    cmp     $11, 0                      # |      8,064 |     21,798 |     13,734 |          0 |          0 |          0 |
    bg      ble_else.36878              # |      8,064 |     16,779 |      7,937 |        127 |          0 |          8 |
ble_then.36878:
    li      0, $11                      # |         63 |         63 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36878              # |         63 |         67 |          0 |          0 |          0 |          2 |
ble_else.36878:
    add     $2, 1, $11                  # |      8,001 |      8,001 |          0 |          0 |          0 |          0 |
    cmp     $50, $11                    # |      8,001 |     16,002 |      8,001 |          0 |          0 |          0 |
    bg      ble_else.36879              # |      8,001 |     16,428 |      8,001 |          0 |          0 |        213 |
ble_then.36879:
    li      0, $11                      # |         63 |         63 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.36879              # |         63 |         69 |          0 |          0 |          0 |          3 |
ble_else.36879:
    cmp     $2, 0                       # |      7,938 |      8,694 |          0 |        126 |          0 |          0 |
    bg      ble_else.36880              # |      7,938 |     15,884 |      7,938 |          0 |          0 |          4 |
ble_then.36880:
    li      0, $11
.count b_cont
    b       ble_cont.36880
ble_else.36880:
    li      1, $11                      # |      7,938 |      7,938 |          0 |          0 |          0 |          0 |
ble_cont.36880:
ble_cont.36879:
ble_cont.36878:
ble_cont.36877:
    cmp     $11, 0                      # |      8,128 |     16,072 |      7,938 |          1 |          0 |          0 |
    bne     be_else.36881               # |      8,128 |     16,376 |      8,128 |          0 |          0 |         60 |
be_then.36881:
    load    [$10 + 2], $11              # |        190 |        196 |          0 |          0 |          1 |          0 |
    load    [$10 + 3], $12              # |        190 |        580 |          0 |         65 |          0 |          0 |
    li      1, $13                      # |        190 |        190 |          0 |          0 |          0 |          0 |
    load    [$11 + 0], $11              # |        190 |        988 |          0 |          0 |        133 |          0 |
    load    [$12 + 0], $12              # |        190 |      1,330 |          0 |          0 |        190 |          0 |
    cmp     $11, 0                      # |        190 |        190 |          0 |          0 |          0 |          0 |
    bl      be_cont.36881               # |        190 |        380 |        190 |          0 |          0 |          0 |
bge_then.36882:
    cmp     $12, 0                      # |        190 |        190 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |        190 |        190 |          0 |          0 |          0 |          0 |
    bne     be_else.36883               # |        190 |        604 |          0 |         65 |          0 |         12 |
be_then.36883:
.count move_args
    mov     $13, $3                     # |        123 |        123 |          0 |          0 |          0 |          0 |
    call    do_without_neighbors.2951   # |        123 |        123 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36881               # |        123 |        127 |          0 |          0 |          0 |          2 |
be_else.36883:
.count stack_store
    store   $10, [$sp + 9]              # |         67 |         67 |          0 |          0 |          0 |          0 |
    call    calc_diffuse_using_1point.2942# |         67 |         67 |          0 |          0 |          0 |          0 |
    li      1, $3                       # |         67 |         67 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 9], $2               # |         67 |        469 |          0 |          0 |         67 |          0 |
    call    do_without_neighbors.2951   # |         67 |         67 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36881               # |         67 |        163 |          0 |          0 |          0 |         48 |
be_else.36881:
    li      0, $6                       # |      7,938 |      8,694 |          0 |        126 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |      7,938 |     14,022 |          0 |          0 |      1,014 |          0 |
.count stack_load
    load    [$sp + 0], $5               # |      7,938 |     12,990 |          0 |          0 |        842 |          0 |
    call    try_exploit_neighbors.2967  # |      7,938 |      7,938 |          0 |          0 |          0 |          0 |
be_cont.36881:
.count move_args
    mov     $46, $2                     # |      8,128 |      8,134 |          0 |          1 |          0 |          0 |
    call    min_caml_int_of_float       # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    cmp     $1, 255                     # |      8,128 |      8,890 |          0 |        127 |          0 |          0 |
    bg      ble_else.36884              # |      8,128 |     17,936 |      8,128 |          0 |          0 |        840 |
ble_then.36884:
    cmp     $1, 0                       # |      5,076 |      5,076 |          0 |          0 |          0 |          0 |
    bge     ble_cont.36884              # |      5,076 |     10,180 |      5,076 |          0 |          0 |         14 |
bl_then.36885:
    li      0, $1
.count b_cont
    b       ble_cont.36884
ble_else.36884:
    li      255, $1                     # |      3,052 |      3,052 |          0 |          0 |          0 |          0 |
ble_cont.36884:
    mov     $1, $2                      # |      8,128 |     11,180 |      3,052 |          0 |          0 |          0 |
    call    min_caml_write              # |      8,128 |      8,890 |          0 |        127 |          0 |          0 |
.count move_args
    mov     $47, $2                     # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    call    min_caml_int_of_float       # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    cmp     $1, 255                     # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    bg      ble_else.36886              # |      8,128 |     21,188 |      8,128 |          0 |          0 |      2,466 |
ble_then.36886:
    cmp     $1, 0                       # |      6,031 |      6,031 |          0 |          0 |          0 |          0 |
    bge     ble_cont.36886              # |      6,031 |     12,450 |      6,031 |          0 |          0 |        194 |
bl_then.36887:
    li      0, $1
.count b_cont
    b       ble_cont.36886
ble_else.36886:
    li      255, $1                     # |      2,097 |      2,211 |          0 |         19 |          0 |          0 |
ble_cont.36886:
    mov     $1, $2                      # |      8,128 |     10,873 |      2,097 |        108 |          0 |          0 |
    call    min_caml_write              # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $48, $2                     # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    call    min_caml_int_of_float       # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    cmp     $1, 255                     # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    bg      ble_else.36888              # |      8,128 |     18,952 |      8,128 |          0 |          0 |      1,348 |
ble_then.36888:
    cmp     $1, 0                       # |      5,384 |      6,074 |          0 |        115 |          0 |          0 |
    bge     ble_cont.36888              # |      5,384 |     10,900 |      5,384 |          0 |          0 |         66 |
bl_then.36889:
    li      0, $1
.count b_cont
    b       ble_cont.36888
ble_else.36888:
    li      255, $1                     # |      2,744 |      2,816 |          0 |         12 |          0 |          0 |
ble_cont.36888:
    mov     $1, $2                      # |      8,128 |     10,872 |      2,744 |          0 |          0 |          0 |
    call    min_caml_write              # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 10, $sp                # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $1               # |      8,128 |     26,755 |      8,001 |        127 |      1,644 |          0 |
.count stack_load
    load    [$sp - 8], $3               # |      8,128 |     12,574 |          0 |          0 |        741 |          0 |
.count stack_load
    load    [$sp - 9], $4               # |      8,128 |     11,230 |          0 |          0 |        517 |          0 |
    add     $1, 1, $2                   # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 7], $5               # |      8,128 |     12,562 |          0 |          0 |        739 |          0 |
.count stack_load
    load    [$sp - 10], $6              # |      8,128 |      9,958 |          0 |          0 |        305 |          0 |
    b       scan_pixel.2994             # |      8,128 |     11,722 |          0 |          0 |          0 |      1,797 |
.end scan_pixel

######################################################################
.begin scan_line
scan_line.3000:
    cmp     $60, $2                     # |         65 |         71 |          0 |          1 |          0 |          0 |
    add     $2, 1, $10                  # |         65 |        455 |          0 |         65 |          0 |          0 |
    load    [min_caml_scan_pitch + 0], $11# |         65 |        449 |          0 |          0 |         64 |          0 |
    bg      ble_else.36890              # |         65 |        109 |          0 |          0 |          0 |         22 |
ble_then.36890:
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
ble_else.36890:
    sub     $60, 1, $12                 # |         64 |         64 |          0 |          0 |          0 |          0 |
.count stack_move
    sub     $sp, 8, $sp                 # |         64 |         64 |          0 |          0 |          0 |          0 |
    cmp     $12, $2                     # |         64 |         64 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 0]               # |         64 |         64 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 1]               # |         64 |        448 |          0 |         64 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 2]               # |         64 |         64 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 3]               # |         64 |         64 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 4]               # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [min_caml_image_center + 1], $13# |         64 |        442 |          0 |          0 |         63 |          0 |
    ble     bg_cont.36891               # |         64 |         68 |          0 |          0 |          0 |          2 |
bg_then.36891:
    sub     $10, $13, $2                # |         64 |         64 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |         64 |         64 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |         64 |        448 |          0 |         64 |          0 |          0 |
    fmul    $11, $10, $10               # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 0], $11# |         64 |        442 |          0 |          0 |         63 |          0 |
    load    [min_caml_screenz_dir + 0], $12# |         64 |         70 |          0 |          0 |          1 |          0 |
    load    [min_caml_screeny_dir + 1], $13# |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 2], $14# |         64 |         70 |          0 |          0 |          1 |          0 |
    fmul    $10, $11, $11               # |         64 |         64 |          0 |          0 |          0 |          0 |
    fmul    $10, $13, $13               # |         64 |         64 |          0 |          0 |          0 |          0 |
    fmul    $10, $14, $10               # |         64 |        448 |          0 |         64 |          0 |          0 |
    load    [min_caml_screenz_dir + 1], $14# |         64 |        442 |          0 |          0 |         63 |          0 |
    load    [min_caml_screenz_dir + 2], $15# |         64 |         64 |          0 |          0 |          0 |          0 |
    fadd    $11, $12, $5                # |         64 |         64 |          0 |          0 |          0 |          0 |
    fadd    $13, $14, $6                # |         64 |         64 |          0 |          0 |          0 |          0 |
    fadd    $10, $15, $7                # |         64 |         64 |          0 |          0 |          0 |          0 |
    sub     $50, 1, $3                  # |         64 |         64 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |         64 |         64 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |         64 |        574 |          0 |         64 |         21 |          0 |
    call    pretrace_pixels.2983        # |         64 |         64 |          0 |          0 |          0 |          0 |
bg_cont.36891:
.count stack_load
    load    [$sp + 4], $4               # |         64 |        832 |          0 |         64 |         64 |          0 |
    cmp     $50, 0                      # |         64 |         64 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$4 + 0], $10               # |         64 |        448 |          0 |          0 |         64 |          0 |
    ble     bg_cont.36892               # |         64 |        104 |          0 |          0 |          0 |         20 |
bg_then.36892:
    load    [$10 + 0], $10              # |         64 |        448 |          0 |          0 |         64 |          0 |
    load    [$4 + 0], $12               # |         64 |        448 |          0 |         64 |          0 |          0 |
    load    [$10 + 0], $11              # |         64 |        448 |          0 |          0 |         64 |          0 |
.count move_float
    mov     $11, $46                    # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$10 + 2], $10              # |         64 |         64 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $47                    # |         64 |        128 |         64 |          0 |          0 |          0 |
.count move_float
    mov     $10, $48                    # |         64 |         64 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $10              # |         64 |        436 |          0 |          0 |         62 |          0 |
    add     $10, 1, $11                 # |         64 |        448 |          0 |         64 |          0 |          0 |
    cmp     $60, $11                    # |         64 |        128 |         64 |          0 |          0 |          0 |
    bg      ble_else.36893              # |         64 |        174 |         64 |          0 |          0 |         23 |
ble_then.36893:
    li      0, $10
.count b_cont
    b       ble_cont.36893
ble_else.36893:
    cmp     $10, 0                      # |         64 |         64 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |         64 |         64 |          0 |          0 |          0 |          0 |
    ble     bg_cont.36894               # |         64 |         88 |          0 |          0 |          0 |         12 |
bg_then.36894:
    cmp     $50, 1                      # |         63 |        441 |          0 |         63 |          0 |          0 |
bg_cont.36894:
ble_cont.36893:
    cmp     $10, 0                      # |         64 |         70 |          0 |          1 |          0 |          0 |
    bne     be_else.36895               # |         64 |        150 |         64 |          0 |          0 |         11 |
be_then.36895:
    load    [$12 + 2], $10              # |         64 |         64 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$12 + 3], $11              # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$10 + 0], $10              # |         64 |        448 |          0 |          0 |         64 |          0 |
    li      1, $13                      # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$11 + 0], $11              # |         64 |        832 |          0 |         64 |         64 |          0 |
    cmp     $10, 0                      # |         64 |         64 |          0 |          0 |          0 |          0 |
    bl      be_cont.36895               # |         64 |        186 |         64 |          0 |          0 |         29 |
bge_then.36896:
    cmp     $11, 0                      # |         64 |         64 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $12, $2                     # |         64 |         64 |          0 |          0 |          0 |          0 |
    bne     be_else.36897               # |         64 |         72 |          0 |          0 |          0 |          4 |
be_then.36897:
.count move_args
    mov     $13, $3                     # |         57 |         57 |          0 |          0 |          0 |          0 |
    call    do_without_neighbors.2951   # |         57 |         57 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36895               # |         57 |        473 |          0 |         57 |          0 |         37 |
be_else.36897:
.count stack_store
    store   $12, [$sp + 5]              # |          7 |         49 |          0 |          7 |          0 |          0 |
    call    calc_diffuse_using_1point.2942# |          7 |          7 |          0 |          0 |          0 |          0 |
    li      1, $3                       # |          7 |          7 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $2               # |          7 |         49 |          0 |          0 |          7 |          0 |
    call    do_without_neighbors.2951   # |          7 |          7 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36895               # |          7 |         15 |          0 |          0 |          0 |          4 |
be_else.36895:
    li      0, $6
.count stack_load
    load    [$sp + 2], $3
.count stack_load
    load    [$sp + 1], $5
    call    try_exploit_neighbors.2967
be_cont.36895:
.count move_args
    mov     $46, $2                     # |         64 |        448 |          0 |         64 |          0 |          0 |
    call    min_caml_int_of_float       # |         64 |         64 |          0 |          0 |          0 |          0 |
    cmp     $1, 255                     # |         64 |         64 |          0 |          0 |          0 |          0 |
    bg      ble_else.36898              # |         64 |        168 |         64 |          0 |          0 |         20 |
ble_then.36898:
    cmp     $1, 0                       # |         47 |         47 |          0 |          0 |          0 |          0 |
    bge     ble_cont.36898              # |         47 |        337 |          0 |         47 |          0 |          4 |
bl_then.36899:
    li      0, $1
.count b_cont
    b       ble_cont.36898
ble_else.36898:
    li      255, $1                     # |         17 |        119 |          0 |         17 |          0 |          0 |
ble_cont.36898:
    mov     $1, $2                      # |         64 |         81 |         17 |          0 |          0 |          0 |
    call    min_caml_write              # |         64 |         64 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $47, $2                     # |         64 |         64 |          0 |          0 |          0 |          0 |
    call    min_caml_int_of_float       # |         64 |         64 |          0 |          0 |          0 |          0 |
    cmp     $1, 255                     # |         64 |        448 |          0 |         64 |          0 |          0 |
    bg      ble_else.36900              # |         64 |        152 |         64 |          0 |          0 |         12 |
ble_then.36900:
    cmp     $1, 0                       # |         56 |         56 |          0 |          0 |          0 |          0 |
    bge     ble_cont.36900              # |         56 |        116 |         56 |          0 |          0 |          2 |
bl_then.36901:
    li      0, $1
.count b_cont
    b       ble_cont.36900
ble_else.36900:
    li      255, $1                     # |          8 |          8 |          0 |          0 |          0 |          0 |
ble_cont.36900:
    mov     $1, $2                      # |         64 |         72 |          8 |          0 |          0 |          0 |
    call    min_caml_write              # |         64 |        448 |          0 |         64 |          0 |          0 |
.count move_args
    mov     $48, $2                     # |         64 |         64 |          0 |          0 |          0 |          0 |
    call    min_caml_int_of_float       # |         64 |         64 |          0 |          0 |          0 |          0 |
    cmp     $1, 255                     # |         64 |         64 |          0 |          0 |          0 |          0 |
    bg      ble_else.36902              # |         64 |        140 |         64 |          0 |          0 |          6 |
ble_then.36902:
    cmp     $1, 0                       # |         59 |         59 |          0 |          0 |          0 |          0 |
    bge     ble_cont.36902              # |         59 |        126 |         59 |          0 |          0 |          4 |
bl_then.36903:
    li      0, $1
.count b_cont
    b       ble_cont.36902
ble_else.36902:
    li      255, $1                     # |          5 |          5 |          0 |          0 |          0 |          0 |
ble_cont.36902:
    mov     $1, $2                      # |         64 |         75 |          5 |          1 |          0 |          0 |
    call    min_caml_write              # |         64 |         64 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |         64 |         64 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |         64 |        184 |          0 |          0 |         20 |          0 |
.count stack_load
    load    [$sp + 2], $4               # |         64 |        442 |          0 |          0 |         63 |          0 |
.count stack_load
    load    [$sp + 4], $5               # |         64 |         64 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $6               # |         64 |        826 |          0 |         64 |         63 |          0 |
    call    scan_pixel.2994             # |         64 |         64 |          0 |          0 |          0 |          0 |
bg_cont.36892:
.count stack_load
    load    [$sp + 3], $10              # |         64 |        802 |          0 |         59 |         64 |          0 |
.count stack_load
    load    [$sp + 0], $11              # |         64 |        298 |          0 |          0 |         39 |          0 |
    add     $10, 1, $10                 # |         64 |         64 |          0 |          0 |          0 |          0 |
    add     $11, 2, $11                 # |         64 |         89 |         25 |          0 |          0 |          0 |
    cmp     $60, $10                    # |         64 |         64 |          0 |          0 |          0 |          0 |
    bg      ble_else.36904              # |         64 |        240 |         64 |          0 |          0 |         56 |
ble_then.36904:
.count stack_move
    add     $sp, 8, $sp
    ret
ble_else.36904:
    cmp     $11, 5                      # |         64 |        448 |          0 |         64 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 6]              # |         64 |         64 |          0 |          0 |          0 |          0 |
    sub     $60, 1, $12                 # |         64 |         64 |          0 |          0 |          0 |          0 |
    bl      bge_cont.36905              # |         64 |        164 |          0 |          0 |          0 |         50 |
bge_then.36905:
    sub     $11, 5, $11                 # |         25 |         25 |          0 |          0 |          0 |          0 |
bge_cont.36905:
    cmp     $12, $10                    # |         64 |         64 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $11, [$sp + 7]              # |         64 |        448 |          0 |         64 |          0 |          0 |
    ble     bg_cont.36906               # |         64 |         84 |          0 |          0 |          0 |         10 |
bg_then.36906:
    load    [min_caml_image_center + 1], $12# |         63 |        441 |          0 |          0 |         63 |          0 |
    add     $10, 1, $10                 # |         63 |         63 |          0 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 0], $13# |         63 |        441 |          0 |          0 |         63 |          0 |
    sub     $50, 1, $14                 # |         63 |         63 |          0 |          0 |          0 |          0 |
    load    [min_caml_scan_pitch + 0], $15# |         63 |         63 |          0 |          0 |          0 |          0 |
    sub     $10, $12, $2                # |         63 |         63 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |         63 |        441 |          0 |         63 |          0 |          0 |
    fmul    $15, $1, $1                 # |         63 |        159 |         96 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 0], $2# |         63 |         63 |          0 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 1], $3# |         63 |         63 |          0 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 2], $4# |         63 |         63 |          0 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 1], $5# |         63 |        441 |          0 |          0 |         63 |          0 |
    fmul    $1, $13, $6                 # |         63 |         63 |          0 |          0 |          0 |          0 |
    fmul    $1, $3, $3                  # |         63 |         63 |          0 |          0 |          0 |          0 |
    fmul    $1, $4, $1                  # |         63 |        441 |          0 |         63 |          0 |          0 |
    load    [min_caml_screenz_dir + 2], $4# |         63 |         63 |          0 |          0 |          0 |          0 |
    fadd    $6, $2, $2                  # |         63 |         63 |          0 |          0 |          0 |          0 |
    fadd    $3, $5, $6                  # |         63 |         63 |          0 |          0 |          0 |          0 |
    fadd    $1, $4, $7                  # |         63 |        126 |         63 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $4               # |         63 |        201 |          0 |          0 |         23 |          0 |
.count move_args
    mov     $14, $3                     # |         63 |         63 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $2, $5                      # |         63 |         63 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $4, $2                      # |         63 |        441 |          0 |         63 |          0 |          0 |
.count move_args
    mov     $11, $4                     # |         63 |         63 |          0 |          0 |          0 |          0 |
    call    pretrace_pixels.2983        # |         63 |         63 |          0 |          0 |          0 |          0 |
bg_cont.36906:
    li      0, $2                       # |         64 |        448 |          0 |         64 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $3               # |         64 |        442 |          0 |          0 |         63 |          0 |
.count stack_load
    load    [$sp + 4], $4               # |         64 |        442 |          0 |          0 |         63 |          0 |
.count stack_load
    load    [$sp + 1], $5               # |         64 |        442 |          0 |          0 |         63 |          0 |
.count stack_load
    load    [$sp + 2], $6               # |         64 |         70 |          0 |          0 |          1 |          0 |
    call    scan_pixel.2994             # |         64 |        448 |          0 |         64 |          0 |          0 |
.count stack_move
    add     $sp, 8, $sp                 # |         64 |        418 |          0 |         59 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $1               # |         64 |        512 |         64 |          0 |         64 |          0 |
.count stack_load
    load    [$sp - 4], $5               # |         64 |        436 |          0 |          0 |         62 |          0 |
.count stack_load
    load    [$sp - 6], $4               # |         64 |        346 |          0 |          0 |         47 |          0 |
    add     $1, 1, $2                   # |         64 |         64 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |         64 |         64 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 7], $3               # |         64 |        196 |          0 |          0 |         22 |          0 |
    add     $1, 2, $6                   # |         64 |        448 |          0 |         64 |          0 |          0 |
    cmp     $6, 5                       # |         64 |        128 |         64 |          0 |          0 |          0 |
    bl      scan_line.3000              # |         64 |        222 |         64 |          0 |          0 |         47 |
    sub     $6, 5, $6                   # |         26 |         26 |          0 |          0 |          0 |          0 |
    b       scan_line.3000              # |         26 |         34 |          0 |          0 |          0 |          4 |
.end scan_line

######################################################################
.begin create_pixel
create_pixel.3008:
    li      3, $2                       # |        192 |        198 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |        192 |        198 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        198 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 1]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |        192 |        198 |          0 |          1 |          0 |          0 |
    store   $12, [$11 + 2]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 3]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        198 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 4]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |        192 |        198 |          0 |          1 |          0 |          0 |
    li      0, $3                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |        192 |        198 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 1]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        198 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 2]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |        192 |        198 |          0 |          1 |          0 |          0 |
    store   $15, [$14 + 3]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 4]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        198 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        198 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 1]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 2]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        198 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 3]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |        192 |        198 |          0 |          1 |          0 |          0 |
    store   $16, [$15 + 4]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        198 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |        192 |        198 |          0 |          1 |          0 |          0 |
    store   $18, [$17 + 1]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 2]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        198 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 3]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $1, [$17 + 4]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    mov     $hp, $1                     # |        192 |        198 |          0 |          1 |          0 |          0 |
    add     $hp, 8, $hp                 # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $17, [$1 + 7]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $16, [$1 + 6]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $15, [$1 + 5]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $14, [$1 + 4]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $13, [$1 + 3]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $12, [$1 + 2]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $11, [$1 + 1]               # |        192 |        198 |          0 |          1 |          0 |          0 |
    store   $10, [$1 + 0]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    ret                                 # |        192 |        192 |          0 |          0 |          0 |          0 |
.end create_pixel

######################################################################
.begin init_line_elements
init_line_elements.3010:
    cmp     $3, 0                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    bl      bge_else.36908              # |         96 |        192 |         96 |          0 |          0 |          0 |
bge_then.36908:
.count stack_move
    sub     $sp, 2, $sp                 # |         96 |         96 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |         96 |        192 |         96 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |        102 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    mov     $11, $3                     # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      5, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 1]              # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 2]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |        102 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 3]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 4]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      0, $3                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |        102 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    mov     $14, $3                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |        102 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 1]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         96 |        102 |          0 |          1 |          0 |          0 |
    store   $15, [$14 + 2]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 3]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |        102 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 4]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    mov     $15, $3                     # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      5, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 1]              # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 2]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |        102 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 3]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 4]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      0, $3                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    mov     $17, $3                     # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      5, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 1]              # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 2]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |        102 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 3]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $19, [$17 + 4]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    mov     $hp, $19                    # |         96 |        102 |          0 |          1 |          0 |          0 |
    add     $hp, 8, $hp                 # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $17, [$19 + 7]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $16, [$19 + 6]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $15, [$19 + 5]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $14, [$19 + 4]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $13, [$19 + 3]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $12, [$19 + 2]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $11, [$19 + 1]              # |         96 |        102 |          0 |          1 |          0 |          0 |
    store   $10, [$19 + 0]              # |         96 |         96 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $20              # |         96 |        102 |          0 |          0 |          1 |          0 |
.count stack_load
    load    [$sp + 1], $21              # |         96 |         96 |          0 |          0 |          0 |          0 |
.count storer
    add     $21, $20, $tmp              # |         96 |        288 |        192 |          0 |          0 |          0 |
    store   $19, [$tmp + 0]             # |         96 |        192 |         96 |          0 |          0 |          0 |
    sub     $20, 1, $19                 # |         96 |         96 |          0 |          0 |          0 |          0 |
    cmp     $19, 0                      # |         96 |        192 |         96 |          0 |          0 |          0 |
    bl      bge_else.36909              # |         96 |        197 |         95 |          1 |          0 |          0 |
bge_then.36909:
    call    create_pixel.3008           # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |         96 |         96 |          0 |          0 |          0 |          0 |
.count storer
    add     $21, $19, $tmp              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $10, [$tmp + 0]             # |         96 |         96 |          0 |          0 |          0 |          0 |
    sub     $19, 1, $10                 # |         96 |         96 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |         96 |        192 |         96 |          0 |          0 |          0 |
    bl      bge_else.36910              # |         96 |        207 |         95 |          1 |          0 |          5 |
bge_then.36910:
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         93 |         99 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $13, [$12 + 1]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         99 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $13, [$12 + 2]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |         93 |         99 |          0 |          1 |          0 |          0 |
    store   $13, [$12 + 3]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $13, [$12 + 4]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |         93 |         99 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         99 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         99 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 1]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 2]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         99 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 3]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         93 |         99 |          0 |          1 |          0 |          0 |
    store   $16, [$15 + 4]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         93 |         99 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $17, [$16 + 1]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         99 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $17, [$16 + 2]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $17, [$16 + 3]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         99 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $17, [$16 + 4]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         93 |         99 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         99 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $19, [$18 + 1]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         93 |         99 |          0 |          1 |          0 |          0 |
    store   $19, [$18 + 2]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $19, [$18 + 3]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         99 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $19, [$18 + 4]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    mov     $hp, $19                    # |         93 |         93 |          0 |          0 |          0 |          0 |
    add     $hp, 8, $hp                 # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $18, [$19 + 7]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $17, [$19 + 6]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $16, [$19 + 5]              # |         93 |         99 |          0 |          1 |          0 |          0 |
    store   $15, [$19 + 4]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $14, [$19 + 3]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $13, [$19 + 2]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $12, [$19 + 1]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $11, [$19 + 0]              # |         93 |         93 |          0 |          0 |          0 |          0 |
.count storer
    add     $21, $10, $tmp              # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $19, [$tmp + 0]             # |         93 |        186 |         93 |          0 |          0 |          0 |
    sub     $10, 1, $19                 # |         93 |         99 |          0 |          1 |          0 |          0 |
    cmp     $19, 0                      # |         93 |        186 |         93 |          0 |          0 |          0 |
    bl      bge_else.36911              # |         93 |        186 |         93 |          0 |          0 |          0 |
bge_then.36911:
    call    create_pixel.3008           # |         93 |         93 |          0 |          0 |          0 |          0 |
.count storer
    add     $21, $19, $tmp              # |         93 |         93 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    sub     $19, 1, $3                  # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $21, $2                     # |         93 |         99 |          0 |          1 |          0 |          0 |
    b       init_line_elements.3010     # |         93 |         97 |          0 |          0 |          0 |          2 |
bge_else.36911:
.count stack_move
    add     $sp, 2, $sp
    mov     $21, $1
    ret
bge_else.36910:
.count stack_move
    add     $sp, 2, $sp                 # |          3 |          3 |          0 |          0 |          0 |          0 |
    mov     $21, $1                     # |          3 |          3 |          0 |          0 |          0 |          0 |
    ret                                 # |          3 |          3 |          0 |          0 |          0 |          0 |
bge_else.36909:
.count stack_move
    add     $sp, 2, $sp
    mov     $21, $1
    ret
bge_else.36908:
    mov     $2, $1
    ret
.end init_line_elements

######################################################################
.begin calc_dirvec
calc_dirvec.3020:
    cmp     $2, 5                       # |        600 |        606 |          0 |          1 |          0 |          0 |
    bl      bge_else.36912              # |        600 |      1,614 |        600 |          0 |          0 |        207 |
bge_then.36912:
    load    [min_caml_dirvecs + $7], $1 # |        100 |        124 |          0 |          0 |          4 |          0 |
    fmul    $3, $3, $2                  # |        100 |        106 |          0 |          1 |          0 |          0 |
    fmul    $4, $4, $5                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$1 + $8], $6               # |        100 |        346 |          0 |          0 |         41 |          0 |
    add     $8, 40, $7                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    add     $8, 1, $9                   # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$6 + 0], $6                # |        100 |        700 |          0 |          0 |        100 |          0 |
    fadd    $2, $5, $2                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    fadd    $2, $36, $2                 # |        100 |        500 |        400 |          0 |          0 |          0 |
    fsqrt   $2, $2                      # |        100 |        502 |        396 |          1 |          0 |          0 |
    finv    $2, $2                      # |        100 |        500 |        400 |          0 |          0 |          0 |
    fmul    $3, $2, $3                  # |        100 |        500 |        400 |          0 |          0 |          0 |
    fmul    $4, $2, $4                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $2, [$6 + 2]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $3, [$6 + 0]                # |        100 |        300 |        200 |          0 |          0 |          0 |
    store   $4, [$6 + 1]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$1 + $7], $5               # |        100 |        400 |          0 |          0 |         50 |          0 |
    fneg    $4, $6                      # |        100 |        106 |          0 |          1 |          0 |          0 |
    add     $8, 80, $7                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$5 + 0], $5                # |        100 |        700 |          0 |          0 |        100 |          0 |
    store   $3, [$5 + 0]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $2, [$5 + 1]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $6, [$5 + 2]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$1 + $7], $5               # |        100 |        418 |          0 |          0 |         53 |          0 |
    fneg    $3, $7                      # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$5 + 0], $5                # |        100 |        753 |         47 |          1 |        100 |          0 |
    store   $2, [$5 + 0]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $7, [$5 + 1]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $6, [$5 + 2]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$1 + $9], $5               # |        100 |        190 |          0 |          0 |         15 |          0 |
    fneg    $2, $2                      # |        100 |        100 |          0 |          0 |          0 |          0 |
    add     $8, 41, $9                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$5 + 0], $5                # |        100 |        700 |          0 |          0 |        100 |          0 |
    store   $7, [$5 + 0]                # |        100 |        106 |          0 |          1 |          0 |          0 |
    store   $6, [$5 + 1]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $2, [$5 + 2]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$1 + $9], $5               # |        100 |        100 |          0 |          0 |          0 |          0 |
    add     $8, 81, $6                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$5 + 0], $5                # |        100 |        800 |        100 |          0 |        100 |          0 |
    store   $7, [$5 + 0]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $2, [$5 + 1]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $4, [$5 + 2]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$1 + $6], $1               # |        100 |        106 |          0 |          0 |          1 |          0 |
    load    [$1 + 0], $1                # |        100 |        898 |        198 |          0 |        100 |          0 |
    store   $2, [$1 + 0]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $3, [$1 + 1]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $4, [$1 + 2]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    ret                                 # |        100 |        100 |          0 |          0 |          0 |          0 |
bge_else.36912:
    fmul    $4, $4, $11                 # |        500 |        506 |          0 |          1 |          0 |          0 |
.count stack_move
    sub     $sp, 7, $sp                 # |        500 |        506 |          0 |          1 |          0 |          0 |
.count load_float
    load    [f.31959], $12              # |        500 |        518 |          0 |          0 |          3 |          0 |
.count stack_store
    store   $8, [$sp + 0]               # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $7, [$sp + 1]               # |        500 |        500 |          0 |          0 |          0 |          0 |
    fadd    $11, $12, $11               # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 3]               # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 4]               # |        500 |        500 |          0 |          0 |          0 |          0 |
    fsqrt   $11, $11                    # |        500 |      1,005 |        499 |          1 |          0 |          0 |
    finv    $11, $2                     # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    call    min_caml_atan               # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $14              # |        500 |        536 |          0 |          0 |          6 |          0 |
.count move_ret
    mov     $1, $13                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    fmul    $13, $14, $2                # |        500 |        994 |        494 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 5]               # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    call    min_caml_sin                # |        500 |        500 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |        500 |        506 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $2               # |        500 |        500 |          0 |          0 |          0 |          0 |
    call    min_caml_cos                # |        500 |        500 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    finv    $15, $15                    # |        500 |        500 |          0 |          0 |          0 |          0 |
    fmul    $13, $15, $13               # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    fmul    $13, $11, $11               # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    fmul    $11, $11, $13               # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    fadd    $13, $12, $12               # |        500 |      2,502 |      1,996 |          1 |          0 |          0 |
    fsqrt   $12, $12                    # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    finv    $12, $2                     # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    call    min_caml_atan               # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $15              # |        500 |        524 |          0 |          0 |          4 |          0 |
.count move_ret
    mov     $1, $13                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    fmul    $13, $15, $2                # |        500 |        996 |        496 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 6]               # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    call    min_caml_sin                # |        500 |        506 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $2               # |        500 |        512 |          0 |          0 |          2 |          0 |
    call    min_caml_cos                # |        500 |        500 |          0 |          0 |          0 |          0 |
    finv    $1, $1                      # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 7, $sp                 # |        500 |        500 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $15, $6                     # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 5], $2               # |        500 |        530 |          0 |          0 |          5 |          0 |
.count stack_load
    load    [$sp - 6], $7               # |        500 |        542 |          0 |          1 |          6 |          0 |
    fmul    $13, $1, $1                 # |        500 |        500 |          0 |          0 |          0 |          0 |
    add     $2, 1, $2                   # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 7], $8               # |        500 |        536 |          0 |          0 |          6 |          0 |
.count move_args
    mov     $14, $5                     # |        500 |        500 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $3                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    fmul    $1, $12, $4                 # |        500 |        500 |          0 |          0 |          0 |          0 |
    b       calc_dirvec.3020            # |        500 |        530 |          0 |          0 |          0 |         15 |
.end calc_dirvec

######################################################################
.begin calc_dirvecs
calc_dirvecs.3028:
    cmp     $2, 0                       # |         11 |         17 |          0 |          1 |          0 |          0 |
    bl      bge_else.36913              # |         11 |         22 |         11 |          0 |          0 |          0 |
bge_then.36913:
.count stack_move
    sub     $sp, 11, $sp                # |         11 |         11 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |         11 |         11 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |         11 |         11 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 1]               # |         11 |         11 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 2]               # |         11 |         11 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 3]               # |         11 |         11 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |         11 |         17 |          0 |          1 |          0 |          0 |
.count load_float
    load    [f.32000], $17              # |         11 |         17 |          0 |          0 |          1 |          0 |
.count move_ret
    mov     $1, $16                     # |         11 |         31 |         20 |          0 |          0 |          0 |
.count load_float
    load    [f.32001], $18              # |         11 |         17 |          0 |          0 |          1 |          0 |
    fmul    $16, $17, $16               # |         11 |         11 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $6               # |         11 |         35 |          0 |          0 |          4 |          0 |
.count stack_load
    load    [$sp + 2], $7               # |         11 |         35 |          0 |          0 |          4 |          0 |
.count stack_load
    load    [$sp + 1], $8               # |         11 |         23 |          0 |          0 |          2 |          0 |
.count move_args
    mov     $zero, $4                   # |         11 |         17 |          0 |          1 |          0 |          0 |
    fsub    $16, $18, $5                # |         11 |         11 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         11 |         11 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |         11 |         11 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |         11 |         11 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $19              # |         11 |         11 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |         11 |         11 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.31959], $20              # |         11 |         11 |          0 |          0 |          0 |          0 |
    add     $19, 2, $8                  # |         11 |         17 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |         11 |         11 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $8, [$sp + 4]               # |         11 |         11 |          0 |          0 |          0 |          0 |
    fadd    $16, $20, $5                # |         11 |         11 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $6               # |         11 |         11 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $7               # |         11 |         11 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         11 |         11 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |         11 |         11 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $10              # |         11 |         23 |          0 |          1 |          1 |          0 |
    sub     $10, 1, $2                  # |         11 |         31 |         20 |          0 |          0 |          0 |
    li      0, $10                      # |         11 |         11 |          0 |          0 |          0 |          0 |
    cmp     $2, 0                       # |         11 |         11 |          0 |          0 |          0 |          0 |
    bl      bge_else.36914              # |         11 |         26 |         11 |          0 |          0 |          2 |
bge_then.36914:
.count stack_store
    store   $2, [$sp + 5]               # |         10 |         10 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $11              # |         10 |         10 |          0 |          0 |          0 |          0 |
    add     $11, 1, $11                 # |         10 |         30 |         20 |          0 |          0 |          0 |
    cmp     $11, 5                      # |         10 |         25 |          9 |          1 |          0 |          0 |
    bl      bge_cont.36915              # |         10 |         30 |         10 |          0 |          0 |          5 |
bge_then.36915:
    sub     $11, 5, $11                 # |          2 |          2 |          0 |          0 |          0 |          0 |
bge_cont.36915:
.count stack_store
    store   $11, [$sp + 6]              # |         10 |         12 |          2 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |         10 |         10 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         10 |         40 |         30 |          0 |          0 |          0 |
    fmul    $16, $17, $16               # |         10 |         10 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $6               # |         10 |         10 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $19, $8                     # |         10 |         16 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $11, $7                     # |         10 |         10 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |         10 |         10 |          0 |          0 |          0 |          0 |
    fsub    $16, $18, $5                # |         10 |         10 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         10 |         10 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |         10 |         10 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |         10 |         10 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |         10 |         10 |          0 |          0 |          0 |          0 |
    fadd    $16, $20, $5                # |         10 |         16 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $6               # |         10 |         10 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $7               # |         10 |         16 |          0 |          0 |          1 |          0 |
.count stack_load
    load    [$sp + 4], $8               # |         10 |         10 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |         10 |         10 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         10 |         10 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |         10 |         10 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $10              # |         10 |         10 |          0 |          0 |          0 |          0 |
    sub     $10, 1, $2                  # |         10 |         34 |         18 |          1 |          0 |          0 |
    li      0, $10                      # |         10 |         10 |          0 |          0 |          0 |          0 |
    cmp     $2, 0                       # |         10 |         10 |          0 |          0 |          0 |          0 |
    bl      bge_else.36916              # |         10 |         30 |         10 |          0 |          0 |          5 |
bge_then.36916:
.count stack_store
    store   $2, [$sp + 7]               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $11              # |          5 |          5 |          0 |          0 |          0 |          0 |
    add     $11, 1, $11                 # |          5 |         15 |         10 |          0 |          0 |          0 |
    cmp     $11, 5                      # |          5 |         10 |          5 |          0 |          0 |          0 |
    bl      bge_cont.36917              # |          5 |         25 |          4 |          1 |          0 |          5 |
bge_then.36917:
    sub     $11, 5, $11                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_cont.36917:
.count stack_store
    store   $11, [$sp + 8]              # |          5 |          6 |          1 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          5 |         20 |         15 |          0 |          0 |          0 |
    fmul    $16, $17, $16               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $6               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $19, $8                     # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $7                     # |          5 |         11 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |          5 |          0 |          0 |          0 |          0 |
    fsub    $16, $18, $5                # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    fadd    $16, $20, $5                # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $6               # |          5 |         17 |          0 |          1 |          1 |          0 |
.count stack_load
    load    [$sp + 8], $7               # |          5 |         11 |          0 |          0 |          1 |          0 |
.count stack_load
    load    [$sp + 4], $8               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $10              # |          5 |         11 |          0 |          0 |          1 |          0 |
    sub     $10, 1, $2                  # |          5 |         13 |          8 |          0 |          0 |          0 |
    li      0, $10                      # |          5 |         11 |          0 |          1 |          0 |          0 |
    cmp     $2, 0                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    bl      bge_else.36918              # |          5 |         16 |          5 |          0 |          0 |          3 |
bge_then.36918:
.count stack_store
    store   $2, [$sp + 9]               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 8], $11              # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $11, 1, $11                 # |          1 |          3 |          2 |          0 |          0 |          0 |
    cmp     $11, 5                      # |          1 |          2 |          1 |          0 |          0 |          0 |
    bl      bge_cont.36919              # |          1 |          4 |          1 |          0 |          0 |          1 |
bge_then.36919:
    sub     $11, 5, $11
bge_cont.36919:
.count stack_store
    store   $11, [$sp + 10]             # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_float_of_int       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          4 |          3 |          0 |          0 |          0 |
    fmul    $16, $17, $16               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $6               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $19, $8                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $7                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    fsub    $16, $18, $5                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $16, $20, $5                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $6               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 10], $7              # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $8               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 11, $sp                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $19, $5                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $1               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 8], $3               # |          1 |          7 |          0 |          1 |          0 |          0 |
    sub     $1, 1, $2                   # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $1, 1, $4                   # |          1 |          3 |          2 |          0 |          0 |          0 |
    cmp     $4, 5                       # |          1 |          2 |          1 |          0 |          0 |          0 |
    bl      calc_dirvecs.3028           # |          1 |          4 |          1 |          0 |          0 |          1 |
    sub     $4, 5, $4
    b       calc_dirvecs.3028
bge_else.36918:
.count stack_move
    add     $sp, 11, $sp                # |          4 |          4 |          0 |          0 |          0 |          0 |
    ret                                 # |          4 |          4 |          0 |          0 |          0 |          0 |
bge_else.36916:
.count stack_move
    add     $sp, 11, $sp                # |          5 |          5 |          0 |          0 |          0 |          0 |
    ret                                 # |          5 |          5 |          0 |          0 |          0 |          0 |
bge_else.36914:
.count stack_move
    add     $sp, 11, $sp                # |          1 |          7 |          0 |          1 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_else.36913:
    ret
.end calc_dirvecs

######################################################################
.begin calc_dirvec_rows
calc_dirvec_rows.3033:
    cmp     $2, 0                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    bl      bge_else.36921              # |          5 |         15 |          4 |          1 |          0 |          0 |
bge_then.36921:
.count stack_move
    sub     $sp, 20, $sp                # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.32001], $11              # |          5 |          5 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.32000], $12              # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      4, $2                       # |          5 |         11 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $11, [$sp + 3]              # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $12, [$sp + 4]              # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          5 |         20 |         15 |          0 |          0 |          0 |
    fmul    $13, $12, $13               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $13, [$sp + 5]              # |          5 |         25 |         20 |          0 |          0 |          0 |
    fsub    $13, $11, $13               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $13, [$sp + 6]              # |          5 |         27 |         16 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |          5 |         17 |          0 |          0 |          2 |          0 |
    call    min_caml_float_of_int       # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          5 |         20 |         15 |          0 |          0 |          0 |
    fmul    $16, $12, $16               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $13, $5                     # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          5 |         11 |          0 |          1 |          0 |          0 |
    fsub    $16, $11, $6                # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 7]               # |          5 |         25 |         20 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $7               # |          5 |         17 |          0 |          0 |          2 |          0 |
.count stack_load
    load    [$sp + 0], $8               # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $16              # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          5 |          5 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.31959], $17              # |          5 |         11 |          0 |          1 |          0 |          0 |
    add     $16, 2, $8                  # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $8, [$sp + 8]               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $18              # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
    fadd    $18, $17, $5                # |          5 |         10 |          5 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 9]               # |          5 |         25 |         20 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $6               # |          5 |         23 |          0 |          1 |          2 |          0 |
.count stack_load
    load    [$sp + 1], $7               # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $11              # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    add     $11, 1, $11                 # |          5 |          5 |          0 |          0 |          0 |          0 |
    cmp     $11, 5                      # |          5 |         10 |          5 |          0 |          0 |          0 |
    bl      bge_cont.36922              # |          5 |         21 |          4 |          1 |          0 |          3 |
bge_then.36922:
    sub     $11, 5, $11                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_cont.36922:
.count stack_store
    store   $11, [$sp + 10]             # |          5 |          6 |          1 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $19              # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          5 |         15 |         10 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $20              # |          5 |          5 |          0 |          0 |          0 |          0 |
    fmul    $18, $19, $18               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $16, $8                     # |          5 |         11 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $11, $7                     # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
    fsub    $18, $20, $5                # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 11]              # |          5 |         20 |         15 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $6               # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |         11 |          0 |          1 |          0 |          0 |
    fadd    $18, $17, $5                # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 12]              # |          5 |         10 |          5 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $6               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 10], $7              # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 8], $8               # |          5 |         11 |          0 |          1 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 10], $11             # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      2, $2                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    add     $11, 1, $11                 # |          5 |          5 |          0 |          0 |          0 |          0 |
    cmp     $11, 5                      # |          5 |         10 |          5 |          0 |          0 |          0 |
    bl      bge_cont.36923              # |          5 |         20 |          5 |          0 |          0 |          5 |
bge_then.36923:
    sub     $11, 5, $11                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_cont.36923:
.count stack_store
    store   $11, [$sp + 13]             # |          5 |         12 |          1 |          1 |          0 |          0 |
    call    min_caml_float_of_int       # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          5 |         20 |         15 |          0 |          0 |          0 |
    fmul    $18, $19, $18               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $6               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $16, $8                     # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $7                     # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |         11 |          0 |          1 |          0 |          0 |
    fsub    $18, $20, $5                # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    fadd    $18, $17, $5                # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $6               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 13], $7              # |          5 |         23 |          0 |          1 |          2 |          0 |
.count stack_load
    load    [$sp + 8], $8               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 13], $21             # |          5 |         11 |          0 |          0 |          1 |          0 |
    li      1, $2                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    add     $21, 1, $21                 # |          5 |          9 |          4 |          0 |          0 |          0 |
    cmp     $21, 5                      # |          5 |         15 |          4 |          1 |          0 |          0 |
    bl      bge_cont.36924              # |          5 |         18 |          5 |          0 |          0 |          4 |
bge_then.36924:
    sub     $21, 5, $21                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_cont.36924:
    mov     $21, $4                     # |          5 |          6 |          1 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $3               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $16, $5                     # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvecs.3028           # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $10              # |          5 |          5 |          0 |          0 |          0 |          0 |
    sub     $10, 1, $2                  # |          5 |         19 |          8 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $10              # |          5 |          5 |          0 |          0 |          0 |          0 |
    cmp     $2, 0                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    add     $10, 2, $10                 # |          5 |         10 |          5 |          0 |          0 |          0 |
    bl      bge_else.36925              # |          5 |          7 |          0 |          0 |          0 |          1 |
bge_then.36925:
    cmp     $10, 5                      # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 14]              # |          4 |          4 |          0 |          0 |          0 |          0 |
    bl      bge_cont.36926              # |          4 |         12 |          0 |          0 |          0 |          4 |
bge_then.36926:
    sub     $10, 5, $10                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_cont.36926:
.count stack_store
    store   $10, [$sp + 15]             # |          4 |         11 |          1 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $11              # |          4 |         10 |          0 |          0 |          1 |          0 |
    li      0, $12                      # |          4 |          4 |          0 |          0 |          0 |          0 |
    add     $11, 4, $11                 # |          4 |          7 |          3 |          0 |          0 |          0 |
.count stack_store
    store   $11, [$sp + 16]             # |          4 |          8 |          4 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $17              # |          4 |         16 |          0 |          0 |          2 |          0 |
.count move_ret
    mov     $1, $16                     # |          4 |         12 |          2 |          1 |          0 |          0 |
.count move_args
    mov     $11, $8                     # |          4 |          4 |          0 |          0 |          0 |          0 |
    fmul    $16, $17, $16               # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $17              # |          4 |         10 |          0 |          0 |          1 |          0 |
.count move_args
    mov     $10, $7                     # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          4 |          4 |          0 |          0 |          0 |          0 |
    fsub    $16, $17, $6                # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $12, $2                     # |          4 |         10 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 17]              # |          4 |         13 |          9 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $5               # |          4 |          4 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 16], $16             # |          4 |          4 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          4 |          4 |          0 |          0 |          0 |          0 |
    add     $16, 2, $8                  # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          4 |         10 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $8, [$sp + 18]              # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 9], $5               # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 17], $6              # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 15], $7              # |          4 |          4 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 15], $17             # |          4 |          4 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          4 |          4 |          0 |          0 |          0 |          0 |
    add     $17, 1, $17                 # |          4 |         13 |          3 |          1 |          0 |          0 |
    cmp     $17, 5                      # |          4 |          8 |          4 |          0 |          0 |          0 |
    bl      bge_cont.36927              # |          4 |         14 |          4 |          0 |          0 |          3 |
bge_then.36927:
    sub     $17, 5, $17                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_cont.36927:
    mov     $17, $7                     # |          4 |          5 |          1 |          0 |          0 |          0 |
.count stack_store
    store   $7, [$sp + 19]              # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 11], $5              # |          4 |         16 |          0 |          0 |          2 |          0 |
.count stack_load
    load    [$sp + 17], $6              # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $16, $8                     # |          4 |         10 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          4 |          4 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          4 |          4 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 12], $5              # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 17], $6              # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 19], $7              # |          4 |         10 |          0 |          0 |          1 |          0 |
.count stack_load
    load    [$sp + 18], $8              # |          4 |         10 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          4 |          4 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 19], $21             # |          4 |         10 |          0 |          0 |          1 |          0 |
    li      2, $2                       # |          4 |          4 |          0 |          0 |          0 |          0 |
    add     $21, 1, $21                 # |          4 |          7 |          3 |          0 |          0 |          0 |
    cmp     $21, 5                      # |          4 |          8 |          4 |          0 |          0 |          0 |
    bl      bge_cont.36928              # |          4 |         19 |          3 |          1 |          0 |          3 |
bge_then.36928:
    sub     $21, 5, $21                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_cont.36928:
    mov     $21, $4                     # |          4 |          5 |          1 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 17], $3              # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $16, $5                     # |          4 |          4 |          0 |          0 |          0 |          0 |
    call    calc_dirvecs.3028           # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 20, $sp                # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 6], $1               # |          4 |         14 |          4 |          0 |          1 |          0 |
    sub     $1, 1, $2                   # |          4 |         16 |          6 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 5], $1               # |          4 |         16 |          0 |          0 |          2 |          0 |
    add     $1, 2, $3                   # |          4 |          8 |          4 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 4], $1               # |          4 |          4 |          0 |          0 |          0 |          0 |
    cmp     $3, 5                       # |          4 |          4 |          0 |          0 |          0 |          0 |
    add     $1, 4, $4                   # |          4 |          8 |          4 |          0 |          0 |          0 |
    bl      bge_else.36929              # |          4 |          8 |          0 |          0 |          0 |          2 |
bge_then.36929:
    sub     $3, 5, $3                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    b       calc_dirvec_rows.3033       # |          2 |          6 |          0 |          0 |          0 |          2 |
bge_else.36929:
    add     $1, 4, $4                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    b       calc_dirvec_rows.3033       # |          2 |          2 |          0 |          0 |          0 |          0 |
bge_else.36925:
.count stack_move
    add     $sp, 20, $sp                # |          1 |          1 |          0 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_else.36921:
    ret
.end calc_dirvec_rows

######################################################################
.begin create_dirvec_elements
create_dirvec_elements.3039:
    cmp     $3, 0                       # |        150 |        156 |          0 |          1 |          0 |          0 |
    bl      bge_else.36930              # |        150 |        308 |        150 |          0 |          0 |          4 |
bge_then.36930:
.count stack_move
    sub     $sp, 6, $sp                 # |        148 |        154 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |        148 |        296 |        148 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |        148 |        148 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        148 |        148 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        148 |        148 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        148 |        148 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |        148 |        148 |          0 |          0 |          0 |          0 |
    mov     $10, $3                     # |        148 |        148 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 2]               # |        148 |        154 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |        148 |        148 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        148 |        148 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |        148 |        148 |          0 |          0 |          0 |          0 |
    mov     $hp, $11                    # |        148 |        148 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 1]              # |        148 |        148 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $10              # |        148 |        148 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |        148 |        148 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        148 |        154 |          0 |          1 |          0 |          0 |
    store   $10, [$11 + 0]              # |        148 |        148 |          0 |          0 |          0 |          0 |
    mov     $11, $10                    # |        148 |        148 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $11              # |        148 |        148 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $12              # |        148 |        148 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $11, $tmp              # |        148 |        444 |        296 |          0 |          0 |          0 |
    store   $10, [$tmp + 0]             # |        148 |        296 |        148 |          0 |          0 |          0 |
    sub     $11, 1, $10                 # |        148 |        148 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |        148 |        301 |        147 |          1 |          0 |          0 |
    bl      bge_else.36931              # |        148 |        302 |        148 |          0 |          0 |          3 |
bge_then.36931:
.count move_args
    mov     $zero, $3                   # |        146 |        146 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        146 |        146 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |        146 |        146 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 3]               # |        146 |        146 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |        146 |        146 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        146 |        146 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |        146 |        152 |          0 |          1 |          0 |          0 |
    mov     $hp, $13                    # |        146 |        146 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |        146 |        146 |          0 |          0 |          0 |          0 |
    store   $11, [$13 + 1]              # |        146 |        146 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $11              # |        146 |        146 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $10, $tmp              # |        146 |        146 |          0 |          0 |          0 |          0 |
    sub     $10, 1, $10                 # |        146 |        146 |          0 |          0 |          0 |          0 |
    store   $11, [$13 + 0]              # |        146 |        146 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |        146 |        152 |          0 |          1 |          0 |          0 |
    mov     $13, $11                    # |        146 |        146 |          0 |          0 |          0 |          0 |
    store   $11, [$tmp + 0]             # |        146 |        146 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        146 |        146 |          0 |          0 |          0 |          0 |
    bl      bge_else.36932              # |        146 |        146 |          0 |          0 |          0 |          0 |
bge_then.36932:
.count move_args
    mov     $zero, $3                   # |        146 |        146 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        146 |        146 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |        146 |        146 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 4]               # |        146 |        152 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |        146 |        146 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        146 |        146 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |        146 |        146 |          0 |          0 |          0 |          0 |
    mov     $hp, $13                    # |        146 |        146 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |        146 |        146 |          0 |          0 |          0 |          0 |
    store   $11, [$13 + 1]              # |        146 |        146 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $11              # |        146 |        146 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $10, $tmp              # |        146 |        152 |          0 |          1 |          0 |          0 |
    sub     $10, 1, $10                 # |        146 |        146 |          0 |          0 |          0 |          0 |
    store   $11, [$13 + 0]              # |        146 |        146 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |        146 |        146 |          0 |          0 |          0 |          0 |
    mov     $13, $11                    # |        146 |        146 |          0 |          0 |          0 |          0 |
    store   $11, [$tmp + 0]             # |        146 |        146 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        146 |        146 |          0 |          0 |          0 |          0 |
    bl      bge_else.36933              # |        146 |        152 |          0 |          0 |          0 |          3 |
bge_then.36933:
.count move_args
    mov     $zero, $3                   # |        145 |        151 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |        145 |        145 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |        145 |        145 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 5]               # |        145 |        145 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |        145 |        145 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        145 |        145 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 6, $sp                 # |        145 |        145 |          0 |          0 |          0 |          0 |
    mov     $hp, $2                     # |        145 |        145 |          0 |          0 |          0 |          0 |
    store   $1, [$2 + 1]                # |        145 |        151 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |        145 |        145 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $10, $tmp              # |        145 |        145 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |        145 |        145 |          0 |          0 |          0 |          0 |
    store   $1, [$2 + 0]                # |        145 |        145 |          0 |          0 |          0 |          0 |
    mov     $2, $1                      # |        145 |        145 |          0 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |        145 |        145 |          0 |          0 |          0 |          0 |
    sub     $10, 1, $3                  # |        145 |        145 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $12, $2                     # |        145 |        151 |          0 |          1 |          0 |          0 |
    b       create_dirvec_elements.3039 # |        145 |        149 |          0 |          0 |          0 |          2 |
bge_else.36933:
.count stack_move
    add     $sp, 6, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_else.36932:
.count stack_move
    add     $sp, 6, $sp
    ret
bge_else.36931:
.count stack_move
    add     $sp, 6, $sp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    ret                                 # |          2 |          2 |          0 |          0 |          0 |          0 |
bge_else.36930:
    ret                                 # |          2 |          2 |          0 |          0 |          0 |          0 |
.end create_dirvec_elements

######################################################################
.begin create_dirvecs
create_dirvecs.3042:
    cmp     $2, 0                       # |          3 |          9 |          0 |          1 |          0 |          0 |
    bl      bge_else.36934              # |          3 |          8 |          3 |          0 |          0 |          1 |
bge_then.36934:
.count stack_move
    sub     $sp, 9, $sp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    mov     $10, $3                     # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $hp, $11                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 1]              # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $10              # |          2 |          8 |          0 |          1 |          0 |          0 |
    li      120, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $11, $3                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $11              # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          2 |          8 |          0 |          1 |          0 |          0 |
    store   $10, [min_caml_dirvecs + $11]# |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 2]               # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    mov     $hp, $12                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + $11], $11# |          2 |         14 |          0 |          0 |          2 |          0 |
    store   $10, [$12 + 1]              # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $10              # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$12 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $12, $10                    # |          2 |          8 |          0 |          1 |          0 |          0 |
    store   $10, [$11 + 118]            # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 3]               # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    mov     $hp, $12                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$12 + 1]              # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $10              # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$12 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $12, $10                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 117]            # |          2 |          8 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 4]               # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $hp, $15                    # |          2 |          8 |          0 |          1 |          0 |          0 |
    store   $14, [$15 + 1]              # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $14              # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      115, $3                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $14, [$15 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $15, $14                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $14, [$11 + 116]            # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $2                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    call    create_dirvec_elements.3039 # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $10              # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    sub     $10, 1, $10                 # |          2 |          4 |          2 |          0 |          0 |          0 |
    cmp     $10, 0                      # |          2 |          4 |          2 |          0 |          0 |          0 |
    bl      bge_else.36935              # |          2 |          4 |          2 |          0 |          0 |          0 |
bge_then.36935:
.count stack_store
    store   $10, [$sp + 5]              # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          2 |          8 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 6]               # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $hp, $12                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $11, [$12 + 1]              # |          2 |          8 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $11              # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      120, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $11, [$12 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $12, $3                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $11, [min_caml_dirvecs + $10]# |          2 |          8 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 7]               # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    mov     $hp, $12                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + $10], $10# |          2 |         14 |          0 |          0 |          2 |          0 |
    store   $11, [$12 + 1]              # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $11              # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $11, [$12 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $12, $11                    # |          2 |          8 |          0 |          1 |          0 |          0 |
    store   $11, [$10 + 118]            # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 8]               # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    mov     $hp, $15                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $14, [$15 + 1]              # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 8], $14              # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      116, $3                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $14, [$15 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $15, $14                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $14, [$10 + 117]            # |          2 |          8 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    create_dirvec_elements.3039 # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 9, $sp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 4], $1               # |          2 |          4 |          2 |          0 |          0 |          0 |
    sub     $1, 1, $2                   # |          2 |          6 |          4 |          0 |          0 |          0 |
    b       create_dirvecs.3042         # |          2 |          6 |          0 |          0 |          0 |          2 |
bge_else.36935:
.count stack_move
    add     $sp, 9, $sp
    ret
bge_else.36934:
    ret                                 # |          1 |          7 |          0 |          1 |          0 |          0 |
.end create_dirvecs

######################################################################
.begin init_dirvec_constants
init_dirvec_constants.3044:
    cmp     $3, 0                       # |        152 |        158 |          0 |          1 |          0 |          0 |
    bl      bge_else.36936              # |        152 |        310 |        152 |          0 |          0 |          3 |
bge_then.36936:
.count stack_move
    sub     $sp, 4, $sp                 # |        150 |        150 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $11                 # |        150 |        150 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |        150 |        150 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$2 + $3], $10              # |        150 |        774 |          0 |          1 |        103 |          0 |
    cmp     $11, 0                      # |        150 |        150 |          0 |          0 |          0 |          0 |
    li      6, $2                       # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $12              # |        150 |        918 |          0 |          0 |        128 |          0 |
    bl      bge_cont.36937              # |        150 |        150 |          0 |          0 |          0 |          0 |
bge_then.36937:
    load    [min_caml_objects + $11], $13# |        150 |        162 |          0 |          0 |          2 |          0 |
    load    [$10 + 0], $14              # |        150 |        906 |          0 |          0 |        126 |          0 |
    li      4, $15                      # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$13 + 1], $16              # |        150 |        168 |          0 |          1 |          2 |          0 |
    li      5, $17                      # |        150 |        150 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        150 |        150 |          0 |          0 |          0 |          0 |
    cmp     $16, 1                      # |        150 |        150 |          0 |          0 |          0 |          0 |
    bne     be_else.36938               # |        150 |        312 |        150 |          0 |          0 |          6 |
be_then.36938:
    call    min_caml_create_array
    load    [$14 + 0], $18
.count move_ret
    mov     $1, $17
    load    [$13 + 6], $19
    fcmp    $18, $zero
    load    [$13 + 4], $20
    bne     be_else.36939
be_then.36939:
    store   $zero, [$17 + 1]
.count b_cont
    b       be_cont.36939
be_else.36939:
    fcmp    $zero, $18
    bg      ble_else.36940
ble_then.36940:
    li      0, $18
.count b_cont
    b       ble_cont.36940
ble_else.36940:
    li      1, $18
ble_cont.36940:
    cmp     $19, 0
    be      bne_cont.36941
bne_then.36941:
    cmp     $18, 0
    bne     be_else.36942
be_then.36942:
    li      1, $18
.count b_cont
    b       be_cont.36942
be_else.36942:
    li      0, $18
be_cont.36942:
bne_cont.36941:
    cmp     $18, 0
    load    [$20 + 0], $19
    bne     be_else.36943
be_then.36943:
    fneg    $19, $18
    store   $18, [$17 + 0]
    load    [$14 + 0], $18
    finv    $18, $18
    store   $18, [$17 + 1]
.count b_cont
    b       be_cont.36943
be_else.36943:
    store   $19, [$17 + 0]
    load    [$14 + 0], $18
    finv    $18, $18
    store   $18, [$17 + 1]
be_cont.36943:
be_cont.36939:
    load    [$14 + 1], $18
    load    [$13 + 6], $19
    load    [$13 + 4], $20
    fcmp    $18, $zero
    bne     be_else.36944
be_then.36944:
    store   $zero, [$17 + 3]
.count b_cont
    b       be_cont.36944
be_else.36944:
    fcmp    $zero, $18
    bg      ble_else.36945
ble_then.36945:
    li      0, $18
.count b_cont
    b       ble_cont.36945
ble_else.36945:
    li      1, $18
ble_cont.36945:
    cmp     $19, 0
    be      bne_cont.36946
bne_then.36946:
    cmp     $18, 0
    bne     be_else.36947
be_then.36947:
    li      1, $18
.count b_cont
    b       be_cont.36947
be_else.36947:
    li      0, $18
be_cont.36947:
bne_cont.36946:
    cmp     $18, 0
    load    [$20 + 1], $19
    bne     be_else.36948
be_then.36948:
    fneg    $19, $18
    store   $18, [$17 + 2]
    load    [$14 + 1], $18
    finv    $18, $18
    store   $18, [$17 + 3]
.count b_cont
    b       be_cont.36948
be_else.36948:
    store   $19, [$17 + 2]
    load    [$14 + 1], $18
    finv    $18, $18
    store   $18, [$17 + 3]
be_cont.36948:
be_cont.36944:
    load    [$14 + 2], $18
    load    [$13 + 6], $19
    load    [$13 + 4], $20
    fcmp    $18, $zero
    bne     be_else.36949
be_then.36949:
.count storer
    add     $12, $11, $tmp
    store   $zero, [$17 + 5]
    store   $17, [$tmp + 0]
    sub     $11, 1, $3
.count move_args
    mov     $10, $2
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.36938
be_else.36949:
    fcmp    $zero, $18
    bg      ble_else.36950
ble_then.36950:
    li      0, $18
.count b_cont
    b       ble_cont.36950
ble_else.36950:
    li      1, $18
ble_cont.36950:
    cmp     $19, 0
    be      bne_cont.36951
bne_then.36951:
    cmp     $18, 0
    bne     be_else.36952
be_then.36952:
    li      1, $18
.count b_cont
    b       be_cont.36952
be_else.36952:
    li      0, $18
be_cont.36952:
bne_cont.36951:
    cmp     $18, 0
    load    [$20 + 2], $19
    bne     be_else.36953
be_then.36953:
    fneg    $19, $18
.count b_cont
    b       be_cont.36953
be_else.36953:
    mov     $19, $18
be_cont.36953:
    store   $18, [$17 + 4]
    load    [$14 + 2], $18
.count storer
    add     $12, $11, $tmp
    sub     $11, 1, $3
    finv    $18, $18
    store   $17, [$tmp + 0]
.count move_args
    mov     $10, $2
    store   $18, [$17 + 5]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.36938
be_else.36938:
    cmp     $16, 2                      # |        150 |        156 |          0 |          1 |          0 |          0 |
    bne     be_else.36954               # |        150 |        307 |        149 |          1 |          0 |          1 |
be_then.36954:
.count move_args
    mov     $15, $2                     # |        150 |        150 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        150 |        150 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $18              # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $20              # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$14 + 0], $21              # |        150 |        210 |          0 |          0 |         10 |          0 |
    load    [$18 + 0], $18              # |        150 |        156 |          0 |          1 |          0 |          0 |
    load    [$14 + 1], $22              # |        150 |        168 |          0 |          0 |          3 |          0 |
    load    [$19 + 1], $19              # |        150 |        168 |          0 |          0 |          3 |          0 |
    fmul    $21, $18, $18               # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$14 + 2], $21              # |        150 |        276 |          0 |          0 |         21 |          0 |
    fmul    $22, $19, $19               # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$20 + 2], $20              # |        150 |        150 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |        150 |        150 |          0 |          0 |          0 |          0 |
    sub     $11, 1, $3                  # |        150 |        156 |          0 |          1 |          0 |          0 |
    fmul    $21, $20, $20               # |        150 |        150 |          0 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |        150 |        150 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $11, $tmp              # |        150 |        150 |          0 |          0 |          0 |          0 |
    fadd    $18, $20, $18               # |        150 |        600 |        450 |          0 |          0 |          0 |
    fcmp    $18, $zero                  # |        150 |        750 |        600 |          0 |          0 |          0 |
    bg      ble_else.36955              # |        150 |        396 |        150 |          0 |          0 |         48 |
ble_then.36955:
    store   $zero, [$17 + 0]            # |         80 |         80 |          0 |          0 |          0 |          0 |
    store   $17, [$tmp + 0]             # |         80 |         86 |          0 |          1 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |         80 |         80 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36954               # |         80 |         84 |          0 |          0 |          0 |          2 |
ble_else.36955:
    finv    $18, $18                    # |         70 |         70 |          0 |          0 |          0 |          0 |
    fneg    $18, $19                    # |         70 |        350 |        280 |          0 |          0 |          0 |
    store   $19, [$17 + 0]              # |         70 |        140 |         70 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |         70 |         76 |          0 |          0 |          1 |          0 |
    load    [$19 + 0], $19              # |         70 |        208 |        138 |          0 |          0 |          0 |
    fmul    $19, $18, $19               # |         70 |        214 |        138 |          1 |          0 |          0 |
    fneg    $19, $19                    # |         70 |        350 |        280 |          0 |          0 |          0 |
    store   $19, [$17 + 1]              # |         70 |        140 |         70 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |         70 |         70 |          0 |          0 |          0 |          0 |
    load    [$19 + 1], $19              # |         70 |        210 |        140 |          0 |          0 |          0 |
    fmul    $19, $18, $19               # |         70 |        210 |        140 |          0 |          0 |          0 |
    fneg    $19, $19                    # |         70 |        350 |        280 |          0 |          0 |          0 |
    store   $19, [$17 + 2]              # |         70 |        140 |         70 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |         70 |         76 |          0 |          1 |          0 |          0 |
    load    [$19 + 2], $19              # |         70 |        210 |        140 |          0 |          0 |          0 |
    store   $17, [$tmp + 0]             # |         70 |         70 |          0 |          0 |          0 |          0 |
    fmul    $19, $18, $18               # |         70 |        140 |         70 |          0 |          0 |          0 |
    fneg    $18, $18                    # |         70 |        350 |        280 |          0 |          0 |          0 |
    store   $18, [$17 + 3]              # |         70 |        140 |         70 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |         70 |         70 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36954               # |         70 |         78 |          0 |          0 |          0 |          4 |
be_else.36954:
.count move_args
    mov     $17, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $17
    load    [$13 + 3], $18
    load    [$13 + 4], $19
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$14 + 0], $22
    load    [$14 + 1], $23
    load    [$14 + 2], $24
    fmul    $22, $22, $25
    fmul    $23, $23, $26
    load    [$19 + 0], $19
    load    [$20 + 1], $20
    fmul    $24, $24, $27
    fmul    $25, $19, $19
    fmul    $26, $20, $20
    load    [$21 + 2], $21
    fmul    $23, $24, $25
    load    [$13 + 9], $26
    fmul    $27, $21, $21
    fadd    $19, $20, $19
    fmul    $24, $22, $24
    load    [$26 + 0], $20
    cmp     $18, 0
    load    [$13 + 9], $26
    fmul    $22, $23, $22
    fmul    $25, $20, $20
    fadd    $19, $21, $19
    be      bne_cont.36956
bne_then.36956:
    fadd    $19, $20, $19
    load    [$26 + 1], $20
    load    [$13 + 9], $21
    fmul    $24, $20, $20
    load    [$21 + 2], $21
    fmul    $22, $21, $21
    fadd    $19, $20, $19
    fadd    $19, $21, $19
bne_cont.36956:
    store   $19, [$17 + 0]
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$13 + 4], $22
    load    [$14 + 0], $23
    load    [$20 + 0], $20
    load    [$14 + 1], $24
    load    [$21 + 1], $21
    fmul    $23, $20, $20
    load    [$14 + 2], $23
    load    [$22 + 2], $22
    fmul    $24, $21, $21
    load    [$13 + 9], $25
    fmul    $23, $22, $22
    fneg    $20, $20
    load    [$13 + 9], $26
    cmp     $18, 0
    fneg    $21, $21
    load    [$25 + 1], $25
    fneg    $22, $22
.count storer
    add     $12, $11, $tmp
    sub     $11, 1, $3
.count move_args
    mov     $10, $2
    bne     be_else.36957
be_then.36957:
    fcmp    $19, $zero
    store   $20, [$17 + 1]
    store   $21, [$17 + 2]
    store   $22, [$17 + 3]
    store   $17, [$tmp + 0]
    bne     be_else.36958
be_then.36958:
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.36957
be_else.36958:
    finv    $19, $18
    store   $18, [$17 + 4]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.36957
be_else.36957:
    fmul    $23, $25, $18
    load    [$26 + 2], $23
    fcmp    $19, $zero
    fmul    $24, $23, $24
    fadd    $18, $24, $18
    fmul    $18, $39, $18
    fsub    $20, $18, $18
    store   $18, [$17 + 1]
    load    [$13 + 9], $18
    load    [$14 + 2], $20
    load    [$14 + 0], $24
    load    [$18 + 0], $18
    fmul    $24, $23, $23
    fmul    $20, $18, $20
    fadd    $20, $23, $20
    finv    $19, $23
    fmul    $20, $39, $20
    fsub    $21, $20, $20
    store   $20, [$17 + 2]
    load    [$14 + 1], $20
    load    [$14 + 0], $21
    fmul    $20, $18, $18
    fmul    $21, $25, $20
    fadd    $18, $20, $18
    fmul    $18, $39, $18
    fsub    $22, $18, $18
    store   $18, [$17 + 3]
    bne     be_else.36959
be_then.36959:
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.36959
be_else.36959:
    store   $23, [$17 + 4]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
be_cont.36959:
be_cont.36957:
be_cont.36954:
be_cont.36938:
bge_cont.36937:
.count stack_load
    load    [$sp + 1], $10              # |        150 |        162 |          0 |          1 |          1 |          0 |
    sub     $10, 1, $10                 # |        150 |        448 |        298 |          0 |          0 |          0 |
    cmp     $10, 0                      # |        150 |        300 |        150 |          0 |          0 |          0 |
    bl      bge_else.36960              # |        150 |        304 |        150 |          0 |          0 |          2 |
bge_then.36960:
.count stack_store
    store   $10, [$sp + 2]              # |        149 |        155 |          0 |          1 |          0 |          0 |
    sub     $41, 1, $11                 # |        149 |        149 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $12              # |        149 |        155 |          0 |          0 |          1 |          0 |
    cmp     $11, 0                      # |        149 |        149 |          0 |          0 |          0 |          0 |
    load    [$12 + $10], $10            # |        149 |        945 |        148 |          0 |        108 |          0 |
    bl      bge_cont.36961              # |        149 |        149 |          0 |          0 |          0 |          0 |
bge_then.36961:
    load    [min_caml_objects + $11], $13# |        149 |        149 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $12              # |        149 |        887 |          0 |          0 |        123 |          0 |
    load    [$10 + 0], $14              # |        149 |        899 |          0 |          1 |        124 |          0 |
    load    [$13 + 1], $15              # |        149 |        155 |          0 |          0 |          1 |          0 |
    li      6, $2                       # |        149 |        149 |          0 |          0 |          0 |          0 |
    li      4, $16                      # |        149 |        149 |          0 |          0 |          0 |          0 |
    cmp     $15, 1                      # |        149 |        149 |          0 |          0 |          0 |          0 |
    li      5, $17                      # |        149 |        149 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        149 |        149 |          0 |          0 |          0 |          0 |
    bne     be_else.36962               # |        149 |        157 |          0 |          0 |          0 |          4 |
be_then.36962:
    call    min_caml_create_array
    load    [$14 + 0], $18
.count move_ret
    mov     $1, $17
    load    [$13 + 6], $19
    fcmp    $18, $zero
    load    [$13 + 4], $20
    bne     be_else.36963
be_then.36963:
    store   $zero, [$17 + 1]
.count b_cont
    b       be_cont.36963
be_else.36963:
    fcmp    $zero, $18
    bg      ble_else.36964
ble_then.36964:
    li      0, $18
.count b_cont
    b       ble_cont.36964
ble_else.36964:
    li      1, $18
ble_cont.36964:
    cmp     $19, 0
    be      bne_cont.36965
bne_then.36965:
    cmp     $18, 0
    bne     be_else.36966
be_then.36966:
    li      1, $18
.count b_cont
    b       be_cont.36966
be_else.36966:
    li      0, $18
be_cont.36966:
bne_cont.36965:
    cmp     $18, 0
    load    [$20 + 0], $19
    bne     be_else.36967
be_then.36967:
    fneg    $19, $18
    store   $18, [$17 + 0]
    load    [$14 + 0], $18
    finv    $18, $18
    store   $18, [$17 + 1]
.count b_cont
    b       be_cont.36967
be_else.36967:
    store   $19, [$17 + 0]
    load    [$14 + 0], $18
    finv    $18, $18
    store   $18, [$17 + 1]
be_cont.36967:
be_cont.36963:
    load    [$14 + 1], $18
    load    [$13 + 6], $19
    load    [$13 + 4], $20
    fcmp    $18, $zero
    bne     be_else.36968
be_then.36968:
    store   $zero, [$17 + 3]
.count b_cont
    b       be_cont.36968
be_else.36968:
    fcmp    $zero, $18
    bg      ble_else.36969
ble_then.36969:
    li      0, $18
.count b_cont
    b       ble_cont.36969
ble_else.36969:
    li      1, $18
ble_cont.36969:
    cmp     $19, 0
    be      bne_cont.36970
bne_then.36970:
    cmp     $18, 0
    bne     be_else.36971
be_then.36971:
    li      1, $18
.count b_cont
    b       be_cont.36971
be_else.36971:
    li      0, $18
be_cont.36971:
bne_cont.36970:
    cmp     $18, 0
    load    [$20 + 1], $19
    bne     be_else.36972
be_then.36972:
    fneg    $19, $18
    store   $18, [$17 + 2]
    load    [$14 + 1], $18
    finv    $18, $18
    store   $18, [$17 + 3]
.count b_cont
    b       be_cont.36972
be_else.36972:
    store   $19, [$17 + 2]
    load    [$14 + 1], $18
    finv    $18, $18
    store   $18, [$17 + 3]
be_cont.36972:
be_cont.36968:
    load    [$14 + 2], $18
    load    [$13 + 6], $19
    load    [$13 + 4], $20
    fcmp    $18, $zero
    bne     be_else.36973
be_then.36973:
.count storer
    add     $12, $11, $tmp
    store   $zero, [$17 + 5]
    store   $17, [$tmp + 0]
    sub     $11, 1, $3
.count move_args
    mov     $10, $2
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.36962
be_else.36973:
    fcmp    $zero, $18
    bg      ble_else.36974
ble_then.36974:
    li      0, $18
.count b_cont
    b       ble_cont.36974
ble_else.36974:
    li      1, $18
ble_cont.36974:
    cmp     $19, 0
    be      bne_cont.36975
bne_then.36975:
    cmp     $18, 0
    bne     be_else.36976
be_then.36976:
    li      1, $18
.count b_cont
    b       be_cont.36976
be_else.36976:
    li      0, $18
be_cont.36976:
bne_cont.36975:
    cmp     $18, 0
    load    [$20 + 2], $19
.count move_args
    mov     $10, $2
    sub     $11, 1, $3
.count storer
    add     $12, $11, $tmp
    bne     be_else.36977
be_then.36977:
    fneg    $19, $18
    store   $18, [$17 + 4]
    load    [$14 + 2], $18
    store   $17, [$tmp + 0]
    finv    $18, $18
    store   $18, [$17 + 5]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.36962
be_else.36977:
    store   $19, [$17 + 4]
    load    [$14 + 2], $18
    store   $17, [$tmp + 0]
    finv    $18, $18
    store   $18, [$17 + 5]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.36962
be_else.36962:
    cmp     $15, 2                      # |        149 |      1,043 |          0 |        149 |          0 |          0 |
    bne     be_else.36978               # |        149 |      1,043 |          0 |        149 |          0 |          0 |
be_then.36978:
.count move_args
    mov     $16, $2                     # |        149 |        149 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        149 |        149 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |        149 |        149 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $18              # |        149 |        149 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |        149 |        149 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $20              # |        149 |        149 |          0 |          0 |          0 |          0 |
    load    [$14 + 0], $21              # |        149 |        185 |          0 |          0 |          6 |          0 |
    load    [$18 + 0], $18              # |        149 |      1,043 |          0 |        149 |          0 |          0 |
    load    [$14 + 1], $22              # |        149 |        161 |          0 |          0 |          2 |          0 |
    load    [$19 + 1], $19              # |        149 |        155 |          0 |          0 |          1 |          0 |
    fmul    $21, $18, $18               # |        149 |        149 |          0 |          0 |          0 |          0 |
    load    [$14 + 2], $21              # |        149 |        275 |          0 |          0 |         21 |          0 |
    fmul    $22, $19, $19               # |        149 |        149 |          0 |          0 |          0 |          0 |
    load    [$20 + 2], $20              # |        149 |        149 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |        149 |        149 |          0 |          0 |          0 |          0 |
    sub     $11, 1, $3                  # |        149 |      1,043 |          0 |        149 |          0 |          0 |
    fmul    $21, $20, $20               # |        149 |        149 |          0 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |        149 |        149 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $11, $tmp              # |        149 |        149 |          0 |          0 |          0 |          0 |
    fadd    $18, $20, $18               # |        149 |        596 |        447 |          0 |          0 |          0 |
    fcmp    $18, $zero                  # |        149 |        745 |        596 |          0 |          0 |          0 |
    bg      ble_else.36979              # |        149 |        398 |        149 |          0 |          0 |         50 |
ble_then.36979:
    store   $zero, [$17 + 0]            # |         69 |         69 |          0 |          0 |          0 |          0 |
    store   $17, [$tmp + 0]             # |         69 |        483 |          0 |         69 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |         69 |         69 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36978               # |         69 |        491 |          0 |         69 |          0 |          4 |
ble_else.36979:
    finv    $18, $18                    # |         80 |        560 |          0 |         80 |          0 |          0 |
    fneg    $18, $19                    # |         80 |        400 |        320 |          0 |          0 |          0 |
    store   $19, [$17 + 0]              # |         80 |        160 |         80 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |         80 |         86 |          0 |          0 |          1 |          0 |
    load    [$19 + 0], $19              # |         80 |        238 |        158 |          0 |          0 |          0 |
    fmul    $19, $18, $19               # |         80 |        560 |          0 |         80 |          0 |          0 |
    fneg    $19, $19                    # |         80 |        400 |        320 |          0 |          0 |          0 |
    store   $19, [$17 + 1]              # |         80 |        160 |         80 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |         80 |         80 |          0 |          0 |          0 |          0 |
    load    [$19 + 1], $19              # |         80 |        240 |        160 |          0 |          0 |          0 |
    fmul    $19, $18, $19               # |         80 |        240 |        160 |          0 |          0 |          0 |
    fneg    $19, $19                    # |         80 |        400 |        320 |          0 |          0 |          0 |
    store   $19, [$17 + 2]              # |         80 |        160 |         80 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |         80 |        560 |          0 |         80 |          0 |          0 |
    load    [$19 + 2], $19              # |         80 |        240 |        160 |          0 |          0 |          0 |
    store   $17, [$tmp + 0]             # |         80 |         80 |          0 |          0 |          0 |          0 |
    fmul    $19, $18, $18               # |         80 |        160 |         80 |          0 |          0 |          0 |
    fneg    $18, $18                    # |         80 |        400 |        320 |          0 |          0 |          0 |
    store   $18, [$17 + 3]              # |         80 |        160 |         80 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |         80 |         80 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.36978               # |         80 |        568 |          0 |         80 |          0 |          4 |
be_else.36978:
.count move_args
    mov     $17, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $17
    load    [$13 + 3], $18
    load    [$13 + 4], $19
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$14 + 0], $22
    load    [$14 + 1], $23
    load    [$14 + 2], $24
    fmul    $22, $22, $25
    fmul    $23, $23, $26
    load    [$19 + 0], $19
    load    [$20 + 1], $20
    fmul    $24, $24, $27
    fmul    $25, $19, $19
    fmul    $26, $20, $20
    load    [$21 + 2], $21
    fmul    $23, $24, $25
    load    [$13 + 9], $26
    fmul    $27, $21, $21
    fadd    $19, $20, $19
    fmul    $24, $22, $24
    load    [$26 + 0], $20
    cmp     $18, 0
    load    [$13 + 9], $26
    fmul    $22, $23, $22
    fmul    $25, $20, $20
    fadd    $19, $21, $19
    be      bne_cont.36980
bne_then.36980:
    fadd    $19, $20, $19
    load    [$26 + 1], $20
    load    [$13 + 9], $21
    fmul    $24, $20, $20
    load    [$21 + 2], $21
    fmul    $22, $21, $21
    fadd    $19, $20, $19
    fadd    $19, $21, $19
bne_cont.36980:
    store   $19, [$17 + 0]
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$13 + 4], $22
    load    [$14 + 0], $23
    load    [$20 + 0], $20
    load    [$14 + 1], $24
    load    [$21 + 1], $21
    fmul    $23, $20, $20
    load    [$14 + 2], $23
    load    [$22 + 2], $22
    fmul    $24, $21, $21
    load    [$13 + 9], $25
    fmul    $23, $22, $22
    fneg    $20, $20
    load    [$13 + 9], $26
    cmp     $18, 0
    fneg    $21, $21
    load    [$25 + 1], $25
    fneg    $22, $22
.count storer
    add     $12, $11, $tmp
    sub     $11, 1, $3
.count move_args
    mov     $10, $2
    bne     be_else.36981
be_then.36981:
    fcmp    $19, $zero
    store   $20, [$17 + 1]
    store   $21, [$17 + 2]
    store   $22, [$17 + 3]
    store   $17, [$tmp + 0]
    bne     be_else.36982
be_then.36982:
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.36981
be_else.36982:
    finv    $19, $18
    store   $18, [$17 + 4]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.36981
be_else.36981:
    fmul    $23, $25, $18
    load    [$26 + 2], $23
    fcmp    $19, $zero
    fmul    $24, $23, $24
    fadd    $18, $24, $18
    fmul    $18, $39, $18
    fsub    $20, $18, $18
    store   $18, [$17 + 1]
    load    [$13 + 9], $18
    load    [$14 + 2], $20
    load    [$14 + 0], $24
    load    [$18 + 0], $18
    fmul    $24, $23, $23
    fmul    $20, $18, $20
    fadd    $20, $23, $20
    finv    $19, $23
    fmul    $20, $39, $20
    fsub    $21, $20, $20
    store   $20, [$17 + 2]
    load    [$14 + 1], $20
    load    [$14 + 0], $21
    fmul    $20, $18, $18
    fmul    $21, $25, $20
    fadd    $18, $20, $18
    fmul    $18, $39, $18
    fsub    $22, $18, $18
    store   $18, [$17 + 3]
    bne     be_else.36983
be_then.36983:
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.36983
be_else.36983:
    store   $23, [$17 + 4]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
be_cont.36983:
be_cont.36981:
be_cont.36978:
be_cont.36962:
bge_cont.36961:
.count stack_load
    load    [$sp + 2], $17              # |        149 |      1,055 |          0 |        149 |          2 |          0 |
    sub     $17, 1, $17                 # |        149 |        443 |        294 |          0 |          0 |          0 |
    cmp     $17, 0                      # |        149 |        298 |        149 |          0 |          0 |          0 |
    bl      bge_else.36984              # |        149 |        300 |        149 |          0 |          0 |          1 |
bge_then.36984:
.count stack_load
    load    [$sp + 0], $18              # |        148 |      1,036 |          0 |        148 |          0 |          0 |
    sub     $41, 1, $3                  # |        148 |        148 |          0 |          0 |          0 |          0 |
    load    [$18 + $17], $2             # |        148 |        902 |        148 |          0 |        101 |          0 |
    call    iter_setup_dirvec_constants.2826# |        148 |        148 |          0 |          0 |          0 |          0 |
    sub     $17, 1, $10                 # |        148 |      1,036 |          0 |        148 |          0 |          0 |
    cmp     $10, 0                      # |        148 |        296 |        148 |          0 |          0 |          0 |
    bl      bge_else.36985              # |        148 |        298 |        148 |          0 |          0 |          1 |
bge_then.36985:
    sub     $41, 1, $11                 # |        147 |        147 |          0 |          0 |          0 |          0 |
    load    [$18 + $10], $12            # |        147 |      1,629 |          0 |        147 |        100 |          0 |
    cmp     $11, 0                      # |        147 |        147 |          0 |          0 |          0 |          0 |
    bl      bge_else.36986              # |        147 |        298 |        147 |          0 |          0 |          2 |
bge_then.36986:
    load    [min_caml_objects + $11], $14# |        147 |        159 |          0 |          0 |          2 |          0 |
    load    [$12 + 1], $13              # |        147 |        897 |          0 |          0 |        125 |          0 |
    load    [$12 + 0], $15              # |        147 |        909 |          0 |          0 |        127 |          0 |
    load    [$14 + 1], $16              # |        147 |        153 |          0 |          0 |          1 |          0 |
    li      6, $2                       # |        147 |        147 |          0 |          0 |          0 |          0 |
    li      4, $17                      # |        147 |      1,029 |          0 |        147 |          0 |          0 |
    cmp     $16, 1                      # |        147 |        147 |          0 |          0 |          0 |          0 |
    li      5, $19                      # |        147 |        147 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 3]              # |        147 |        147 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        147 |        147 |          0 |          0 |          0 |          0 |
    bne     be_else.36987               # |        147 |        159 |          0 |          0 |          0 |          6 |
be_then.36987:
    call    min_caml_create_array
    load    [$15 + 0], $19
.count move_ret
    mov     $1, $17
    load    [$14 + 6], $20
    fcmp    $19, $zero
    load    [$14 + 4], $21
    bne     be_else.36988
be_then.36988:
    store   $zero, [$17 + 1]
.count b_cont
    b       be_cont.36988
be_else.36988:
    fcmp    $zero, $19
    bg      ble_else.36989
ble_then.36989:
    li      0, $19
.count b_cont
    b       ble_cont.36989
ble_else.36989:
    li      1, $19
ble_cont.36989:
    cmp     $20, 0
    be      bne_cont.36990
bne_then.36990:
    cmp     $19, 0
    bne     be_else.36991
be_then.36991:
    li      1, $19
.count b_cont
    b       be_cont.36991
be_else.36991:
    li      0, $19
be_cont.36991:
bne_cont.36990:
    cmp     $19, 0
    load    [$21 + 0], $20
    bne     be_else.36992
be_then.36992:
    fneg    $20, $19
    store   $19, [$17 + 0]
    load    [$15 + 0], $19
    finv    $19, $19
    store   $19, [$17 + 1]
.count b_cont
    b       be_cont.36992
be_else.36992:
    store   $20, [$17 + 0]
    load    [$15 + 0], $19
    finv    $19, $19
    store   $19, [$17 + 1]
be_cont.36992:
be_cont.36988:
    load    [$15 + 1], $19
    load    [$14 + 6], $20
    load    [$14 + 4], $21
    fcmp    $19, $zero
    bne     be_else.36993
be_then.36993:
    store   $zero, [$17 + 3]
.count b_cont
    b       be_cont.36993
be_else.36993:
    fcmp    $zero, $19
    bg      ble_else.36994
ble_then.36994:
    li      0, $19
.count b_cont
    b       ble_cont.36994
ble_else.36994:
    li      1, $19
ble_cont.36994:
    cmp     $20, 0
    be      bne_cont.36995
bne_then.36995:
    cmp     $19, 0
    bne     be_else.36996
be_then.36996:
    li      1, $19
.count b_cont
    b       be_cont.36996
be_else.36996:
    li      0, $19
be_cont.36996:
bne_cont.36995:
    cmp     $19, 0
    load    [$21 + 1], $20
    bne     be_else.36997
be_then.36997:
    fneg    $20, $19
    store   $19, [$17 + 2]
    load    [$15 + 1], $19
    finv    $19, $19
    store   $19, [$17 + 3]
.count b_cont
    b       be_cont.36997
be_else.36997:
    store   $20, [$17 + 2]
    load    [$15 + 1], $19
    finv    $19, $19
    store   $19, [$17 + 3]
be_cont.36997:
be_cont.36993:
    load    [$15 + 2], $19
    load    [$14 + 6], $20
    load    [$14 + 4], $21
    fcmp    $19, $zero
    bne     be_else.36998
be_then.36998:
    store   $zero, [$17 + 5]
.count b_cont
    b       be_cont.36998
be_else.36998:
    fcmp    $zero, $19
    bg      ble_else.36999
ble_then.36999:
    li      0, $19
.count b_cont
    b       ble_cont.36999
ble_else.36999:
    li      1, $19
ble_cont.36999:
    cmp     $20, 0
    be      bne_cont.37000
bne_then.37000:
    cmp     $19, 0
    bne     be_else.37001
be_then.37001:
    li      1, $19
.count b_cont
    b       be_cont.37001
be_else.37001:
    li      0, $19
be_cont.37001:
bne_cont.37000:
    cmp     $19, 0
    load    [$21 + 2], $20
    bne     be_else.37002
be_then.37002:
    fneg    $20, $19
    store   $19, [$17 + 4]
    load    [$15 + 2], $19
    finv    $19, $19
    store   $19, [$17 + 5]
.count b_cont
    b       be_cont.37002
be_else.37002:
    store   $20, [$17 + 4]
    load    [$15 + 2], $19
    finv    $19, $19
    store   $19, [$17 + 5]
be_cont.37002:
be_cont.36998:
.count storer
    add     $13, $11, $tmp
    sub     $11, 1, $3
    store   $17, [$tmp + 0]
.count move_args
    mov     $12, $2
    call    iter_setup_dirvec_constants.2826
.count stack_move
    add     $sp, 4, $sp
.count move_args
    mov     $18, $2
.count stack_load
    load    [$sp - 1], $1
    sub     $1, 1, $3
    b       init_dirvec_constants.3044
be_else.36987:
    cmp     $16, 2                      # |        147 |        153 |          0 |          1 |          0 |          0 |
    bne     be_else.37003               # |        147 |        294 |        147 |          0 |          0 |          0 |
be_then.37003:
.count move_args
    mov     $17, $2                     # |        147 |        147 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        147 |        147 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |        147 |        147 |          0 |          0 |          0 |          0 |
    load    [$14 + 4], $19              # |        147 |        147 |          0 |          0 |          0 |          0 |
    load    [$14 + 4], $20              # |        147 |      1,029 |          0 |        147 |          0 |          0 |
    load    [$14 + 4], $21              # |        147 |        147 |          0 |          0 |          0 |          0 |
    load    [$15 + 0], $22              # |        147 |        207 |          0 |          0 |         10 |          0 |
    load    [$19 + 0], $19              # |        147 |        147 |          0 |          0 |          0 |          0 |
    load    [$15 + 1], $23              # |        147 |        159 |          0 |          0 |          2 |          0 |
    load    [$20 + 1], $20              # |        147 |        153 |          0 |          0 |          1 |          0 |
    fmul    $22, $19, $19               # |        147 |        147 |          0 |          0 |          0 |          0 |
    load    [$15 + 2], $22              # |        147 |        237 |          0 |          0 |         15 |          0 |
    fmul    $23, $20, $20               # |        147 |      1,029 |          0 |        147 |          0 |          0 |
    load    [$21 + 2], $21              # |        147 |        147 |          0 |          0 |          0 |          0 |
.count storer
    add     $13, $11, $tmp              # |        147 |        147 |          0 |          0 |          0 |          0 |
    fmul    $22, $21, $21               # |        147 |        294 |        147 |          0 |          0 |          0 |
    fadd    $19, $20, $19               # |        147 |        147 |          0 |          0 |          0 |          0 |
    fadd    $19, $21, $19               # |        147 |        735 |        588 |          0 |          0 |          0 |
    fcmp    $19, $zero                  # |        147 |        735 |        588 |          0 |          0 |          0 |
    bg      ble_else.37004              # |        147 |        394 |        147 |          0 |          0 |         50 |
ble_then.37004:
    store   $zero, [$17 + 0]            # |         68 |        476 |          0 |         68 |          0 |          0 |
    store   $17, [$tmp + 0]             # |         68 |         68 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.37003               # |         68 |         72 |          0 |          0 |          0 |          2 |
ble_else.37004:
    finv    $19, $19                    # |         79 |        553 |          0 |         79 |          0 |          0 |
    fneg    $19, $20                    # |         79 |        395 |        316 |          0 |          0 |          0 |
    store   $20, [$17 + 0]              # |         79 |        158 |         79 |          0 |          0 |          0 |
    load    [$14 + 4], $20              # |         79 |         79 |          0 |          0 |          0 |          0 |
    load    [$20 + 0], $20              # |         79 |        237 |        158 |          0 |          0 |          0 |
    fmul    $20, $19, $20               # |         79 |        553 |          0 |         79 |          0 |          0 |
    fneg    $20, $20                    # |         79 |        395 |        316 |          0 |          0 |          0 |
    store   $20, [$17 + 1]              # |         79 |        158 |         79 |          0 |          0 |          0 |
    load    [$14 + 4], $20              # |         79 |         79 |          0 |          0 |          0 |          0 |
    load    [$20 + 1], $20              # |         79 |        237 |        158 |          0 |          0 |          0 |
    fmul    $20, $19, $20               # |         79 |        237 |        158 |          0 |          0 |          0 |
    fneg    $20, $20                    # |         79 |        395 |        316 |          0 |          0 |          0 |
    store   $20, [$17 + 2]              # |         79 |        158 |         79 |          0 |          0 |          0 |
    load    [$14 + 4], $20              # |         79 |        157 |          0 |         13 |          0 |          0 |
    load    [$20 + 2], $20              # |         79 |        237 |        158 |          0 |          0 |          0 |
    fmul    $20, $19, $19               # |         79 |        237 |        158 |          0 |          0 |          0 |
    fneg    $19, $19                    # |         79 |        395 |        316 |          0 |          0 |          0 |
    store   $19, [$17 + 3]              # |         79 |        158 |         79 |          0 |          0 |          0 |
    store   $17, [$tmp + 0]             # |         79 |         79 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.37003               # |         79 |         83 |          0 |          0 |          0 |          2 |
be_else.37003:
.count move_args
    mov     $19, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $17
    load    [$14 + 3], $19
    load    [$14 + 4], $20
    load    [$14 + 4], $21
    load    [$14 + 4], $22
    load    [$15 + 0], $23
    load    [$15 + 1], $24
    load    [$15 + 2], $25
    fmul    $23, $23, $26
    fmul    $24, $24, $27
    load    [$20 + 0], $20
    load    [$21 + 1], $21
    fmul    $25, $25, $28
    fmul    $26, $20, $20
    fmul    $27, $21, $21
    load    [$22 + 2], $22
    fmul    $24, $25, $26
    load    [$14 + 9], $27
    fmul    $28, $22, $22
    fadd    $20, $21, $20
    fmul    $25, $23, $25
    load    [$27 + 0], $21
    cmp     $19, 0
    load    [$14 + 9], $27
    fmul    $23, $24, $23
    fmul    $26, $21, $21
    fadd    $20, $22, $20
    be      bne_cont.37005
bne_then.37005:
    fadd    $20, $21, $20
    load    [$27 + 1], $21
    load    [$14 + 9], $22
    fmul    $25, $21, $21
    load    [$22 + 2], $22
    fmul    $23, $22, $22
    fadd    $20, $21, $20
    fadd    $20, $22, $20
bne_cont.37005:
    store   $20, [$17 + 0]
    load    [$14 + 4], $21
    load    [$14 + 4], $22
    load    [$14 + 4], $23
    load    [$15 + 0], $24
    load    [$21 + 0], $21
    load    [$15 + 1], $25
    load    [$22 + 1], $22
    fmul    $24, $21, $21
    load    [$15 + 2], $24
    load    [$23 + 2], $23
    fmul    $25, $22, $22
    load    [$14 + 9], $26
    fmul    $24, $23, $23
    fneg    $21, $21
    load    [$14 + 9], $27
    cmp     $19, 0
    fneg    $22, $22
    load    [$26 + 1], $26
    fneg    $23, $23
.count storer
    add     $13, $11, $tmp
    bne     be_else.37006
be_then.37006:
    fcmp    $20, $zero
    store   $21, [$17 + 1]
    store   $22, [$17 + 2]
    store   $23, [$17 + 3]
    bne     be_else.37007
be_then.37007:
    store   $17, [$tmp + 0]
.count b_cont
    b       be_cont.37006
be_else.37007:
    finv    $20, $19
    store   $19, [$17 + 4]
    store   $17, [$tmp + 0]
.count b_cont
    b       be_cont.37006
be_else.37006:
    fmul    $24, $26, $19
    load    [$27 + 2], $24
    fcmp    $20, $zero
    fmul    $25, $24, $25
    fadd    $19, $25, $19
    fmul    $19, $39, $19
    fsub    $21, $19, $19
    store   $19, [$17 + 1]
    load    [$14 + 9], $19
    load    [$15 + 2], $21
    load    [$15 + 0], $25
    load    [$19 + 0], $19
    fmul    $25, $24, $24
    fmul    $21, $19, $21
    fadd    $21, $24, $21
    finv    $20, $24
    fmul    $21, $39, $21
    fsub    $22, $21, $21
    store   $21, [$17 + 2]
    load    [$15 + 1], $21
    load    [$15 + 0], $22
    fmul    $21, $19, $19
    fmul    $22, $26, $21
    fadd    $19, $21, $19
    fmul    $19, $39, $19
    fsub    $23, $19, $19
    store   $19, [$17 + 3]
    bne     be_else.37008
be_then.37008:
    store   $17, [$tmp + 0]
.count b_cont
    b       be_cont.37008
be_else.37008:
    store   $24, [$17 + 4]
    store   $17, [$tmp + 0]
be_cont.37008:
be_cont.37006:
be_cont.37003:
    sub     $11, 1, $3                  # |        147 |        153 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $12, $2                     # |        147 |        147 |          0 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |        147 |        153 |          0 |          1 |          0 |          0 |
.count stack_move
    add     $sp, 4, $sp                 # |        147 |        147 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $18, $2                     # |        147 |        147 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |        147 |        171 |          0 |          0 |          4 |          0 |
    sub     $1, 1, $3                   # |        147 |        433 |        286 |          0 |          0 |          0 |
    b       init_dirvec_constants.3044  # |        147 |        163 |          0 |          0 |          0 |          8 |
bge_else.36986:
.count stack_move
    add     $sp, 4, $sp
    sub     $10, 1, $3
.count move_args
    mov     $18, $2
    b       init_dirvec_constants.3044
bge_else.36985:
.count stack_move
    add     $sp, 4, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_else.36984:
.count stack_move
    add     $sp, 4, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_else.36960:
.count stack_move
    add     $sp, 4, $sp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_else.36936:
    ret                                 # |          2 |          8 |          0 |          1 |          0 |          0 |
.end init_dirvec_constants

######################################################################
.begin init_vecset_constants
init_vecset_constants.3047:
    cmp     $2, 0                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    bl      bge_else.37009              # |          2 |          4 |          2 |          0 |          0 |          0 |
bge_then.37009:
.count stack_move
    sub     $sp, 5, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $11                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + $2], $10# |          1 |          7 |          0 |          0 |          1 |          0 |
    li      6, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $11, 0                      # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 119], $10            # |          1 |          7 |          0 |          0 |          1 |          0 |
    bl      bge_cont.37010              # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_then.37010:
    load    [min_caml_objects + $11], $13# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $12              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 0], $14              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 1], $16              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      4, $15                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      5, $17                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $16, 1                      # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.37011               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.37011:
    call    min_caml_create_array
    load    [$14 + 0], $18
.count move_ret
    mov     $1, $17
    load    [$13 + 6], $19
    fcmp    $18, $zero
    load    [$13 + 4], $20
    bne     be_else.37012
be_then.37012:
    store   $zero, [$17 + 1]
.count b_cont
    b       be_cont.37012
be_else.37012:
    fcmp    $zero, $18
    bg      ble_else.37013
ble_then.37013:
    li      0, $18
.count b_cont
    b       ble_cont.37013
ble_else.37013:
    li      1, $18
ble_cont.37013:
    cmp     $19, 0
    be      bne_cont.37014
bne_then.37014:
    cmp     $18, 0
    bne     be_else.37015
be_then.37015:
    li      1, $18
.count b_cont
    b       be_cont.37015
be_else.37015:
    li      0, $18
be_cont.37015:
bne_cont.37014:
    cmp     $18, 0
    load    [$20 + 0], $19
    bne     be_else.37016
be_then.37016:
    fneg    $19, $18
    store   $18, [$17 + 0]
    load    [$14 + 0], $18
    finv    $18, $18
    store   $18, [$17 + 1]
.count b_cont
    b       be_cont.37016
be_else.37016:
    store   $19, [$17 + 0]
    load    [$14 + 0], $18
    finv    $18, $18
    store   $18, [$17 + 1]
be_cont.37016:
be_cont.37012:
    load    [$14 + 1], $18
    load    [$13 + 6], $19
    load    [$13 + 4], $20
    fcmp    $18, $zero
    bne     be_else.37017
be_then.37017:
    store   $zero, [$17 + 3]
.count b_cont
    b       be_cont.37017
be_else.37017:
    fcmp    $zero, $18
    bg      ble_else.37018
ble_then.37018:
    li      0, $18
.count b_cont
    b       ble_cont.37018
ble_else.37018:
    li      1, $18
ble_cont.37018:
    cmp     $19, 0
    be      bne_cont.37019
bne_then.37019:
    cmp     $18, 0
    bne     be_else.37020
be_then.37020:
    li      1, $18
.count b_cont
    b       be_cont.37020
be_else.37020:
    li      0, $18
be_cont.37020:
bne_cont.37019:
    cmp     $18, 0
    load    [$20 + 1], $19
    bne     be_else.37021
be_then.37021:
    fneg    $19, $18
    store   $18, [$17 + 2]
    load    [$14 + 1], $18
    finv    $18, $18
    store   $18, [$17 + 3]
.count b_cont
    b       be_cont.37021
be_else.37021:
    store   $19, [$17 + 2]
    load    [$14 + 1], $18
    finv    $18, $18
    store   $18, [$17 + 3]
be_cont.37021:
be_cont.37017:
    load    [$14 + 2], $18
    load    [$13 + 6], $19
    load    [$13 + 4], $20
    fcmp    $18, $zero
    bne     be_else.37022
be_then.37022:
.count storer
    add     $12, $11, $tmp
    store   $zero, [$17 + 5]
    store   $17, [$tmp + 0]
    sub     $11, 1, $3
.count move_args
    mov     $10, $2
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37011
be_else.37022:
    fcmp    $zero, $18
    bg      ble_else.37023
ble_then.37023:
    li      0, $18
.count b_cont
    b       ble_cont.37023
ble_else.37023:
    li      1, $18
ble_cont.37023:
    cmp     $19, 0
    be      bne_cont.37024
bne_then.37024:
    cmp     $18, 0
    bne     be_else.37025
be_then.37025:
    li      1, $18
.count b_cont
    b       be_cont.37025
be_else.37025:
    li      0, $18
be_cont.37025:
bne_cont.37024:
    cmp     $18, 0
    load    [$20 + 2], $19
.count move_args
    mov     $10, $2
    sub     $11, 1, $3
.count storer
    add     $12, $11, $tmp
    bne     be_else.37026
be_then.37026:
    fneg    $19, $18
    store   $18, [$17 + 4]
    load    [$14 + 2], $18
    store   $17, [$tmp + 0]
    finv    $18, $18
    store   $18, [$17 + 5]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37011
be_else.37026:
    store   $19, [$17 + 4]
    load    [$14 + 2], $18
    store   $17, [$tmp + 0]
    finv    $18, $18
    store   $18, [$17 + 5]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37011
be_else.37011:
    cmp     $16, 2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.37027               # |          1 |          2 |          1 |          0 |          0 |          0 |
be_then.37027:
.count move_args
    mov     $15, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$13 + 4], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$14 + 0], $21              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$18 + 0], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$14 + 1], $22              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$19 + 1], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $21, $18, $18               # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$14 + 2], $21              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $22, $19, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$20 + 2], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $11, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $21, $20, $20               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $11, $tmp              # |          1 |          7 |          0 |          1 |          0 |          0 |
    fadd    $18, $20, $18               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fcmp    $18, $zero                  # |          1 |          5 |          4 |          0 |          0 |          0 |
    bg      ble_else.37028              # |          1 |          2 |          1 |          0 |          0 |          0 |
ble_then.37028:
    store   $zero, [$17 + 0]            # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $17, [$tmp + 0]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          1 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.37027               # |          1 |          3 |          0 |          0 |          0 |          1 |
ble_else.37028:
    finv    $18, $18
    fneg    $18, $19
    store   $19, [$17 + 0]
    load    [$13 + 4], $19
    load    [$19 + 0], $19
    fmul    $19, $18, $19
    fneg    $19, $19
    store   $19, [$17 + 1]
    load    [$13 + 4], $19
    load    [$19 + 1], $19
    fmul    $19, $18, $19
    fneg    $19, $19
    store   $19, [$17 + 2]
    load    [$13 + 4], $19
    load    [$19 + 2], $19
    store   $17, [$tmp + 0]
    fmul    $19, $18, $18
    fneg    $18, $18
    store   $18, [$17 + 3]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37027
be_else.37027:
.count move_args
    mov     $17, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $17
    load    [$13 + 3], $18
    load    [$13 + 4], $19
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$14 + 0], $22
    load    [$14 + 1], $23
    load    [$14 + 2], $24
    fmul    $22, $22, $25
    fmul    $23, $23, $26
    load    [$19 + 0], $19
    load    [$20 + 1], $20
    fmul    $24, $24, $27
    fmul    $25, $19, $19
    fmul    $26, $20, $20
    load    [$21 + 2], $21
    fmul    $23, $24, $25
    load    [$13 + 9], $26
    fmul    $27, $21, $21
    fadd    $19, $20, $19
    fmul    $24, $22, $24
    load    [$26 + 0], $20
    cmp     $18, 0
    load    [$13 + 9], $26
    fmul    $22, $23, $22
    fmul    $25, $20, $20
    fadd    $19, $21, $19
    be      bne_cont.37029
bne_then.37029:
    fadd    $19, $20, $19
    load    [$26 + 1], $20
    load    [$13 + 9], $21
    fmul    $24, $20, $20
    load    [$21 + 2], $21
    fmul    $22, $21, $21
    fadd    $19, $20, $19
    fadd    $19, $21, $19
bne_cont.37029:
    store   $19, [$17 + 0]
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$13 + 4], $22
    load    [$14 + 0], $23
    load    [$20 + 0], $20
    load    [$14 + 1], $24
    load    [$21 + 1], $21
    fmul    $23, $20, $20
    load    [$14 + 2], $23
    load    [$22 + 2], $22
    fmul    $24, $21, $21
    load    [$13 + 9], $25
    fmul    $23, $22, $22
    fneg    $20, $20
    load    [$13 + 9], $26
    cmp     $18, 0
    fneg    $21, $21
    load    [$25 + 1], $25
    fneg    $22, $22
.count storer
    add     $12, $11, $tmp
    sub     $11, 1, $3
.count move_args
    mov     $10, $2
    bne     be_else.37030
be_then.37030:
    fcmp    $19, $zero
    store   $20, [$17 + 1]
    store   $21, [$17 + 2]
    store   $22, [$17 + 3]
    store   $17, [$tmp + 0]
    bne     be_else.37031
be_then.37031:
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37030
be_else.37031:
    finv    $19, $18
    store   $18, [$17 + 4]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37030
be_else.37030:
    fmul    $23, $25, $18
    load    [$26 + 2], $23
    fcmp    $19, $zero
    fmul    $24, $23, $24
    fadd    $18, $24, $18
    fmul    $18, $39, $18
    fsub    $20, $18, $18
    store   $18, [$17 + 1]
    load    [$13 + 9], $18
    load    [$14 + 2], $20
    load    [$14 + 0], $24
    load    [$18 + 0], $18
    fmul    $24, $23, $23
    fmul    $20, $18, $20
    fadd    $20, $23, $20
    finv    $19, $23
    fmul    $20, $39, $20
    fsub    $21, $20, $20
    store   $20, [$17 + 2]
    load    [$14 + 1], $20
    load    [$14 + 0], $21
    fmul    $20, $18, $18
    fmul    $21, $25, $20
    fadd    $18, $20, $18
    fmul    $18, $39, $18
    fsub    $22, $18, $18
    store   $18, [$17 + 3]
    bne     be_else.37032
be_then.37032:
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37032
be_else.37032:
    store   $23, [$17 + 4]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
be_cont.37032:
be_cont.37030:
be_cont.37027:
be_cont.37011:
bge_cont.37010:
.count stack_load
    load    [$sp + 1], $17              # |          1 |          7 |          0 |          1 |          0 |          0 |
    sub     $41, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$17 + 118], $2             # |          1 |          8 |          1 |          0 |          1 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $11                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$17 + 117], $10            # |          1 |          7 |          0 |          0 |          1 |          0 |
    cmp     $11, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      6, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$10 + 1], $12              # |          1 |          1 |          0 |          0 |          0 |          0 |
    bl      bge_cont.37033              # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_then.37033:
    load    [min_caml_objects + $11], $13# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 0], $14              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      4, $15                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 1], $16              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $18                      # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    cmp     $16, 1                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.37034               # |          1 |          4 |          1 |          0 |          0 |          1 |
be_then.37034:
    call    min_caml_create_array
    load    [$14 + 0], $19
.count move_ret
    mov     $1, $18
    load    [$13 + 6], $20
    fcmp    $19, $zero
    load    [$13 + 4], $21
    bne     be_else.37035
be_then.37035:
    store   $zero, [$18 + 1]
.count b_cont
    b       be_cont.37035
be_else.37035:
    fcmp    $zero, $19
    bg      ble_else.37036
ble_then.37036:
    li      0, $19
.count b_cont
    b       ble_cont.37036
ble_else.37036:
    li      1, $19
ble_cont.37036:
    cmp     $20, 0
    be      bne_cont.37037
bne_then.37037:
    cmp     $19, 0
    bne     be_else.37038
be_then.37038:
    li      1, $19
.count b_cont
    b       be_cont.37038
be_else.37038:
    li      0, $19
be_cont.37038:
bne_cont.37037:
    cmp     $19, 0
    load    [$21 + 0], $20
    bne     be_else.37039
be_then.37039:
    fneg    $20, $19
    store   $19, [$18 + 0]
    load    [$14 + 0], $19
    finv    $19, $19
    store   $19, [$18 + 1]
.count b_cont
    b       be_cont.37039
be_else.37039:
    store   $20, [$18 + 0]
    load    [$14 + 0], $19
    finv    $19, $19
    store   $19, [$18 + 1]
be_cont.37039:
be_cont.37035:
    load    [$14 + 1], $19
    load    [$13 + 6], $20
    load    [$13 + 4], $21
    fcmp    $19, $zero
    bne     be_else.37040
be_then.37040:
    store   $zero, [$18 + 3]
.count b_cont
    b       be_cont.37040
be_else.37040:
    fcmp    $zero, $19
    bg      ble_else.37041
ble_then.37041:
    li      0, $19
.count b_cont
    b       ble_cont.37041
ble_else.37041:
    li      1, $19
ble_cont.37041:
    cmp     $20, 0
    be      bne_cont.37042
bne_then.37042:
    cmp     $19, 0
    bne     be_else.37043
be_then.37043:
    li      1, $19
.count b_cont
    b       be_cont.37043
be_else.37043:
    li      0, $19
be_cont.37043:
bne_cont.37042:
    cmp     $19, 0
    load    [$21 + 1], $20
    bne     be_else.37044
be_then.37044:
    fneg    $20, $19
    store   $19, [$18 + 2]
    load    [$14 + 1], $19
    finv    $19, $19
    store   $19, [$18 + 3]
.count b_cont
    b       be_cont.37044
be_else.37044:
    store   $20, [$18 + 2]
    load    [$14 + 1], $19
    finv    $19, $19
    store   $19, [$18 + 3]
be_cont.37044:
be_cont.37040:
    load    [$14 + 2], $19
    load    [$13 + 6], $20
    load    [$13 + 4], $21
    fcmp    $19, $zero
    bne     be_else.37045
be_then.37045:
.count storer
    add     $12, $11, $tmp
    store   $zero, [$18 + 5]
    store   $18, [$tmp + 0]
    sub     $11, 1, $3
.count move_args
    mov     $10, $2
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37034
be_else.37045:
    fcmp    $zero, $19
    bg      ble_else.37046
ble_then.37046:
    li      0, $19
.count b_cont
    b       ble_cont.37046
ble_else.37046:
    li      1, $19
ble_cont.37046:
    cmp     $20, 0
    be      bne_cont.37047
bne_then.37047:
    cmp     $19, 0
    bne     be_else.37048
be_then.37048:
    li      1, $19
.count b_cont
    b       be_cont.37048
be_else.37048:
    li      0, $19
be_cont.37048:
bne_cont.37047:
    cmp     $19, 0
    load    [$21 + 2], $20
.count move_args
    mov     $10, $2
    sub     $11, 1, $3
.count storer
    add     $12, $11, $tmp
    bne     be_else.37049
be_then.37049:
    fneg    $20, $19
    store   $19, [$18 + 4]
    load    [$14 + 2], $19
    store   $18, [$tmp + 0]
    finv    $19, $19
    store   $19, [$18 + 5]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37034
be_else.37049:
    store   $20, [$18 + 4]
    load    [$14 + 2], $19
    store   $18, [$tmp + 0]
    finv    $19, $19
    store   $19, [$18 + 5]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37034
be_else.37034:
    cmp     $16, 2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.37050               # |          1 |          2 |          1 |          0 |          0 |          0 |
be_then.37050:
.count move_args
    mov     $15, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $20              # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$13 + 4], $21              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$14 + 0], $22              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$19 + 0], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$14 + 1], $23              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$20 + 1], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $22, $19, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$14 + 2], $22              # |          1 |          7 |          0 |          0 |          1 |          0 |
    fmul    $23, $20, $20               # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$21 + 2], $21              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $11, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $22, $21, $21               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $19, $20, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $11, $tmp              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $19, $21, $19               # |          1 |          4 |          3 |          0 |          0 |          0 |
    fcmp    $19, $zero                  # |          1 |          7 |          0 |          1 |          0 |          0 |
    bg      ble_else.37051              # |          1 |          2 |          1 |          0 |          0 |          0 |
ble_then.37051:
    store   $zero, [$18 + 0]            # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$tmp + 0]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          1 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.37050               # |          1 |          3 |          0 |          0 |          0 |          1 |
ble_else.37051:
    finv    $19, $19
    fneg    $19, $20
    store   $20, [$18 + 0]
    load    [$13 + 4], $20
    load    [$20 + 0], $20
    fmul    $20, $19, $20
    fneg    $20, $20
    store   $20, [$18 + 1]
    load    [$13 + 4], $20
    load    [$20 + 1], $20
    fmul    $20, $19, $20
    fneg    $20, $20
    store   $20, [$18 + 2]
    load    [$13 + 4], $20
    load    [$20 + 2], $20
    store   $18, [$tmp + 0]
    fmul    $20, $19, $19
    fneg    $19, $19
    store   $19, [$18 + 3]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37050
be_else.37050:
.count move_args
    mov     $18, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $18
    load    [$13 + 3], $19
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$13 + 4], $22
    load    [$14 + 0], $23
    load    [$14 + 1], $24
    load    [$14 + 2], $25
    fmul    $23, $23, $26
    fmul    $24, $24, $27
    load    [$20 + 0], $20
    load    [$21 + 1], $21
    fmul    $25, $25, $28
    fmul    $26, $20, $20
    fmul    $27, $21, $21
    load    [$22 + 2], $22
    fmul    $24, $25, $26
    load    [$13 + 9], $27
    fmul    $28, $22, $22
    fadd    $20, $21, $20
    fmul    $25, $23, $25
    load    [$27 + 0], $21
    cmp     $19, 0
    load    [$13 + 9], $27
    fmul    $23, $24, $23
    fmul    $26, $21, $21
    fadd    $20, $22, $20
    be      bne_cont.37052
bne_then.37052:
    fadd    $20, $21, $20
    load    [$27 + 1], $21
    load    [$13 + 9], $22
    fmul    $25, $21, $21
    load    [$22 + 2], $22
    fmul    $23, $22, $22
    fadd    $20, $21, $20
    fadd    $20, $22, $20
bne_cont.37052:
    store   $20, [$18 + 0]
    load    [$13 + 4], $21
    load    [$13 + 4], $22
    load    [$13 + 4], $23
    load    [$14 + 0], $24
    load    [$21 + 0], $21
    load    [$14 + 1], $25
    load    [$22 + 1], $22
    fmul    $24, $21, $21
    load    [$14 + 2], $24
    load    [$23 + 2], $23
    fmul    $25, $22, $22
    load    [$13 + 9], $26
    fmul    $24, $23, $23
    fneg    $21, $21
    load    [$13 + 9], $27
    cmp     $19, 0
    fneg    $22, $22
    load    [$26 + 1], $26
    fneg    $23, $23
.count storer
    add     $12, $11, $tmp
    sub     $11, 1, $3
.count move_args
    mov     $10, $2
    bne     be_else.37053
be_then.37053:
    fcmp    $20, $zero
    store   $21, [$18 + 1]
    store   $22, [$18 + 2]
    store   $23, [$18 + 3]
    store   $18, [$tmp + 0]
    bne     be_else.37054
be_then.37054:
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37053
be_else.37054:
    finv    $20, $19
    store   $19, [$18 + 4]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37053
be_else.37053:
    fmul    $24, $26, $19
    load    [$27 + 2], $24
    fcmp    $20, $zero
    fmul    $25, $24, $25
    fadd    $19, $25, $19
    fmul    $19, $39, $19
    fsub    $21, $19, $19
    store   $19, [$18 + 1]
    load    [$13 + 9], $19
    load    [$14 + 2], $21
    load    [$14 + 0], $25
    load    [$19 + 0], $19
    fmul    $25, $24, $24
    fmul    $21, $19, $21
    fadd    $21, $24, $21
    finv    $20, $24
    fmul    $21, $39, $21
    fsub    $22, $21, $21
    store   $21, [$18 + 2]
    load    [$14 + 1], $21
    load    [$14 + 0], $22
    fmul    $21, $19, $19
    fmul    $22, $26, $21
    fadd    $19, $21, $19
    fmul    $19, $39, $19
    fsub    $23, $19, $19
    store   $19, [$18 + 3]
    bne     be_else.37055
be_then.37055:
    store   $18, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37055
be_else.37055:
    store   $24, [$18 + 4]
    store   $18, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
be_cont.37055:
be_cont.37053:
be_cont.37050:
be_cont.37034:
bge_cont.37033:
    li      116, $3                     # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $17, $2                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    init_dirvec_constants.3044  # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $17              # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $17, 1, $17                 # |          1 |          3 |          2 |          0 |          0 |          0 |
    cmp     $17, 0                      # |          1 |          2 |          1 |          0 |          0 |          0 |
    bl      bge_else.37056              # |          1 |          4 |          1 |          0 |          0 |          1 |
bge_then.37056:
.count stack_store
    store   $17, [$sp + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + $17], $17# |          1 |          7 |          0 |          0 |          1 |          0 |
    sub     $41, 1, $3                  # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$17 + 119], $2             # |          1 |          7 |          0 |          0 |          1 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $11                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$17 + 118], $10            # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $11, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      6, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $12              # |          1 |          7 |          0 |          0 |          1 |          0 |
    bl      bge_cont.37057              # |          1 |          7 |          0 |          1 |          0 |          0 |
bge_then.37057:
    load    [min_caml_objects + $11], $13# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 0], $14              # |          1 |          7 |          0 |          0 |          1 |          0 |
    li      4, $15                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 1], $16              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $18                      # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $16, 1                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.37058               # |          1 |          9 |          0 |          1 |          0 |          1 |
be_then.37058:
    call    min_caml_create_array
    load    [$14 + 0], $19
.count move_ret
    mov     $1, $18
    load    [$13 + 6], $20
    fcmp    $19, $zero
    load    [$13 + 4], $21
    bne     be_else.37059
be_then.37059:
    store   $zero, [$18 + 1]
.count b_cont
    b       be_cont.37059
be_else.37059:
    fcmp    $zero, $19
    bg      ble_else.37060
ble_then.37060:
    li      0, $19
.count b_cont
    b       ble_cont.37060
ble_else.37060:
    li      1, $19
ble_cont.37060:
    cmp     $20, 0
    be      bne_cont.37061
bne_then.37061:
    cmp     $19, 0
    bne     be_else.37062
be_then.37062:
    li      1, $19
.count b_cont
    b       be_cont.37062
be_else.37062:
    li      0, $19
be_cont.37062:
bne_cont.37061:
    cmp     $19, 0
    load    [$21 + 0], $20
    bne     be_else.37063
be_then.37063:
    fneg    $20, $19
    store   $19, [$18 + 0]
    load    [$14 + 0], $19
    finv    $19, $19
    store   $19, [$18 + 1]
.count b_cont
    b       be_cont.37063
be_else.37063:
    store   $20, [$18 + 0]
    load    [$14 + 0], $19
    finv    $19, $19
    store   $19, [$18 + 1]
be_cont.37063:
be_cont.37059:
    load    [$14 + 1], $19
    load    [$13 + 6], $20
    load    [$13 + 4], $21
    fcmp    $19, $zero
    bne     be_else.37064
be_then.37064:
    store   $zero, [$18 + 3]
.count b_cont
    b       be_cont.37064
be_else.37064:
    fcmp    $zero, $19
    bg      ble_else.37065
ble_then.37065:
    li      0, $19
.count b_cont
    b       ble_cont.37065
ble_else.37065:
    li      1, $19
ble_cont.37065:
    cmp     $20, 0
    be      bne_cont.37066
bne_then.37066:
    cmp     $19, 0
    bne     be_else.37067
be_then.37067:
    li      1, $19
.count b_cont
    b       be_cont.37067
be_else.37067:
    li      0, $19
be_cont.37067:
bne_cont.37066:
    cmp     $19, 0
    load    [$21 + 1], $20
    bne     be_else.37068
be_then.37068:
    fneg    $20, $19
    store   $19, [$18 + 2]
    load    [$14 + 1], $19
    finv    $19, $19
    store   $19, [$18 + 3]
.count b_cont
    b       be_cont.37068
be_else.37068:
    store   $20, [$18 + 2]
    load    [$14 + 1], $19
    finv    $19, $19
    store   $19, [$18 + 3]
be_cont.37068:
be_cont.37064:
    load    [$14 + 2], $19
    load    [$13 + 6], $20
    load    [$13 + 4], $21
    fcmp    $19, $zero
    bne     be_else.37069
be_then.37069:
.count storer
    add     $12, $11, $tmp
    store   $zero, [$18 + 5]
    store   $18, [$tmp + 0]
    sub     $11, 1, $3
.count move_args
    mov     $10, $2
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37058
be_else.37069:
    fcmp    $zero, $19
    bg      ble_else.37070
ble_then.37070:
    li      0, $19
.count b_cont
    b       ble_cont.37070
ble_else.37070:
    li      1, $19
ble_cont.37070:
    cmp     $20, 0
    be      bne_cont.37071
bne_then.37071:
    cmp     $19, 0
    bne     be_else.37072
be_then.37072:
    li      1, $19
.count b_cont
    b       be_cont.37072
be_else.37072:
    li      0, $19
be_cont.37072:
bne_cont.37071:
    cmp     $19, 0
    load    [$21 + 2], $20
.count move_args
    mov     $10, $2
    sub     $11, 1, $3
.count storer
    add     $12, $11, $tmp
    bne     be_else.37073
be_then.37073:
    fneg    $20, $19
    store   $19, [$18 + 4]
    load    [$14 + 2], $19
    store   $18, [$tmp + 0]
    finv    $19, $19
    store   $19, [$18 + 5]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37058
be_else.37073:
    store   $20, [$18 + 4]
    load    [$14 + 2], $19
    store   $18, [$tmp + 0]
    finv    $19, $19
    store   $19, [$18 + 5]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37058
be_else.37058:
    cmp     $16, 2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.37074               # |          1 |          2 |          1 |          0 |          0 |          0 |
be_then.37074:
.count move_args
    mov     $15, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $21              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$14 + 0], $22              # |          1 |         13 |          0 |          1 |          1 |          0 |
    load    [$19 + 0], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$14 + 1], $23              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$20 + 1], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $22, $19, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$14 + 2], $22              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $23, $20, $20               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$21 + 2], $21              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    sub     $11, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $22, $21, $21               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $19, $20, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $11, $tmp              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $19, $21, $19               # |          1 |          4 |          3 |          0 |          0 |          0 |
    fcmp    $19, $zero                  # |          1 |          5 |          4 |          0 |          0 |          0 |
    bg      ble_else.37075              # |          1 |          4 |          1 |          0 |          0 |          1 |
ble_then.37075:
    store   $zero, [$18 + 0]
    store   $18, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37074
ble_else.37075:
    finv    $19, $19                    # |          1 |          7 |          0 |          1 |          0 |          0 |
    fneg    $19, $20                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $20, [$18 + 0]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    load    [$13 + 4], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$20 + 0], $20              # |          1 |          7 |          0 |          1 |          0 |          0 |
    fmul    $20, $19, $20               # |          1 |          3 |          2 |          0 |          0 |          0 |
    fneg    $20, $20                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $20, [$18 + 1]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    load    [$13 + 4], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$20 + 1], $20              # |          1 |          3 |          2 |          0 |          0 |          0 |
    fmul    $20, $19, $20               # |          1 |          3 |          2 |          0 |          0 |          0 |
    fneg    $20, $20                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $20, [$18 + 2]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$13 + 4], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$20 + 2], $20              # |          1 |          3 |          2 |          0 |          0 |          0 |
    store   $18, [$tmp + 0]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $20, $19, $19               # |          1 |          2 |          1 |          0 |          0 |          0 |
    fneg    $19, $19                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $19, [$18 + 3]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          1 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.37074               # |          1 |          9 |          0 |          1 |          0 |          1 |
be_else.37074:
.count move_args
    mov     $18, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $18
    load    [$13 + 3], $19
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$13 + 4], $22
    load    [$14 + 0], $23
    load    [$14 + 1], $24
    load    [$14 + 2], $25
    fmul    $23, $23, $26
    fmul    $24, $24, $27
    load    [$20 + 0], $20
    load    [$21 + 1], $21
    fmul    $25, $25, $28
    fmul    $26, $20, $20
    fmul    $27, $21, $21
    load    [$22 + 2], $22
    fmul    $24, $25, $26
    load    [$13 + 9], $27
    fmul    $28, $22, $22
    fadd    $20, $21, $20
    fmul    $25, $23, $25
    load    [$27 + 0], $21
    cmp     $19, 0
    load    [$13 + 9], $27
    fmul    $23, $24, $23
    fmul    $26, $21, $21
    fadd    $20, $22, $20
    be      bne_cont.37076
bne_then.37076:
    fadd    $20, $21, $20
    load    [$27 + 1], $21
    load    [$13 + 9], $22
    fmul    $25, $21, $21
    load    [$22 + 2], $22
    fmul    $23, $22, $22
    fadd    $20, $21, $20
    fadd    $20, $22, $20
bne_cont.37076:
    store   $20, [$18 + 0]
    load    [$13 + 4], $21
    load    [$13 + 4], $22
    load    [$13 + 4], $23
    load    [$14 + 0], $24
    load    [$21 + 0], $21
    load    [$14 + 1], $25
    load    [$22 + 1], $22
    fmul    $24, $21, $21
    load    [$14 + 2], $24
    load    [$23 + 2], $23
    fmul    $25, $22, $22
    load    [$13 + 9], $26
    fmul    $24, $23, $23
    fneg    $21, $21
    load    [$13 + 9], $27
    cmp     $19, 0
    fneg    $22, $22
    load    [$26 + 1], $26
    fneg    $23, $23
.count storer
    add     $12, $11, $tmp
    sub     $11, 1, $3
.count move_args
    mov     $10, $2
    bne     be_else.37077
be_then.37077:
    fcmp    $20, $zero
    store   $21, [$18 + 1]
    store   $22, [$18 + 2]
    store   $23, [$18 + 3]
    store   $18, [$tmp + 0]
    bne     be_else.37078
be_then.37078:
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37077
be_else.37078:
    finv    $20, $19
    store   $19, [$18 + 4]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37077
be_else.37077:
    fmul    $24, $26, $19
    load    [$27 + 2], $24
    fcmp    $20, $zero
    fmul    $25, $24, $25
    fadd    $19, $25, $19
    fmul    $19, $39, $19
    fsub    $21, $19, $19
    store   $19, [$18 + 1]
    load    [$13 + 9], $19
    load    [$14 + 2], $21
    load    [$14 + 0], $25
    load    [$19 + 0], $19
    fmul    $25, $24, $24
    fmul    $21, $19, $21
    fadd    $21, $24, $21
    finv    $20, $24
    fmul    $21, $39, $21
    fsub    $22, $21, $21
    store   $21, [$18 + 2]
    load    [$14 + 1], $21
    load    [$14 + 0], $22
    fmul    $21, $19, $19
    fmul    $22, $26, $21
    fadd    $19, $21, $19
    fmul    $19, $39, $19
    fsub    $23, $19, $19
    store   $19, [$18 + 3]
    bne     be_else.37079
be_then.37079:
    store   $18, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37079
be_else.37079:
    store   $24, [$18 + 4]
    store   $18, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
be_cont.37079:
be_cont.37077:
be_cont.37074:
be_cont.37058:
bge_cont.37057:
    li      117, $3                     # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $17, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    init_dirvec_constants.3044  # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $10              # |          1 |          7 |          0 |          1 |          0 |          0 |
    sub     $10, 1, $10                 # |          1 |          3 |          2 |          0 |          0 |          0 |
    cmp     $10, 0                      # |          1 |          2 |          1 |          0 |          0 |          0 |
    bl      bge_else.37080              # |          1 |          2 |          1 |          0 |          0 |          0 |
bge_then.37080:
.count stack_store
    store   $10, [$sp + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $11                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + $10], $10# |          1 |          7 |          0 |          0 |          1 |          0 |
    li      6, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $11, 0                      # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_objects + $11], $12# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 119], $10            # |          1 |          7 |          0 |          0 |          1 |          0 |
    bl      bge_cont.37081              # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_then.37081:
    load    [$12 + 1], $14              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $13              # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [$10 + 0], $15              # |          1 |          7 |          0 |          0 |          1 |          0 |
    cmp     $14, 1                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      4, $16                      # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.37082               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.37082:
    call    min_caml_create_array
    load    [$15 + 0], $18
.count move_ret
    mov     $1, $17
    load    [$12 + 6], $19
    fcmp    $18, $zero
    load    [$12 + 4], $20
    bne     be_else.37083
be_then.37083:
    store   $zero, [$17 + 1]
.count b_cont
    b       be_cont.37083
be_else.37083:
    fcmp    $zero, $18
    bg      ble_else.37084
ble_then.37084:
    li      0, $18
.count b_cont
    b       ble_cont.37084
ble_else.37084:
    li      1, $18
ble_cont.37084:
    cmp     $19, 0
    be      bne_cont.37085
bne_then.37085:
    cmp     $18, 0
    bne     be_else.37086
be_then.37086:
    li      1, $18
.count b_cont
    b       be_cont.37086
be_else.37086:
    li      0, $18
be_cont.37086:
bne_cont.37085:
    cmp     $18, 0
    load    [$20 + 0], $19
    bne     be_else.37087
be_then.37087:
    fneg    $19, $18
    store   $18, [$17 + 0]
    load    [$15 + 0], $18
    finv    $18, $18
    store   $18, [$17 + 1]
.count b_cont
    b       be_cont.37087
be_else.37087:
    store   $19, [$17 + 0]
    load    [$15 + 0], $18
    finv    $18, $18
    store   $18, [$17 + 1]
be_cont.37087:
be_cont.37083:
    load    [$15 + 1], $18
    load    [$12 + 6], $19
    load    [$12 + 4], $20
    fcmp    $18, $zero
    bne     be_else.37088
be_then.37088:
    store   $zero, [$17 + 3]
.count b_cont
    b       be_cont.37088
be_else.37088:
    fcmp    $zero, $18
    bg      ble_else.37089
ble_then.37089:
    li      0, $18
.count b_cont
    b       ble_cont.37089
ble_else.37089:
    li      1, $18
ble_cont.37089:
    cmp     $19, 0
    be      bne_cont.37090
bne_then.37090:
    cmp     $18, 0
    bne     be_else.37091
be_then.37091:
    li      1, $18
.count b_cont
    b       be_cont.37091
be_else.37091:
    li      0, $18
be_cont.37091:
bne_cont.37090:
    cmp     $18, 0
    load    [$20 + 1], $19
    bne     be_else.37092
be_then.37092:
    fneg    $19, $18
    store   $18, [$17 + 2]
    load    [$15 + 1], $18
    finv    $18, $18
    store   $18, [$17 + 3]
.count b_cont
    b       be_cont.37092
be_else.37092:
    store   $19, [$17 + 2]
    load    [$15 + 1], $18
    finv    $18, $18
    store   $18, [$17 + 3]
be_cont.37092:
be_cont.37088:
    load    [$15 + 2], $18
    load    [$12 + 6], $19
    load    [$12 + 4], $20
    fcmp    $18, $zero
    bne     be_else.37093
be_then.37093:
.count storer
    add     $13, $11, $tmp
    store   $zero, [$17 + 5]
    store   $17, [$tmp + 0]
    sub     $11, 1, $3
.count move_args
    mov     $10, $2
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37082
be_else.37093:
    fcmp    $zero, $18
    bg      ble_else.37094
ble_then.37094:
    li      0, $18
.count b_cont
    b       ble_cont.37094
ble_else.37094:
    li      1, $18
ble_cont.37094:
    cmp     $19, 0
    be      bne_cont.37095
bne_then.37095:
    cmp     $18, 0
    bne     be_else.37096
be_then.37096:
    li      1, $18
.count b_cont
    b       be_cont.37096
be_else.37096:
    li      0, $18
be_cont.37096:
bne_cont.37095:
    cmp     $18, 0
    load    [$20 + 2], $19
.count move_args
    mov     $10, $2
    sub     $11, 1, $3
.count storer
    add     $13, $11, $tmp
    bne     be_else.37097
be_then.37097:
    fneg    $19, $18
    store   $18, [$17 + 4]
    load    [$15 + 2], $18
    store   $17, [$tmp + 0]
    finv    $18, $18
    store   $18, [$17 + 5]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37082
be_else.37097:
    store   $19, [$17 + 4]
    load    [$15 + 2], $18
    store   $17, [$tmp + 0]
    finv    $18, $18
    store   $18, [$17 + 5]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37082
be_else.37082:
    cmp     $14, 2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.37098               # |          1 |          2 |          1 |          0 |          0 |          0 |
be_then.37098:
.count move_args
    mov     $16, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$12 + 4], $18              # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$12 + 4], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$12 + 4], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$15 + 0], $21              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$18 + 0], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$15 + 1], $22              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$19 + 1], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $21, $18, $18               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$15 + 2], $21              # |          1 |          7 |          0 |          1 |          0 |          0 |
    fmul    $22, $19, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$20 + 2], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $11, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $21, $20, $20               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $13, $11, $tmp              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $18, $20, $18               # |          1 |          7 |          0 |          1 |          0 |          0 |
    fcmp    $18, $zero                  # |          1 |          5 |          4 |          0 |          0 |          0 |
    bg      ble_else.37099              # |          1 |          2 |          1 |          0 |          0 |          0 |
ble_then.37099:
    store   $zero, [$17 + 0]            # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $17, [$tmp + 0]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          1 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.37098               # |          1 |          3 |          0 |          0 |          0 |          1 |
ble_else.37099:
    finv    $18, $18
    fneg    $18, $19
    store   $19, [$17 + 0]
    load    [$12 + 4], $19
    load    [$19 + 0], $19
    fmul    $19, $18, $19
    fneg    $19, $19
    store   $19, [$17 + 1]
    load    [$12 + 4], $19
    load    [$19 + 1], $19
    fmul    $19, $18, $19
    fneg    $19, $19
    store   $19, [$17 + 2]
    load    [$12 + 4], $19
    load    [$19 + 2], $19
    store   $17, [$tmp + 0]
    fmul    $19, $18, $18
    fneg    $18, $18
    store   $18, [$17 + 3]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37098
be_else.37098:
    li      5, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $17
    load    [$12 + 3], $18
    load    [$12 + 4], $19
    load    [$12 + 4], $20
    load    [$12 + 4], $21
    load    [$15 + 0], $22
    load    [$15 + 1], $23
    load    [$15 + 2], $24
    fmul    $22, $22, $25
    fmul    $23, $23, $26
    load    [$19 + 0], $19
    load    [$20 + 1], $20
    fmul    $24, $24, $27
    fmul    $25, $19, $19
    fmul    $26, $20, $20
    load    [$21 + 2], $21
    fmul    $23, $24, $25
    load    [$12 + 9], $26
    fmul    $27, $21, $21
    fadd    $19, $20, $19
    fmul    $24, $22, $24
    load    [$26 + 0], $20
    cmp     $18, 0
    load    [$12 + 9], $26
    fmul    $22, $23, $22
    fmul    $25, $20, $20
    fadd    $19, $21, $19
    be      bne_cont.37100
bne_then.37100:
    fadd    $19, $20, $19
    load    [$26 + 1], $20
    load    [$12 + 9], $21
    fmul    $24, $20, $20
    load    [$21 + 2], $21
    fmul    $22, $21, $21
    fadd    $19, $20, $19
    fadd    $19, $21, $19
bne_cont.37100:
    store   $19, [$17 + 0]
    load    [$12 + 4], $20
    load    [$12 + 4], $21
    load    [$12 + 4], $22
    load    [$15 + 0], $23
    load    [$20 + 0], $20
    load    [$15 + 1], $24
    load    [$21 + 1], $21
    fmul    $23, $20, $20
    load    [$15 + 2], $23
    load    [$22 + 2], $22
    fmul    $24, $21, $21
    load    [$12 + 9], $25
    fmul    $23, $22, $22
    fneg    $20, $20
    load    [$12 + 9], $26
    cmp     $18, 0
    fneg    $21, $21
    load    [$25 + 1], $25
    fneg    $22, $22
.count storer
    add     $13, $11, $tmp
    sub     $11, 1, $3
.count move_args
    mov     $10, $2
    bne     be_else.37101
be_then.37101:
    fcmp    $19, $zero
    store   $20, [$17 + 1]
    store   $21, [$17 + 2]
    store   $22, [$17 + 3]
    store   $17, [$tmp + 0]
    bne     be_else.37102
be_then.37102:
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37101
be_else.37102:
    finv    $19, $18
    store   $18, [$17 + 4]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37101
be_else.37101:
    fmul    $23, $25, $18
    load    [$26 + 2], $23
    fcmp    $19, $zero
    fmul    $24, $23, $24
    fadd    $18, $24, $18
    fmul    $18, $39, $18
    fsub    $20, $18, $18
    store   $18, [$17 + 1]
    load    [$12 + 9], $18
    load    [$15 + 2], $20
    load    [$15 + 0], $24
    load    [$18 + 0], $18
    fmul    $24, $23, $23
    fmul    $20, $18, $20
    fadd    $20, $23, $20
    finv    $19, $23
    fmul    $20, $39, $20
    fsub    $21, $20, $20
    store   $20, [$17 + 2]
    load    [$15 + 1], $20
    load    [$15 + 0], $21
    fmul    $20, $18, $18
    fmul    $21, $25, $20
    fadd    $18, $20, $18
    fmul    $18, $39, $18
    fsub    $22, $18, $18
    store   $18, [$17 + 3]
    bne     be_else.37103
be_then.37103:
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37103
be_else.37103:
    store   $23, [$17 + 4]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
be_cont.37103:
be_cont.37101:
be_cont.37098:
be_cont.37082:
bge_cont.37081:
    li      118, $3                     # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $2               # |          1 |          7 |          0 |          0 |          1 |          0 |
    call    init_dirvec_constants.3044  # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $29              # |          1 |          7 |          0 |          0 |          1 |          0 |
    li      119, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $29, 1, $29                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $29, 0                      # |          1 |          2 |          1 |          0 |          0 |          0 |
    bl      bge_else.37104              # |          1 |          2 |          1 |          0 |          0 |          0 |
bge_then.37104:
    load    [min_caml_dirvecs + $29], $2# |          1 |         13 |          0 |          1 |          1 |          0 |
    call    init_dirvec_constants.3044  # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 5, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $29, 1, $2                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       init_vecset_constants.3047  # |          1 |          3 |          0 |          0 |          0 |          1 |
bge_else.37104:
.count stack_move
    add     $sp, 5, $sp
    ret
bge_else.37080:
.count stack_move
    add     $sp, 5, $sp
    ret
bge_else.37056:
.count stack_move
    add     $sp, 5, $sp
    ret
bge_else.37009:
    ret                                 # |          1 |          7 |          0 |          1 |          0 |          0 |
.end init_vecset_constants

######################################################################
.begin setup_reflections
setup_reflections.3064:
    cmp     $2, 0                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    bl      bge_else.37105              # |          1 |          2 |          1 |          0 |          0 |          0 |
bge_then.37105:
    load    [min_caml_objects + $2], $10# |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $11                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $12                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$10 + 2], $13              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 7], $14              # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [$10 + 1], $15              # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $13, 2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.37106               # |          1 |          4 |          1 |          0 |          0 |          1 |
be_then.37106:
    load    [$14 + 0], $13              # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [$10 + 7], $14              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 4], $16              # |          1 |          7 |          0 |          1 |          0 |          0 |
    fcmp    $36, $13                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    bg      ble_else.37107              # |          1 |          4 |          1 |          0 |          0 |          1 |
ble_then.37107:
    ret
ble_else.37107:
    cmp     $15, 1                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.37108               # |          1 |          4 |          1 |          0 |          0 |          1 |
be_then.37108:
.count stack_move
    sub     $sp, 14, $sp
.count move_args
    mov     $zero, $3
.count stack_store
    store   $14, [$sp + 0]
.count stack_store
    store   $2, [$sp + 1]
.count move_args
    mov     $11, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $10
    mov     $10, $3
.count stack_store
    store   $3, [$sp + 2]
.count move_args
    mov     $41, $2
    call    min_caml_create_array
.count stack_load
    load    [$sp + 2], $18
.count move_ret
    mov     $1, $17
    fneg    $56, $19
    store   $55, [$18 + 0]
    store   $19, [$18 + 1]
    fneg    $57, $20
    mov     $hp, $21
    mov     $21, $2
    store   $20, [$18 + 2]
    add     $hp, 2, $hp
    sub     $41, 1, $3
    store   $17, [$21 + 1]
    store   $18, [$21 + 0]
.count stack_store
    store   $2, [$sp + 3]
    call    iter_setup_dirvec_constants.2826
.count stack_load
    load    [$sp + 1], $10
    mov     $hp, $12
    add     $hp, 3, $hp
    sll     $10, 2, $10
    li      3, $2
.count stack_store
    store   $10, [$sp + 4]
.count stack_load
    load    [$sp + 0], $11
    add     $10, 1, $10
.count move_args
    mov     $zero, $3
    load    [$11 + 0], $11
    fsub    $36, $11, $11
.count stack_store
    store   $11, [$sp + 5]
.count stack_load
    load    [$sp + 3], $13
    store   $13, [$12 + 1]
    store   $10, [$12 + 0]
    store   $11, [$12 + 2]
    load    [min_caml_n_reflections + 0], $11
    mov     $12, $10
.count stack_store
    store   $11, [$sp + 6]
    store   $10, [min_caml_reflections + $11]
    call    min_caml_create_array
.count move_ret
    mov     $1, $3
.count stack_store
    store   $3, [$sp + 7]
.count move_args
    mov     $41, $2
    call    min_caml_create_array
.count stack_load
    load    [$sp + 7], $21
.count move_ret
    mov     $1, $17
    fneg    $55, $18
    sub     $41, 1, $3
    store   $18, [$21 + 0]
    store   $20, [$21 + 2]
    mov     $hp, $20
    mov     $20, $2
    store   $56, [$21 + 1]
    add     $hp, 2, $hp
    store   $17, [$20 + 1]
    store   $21, [$20 + 0]
.count stack_store
    store   $2, [$sp + 8]
    call    iter_setup_dirvec_constants.2826
.count stack_load
    load    [$sp + 5], $13
.count stack_load
    load    [$sp + 6], $10
.count stack_load
    load    [$sp + 4], $11
    mov     $hp, $12
    store   $13, [$12 + 2]
.count stack_load
    load    [$sp + 8], $13
    add     $10, 1, $10
    add     $11, 2, $11
    add     $hp, 3, $hp
    store   $13, [$12 + 1]
    store   $11, [$12 + 0]
    mov     $12, $11
    store   $11, [min_caml_reflections + $10]
    li      3, $2
.count move_args
    mov     $zero, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $3
.count stack_store
    store   $3, [$sp + 9]
.count move_args
    mov     $41, $2
    call    min_caml_create_array
.count stack_load
    load    [$sp + 9], $20
.count move_ret
    mov     $1, $17
    sub     $41, 1, $3
    store   $18, [$20 + 0]
    mov     $hp, $18
    mov     $18, $2
    store   $19, [$20 + 1]
    store   $57, [$20 + 2]
    add     $hp, 2, $hp
    store   $17, [$18 + 1]
    store   $20, [$18 + 0]
.count stack_store
    store   $2, [$sp + 10]
    call    iter_setup_dirvec_constants.2826
.count stack_move
    add     $sp, 14, $sp
    mov     $hp, $4
.count stack_load
    load    [$sp - 9], $5
.count stack_load
    load    [$sp - 8], $1
.count stack_load
    load    [$sp - 10], $3
    store   $5, [$4 + 2]
.count stack_load
    load    [$sp - 4], $5
    add     $1, 2, $2
    add     $3, 3, $3
    add     $1, 3, $1
    add     $hp, 3, $hp
    store   $5, [$4 + 1]
    store   $3, [$4 + 0]
    mov     $4, $3
    store   $3, [min_caml_reflections + $2]
    store   $1, [min_caml_n_reflections + 0]
    ret
be_else.37108:
    cmp     $15, 2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.37109               # |          1 |          2 |          1 |          0 |          0 |          0 |
be_then.37109:
.count stack_move
    sub     $sp, 14, $sp                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $13, [$sp + 11]             # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 4], $10              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $12, $2                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $11, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 12]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.31944], $18              # |          1 |         13 |          0 |          1 |          1 |          0 |
    load    [$16 + 0], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 2], $23              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $18, $19, $21               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $55, $19, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $56, $20, $22               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $18, $20, $20               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $18, $23, $18               # |          1 |          7 |          0 |          1 |          0 |          0 |
    sub     $41, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $19, $22, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $57, $23, $22               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $19, $22, $19               # |          1 |          5 |          4 |          0 |          0 |          0 |
    fmul    $18, $19, $18               # |          1 |          5 |          4 |          0 |          0 |          0 |
    fmul    $21, $19, $21               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $20, $19, $20               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fsub    $18, $57, $18               # |          1 |          7 |          0 |          1 |          0 |          0 |
    fsub    $21, $55, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fsub    $20, $56, $20               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 12], $21             # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $19, [$21 + 0]              # |          1 |          3 |          2 |          0 |          0 |          0 |
    store   $20, [$21 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$21 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $hp, $18                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $18, $2                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    add     $hp, 2, $hp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $17, [$18 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $21, [$18 + 0]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 13]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 14, $sp                # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $hp, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 3], $1               # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 13], $2              # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $hp, 3, $hp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    fsub    $36, $1, $1                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    sll     $2, 2, $2                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $2, 1, $2                   # |          1 |          2 |          1 |          0 |          0 |          0 |
    store   $1, [$3 + 2]                # |          1 |          2 |          1 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $1, [$3 + 1]                # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $2, [$3 + 0]                # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_n_reflections + 0], $2# |          1 |          7 |          0 |          0 |          1 |          0 |
    mov     $3, $1                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $1, [min_caml_reflections + $2]# |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $2, 1, $1                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $1, [min_caml_n_reflections + 0]# |          1 |          2 |          1 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
be_else.37109:
    ret
be_else.37106:
    ret
bge_else.37105:
    ret
.end setup_reflections

######################################################################
.begin main
min_caml_main:
.count stack_move
    sub     $sp, 18, $sp                # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [min_caml_n_objects + 0], $41# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_solver_dist + 0], $42# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_diffuse_ray + 0], $43# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_diffuse_ray + 1], $44# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_diffuse_ray + 2], $45# |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [min_caml_rgb + 0], $46     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_rgb + 1], $47     # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_rgb + 2], $48     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_tmin + 0], $49    # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_image_size + 0], $50# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp_fast + 0], $51# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_startp_fast + 1], $52# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp_fast + 2], $53# |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [min_caml_texture_color + 1], $54# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_light + 0], $55   # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_light + 1], $56   # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_light + 2], $57   # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_texture_color + 2], $58# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_or_net + 0], $59  # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_image_size + 1], $60# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [f.31946 + 0], $36          # |          1 |         13 |          0 |          1 |          1 |          0 |
    load    [f.31970 + 0], $37          # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [f.31969 + 0], $38          # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [f.31947 + 0], $39          # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [f.31945 + 0], $40          # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      128, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      128, $10                    # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $2, $50                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $10, $60                    # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      64, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      64, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_image_center + 0]# |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [min_caml_image_center + 1]# |          1 |          1 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.32063], $10              # |          1 |          7 |          0 |          0 |          1 |          0 |
    call    min_caml_float_of_int       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          4 |          3 |          0 |          0 |          0 |
    finv    $11, $11                    # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $10, $11, $10               # |          1 |          3 |          2 |          0 |          0 |          0 |
    store   $10, [min_caml_scan_pitch + 0]# |          1 |          5 |          4 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $12, [$11 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 1]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $18, [$17 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $hp, $18                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $hp, 8, $hp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $17, [$18 + 7]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$18 + 6]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$18 + 5]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $14, [$18 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $13, [$18 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$18 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$18 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$18 + 0]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    mov     $18, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $50, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $50, 2, $20                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $20, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bl      bge_else.37110              # |          1 |          2 |          1 |          0 |          0 |          0 |
bge_then.37110:
    call    create_pixel.3008           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count storer
    add     $19, $20, $tmp              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $22                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $22, [$tmp + 0]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $20, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $19, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    init_line_elements.3010     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count b_cont
    b       bge_cont.37110              # |          1 |          9 |          0 |          1 |          0 |          1 |
bge_else.37110:
    mov     $19, $10
bge_cont.37110:
.count stack_store
    store   $10, [$sp + 0]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $12, [$11 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 1]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $18, [$17 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $hp, $18                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $hp, 8, $hp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $17, [$18 + 7]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$18 + 6]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$18 + 5]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $14, [$18 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $13, [$18 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$18 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$18 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$18 + 0]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    mov     $18, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $50, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $50, 2, $20                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $20, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bl      bge_else.37111              # |          1 |          2 |          1 |          0 |          0 |          0 |
bge_then.37111:
    call    create_pixel.3008           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count storer
    add     $19, $20, $tmp              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $22                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $22, [$tmp + 0]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $20, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $19, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    init_line_elements.3010     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count b_cont
    b       bge_cont.37111              # |          1 |          9 |          0 |          1 |          0 |          1 |
bge_else.37111:
    mov     $19, $10
bge_cont.37111:
.count stack_store
    store   $10, [$sp + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $11, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 2]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $14, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $15, [$14 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $15, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 2]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $17, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 2]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $hp, $18                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $hp, 8, $hp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $17, [$18 + 7]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$18 + 6]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$18 + 5]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $14, [$18 + 4]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $13, [$18 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$18 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$18 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$18 + 0]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $18, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $50, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $50, 2, $20                 # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $20, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bl      bge_else.37112              # |          1 |          2 |          1 |          0 |          0 |          0 |
bge_then.37112:
    call    create_pixel.3008           # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $19, $20, $tmp              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $22                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $22, [$tmp + 0]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $20, 1, $3                  # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $19, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    init_line_elements.3010     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count b_cont
    b       bge_cont.37112              # |          1 |          3 |          0 |          0 |          0 |          1 |
bge_else.37112:
    mov     $19, $10
bge_cont.37112:
.count stack_store
    store   $10, [$sp + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $10, [min_caml_screen + 0]  # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_screen + 1]  # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_screen + 2]  # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          7 |          0 |          1 |          0 |          0 |
.count load_float
    load    [f.31931], $12              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $11, $12, $2                # |          1 |          2 |          1 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 3]               # |          1 |          5 |          4 |          0 |          0 |          0 |
    call    min_caml_cos                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $2               # |          1 |          7 |          0 |          0 |          1 |          0 |
    call    min_caml_sin                # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $13, $12, $2                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 5]               # |          1 |          5 |          4 |          0 |          0 |          0 |
    call    min_caml_cos                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_sin                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $11, $10, $14               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.32091], $15              # |          1 |          7 |          0 |          0 |          1 |          0 |
    fmul    $11, $13, $16               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.32092], $17              # |          1 |          7 |          0 |          0 |          1 |          0 |
    store   $13, [min_caml_screenx_dir + 0]# |          1 |          7 |          0 |          1 |          0 |          0 |
    fmul    $14, $15, $14               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $16, $15, $15               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $zero, [min_caml_screenx_dir + 1]# |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $18, $17, $17               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fneg    $10, $16                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $14, [min_caml_screenz_dir + 0]# |          1 |          1 |          0 |          0 |          0 |          0 |
    fneg    $18, $14                    # |          1 |          7 |          0 |          1 |          0 |          0 |
    fneg    $11, $11                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $17, [min_caml_screenz_dir + 1]# |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [min_caml_screenz_dir + 2]# |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [min_caml_screenx_dir + 2]# |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $14, $10, $10               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [min_caml_screeny_dir + 1]# |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $14, $13, $11               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_screeny_dir + 0]# |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $11, [min_caml_screeny_dir + 2]# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screen + 0], $10  # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_screenz_dir + 0], $11# |          1 |          7 |          0 |          0 |          1 |          0 |
    fsub    $10, $11, $10               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_viewpoint + 0]# |          1 |          5 |          4 |          0 |          0 |          0 |
    load    [min_caml_screen + 1], $10  # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 1], $11# |          1 |          1 |          0 |          0 |          0 |          0 |
    fsub    $10, $11, $10               # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $10, [min_caml_viewpoint + 1]# |          1 |          5 |          4 |          0 |          0 |          0 |
    load    [min_caml_screen + 2], $10  # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 2], $11# |          1 |          1 |          0 |          0 |          0 |          0 |
    fsub    $10, $11, $10               # |          1 |          3 |          2 |          0 |          0 |          0 |
    store   $10, [min_caml_viewpoint + 2]# |          1 |          5 |          4 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $11, $12, $2                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 6]               # |          1 |          5 |          4 |          0 |          0 |          0 |
    call    min_caml_sin                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fneg    $10, $10                    # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $10, $56                    # |          1 |          2 |          1 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_cos                # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $11, $12, $2                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 7]               # |          1 |          4 |          3 |          0 |          0 |          0 |
    call    min_caml_sin                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    fmul    $13, $11, $11               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $2               # |          1 |          7 |          0 |          0 |          1 |          0 |
.count move_float
    mov     $11, $55                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_cos                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $13, $10, $10               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $10, $57                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      0, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $23, [min_caml_beam + 0]    # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 8]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    cmp     $23, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.37113               # |          1 |          9 |          0 |          1 |          0 |          1 |
be_then.37113:
.count stack_load
    load    [$sp + 8], $10
.count move_float
    mov     $10, $41
.count b_cont
    b       be_cont.37113
be_else.37113:
    li      1, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 9]               # |          1 |          2 |          1 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    cmp     $23, 0                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.37114               # |          1 |          4 |          1 |          0 |          0 |          1 |
be_then.37114:
.count stack_load
    load    [$sp + 9], $10
.count move_float
    mov     $10, $41
.count b_cont
    b       be_cont.37114
be_else.37114:
    li      2, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 10]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    cmp     $23, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.37115               # |          1 |          4 |          1 |          0 |          0 |          1 |
be_then.37115:
.count stack_load
    load    [$sp + 10], $10
.count move_float
    mov     $10, $41
.count b_cont
    b       be_cont.37115
be_else.37115:
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 11]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $24                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $24, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.37116               # |          1 |          4 |          1 |          0 |          0 |          1 |
be_then.37116:
.count stack_load
    load    [$sp + 11], $10
.count move_float
    mov     $10, $41
.count b_cont
    b       be_cont.37116
be_else.37116:
    li      4, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_object.2721            # |          1 |          7 |          0 |          1 |          0 |          0 |
be_cont.37116:
be_cont.37115:
be_cont.37114:
be_cont.37113:
    call    min_caml_read_int           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.37117               # |          1 |          4 |          1 |          0 |          0 |          1 |
be_then.37117:
    li      1, $2
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $18
.count b_cont
    b       be_cont.37117
be_else.37117:
    call    min_caml_read_int           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $11, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      2, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.37118               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.37118:
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $18
    store   $10, [$18 + 0]
.count b_cont
    b       be_cont.37118
be_else.37118:
.count stack_store
    store   $10, [$sp + 12]             # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $11, [$sp + 13]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 13], $19             # |          1 |          7 |          0 |          0 |          1 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $19, [$18 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 12], $19             # |          1 |          7 |          0 |          0 |          1 |          0 |
    store   $19, [$18 + 0]              # |          1 |          1 |          0 |          0 |          0 |          0 |
be_cont.37118:
be_cont.37117:
    load    [$18 + 0], $19              # |          1 |          7 |          0 |          0 |          1 |          0 |
    cmp     $19, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    be      bne_cont.37119              # |          1 |          2 |          1 |          0 |          0 |          0 |
bne_then.37119:
    store   $18, [min_caml_and_net + 0] # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    read_and_network.2729       # |          1 |          1 |          0 |          0 |          0 |          0 |
bne_cont.37119:
    call    min_caml_read_int           # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.37120               # |          1 |          4 |          1 |          0 |          0 |          1 |
be_then.37120:
    li      1, $2
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $10
.count b_cont
    b       be_cont.37120
be_else.37120:
    call    min_caml_read_int           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $11, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      2, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.37121               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.37121:
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $11
    store   $10, [$11 + 0]
    mov     $11, $10
.count b_cont
    b       be_cont.37121
be_else.37121:
.count stack_store
    store   $10, [$sp + 14]             # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $11, [$sp + 15]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 15], $11             # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 1]              # |          1 |          2 |          1 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 14], $11             # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 0]              # |          1 |          3 |          2 |          0 |          0 |          0 |
be_cont.37121:
be_cont.37120:
    mov     $10, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $10               # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      1, $11                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.37122               # |          1 |          4 |          1 |          0 |          0 |          1 |
be_then.37122:
    call    min_caml_create_array
.count b_cont
    b       be_cont.37122
be_else.37122:
.count stack_store
    store   $3, [$sp + 16]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_or_network.2727        # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 16], $10             # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$1 + 0]               # |          1 |          3 |          2 |          0 |          0 |          0 |
be_cont.37122:
.count move_float
    mov     $1, $59                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      80, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      54, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      10, $2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      49, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      50, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      56, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      32, $2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      49, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      50, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      56, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      32, $2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      50, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      53, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      53, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      10, $2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $10, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 17]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $hp, $11                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 17], $10             # |          1 |          7 |          0 |          0 |          1 |          0 |
    li      120, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 0]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    mov     $11, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $14, [min_caml_dirvecs + 4] # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + 4], $2  # |          1 |          7 |          0 |          0 |          1 |          0 |
    li      118, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    create_dirvec_elements.3039 # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    create_dirvecs.3042         # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $11                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      4, $12                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      9, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.32000], $22              # |          1 |          7 |          0 |          0 |          1 |          0 |
.count move_ret
    mov     $1, $21                     # |          1 |          7 |          0 |          1 |          0 |          0 |
.count load_float
    load    [f.32001], $23              # |          1 |          7 |          0 |          0 |          1 |          0 |
    fmul    $21, $22, $21               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $5                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $4                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $12, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fsub    $21, $23, $3                # |          1 |          2 |          1 |          0 |          0 |          0 |
    call    calc_dirvecs.3028           # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      8, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      2, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      4, $4                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    calc_dirvec_rows.3033       # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + 4], $2  # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      119, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    init_dirvec_constants.3044  # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    init_vecset_constants.3047  # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      min_caml_light_dirvec, $10  # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_light_dirvec + 0], $11# |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $13                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      6, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $13, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $55, [$11 + 0]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $56, [$11 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $57, [$11 + 2]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [min_caml_light_dirvec + 1], $12# |          1 |          7 |          0 |          0 |          1 |          0 |
    li      4, $14                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bl      bge_cont.37123              # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_then.37123:
    load    [min_caml_objects + $13], $15# |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $16                      # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$15 + 1], $17              # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $17, 1                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.37124               # |          1 |          4 |          1 |          0 |          0 |          1 |
be_then.37124:
    call    min_caml_create_array
    load    [$11 + 0], $18
.count move_ret
    mov     $1, $17
    load    [$15 + 6], $19
    fcmp    $18, $zero
    load    [$15 + 4], $20
    bne     be_else.37125
be_then.37125:
    store   $zero, [$17 + 1]
.count b_cont
    b       be_cont.37125
be_else.37125:
    fcmp    $zero, $18
    bg      ble_else.37126
ble_then.37126:
    li      0, $18
.count b_cont
    b       ble_cont.37126
ble_else.37126:
    li      1, $18
ble_cont.37126:
    cmp     $19, 0
    be      bne_cont.37127
bne_then.37127:
    cmp     $18, 0
    bne     be_else.37128
be_then.37128:
    li      1, $18
.count b_cont
    b       be_cont.37128
be_else.37128:
    li      0, $18
be_cont.37128:
bne_cont.37127:
    cmp     $18, 0
    load    [$20 + 0], $19
    bne     be_else.37129
be_then.37129:
    fneg    $19, $18
    store   $18, [$17 + 0]
    load    [$11 + 0], $18
    finv    $18, $18
    store   $18, [$17 + 1]
.count b_cont
    b       be_cont.37129
be_else.37129:
    store   $19, [$17 + 0]
    load    [$11 + 0], $18
    finv    $18, $18
    store   $18, [$17 + 1]
be_cont.37129:
be_cont.37125:
    load    [$11 + 1], $18
    load    [$15 + 6], $19
    load    [$15 + 4], $20
    fcmp    $18, $zero
    bne     be_else.37130
be_then.37130:
    store   $zero, [$17 + 3]
.count b_cont
    b       be_cont.37130
be_else.37130:
    fcmp    $zero, $18
    bg      ble_else.37131
ble_then.37131:
    li      0, $18
.count b_cont
    b       ble_cont.37131
ble_else.37131:
    li      1, $18
ble_cont.37131:
    cmp     $19, 0
    be      bne_cont.37132
bne_then.37132:
    cmp     $18, 0
    bne     be_else.37133
be_then.37133:
    li      1, $18
.count b_cont
    b       be_cont.37133
be_else.37133:
    li      0, $18
be_cont.37133:
bne_cont.37132:
    cmp     $18, 0
    load    [$20 + 1], $19
    bne     be_else.37134
be_then.37134:
    fneg    $19, $18
    store   $18, [$17 + 2]
    load    [$11 + 1], $18
    finv    $18, $18
    store   $18, [$17 + 3]
.count b_cont
    b       be_cont.37134
be_else.37134:
    store   $19, [$17 + 2]
    load    [$11 + 1], $18
    finv    $18, $18
    store   $18, [$17 + 3]
be_cont.37134:
be_cont.37130:
    load    [$11 + 2], $18
    load    [$15 + 6], $19
    load    [$15 + 4], $20
    fcmp    $18, $zero
    bne     be_else.37135
be_then.37135:
.count storer
    add     $12, $13, $tmp
    store   $zero, [$17 + 5]
    store   $17, [$tmp + 0]
    sub     $13, 1, $3
.count move_args
    mov     $10, $2
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37124
be_else.37135:
    fcmp    $zero, $18
    bg      ble_else.37136
ble_then.37136:
    li      0, $18
.count b_cont
    b       ble_cont.37136
ble_else.37136:
    li      1, $18
ble_cont.37136:
    cmp     $19, 0
    be      bne_cont.37137
bne_then.37137:
    cmp     $18, 0
    bne     be_else.37138
be_then.37138:
    li      1, $18
.count b_cont
    b       be_cont.37138
be_else.37138:
    li      0, $18
be_cont.37138:
bne_cont.37137:
    cmp     $18, 0
    load    [$20 + 2], $19
.count move_args
    mov     $10, $2
    sub     $13, 1, $3
.count storer
    add     $12, $13, $tmp
    bne     be_else.37139
be_then.37139:
    fneg    $19, $18
    store   $18, [$17 + 4]
    load    [$11 + 2], $18
    store   $17, [$tmp + 0]
    finv    $18, $18
    store   $18, [$17 + 5]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37124
be_else.37139:
    store   $19, [$17 + 4]
    load    [$11 + 2], $18
    store   $17, [$tmp + 0]
    finv    $18, $18
    store   $18, [$17 + 5]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37124
be_else.37124:
    cmp     $17, 2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.37140               # |          1 |          2 |          1 |          0 |          0 |          0 |
be_then.37140:
.count move_args
    mov     $14, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$15 + 4], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$15 + 4], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$15 + 4], $20              # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$11 + 0], $21              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$18 + 0], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$11 + 1], $22              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$19 + 1], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $21, $18, $18               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$11 + 2], $21              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $22, $19, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$20 + 2], $20              # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $13, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $21, $20, $20               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $13, $tmp              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $18, $20, $18               # |          1 |          4 |          3 |          0 |          0 |          0 |
    fcmp    $18, $zero                  # |          1 |          5 |          4 |          0 |          0 |          0 |
    bg      ble_else.37141              # |          1 |          9 |          0 |          1 |          0 |          1 |
ble_then.37141:
    store   $zero, [$17 + 0]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37140
ble_else.37141:
    finv    $18, $18                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    fneg    $18, $19                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $19, [$17 + 0]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    load    [$15 + 4], $19              # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$19 + 0], $19              # |          1 |          3 |          2 |          0 |          0 |          0 |
    fmul    $19, $18, $19               # |          1 |          3 |          2 |          0 |          0 |          0 |
    fneg    $19, $19                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $19, [$17 + 1]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    load    [$15 + 4], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$19 + 1], $19              # |          1 |          3 |          2 |          0 |          0 |          0 |
    fmul    $19, $18, $19               # |          1 |          3 |          2 |          0 |          0 |          0 |
    fneg    $19, $19                    # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $19, [$17 + 2]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    load    [$15 + 4], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$19 + 2], $19              # |          1 |          3 |          2 |          0 |          0 |          0 |
    store   $17, [$tmp + 0]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $19, $18, $18               # |          1 |          2 |          1 |          0 |          0 |          0 |
    fneg    $18, $18                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $18, [$17 + 3]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          7 |          0 |          1 |          0 |          0 |
.count b_cont
    b       be_cont.37140               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_else.37140:
.count move_args
    mov     $16, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $17
    load    [$15 + 3], $18
    load    [$15 + 4], $19
    load    [$15 + 4], $20
    load    [$15 + 4], $21
    load    [$11 + 0], $22
    load    [$11 + 1], $23
    load    [$11 + 2], $24
    fmul    $22, $22, $25
    fmul    $23, $23, $26
    load    [$19 + 0], $19
    load    [$20 + 1], $20
    fmul    $24, $24, $27
    fmul    $25, $19, $19
    fmul    $26, $20, $20
    load    [$21 + 2], $21
    fmul    $23, $24, $25
    load    [$15 + 9], $26
    fmul    $27, $21, $21
    fadd    $19, $20, $19
    fmul    $24, $22, $24
    load    [$26 + 0], $20
    cmp     $18, 0
    load    [$15 + 9], $26
    fmul    $22, $23, $22
    fmul    $25, $20, $20
    fadd    $19, $21, $19
    be      bne_cont.37142
bne_then.37142:
    fadd    $19, $20, $19
    load    [$26 + 1], $20
    load    [$15 + 9], $21
    fmul    $24, $20, $20
    load    [$21 + 2], $21
    fmul    $22, $21, $21
    fadd    $19, $20, $19
    fadd    $19, $21, $19
bne_cont.37142:
    store   $19, [$17 + 0]
    load    [$15 + 4], $20
    load    [$15 + 4], $21
    load    [$15 + 4], $22
    load    [$11 + 0], $23
    load    [$20 + 0], $20
    load    [$11 + 1], $24
    load    [$21 + 1], $21
    fmul    $23, $20, $20
    load    [$11 + 2], $23
    load    [$22 + 2], $22
    fmul    $24, $21, $21
    load    [$15 + 9], $25
    fmul    $23, $22, $22
    fneg    $20, $20
    load    [$15 + 9], $26
    cmp     $18, 0
    fneg    $21, $21
    load    [$25 + 1], $25
    fneg    $22, $22
.count storer
    add     $12, $13, $tmp
    sub     $13, 1, $3
.count move_args
    mov     $10, $2
    bne     be_else.37143
be_then.37143:
    fcmp    $19, $zero
    store   $20, [$17 + 1]
    store   $21, [$17 + 2]
    store   $22, [$17 + 3]
    store   $17, [$tmp + 0]
    bne     be_else.37144
be_then.37144:
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37143
be_else.37144:
    finv    $19, $18
    store   $18, [$17 + 4]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37143
be_else.37143:
    fmul    $23, $25, $18
    load    [$26 + 2], $23
    fcmp    $19, $zero
    fmul    $24, $23, $24
    fadd    $18, $24, $18
    fmul    $18, $39, $18
    fsub    $20, $18, $18
    store   $18, [$17 + 1]
    load    [$15 + 9], $18
    load    [$11 + 2], $20
    load    [$11 + 0], $24
    load    [$18 + 0], $18
    fmul    $24, $23, $23
    fmul    $20, $18, $20
    fadd    $20, $23, $20
    finv    $19, $23
    fmul    $20, $39, $20
    fsub    $21, $20, $20
    store   $20, [$17 + 2]
    load    [$11 + 1], $20
    load    [$11 + 0], $21
    fmul    $20, $18, $18
    fmul    $21, $25, $20
    fadd    $18, $20, $18
    fmul    $18, $39, $18
    fsub    $22, $18, $18
    store   $18, [$17 + 3]
    bne     be_else.37145
be_then.37145:
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
.count b_cont
    b       be_cont.37145
be_else.37145:
    store   $23, [$17 + 4]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
be_cont.37145:
be_cont.37143:
be_cont.37140:
be_cont.37124:
bge_cont.37123:
    sub     $41, 1, $2                  # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    setup_reflections.3064      # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_image_center + 1], $11# |          1 |         13 |          0 |          1 |          1 |          0 |
    li      0, $10                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 0], $12# |          1 |          7 |          0 |          0 |          1 |          0 |
    sub     $50, 1, $13                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_scan_pitch + 0], $14# |          1 |          1 |          0 |          0 |          0 |          0 |
    neg     $11, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $14, $1, $1                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 0], $2# |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [min_caml_screeny_dir + 1], $3# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 2], $4# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 1], $5# |          1 |          7 |          0 |          0 |          1 |          0 |
    fmul    $1, $12, $6                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $1, $3, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $1, $4, $1                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 2], $4# |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $6, $2, $2                  # |          1 |          7 |          0 |          1 |          0 |          0 |
    fadd    $3, $5, $6                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $1, $4, $7                  # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $4               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $13, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $2, $5                      # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $4, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $4                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    pretrace_pixels.2983        # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      0, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      2, $6                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $3               # |          1 |          7 |          0 |          0 |          1 |          0 |
.count stack_load
    load    [$sp + 1], $4               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $5               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    scan_line.3000              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 18, $sp                # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      0, $1                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.end main
                                        # | Instructions | Clocks     | Stall      | ICacheMiss | DCacheMiss | BranchMiss |
