######################################################################
#
#       ↓　ここから macro.s
#
######################################################################

#レジスタ名置き換え
.define $zero $0
.define $sp $63
.define $hp $62
.define $tmp $61
.define $0 orz
.define $63 orz
.define $62 orz
.define $61 orz

#疑似命令
.define { neg %Reg %Reg } { sub $zero %1 %2 }
.define { b %Imm } { jmp 0 %1 }
.define { be %Imm } { jmp 5 %1 }
.define { bne %Imm } { jmp 2 %1 }
.define { bl %Imm } { jmp 6 %1 }
.define { ble %Imm } { jmp 4 %1 }
.define { bg %Imm } { jmp 3 %1 }
.define { bge %Imm } { jmp 1 %1 }

# 入力,出力の順にコンマで区切る形式
.define { li %Imm, %Reg } { li %2 %1 }
.define { add %Reg, %Reg, %Reg } { add %1 %2 %3 }
.define { add %Reg, %Imm, %Reg } { addi %1 %3 %2 }
.define { sub %Reg, %Reg, %Reg } { sub %1 %2 %3 }
.define { sub %Reg, %Imm, %Reg } { addi %1 %3 -%2 }
.define { sll %Reg, %Imm, %Reg } { sll %1 %3 %2 }
.define { cmp %Reg, %Reg } { cmp %1 %2 }
.define { cmp %Reg, %Imm } { cmpi %1 %2 }
.define { fadd %Reg, %Reg, %Reg } { fadd %1 %2 %3 }
.define { fsub %Reg, %Reg, %Reg } { fsub %1 %2 %3 }
.define { fmul %Reg, %Reg, %Reg } { fmul %1 %2 %3 }
.define { finv %Reg, %Reg } { finv %1 %2 }
.define { fsqrt %Reg, %Reg } { fsqrt %1 %2 }
.define { fcmp %Reg, %Reg } { fcmp %1 %2 }
.define { fabs %Reg, %Reg } { fabs %1 %2 }
.define { fneg %Reg, %Reg } { fneg %1 %2 }
.define { load [%Reg + %Imm], %Reg } { load %1 %3 %2 }
.define { load [%Reg - %Imm], %Reg } { load [%1 + -%2], %3}
.define { load [%Reg], %Reg } { load [%1 + 0], %2 }
.define { load [%Imm], %Reg } { load [$zero + %1], %2 }
.define { load [%Imm + %Reg], %Reg } { load [%2 + %1], %3 }
.define { load [%Imm + %Imm], %Reg } { load [%{ %1 + %2 }], %3 }
.define { load [%Imm - %Imm], %Reg } { load [%{ %1 - %2 }], %3 }
.define { load [%Reg + %Reg], %Reg } { loadr %1 %2 %3 }
.define { store %Reg, [%Reg + %Imm] } { store %2 %1 %3 }
.define { store %Reg, [%Reg - %Imm] } { store %1, [%2 + -%3] }
.define { store %Reg, [%Reg] } { store %1, [%2 + 0] }
.define { store %Reg, [%Imm] } { store %1, [$zero + %2] }
.define { store %Reg, [%Imm + %Reg] } { store %1, [%3 + %2] }
.define { store %Reg, [%Imm + %Imm] } { store %1, [%{ %2 + %3 }] }
.define { store %Reg, [%Imm - %Imm] } { store %1, [%{ %2 - %3 }] }
.define { mov %Reg, %Reg } { mov %1 %2 }
.define { neg %Reg, %Reg } { neg %1 %2 }
.define { write %Reg, %Reg } { write %1 %2 }

#スタックとヒープの初期化
    li      0, $zero                    # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      0x1000, $hp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    sll     $hp, 4, $hp                 # |          1 |          2 |          1 |          0 |          0 |          0 |
    sll     $hp, 3, $sp                 # |          1 |          2 |          1 |          0 |          0 |          0 |
    call     min_caml_main              # |          1 |          1 |          0 |          0 |          0 |          0 |
    halt

######################################################################
#
#       ↑　ここまで macro.s
#
######################################################################
######################################################################
#
#       ↓　ここから lib_asm.s
#
######################################################################

######################################################################
# * floor
######################################################################
.begin floor
min_caml_floor:
    mov $2, $1                          # |    189,164 |  1,040,402 |    283,746 |     94,582 |          0 |          0 |
    cmp $1, 0                           # |    189,164 |    189,164 |          0 |          0 |          0 |          0 |
    bge FLOOR_POSITIVE  # if ($f1 >= 0) FLOOR_POSITIVE# |    189,164 |    787,120 |          0 |     94,582 |          0 |     15,232 |
    fneg $1, $1                         # |    166,713 |    166,713 |          0 |          0 |          0 |          0 |
    call FLOOR_POSITIVE     # $f1 = FLOOR_POSITIVE(-$f1)# |    166,713 |    166,713 |          0 |          0 |          0 |          0 |
    load [FLOOR_MONE], $2               # |    166,713 |    298,011 |          0 |          0 |     21,883 |          0 |
    fsub $2, $1, $1     # $f1 = (-1) - $f1# |    166,713 |    456,373 |    289,660 |          0 |          0 |          0 |
    ret                                 # |    166,713 |    166,713 |          0 |          0 |          0 |          0 |
FLOOR_POSITIVE:
    load [FLOAT_MAGICF], $3             # |    189,164 |    262,916 |          0 |          0 |     12,292 |          0 |
    cmp $1, $3                          # |    189,164 |    542,908 |    353,744 |          0 |          0 |          0 |
    ble FLOOR_POSITIVE_MAIN             # |    189,164 |    776,340 |          0 |     93,811 |          0 |     12,155 |
    ret
FLOOR_POSITIVE_MAIN:
    mov $1, $2                          # |    189,164 |    189,164 |          0 |          0 |          0 |          0 |
    fadd $1, $3, $1     # $f1 += 0x4b000000# |    189,164 |    189,164 |          0 |          0 |          0 |          0 |
    fsub $1, $3, $1     # $f1 -= 0x4b000000# |    189,164 |    945,820 |    756,656 |          0 |          0 |          0 |
    cmp $1, $2                          # |    189,164 |    945,820 |    756,656 |          0 |          0 |          0 |
    ble FLOOR_RET                       # |    189,164 |    189,352 |          0 |          0 |          0 |         94 |
    load [FLOOR_ONE], $2
    fsub $1, $2, $1     # 返り値が元の値より大きければ1.0引く
FLOOR_RET:
    ret                                 # |    189,164 |    722,348 |          0 |     88,864 |          0 |          0 |
FLOOR_ONE:
    .float 1.0
FLOOR_MONE:
    .float -1.0
.end floor

######################################################################
# * float_of_int
######################################################################
.begin float_of_int
min_caml_float_of_int:
    mov $2, $1                          # |     16,565 |    114,872 |          3 |     16,384 |          0 |          0 |
    cmp $1, 0                           # |     16,565 |     16,565 |          0 |          0 |          0 |          0 |
    bge ITOF_MAIN       # if ($i1 >= 0) goto ITOF_MAIN# |     16,565 |     19,441 |          0 |          0 |          0 |      1,438 |
    neg $1, $1      # 正の値にしてitofした後に、マイナスにしてかえす# |      8,256 |      8,256 |          0 |          0 |          0 |          0 |
    call ITOF_MAIN  # $f1 = float_of_int(-$i1)# |      8,256 |     57,786 |          0 |      8,255 |          0 |          0 |
    fneg $1, $1                         # |      8,256 |     33,024 |     24,768 |          0 |          0 |          0 |
    ret                                 # |      8,256 |      8,256 |          0 |          0 |          0 |          0 |
ITOF_MAIN:
    load [FLOAT_MAGICI], $3     # $3 = 8388608# |     16,565 |    126,815 |          0 |      8,129 |     10,246 |          0 |
    load [FLOAT_MAGICF], $4         # $4 = 8388608.0# |     16,565 |     16,727 |          0 |          0 |         27 |          0 |
    load [FLOAT_MAGICFHX], $5       # $5 = 0x4b000000# |     16,565 |     16,691 |          0 |          0 |         21 |          0 |
    cmp $1, $3          # $cond = cmp($i1, 8388608)# |     16,565 |     16,565 |          0 |          0 |          0 |          0 |
    bge ITOF_BIG            # if ($i1 >= 8388608) goto ITOF_BIG# |     16,565 |     17,089 |          0 |          0 |          0 |        262 |
    add $1, $5, $1      # $i1 = $i1 + $5 (i.e. $i1 + 0x4b000000)# |     16,565 |    114,869 |          0 |     16,384 |          0 |          0 |
    fsub $1, $4, $1     # $f1 = $f1 - $4 (i.e. $f1 - 8388608.0)# |     16,565 |     33,130 |     16,565 |          0 |          0 |          0 |
    ret             # return            # |     16,565 |     16,565 |          0 |          0 |          0 |          0 |
ITOF_BIG:
    li 0, $6                # $i1 = $6 * 8388608 + $7 なる$6, $7を求める
    mov $1, $7
ITOF_LOOP:
    add $6, 1, $6           # $6 += 1
    sub $7, $3, $7          # $7 -= 8388608
    cmp $7, $3
    bge ITOF_LOOP       # if ($7 >= 8388608) continue
    li 0, $1
ITOF_LOOP2:
    fadd $1, $4, $1     # $f1 = $6 * $4
    add $6, -1, $6
    cmp $6, 0
    bg ITOF_LOOP2
    add $7, $5, $7          # $7 < 8388608 だからそのままitof
    fsub $7, $4, $7     # $tempf = itof($7)
    fadd $1, $7, $1     # $f1 = $f1 + $tempf (i.e. $f1 = itof($6 * $4) + itof($7) )
    ret
.end float_of_int

######################################################################
# * int_of_float
######################################################################
.begin int_of_float
min_caml_int_of_float:
    mov $2, $1                          # |     49,152 |     60,516 |          0 |      1,894 |          0 |          0 |
    cmp $1, 0                           # |     49,152 |     49,152 |          0 |          0 |          0 |          0 |
    bge FTOI_MAIN       # if ($f1 >= 0) goto FTOI_MAIN# |     49,152 |     49,774 |          0 |          0 |          0 |        311 |
    fneg $1, $1     # 正の値にしてftoiした後に、マイナスにしてかえす
    call FTOI_MAIN  # $i1 = float_of_int(-$f1)
    neg $1, $1
    ret         # return
FTOI_MAIN:
    load [FLOAT_MAGICI], $3     # $3 = 8388608# |     49,152 |     72,978 |          0 |      1,891 |      2,080 |          0 |
    load [FLOAT_MAGICF], $4         # $4 = 8388608.0# |     49,152 |     50,982 |          0 |          0 |        305 |          0 |
    load [FLOAT_MAGICFHX], $5       # $5 = 0x4b000000# |     49,152 |     50,550 |          0 |          0 |        233 |          0 |
    cmp $1, $4                          # |     49,152 |     97,766 |     48,614 |          0 |          0 |          0 |
    bge FTOI_BIG        # if ($f1 >= 8688608.0) goto FTOI_BIG# |     49,152 |     49,288 |          0 |          0 |          0 |         68 |
    fadd $1, $4, $1                     # |     49,152 |     49,152 |          0 |          0 |          0 |          0 |
    sub $1, $5, $1                      # |     49,152 |    245,760 |    196,608 |          0 |          0 |          0 |
    ret                                 # |     49,152 |     55,956 |          0 |      1,134 |          0 |          0 |
FTOI_BIG:
    li 0, $6                # $f1 = $6 * 8388608 + $8 なる$6, $8を求める
    mov $1, $8
FTOI_LOOP:
    add $6, 1, $6           # $6 += 1
    fsub $8, $4, $8     # $8 -= 8388608.0
    cmp $8, $4
    bge FTOI_LOOP       # if ($8 >= 8388608.0) continue
    li 0, $1
FTOI_LOOP2:
    add $1, $3, $1          # $i1 = $6 * $3
    add $6, -1, $6
    cmp $6, 0
    bg FTOI_LOOP2
    fadd $8, $4, $8     # $8 < 8388608.0 だからそのままftoi
    sub $8, $5, $8      # $temp = ftoi($8)
    add $1, $8, $1      # $i1 = $i1 + $temp (i.e. $i1 = ftoi($6 * $3) + ftoi($8) )
    ret

FLOAT_MAGICI:
    .int 8388608
FLOAT_MAGICF:
    .float 8388608.0
FLOAT_MAGICFHX:
    .int 1258291200         # 0x4b000000
.end int_of_float

######################################################################
# * read_int=read_float
# * wordバイナリ読み込み
######################################################################
.begin read
min_caml_read_int:
min_caml_read_float:
read_1:
    read $1                             # |        325 |        331 |          0 |          1 |          0 |          0 |
    cmp $1, 255                         # |        325 |        650 |        325 |          0 |          0 |          0 |
    bg read_1                           # |        325 |        325 |          0 |          0 |          0 |          0 |
    sll $1, 24, $1                      # |        325 |        325 |          0 |          0 |          0 |          0 |
read_2:
    read $2                             # |        325 |        325 |          0 |          0 |          0 |          0 |
    cmp $2, 255                         # |        325 |        655 |        324 |          1 |          0 |          0 |
    bg read_2                           # |        325 |        339 |          0 |          0 |          0 |          7 |
    sll $2, 16, $2                      # |        325 |        325 |          0 |          0 |          0 |          0 |
    add $1, $2, $1                      # |        325 |        650 |        325 |          0 |          0 |          0 |
read_3:
    read $2                             # |        325 |        325 |          0 |          0 |          0 |          0 |
    cmp $2, 255                         # |        325 |        650 |        325 |          0 |          0 |          0 |
    bg read_3                           # |        325 |        325 |          0 |          0 |          0 |          0 |
    sll $2, 8, $2                       # |        325 |        325 |          0 |          0 |          0 |          0 |
    add $1, $2, $1                      # |        325 |        655 |        324 |          1 |          0 |          0 |
read_4:
    read $2                             # |        325 |        325 |          0 |          0 |          0 |          0 |
    cmp $2, 255                         # |        325 |        650 |        325 |          0 |          0 |          0 |
    bg read_4                           # |        325 |        325 |          0 |          0 |          0 |          0 |
    add $1, $2, $1                      # |        325 |        325 |          0 |          0 |          0 |          0 |
    ret                                 # |        325 |        325 |          0 |          0 |          0 |          0 |
.end read

######################################################################
# * write
# * バイト出力
# * 失敗してたらループ
######################################################################
.begin write
min_caml_write:
    write $2, $tmp                      # |     49,167 |     49,929 |          0 |        127 |          0 |          0 |
    cmp $tmp, 0                         # |     49,167 |     98,334 |     49,167 |          0 |          0 |          0 |
    bg min_caml_write                   # |     49,167 |     51,437 |          0 |        127 |          0 |        754 |
    ret                                 # |     49,167 |     49,167 |          0 |          0 |          0 |          0 |
.end write

######################################################################
# * create_array
######################################################################
.begin create_array
min_caml_create_array:
    mov $2, $1                          # |     22,313 |     23,231 |          0 |        153 |          0 |          0 |
    mov $3, $2                          # |     22,313 |     22,313 |          0 |          0 |          0 |          0 |
    add $1, $hp, $3                     # |     22,313 |     22,313 |          0 |          0 |          0 |          0 |
    mov $hp, $1                         # |     22,313 |     22,313 |          0 |          0 |          0 |          0 |
CREATE_ARRAY_LOOP:
    cmp $hp, $3                         # |    125,343 |    125,343 |          0 |          0 |          0 |          0 |
    bge CREATE_ARRAY_END                # |    125,343 |    141,973 |          0 |          0 |          0 |      8,315 |
    store $2, [$hp]                     # |    103,030 |    103,942 |          0 |        152 |          0 |          0 |
    add $hp, 1, $hp                     # |    103,030 |    103,030 |          0 |          0 |          0 |          0 |
    b CREATE_ARRAY_LOOP                 # |    103,030 |    103,272 |          0 |          0 |          0 |        121 |
CREATE_ARRAY_END:
    ret                                 # |     22,313 |     22,313 |          0 |          0 |          0 |          0 |
.end create_array

######################################################################
# * ledout_in
# * ledout_float
# * バイトLED出力
######################################################################
.begin ledout
min_caml_ledout_int:
min_caml_ledout_float:
    ledout $2
    ret
.end ledout

######################################################################
# * 算術関数(atan, sin, cos)
######################################################################
min_caml_atan_table:
    .float 0.785398163397448279
    .float 0.463647609000806094
    .float 0.244978663126864143
    .float 0.124354994546761438
    .float 0.06241880999595735
    .float 0.0312398334302682774
    .float 0.0156237286204768313
    .float 0.00781234106010111114
    .float 0.00390623013196697176
    .float 0.00195312251647881876
    .float 0.000976562189559319459
    .float 0.00048828121119489829
    .float 0.000244140620149361771
    .float 0.000122070311893670208
    .float 6.10351561742087726e-05
    .float 3.05175781155260957e-05
    .float 1.52587890613157615e-05
    .float 7.62939453110197e-06
    .float 3.81469726560649614e-06
    .float 1.90734863281018696e-06
    .float 9.53674316405960844e-07
    .float 4.76837158203088842e-07
    .float 2.38418579101557974e-07
    .float 1.19209289550780681e-07
    .float 5.96046447753905522e-08
f._186: .float  6.2831853072E+00
f._185: .float  3.1415926536E+00
f._184: .float  1.5707963268E+00
f._183: .float  6.0725293501E-01
f._182: .float  1.0000000000E+00
f._181: .float  5.0000000000E-01

######################################################################
.begin atan
min_caml_atan:
    load    [f._182], $3                # |      1,000 |      1,006 |          0 |          1 |          0 |          0 |
    li      0, $10                      # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    mov     $3, $6                      # |      1,000 |      2,000 |      1,000 |          0 |          0 |          0 |
    mov     $zero, $5                   # |      1,000 |      1,006 |          0 |          1 |          0 |          0 |
    mov     $2, $4                      # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    mov     $10, $2                     # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    b       cordic_rec._146             # |      1,000 |      1,096 |          0 |          0 |          0 |         48 |

######################################################################
cordic_rec._146:
    cmp     $2, 25                      # |     26,000 |     26,000 |          0 |          0 |          0 |          0 |
    bne     be_else._192                # |     26,000 |     30,028 |          0 |          0 |          0 |      2,014 |
    mov     $5, $1                      # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    ret                                 # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
be_else._192:
    fcmp    $4, $zero                   # |     25,000 |     25,006 |          0 |          1 |          0 |          0 |
    bg      ble_else._193               # |     25,000 |     47,432 |          0 |          0 |          0 |     11,216 |
    fmul    $6, $4, $10                 # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    fmul    $6, $3, $9                  # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    load    [min_caml_atan_table + $2], $8# |     12,268 |     12,292 |          0 |          0 |          4 |          0 |
    load    [f._181], $7                # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    fsub    $3, $10, $3                 # |     12,268 |     24,532 |     12,264 |          0 |          0 |          0 |
    fadd    $4, $9, $4                  # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    fsub    $5, $8, $5                  # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    fmul    $6, $7, $6                  # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    add     $2, 1, $2                   # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    b       cordic_rec._146             # |     12,268 |     12,284 |          0 |          0 |          0 |          8 |
ble_else._193:
    fmul    $6, $4, $10                 # |     12,732 |     12,738 |          0 |          1 |          0 |          0 |
    fmul    $6, $3, $9                  # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    load    [min_caml_atan_table + $2], $8# |     12,732 |     12,750 |          0 |          0 |          3 |          0 |
    load    [f._181], $7                # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    fadd    $3, $10, $3                 # |     12,732 |     25,461 |     12,729 |          0 |          0 |          0 |
    fsub    $4, $9, $4                  # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    fadd    $5, $8, $5                  # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    fmul    $6, $7, $6                  # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    add     $2, 1, $2                   # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    b       cordic_rec._146             # |     12,732 |     12,808 |          0 |          0 |          0 |         38 |
.end atan

######################################################################
.begin sin
min_caml_sin:
    fcmp    $zero, $2                   # |      9,151 |     40,563 |     14,096 |      2,886 |          0 |          0 |
    bg      ble_else._196               # |      9,151 |     13,741 |          0 |          0 |          0 |      2,295 |
    load    [f._184], $10               # |      8,651 |     39,767 |          0 |      2,886 |      2,300 |          0 |
    fcmp    $10, $2                     # |      8,651 |     21,353 |     12,702 |          0 |          0 |          0 |
    bg      ble_else._197               # |      8,651 |     11,727 |          0 |          0 |          0 |      1,538 |
    load    [f._185], $10               # |      5,303 |     17,447 |          0 |          0 |      2,024 |          0 |
    fcmp    $10, $2                     # |      5,303 |     11,861 |      6,558 |          0 |          0 |          0 |
    bg      ble_else._198               # |      5,303 |      6,621 |          0 |          0 |          0 |        659 |
    load    [f._186], $10               # |      3,758 |     15,908 |          0 |          0 |      2,025 |          0 |
    fcmp    $10, $2                     # |      3,758 |      7,224 |      3,466 |          0 |          0 |          0 |
    bg      ble_else._199               # |      3,758 |     23,788 |          0 |      2,885 |          0 |      1,360 |
    fsub    $2, $10, $2                 # |      2,416 |      2,416 |          0 |          0 |          0 |          0 |
    b       min_caml_sin                # |      2,416 |      2,572 |          0 |          0 |          0 |         78 |
ble_else._199:
    fsub    $10, $2, $2                 # |      1,342 |      1,342 |          0 |          0 |          0 |          0 |
    call     min_caml_sin               # |      1,342 |      1,342 |          0 |          0 |          0 |          0 |
    mov     $1, $10                     # |      1,342 |      1,342 |          0 |          0 |          0 |          0 |
    fneg    $10, $1                     # |      1,342 |      1,342 |          0 |          0 |          0 |          0 |
    ret                                 # |      1,342 |      1,342 |          0 |          0 |          0 |          0 |
ble_else._198:
    fsub    $10, $2, $2                 # |      1,545 |      7,533 |          0 |        998 |          0 |          0 |
    b       cordic_sin._82              # |      1,545 |      1,563 |          0 |          0 |          0 |          9 |
ble_else._197:
    b       cordic_sin._82              # |      3,348 |     13,248 |          0 |      1,642 |          0 |         24 |
ble_else._196:
    fneg    $2, $2                      # |        500 |        500 |          0 |          0 |          0 |          0 |
    call     min_caml_sin               # |        500 |        500 |          0 |          0 |          0 |          0 |
    mov     $1, $10                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    fneg    $10, $1                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    ret                                 # |        500 |        500 |          0 |          0 |          0 |          0 |

######################################################################
cordic_rec._111:
    cmp     $3, 25                      # |    127,218 |    143,058 |          0 |      2,640 |          0 |          0 |
    bne     be_else._194                # |    127,218 |    152,486 |          0 |          0 |          0 |     12,634 |
    mov     $5, $1                      # |      4,893 |      4,893 |          0 |          0 |          0 |          0 |
    ret                                 # |      4,893 |      4,893 |          0 |          0 |          0 |          0 |
be_else._194:
    fcmp    $2, $6                      # |    122,325 |    122,325 |          0 |          0 |          0 |          0 |
    bg      ble_else._195               # |    122,325 |    236,651 |          0 |          0 |          0 |     57,163 |
    fmul    $7, $5, $10                 # |     59,231 |     59,231 |          0 |          0 |          0 |          0 |
    fmul    $7, $4, $9                  # |     59,231 |     59,231 |          0 |          0 |          0 |          0 |
    load    [min_caml_atan_table + $3], $8# |     59,231 |    116,951 |          0 |      2,886 |      6,734 |          0 |
    load    [f._181], $1                # |     59,231 |     59,231 |          0 |          0 |          0 |          0 |
    fadd    $4, $10, $4                 # |     59,231 |    108,973 |     49,742 |          0 |          0 |          0 |
    fsub    $5, $9, $5                  # |     59,231 |     59,231 |          0 |          0 |          0 |          0 |
    fsub    $6, $8, $6                  # |     59,231 |     59,231 |          0 |          0 |          0 |          0 |
    fmul    $7, $1, $7                  # |     59,231 |     59,231 |          0 |          0 |          0 |          0 |
    add     $3, 1, $3                   # |     59,231 |     59,231 |          0 |          0 |          0 |          0 |
    b       cordic_rec._111             # |     59,231 |     60,919 |          0 |          0 |          0 |        844 |
ble_else._195:
    fmul    $7, $5, $10                 # |     63,094 |     79,996 |          0 |      2,817 |          0 |          0 |
    fmul    $7, $4, $9                  # |     63,094 |     63,094 |          0 |          0 |          0 |          0 |
    load    [min_caml_atan_table + $3], $8# |     63,094 |    115,072 |          0 |          0 |      8,663 |          0 |
    load    [f._181], $1                # |     63,094 |     63,130 |          0 |          0 |          6 |          0 |
    fsub    $4, $10, $4                 # |     63,094 |    117,522 |     54,428 |          0 |          0 |          0 |
    fadd    $5, $9, $5                  # |     63,094 |     63,094 |          0 |          0 |          0 |          0 |
    fadd    $6, $8, $6                  # |     63,094 |     63,094 |          0 |          0 |          0 |          0 |
    fmul    $7, $1, $7                  # |     63,094 |     63,094 |          0 |          0 |          0 |          0 |
    add     $3, 1, $3                   # |     63,094 |     63,094 |          0 |          0 |          0 |          0 |
    b       cordic_rec._111             # |     63,094 |     63,740 |          0 |          0 |          0 |        323 |

######################################################################
cordic_sin._82:
    load    [f._183], $4                # |      4,893 |     19,983 |          0 |      2,513 |          2 |          0 |
    load    [f._182], $7                # |      4,893 |      5,073 |          0 |          0 |         30 |          0 |
    li      0, $3                       # |      4,893 |      4,893 |          0 |          0 |          0 |          0 |
    mov     $zero, $6                   # |      4,893 |      4,893 |          0 |          0 |          0 |          0 |
    mov     $zero, $5                   # |      4,893 |      4,893 |          0 |          0 |          0 |          0 |
    b       cordic_rec._111             # |      4,893 |      4,939 |          0 |          0 |          0 |         23 |
.end sin

######################################################################
.begin cos
min_caml_cos:
    load    [f._184], $10               # |      1,004 |      1,016 |          0 |          1 |          1 |          0 |
    fsub    $10, $2, $2                 # |      1,004 |      3,010 |      2,006 |          0 |          0 |          0 |
    b       min_caml_sin                # |      1,004 |      1,038 |          0 |          0 |          0 |         17 |
.end cos

######################################################################
#
#       ↑　ここまで lib_asm.s
#
######################################################################
min_caml_n_objects:
    .skip   1
min_caml_objects:
    .skip   60
min_caml_screen:
    .skip   3
min_caml_viewpoint:
    .skip   3
min_caml_light:
    .skip   3
min_caml_beam:
    .skip   1
min_caml_and_net:
    .skip   50
min_caml_or_net:
    .skip   1
min_caml_solver_dist:
    .skip   1
min_caml_intsec_rectside:
    .skip   1
min_caml_tmin:
    .skip   1
min_caml_intersection_point:
    .skip   3
min_caml_intersected_object_id:
    .skip   1
min_caml_nvector:
    .skip   3
min_caml_texture_color:
    .skip   3
min_caml_diffuse_ray:
    .skip   3
min_caml_rgb:
    .skip   3
min_caml_image_size:
    .skip   2
min_caml_image_center:
    .skip   2
min_caml_scan_pitch:
    .skip   1
min_caml_startp:
    .skip   3
min_caml_startp_fast:
    .skip   3
min_caml_screenx_dir:
    .skip   3
min_caml_screeny_dir:
    .skip   3
min_caml_screenz_dir:
    .skip   3
min_caml_ptrace_dirvec:
    .skip   3
min_caml_dirvecs:
    .skip   5
min_caml_light_dirvec:
    .int    light_dirvec_v3
    .int    light_dirvec_consts
light_dirvec_v3:
    .skip   3
light_dirvec_consts:
    .skip   60
min_caml_reflections:
    .skip   180
min_caml_n_reflections:
    .skip   1
f.27231:    .float  -2.0000000000E+02
f.27230:    .float  2.0000000000E+02
f.27202:    .float  1.2800000000E+02
f.27140:    .float  9.0000000000E-01
f.27139:    .float  2.0000000000E-01
f.27111:    .float  1.5000000000E+02
f.27110:    .float  -1.5000000000E+02
f.27109:    .float  6.6666666667E-03
f.27108:    .float  -6.6666666667E-03
f.27107:    .float  -2.0000000000E+00
f.27106:    .float  3.9062500000E-03
f.27105:    .float  2.5600000000E+02
f.27104:    .float  1.0000000000E+08
f.27103:    .float  1.0000000000E+09
f.27102:    .float  1.0000000000E+01
f.27101:    .float  2.0000000000E+01
f.27100:    .float  5.0000000000E-02
f.27099:    .float  2.5000000000E-01
f.27098:    .float  1.0000000000E-01
f.27097:    .float  3.3333333333E+00
f.27096:    .float  2.5500000000E+02
f.27095:    .float  1.5000000000E-01
f.27094:    .float  3.1830988148E-01
f.27093:    .float  3.1415927000E+00
f.27092:    .float  3.0000000000E+01
f.27091:    .float  1.5000000000E+01
f.27090:    .float  1.0000000000E-04
f.27089:    .float  -1.0000000000E-01
f.27088:    .float  1.0000000000E-02
f.27087:    .float  -2.0000000000E-01
f.27086:    .float  5.0000000000E-01
f.27085:    .float  1.0000000000E+00
f.27084:    .float  -1.0000000000E+00
f.27083:    .float  2.0000000000E+00
f.27070:    .float  1.7453293000E-02

######################################################################
.begin read_nth_object
read_nth_object.2719:
.count stack_move
    sub     $sp, 1, $sp                 # |         18 |         24 |          0 |          1 |          0 |          0 |
    store   $2, [$sp + 0]               # |         18 |         36 |         18 |          0 |          0 |          0 |
    call    min_caml_read_int           # |         18 |         18 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |         18 |         24 |          0 |          1 |          0 |          0 |
    cmp     $10, -1                     # |         18 |         18 |          0 |          0 |          0 |          0 |
    bne     be_else.30927               # |         18 |         32 |          0 |          0 |          0 |          7 |
be_then.30927:
.count stack_move
    add     $sp, 1, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $1                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
be_else.30927:
    call    min_caml_read_int           # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_int           # |         17 |         23 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_int           # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         23 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 0]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 1]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 2]              # |         17 |         23 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 0]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         23 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 1]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 2]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    li      2, $2                       # |         17 |         23 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 0]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         17 |         23 |          0 |          1 |          0 |          0 |
    store   $18, [$17 + 1]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $19, [$18 + 0]              # |         17 |         23 |          0 |          1 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $19, [$18 + 1]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $19, [$18 + 2]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         23 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    cmp     $13, 0                      # |         17 |         17 |          0 |          0 |          0 |          0 |
    be      bne_cont.30928              # |         17 |         21 |          0 |          0 |          0 |          2 |
bne_then.30928:
    call    min_caml_read_float
.count move_ret
    mov     $1, $20
.count load_float
    load    [f.27070], $21
    fmul    $20, $21, $20
    store   $20, [$19 + 0]
    call    min_caml_read_float
.count move_ret
    mov     $1, $20
    fmul    $20, $21, $20
    store   $20, [$19 + 1]
    call    min_caml_read_float
.count move_ret
    mov     $1, $20
    fmul    $20, $21, $20
    store   $20, [$19 + 2]
bne_cont.30928:
    li      4, $2                       # |         17 |         23 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $20                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    fcmp    $zero, $16                  # |         17 |         17 |          0 |          0 |          0 |          0 |
    bg      ble_else.30929              # |         17 |         25 |          0 |          0 |          0 |          4 |
ble_then.30929:
    li      0, $16                      # |         15 |         21 |          0 |          1 |          0 |          0 |
    b       ble_cont.30929              # |         15 |         19 |          0 |          0 |          0 |          2 |
ble_else.30929:
    li      1, $16                      # |          2 |          2 |          0 |          0 |          0 |          0 |
ble_cont.30929:
    cmp     $11, 2                      # |         17 |         17 |          0 |          0 |          0 |          0 |
    bne     be_else.30930               # |         17 |         31 |          0 |          0 |          0 |          7 |
be_then.30930:
    li      1, $21                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    b       be_cont.30930               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.30930:
    mov     $16, $21                    # |         15 |         15 |          0 |          0 |          0 |          0 |
be_cont.30930:
    mov     $hp, $22                    # |         17 |         23 |          0 |          1 |          0 |          0 |
    add     $hp, 11, $hp                # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $20, [$22 + 10]             # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $19, [$22 + 9]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $18, [$22 + 8]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $17, [$22 + 7]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $21, [$22 + 6]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $15, [$22 + 5]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $14, [$22 + 4]              # |         17 |         23 |          0 |          1 |          0 |          0 |
    store   $13, [$22 + 3]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $12, [$22 + 2]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $11, [$22 + 1]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $10, [$22 + 0]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    mov     $22, $12                    # |         17 |         17 |          0 |          0 |          0 |          0 |
    load    [$sp + 0], $15              # |         17 |         23 |          0 |          0 |          1 |          0 |
    cmp     $11, 3                      # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $12, [min_caml_objects + $15]# |         17 |         38 |         15 |          1 |          0 |          0 |
    bne     be_else.30931               # |         17 |         37 |          0 |          0 |          0 |         10 |
be_then.30931:
    load    [$14 + 0], $11              # |          9 |         63 |          0 |          0 |          9 |          0 |
    fcmp    $11, $zero                  # |          9 |          9 |          0 |          0 |          0 |          0 |
    bne     be_else.30932               # |          9 |         13 |          0 |          0 |          0 |          2 |
be_then.30932:
    mov     $zero, $11                  # |          2 |          2 |          0 |          0 |          0 |          0 |
    b       be_cont.30932               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.30932:
    fcmp    $11, $zero                  # |          7 |          7 |          0 |          0 |          0 |          0 |
    bne     be_else.30933               # |          7 |         17 |          0 |          1 |          0 |          2 |
be_then.30933:
    fmul    $11, $11, $11
    finv    $11, $11
    mov     $zero, $11
    b       be_cont.30933
be_else.30933:
    fcmp    $11, $zero                  # |          7 |          7 |          0 |          0 |          0 |          0 |
    fmul    $11, $11, $11               # |          7 |          7 |          0 |          0 |          0 |          0 |
    finv    $11, $11                    # |          7 |         35 |         28 |          0 |          0 |          0 |
    bg      ble_cont.30934              # |          7 |         17 |          0 |          1 |          0 |          2 |
ble_then.30934:
    fneg    $11, $11
ble_cont.30934:
be_cont.30933:
be_cont.30932:
    store   $11, [$14 + 0]              # |          9 |         25 |         16 |          0 |          0 |          0 |
    load    [$14 + 1], $11              # |          9 |          9 |          0 |          0 |          0 |          0 |
    fcmp    $11, $zero                  # |          9 |         27 |         18 |          0 |          0 |          0 |
    bne     be_else.30935               # |          9 |         17 |          0 |          0 |          0 |          4 |
be_then.30935:
    mov     $zero, $11
    b       be_cont.30935
be_else.30935:
    fcmp    $11, $zero                  # |          9 |         15 |          0 |          1 |          0 |          0 |
    bne     be_else.30936               # |          9 |         17 |          0 |          0 |          0 |          4 |
be_then.30936:
    fmul    $11, $11, $11
    finv    $11, $11
    mov     $zero, $11
    b       be_cont.30936
be_else.30936:
    fcmp    $11, $zero                  # |          9 |          9 |          0 |          0 |          0 |          0 |
    fmul    $11, $11, $11               # |          9 |          9 |          0 |          0 |          0 |          0 |
    finv    $11, $11                    # |          9 |         47 |         32 |          1 |          0 |          0 |
    bg      ble_cont.30937              # |          9 |         17 |          0 |          0 |          0 |          4 |
ble_then.30937:
    fneg    $11, $11
ble_cont.30937:
be_cont.30936:
be_cont.30935:
    store   $11, [$14 + 1]              # |          9 |         28 |         19 |          0 |          0 |          0 |
    load    [$14 + 2], $11              # |          9 |          9 |          0 |          0 |          0 |          0 |
    fcmp    $11, $zero                  # |          9 |         27 |         18 |          0 |          0 |          0 |
    bne     be_else.30938               # |          9 |         17 |          0 |          0 |          0 |          4 |
be_then.30938:
    mov     $zero, $11
    b       be_cont.30938
be_else.30938:
    fcmp    $11, $zero                  # |          9 |         15 |          0 |          1 |          0 |          0 |
    bne     be_else.30939               # |          9 |         17 |          0 |          0 |          0 |          4 |
be_then.30939:
    fmul    $11, $11, $11
    finv    $11, $11
    mov     $zero, $11
    b       be_cont.30939
be_else.30939:
    fcmp    $11, $zero                  # |          9 |          9 |          0 |          0 |          0 |          0 |
    fmul    $11, $11, $11               # |          9 |         15 |          0 |          1 |          0 |          0 |
    finv    $11, $11                    # |          9 |         45 |         36 |          0 |          0 |          0 |
    bg      ble_cont.30940              # |          9 |         17 |          0 |          0 |          0 |          4 |
ble_then.30940:
    fneg    $11, $11
ble_cont.30940:
be_cont.30939:
be_cont.30938:
    store   $11, [$14 + 2]              # |          9 |         28 |         19 |          0 |          0 |          0 |
    cmp     $13, 0                      # |          9 |          9 |          0 |          0 |          0 |          0 |
    bne     be_else.30941               # |          9 |          9 |          0 |          0 |          0 |          0 |
be_then.30941:
.count stack_move
    add     $sp, 1, $sp                 # |          9 |          9 |          0 |          0 |          0 |          0 |
    li      1, $1                       # |          9 |         15 |          0 |          1 |          0 |          0 |
    ret                                 # |          9 |          9 |          0 |          0 |          0 |          0 |
be_else.30941:
    load    [$19 + 0], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $11
    load    [$19 + 0], $2
    call    min_caml_sin
.count move_ret
    mov     $1, $12
    load    [$19 + 1], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $13
    load    [$19 + 1], $2
    call    min_caml_sin
.count move_ret
    mov     $1, $15
    load    [$19 + 2], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $16
    load    [$19 + 2], $2
    call    min_caml_sin
.count stack_move
    add     $sp, 1, $sp
    fmul    $13, $16, $2
    load    [$14 + 0], $4
    fmul    $13, $1, $5
    load    [$14 + 1], $7
    load    [$14 + 2], $9
    fmul    $2, $2, $3
    fmul    $11, $1, $10
    fmul    $5, $5, $6
    fmul    $11, $16, $17
    fmul    $4, $2, $2
    fmul    $4, $3, $3
    fmul    $7, $5, $5
    fmul    $7, $6, $6
    fadd    $3, $6, $3
    fneg    $15, $6
    fmul    $6, $6, $8
    fmul    $9, $8, $8
    fadd    $3, $8, $3
    store   $3, [$14 + 0]
    fmul    $12, $15, $3
    fmul    $3, $16, $8
    fmul    $3, $1, $3
    fsub    $8, $10, $8
    fadd    $3, $17, $3
    fmul    $8, $8, $10
    fmul    $3, $3, $17
    fmul    $4, $10, $10
    fmul    $7, $17, $17
    fadd    $10, $17, $10
    fmul    $12, $13, $17
    fmul    $17, $17, $18
    fmul    $9, $18, $18
    fadd    $10, $18, $10
    fmul    $12, $1, $18
    store   $10, [$14 + 1]
    fmul    $11, $15, $10
    fmul    $11, $13, $11
    fmul    $7, $3, $13
    fmul    $10, $16, $15
    fmul    $10, $1, $1
    fmul    $12, $16, $10
    fmul    $11, $11, $12
    fadd    $15, $18, $15
    fsub    $1, $10, $1
    fmul    $9, $12, $12
    fmul    $15, $15, $18
    fmul    $1, $1, $10
    fmul    $13, $1, $13
    fmul    $5, $1, $1
    fmul    $4, $18, $18
    fmul    $7, $10, $10
    fadd    $18, $10, $10
    fadd    $10, $12, $10
    fmul    $4, $8, $12
    fmul    $2, $15, $4
    store   $10, [$14 + 2]
.count load_float
    load    [f.27083], $10
    fmul    $12, $15, $12
    fadd    $4, $1, $1
    fmul    $9, $6, $4
    fadd    $12, $13, $12
    fmul    $9, $17, $13
    fmul    $4, $11, $6
    fmul    $13, $11, $13
    fadd    $1, $6, $1
    fadd    $12, $13, $12
    fmul    $10, $1, $1
    fmul    $10, $12, $12
    store   $12, [$19 + 0]
    store   $1, [$19 + 1]
    fmul    $2, $8, $1
    fmul    $5, $3, $2
    fadd    $1, $2, $1
    fmul    $4, $17, $2
    fadd    $1, $2, $1
    fmul    $10, $1, $1
    store   $1, [$19 + 2]
    li      1, $1
    ret
be_else.30931:
    cmp     $11, 2                      # |          8 |         14 |          0 |          1 |          0 |          0 |
    bne     be_else.30942               # |          8 |         12 |          0 |          0 |          0 |          2 |
be_then.30942:
    load    [$14 + 0], $11              # |          2 |         14 |          0 |          0 |          2 |          0 |
    cmp     $16, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.30943               # |          2 |          2 |          0 |          0 |          0 |          0 |
be_then.30943:
    li      1, $12                      # |          2 |          8 |          0 |          1 |          0 |          0 |
    b       be_cont.30943               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.30943:
    li      0, $12
be_cont.30943:
    fmul    $11, $11, $15               # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [$14 + 1], $16              # |          2 |          2 |          0 |          0 |          0 |          0 |
    fmul    $16, $16, $16               # |          2 |          6 |          4 |          0 |          0 |          0 |
    fadd    $15, $16, $15               # |          2 |         10 |          8 |          0 |          0 |          0 |
    load    [$14 + 2], $16              # |          2 |          2 |          0 |          0 |          0 |          0 |
    fmul    $16, $16, $16               # |          2 |         10 |          2 |          1 |          0 |          0 |
    fadd    $15, $16, $15               # |          2 |         10 |          8 |          0 |          0 |          0 |
    fsqrt   $15, $15                    # |          2 |         10 |          8 |          0 |          0 |          0 |
    fcmp    $15, $zero                  # |          2 |         10 |          8 |          0 |          0 |          0 |
    bne     be_else.30944               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_then.30944:
    mov     $36, $12
    b       be_cont.30944
be_else.30944:
    cmp     $12, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    finv    $15, $12                    # |          2 |          8 |          0 |          1 |          0 |          0 |
    be      bne_cont.30945              # |          2 |          2 |          0 |          0 |          0 |          0 |
bne_then.30945:
    fneg    $12, $12                    # |          2 |          8 |          6 |          0 |          0 |          0 |
bne_cont.30945:
be_cont.30944:
    fmul    $11, $12, $11               # |          2 |          4 |          2 |          0 |          0 |          0 |
    cmp     $13, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $11, [$14 + 0]              # |          2 |          8 |          6 |          0 |          0 |          0 |
    load    [$14 + 1], $11              # |          2 |          2 |          0 |          0 |          0 |          0 |
    fmul    $11, $12, $11               # |          2 |          6 |          4 |          0 |          0 |          0 |
    store   $11, [$14 + 1]              # |          2 |         12 |          4 |          1 |          0 |          0 |
    load    [$14 + 2], $11              # |          2 |          2 |          0 |          0 |          0 |          0 |
    fmul    $11, $12, $11               # |          2 |          6 |          4 |          0 |          0 |          0 |
    store   $11, [$14 + 2]              # |          2 |         10 |          8 |          0 |          0 |          0 |
    bne     be_else.30946               # |          2 |          2 |          0 |          0 |          0 |          0 |
be_then.30946:
.count stack_move
    add     $sp, 1, $sp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      1, $1                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    ret                                 # |          2 |          2 |          0 |          0 |          0 |          0 |
be_else.30946:
    load    [$19 + 0], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $11
    load    [$19 + 0], $2
    call    min_caml_sin
.count move_ret
    mov     $1, $12
    load    [$19 + 1], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $13
    load    [$19 + 1], $2
    call    min_caml_sin
.count move_ret
    mov     $1, $15
    load    [$19 + 2], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $16
    load    [$19 + 2], $2
    call    min_caml_sin
.count stack_move
    add     $sp, 1, $sp
    fmul    $13, $16, $2
    load    [$14 + 0], $4
    fmul    $13, $1, $5
    load    [$14 + 1], $7
    load    [$14 + 2], $9
    fmul    $2, $2, $3
    fmul    $11, $1, $10
    fmul    $5, $5, $6
    fmul    $11, $16, $17
    fmul    $4, $2, $2
    fmul    $4, $3, $3
    fmul    $7, $5, $5
    fmul    $7, $6, $6
    fadd    $3, $6, $3
    fneg    $15, $6
    fmul    $6, $6, $8
    fmul    $9, $8, $8
    fadd    $3, $8, $3
    store   $3, [$14 + 0]
    fmul    $12, $15, $3
    fmul    $3, $16, $8
    fmul    $3, $1, $3
    fsub    $8, $10, $8
    fadd    $3, $17, $3
    fmul    $8, $8, $10
    fmul    $3, $3, $17
    fmul    $4, $10, $10
    fmul    $7, $17, $17
    fadd    $10, $17, $10
    fmul    $12, $13, $17
    fmul    $17, $17, $18
    fmul    $9, $18, $18
    fadd    $10, $18, $10
    fmul    $12, $1, $18
    store   $10, [$14 + 1]
    fmul    $11, $15, $10
    fmul    $11, $13, $11
    fmul    $7, $3, $13
    fmul    $10, $16, $15
    fmul    $10, $1, $1
    fmul    $12, $16, $10
    fmul    $11, $11, $12
    fadd    $15, $18, $15
    fsub    $1, $10, $1
    fmul    $9, $12, $12
    fmul    $15, $15, $18
    fmul    $1, $1, $10
    fmul    $13, $1, $13
    fmul    $5, $1, $1
    fmul    $4, $18, $18
    fmul    $7, $10, $10
    fadd    $18, $10, $10
    fadd    $10, $12, $10
    fmul    $4, $8, $12
    fmul    $2, $15, $4
    store   $10, [$14 + 2]
.count load_float
    load    [f.27083], $10
    fmul    $12, $15, $12
    fadd    $4, $1, $1
    fmul    $9, $6, $4
    fadd    $12, $13, $12
    fmul    $9, $17, $13
    fmul    $4, $11, $6
    fmul    $13, $11, $13
    fadd    $1, $6, $1
    fadd    $12, $13, $12
    fmul    $10, $1, $1
    fmul    $10, $12, $12
    store   $12, [$19 + 0]
    store   $1, [$19 + 1]
    fmul    $2, $8, $1
    fmul    $5, $3, $2
    fadd    $1, $2, $1
    fmul    $4, $17, $2
    fadd    $1, $2, $1
    fmul    $10, $1, $1
    store   $1, [$19 + 2]
    li      1, $1
    ret
be_else.30942:
    cmp     $13, 0                      # |          6 |         12 |          0 |          1 |          0 |          0 |
    bne     be_else.30947               # |          6 |          6 |          0 |          0 |          0 |          0 |
be_then.30947:
.count stack_move
    add     $sp, 1, $sp                 # |          6 |          6 |          0 |          0 |          0 |          0 |
    li      1, $1                       # |          6 |          6 |          0 |          0 |          0 |          0 |
    ret                                 # |          6 |          6 |          0 |          0 |          0 |          0 |
be_else.30947:
    load    [$19 + 0], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $11
    load    [$19 + 0], $2
    call    min_caml_sin
.count move_ret
    mov     $1, $12
    load    [$19 + 1], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $13
    load    [$19 + 1], $2
    call    min_caml_sin
.count move_ret
    mov     $1, $15
    load    [$19 + 2], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $16
    load    [$19 + 2], $2
    call    min_caml_sin
.count stack_move
    add     $sp, 1, $sp
    fmul    $13, $16, $2
    load    [$14 + 0], $4
    fmul    $13, $1, $5
    load    [$14 + 1], $7
    load    [$14 + 2], $9
    fmul    $2, $2, $3
    fmul    $11, $1, $10
    fmul    $5, $5, $6
    fmul    $11, $16, $17
    fmul    $4, $2, $2
    fmul    $4, $3, $3
    fmul    $7, $5, $5
    fmul    $7, $6, $6
    fadd    $3, $6, $3
    fneg    $15, $6
    fmul    $6, $6, $8
    fmul    $9, $8, $8
    fadd    $3, $8, $3
    store   $3, [$14 + 0]
    fmul    $12, $15, $3
    fmul    $3, $16, $8
    fmul    $3, $1, $3
    fsub    $8, $10, $8
    fadd    $3, $17, $3
    fmul    $8, $8, $10
    fmul    $3, $3, $17
    fmul    $4, $10, $10
    fmul    $7, $17, $17
    fadd    $10, $17, $10
    fmul    $12, $13, $17
    fmul    $17, $17, $18
    fmul    $9, $18, $18
    fadd    $10, $18, $10
    fmul    $12, $1, $18
    store   $10, [$14 + 1]
    fmul    $11, $15, $10
    fmul    $11, $13, $11
    fmul    $7, $3, $13
    fmul    $10, $16, $15
    fmul    $10, $1, $1
    fmul    $12, $16, $10
    fmul    $11, $11, $12
    fadd    $15, $18, $15
    fsub    $1, $10, $1
    fmul    $9, $12, $12
    fmul    $15, $15, $18
    fmul    $1, $1, $10
    fmul    $13, $1, $13
    fmul    $5, $1, $1
    fmul    $4, $18, $18
    fmul    $7, $10, $10
    fadd    $18, $10, $10
    fadd    $10, $12, $10
    fmul    $4, $8, $12
    fmul    $2, $15, $4
    store   $10, [$14 + 2]
.count load_float
    load    [f.27083], $10
    fmul    $12, $15, $12
    fadd    $4, $1, $1
    fmul    $9, $6, $4
    fadd    $12, $13, $12
    fmul    $9, $17, $13
    fmul    $4, $11, $6
    fmul    $13, $11, $13
    fadd    $1, $6, $1
    fadd    $12, $13, $12
    fmul    $10, $1, $1
    fmul    $10, $12, $12
    store   $12, [$19 + 0]
    store   $1, [$19 + 1]
    fmul    $2, $8, $1
    fmul    $5, $3, $2
    fadd    $1, $2, $1
    fmul    $4, $17, $2
    fadd    $1, $2, $1
    fmul    $10, $1, $1
    store   $1, [$19 + 2]
    li      1, $1
    ret
.end read_nth_object

######################################################################
.begin read_object
read_object.2721:
    cmp     $2, 60                      # |          2 |          8 |          0 |          1 |          0 |          0 |
    bl      bge_else.30948              # |          2 |         12 |          0 |          1 |          0 |          2 |
bge_then.30948:
    ret
bge_else.30948:
.count stack_move
    sub     $sp, 8, $sp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 0]               # |          2 |          4 |          2 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $23, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.30949               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_then.30949:
.count stack_move
    add     $sp, 8, $sp
    load    [$sp - 8], $1
.count move_float
    mov     $1, $41
    ret
be_else.30949:
    load    [$sp + 0], $23              # |          2 |          8 |          0 |          1 |          0 |          0 |
    add     $23, 1, $2                  # |          2 |          6 |          4 |          0 |          0 |          0 |
    cmp     $2, 60                      # |          2 |          4 |          2 |          0 |          0 |          0 |
    bl      bge_else.30950              # |          2 |          6 |          0 |          0 |          0 |          2 |
bge_then.30950:
.count stack_move
    add     $sp, 8, $sp
    ret
bge_else.30950:
    store   $2, [$sp + 1]               # |          2 |          8 |          0 |          1 |          0 |          0 |
    call    read_nth_object.2719        # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $23, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.30951               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_then.30951:
.count stack_move
    add     $sp, 8, $sp
    load    [$sp - 7], $1
.count move_float
    mov     $1, $41
    ret
be_else.30951:
    load    [$sp + 1], $23              # |          2 |          8 |          0 |          1 |          0 |          0 |
    add     $23, 1, $2                  # |          2 |          6 |          4 |          0 |          0 |          0 |
    cmp     $2, 60                      # |          2 |          4 |          2 |          0 |          0 |          0 |
    bl      bge_else.30952              # |          2 |          6 |          0 |          0 |          0 |          2 |
bge_then.30952:
.count stack_move
    add     $sp, 8, $sp
    ret
bge_else.30952:
    store   $2, [$sp + 2]               # |          2 |          8 |          0 |          1 |          0 |          0 |
    call    read_nth_object.2719        # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $23, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.30953               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_then.30953:
.count stack_move
    add     $sp, 8, $sp
    load    [$sp - 6], $1
.count move_float
    mov     $1, $41
    ret
be_else.30953:
    load    [$sp + 2], $23              # |          2 |          8 |          0 |          1 |          0 |          0 |
    add     $23, 1, $2                  # |          2 |          6 |          4 |          0 |          0 |          0 |
    cmp     $2, 60                      # |          2 |          4 |          2 |          0 |          0 |          0 |
    bl      bge_else.30954              # |          2 |          6 |          0 |          0 |          0 |          2 |
bge_then.30954:
.count stack_move
    add     $sp, 8, $sp
    ret
bge_else.30954:
    store   $2, [$sp + 3]               # |          2 |          8 |          0 |          1 |          0 |          0 |
    call    read_nth_object.2719        # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $23, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.30955               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_then.30955:
.count stack_move
    add     $sp, 8, $sp
    load    [$sp - 5], $1
.count move_float
    mov     $1, $41
    ret
be_else.30955:
    load    [$sp + 3], $23              # |          2 |         14 |          0 |          1 |          1 |          0 |
    add     $23, 1, $2                  # |          2 |          4 |          2 |          0 |          0 |          0 |
    cmp     $2, 60                      # |          2 |          4 |          2 |          0 |          0 |          0 |
    bl      bge_else.30956              # |          2 |          6 |          0 |          0 |          0 |          2 |
bge_then.30956:
.count stack_move
    add     $sp, 8, $sp
    ret
bge_else.30956:
    store   $2, [$sp + 4]               # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          2 |          8 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $23, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.30957               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_then.30957:
.count stack_move
    add     $sp, 8, $sp
    load    [$sp - 4], $1
.count move_float
    mov     $1, $41
    ret
be_else.30957:
    load    [$sp + 4], $23              # |          2 |          8 |          0 |          1 |          0 |          0 |
    add     $23, 1, $2                  # |          2 |          6 |          4 |          0 |          0 |          0 |
    cmp     $2, 60                      # |          2 |          4 |          2 |          0 |          0 |          0 |
    bl      bge_else.30958              # |          2 |          6 |          0 |          0 |          0 |          2 |
bge_then.30958:
.count stack_move
    add     $sp, 8, $sp
    ret
bge_else.30958:
    store   $2, [$sp + 5]               # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    cmp     $23, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.30959               # |          2 |          4 |          0 |          0 |          0 |          1 |
be_then.30959:
.count stack_move
    add     $sp, 8, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp - 3], $1               # |          1 |          2 |          1 |          0 |          0 |          0 |
.count move_float
    mov     $1, $41                     # |          1 |          3 |          2 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
be_else.30959:
    load    [$sp + 5], $23              # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $23, 1, $2                  # |          1 |          7 |          0 |          1 |          0 |          0 |
    cmp     $2, 60                      # |          1 |          2 |          1 |          0 |          0 |          0 |
    bl      bge_else.30960              # |          1 |          3 |          0 |          0 |          0 |          1 |
bge_then.30960:
.count stack_move
    add     $sp, 8, $sp
    ret
bge_else.30960:
    store   $2, [$sp + 6]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $23, 0                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.30961               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.30961:
.count stack_move
    add     $sp, 8, $sp
    load    [$sp - 2], $1
.count move_float
    mov     $1, $41
    ret
be_else.30961:
    load    [$sp + 6], $23              # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $23, 1, $2                  # |          1 |          3 |          2 |          0 |          0 |          0 |
    cmp     $2, 60                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bl      bge_else.30962              # |          1 |          3 |          0 |          0 |          0 |          1 |
bge_then.30962:
.count stack_move
    add     $sp, 8, $sp
    ret
bge_else.30962:
    store   $2, [$sp + 7]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 8, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp - 1], $1               # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.30963               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.30963:
.count move_float
    mov     $1, $41
    ret
be_else.30963:
    add     $1, 1, $2                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       read_object.2721            # |          1 |          3 |          0 |          0 |          0 |          1 |
.end read_object

######################################################################
.begin read_net_item
read_net_item.2725:
.count stack_move
    sub     $sp, 8, $sp                 # |          7 |          7 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 0]               # |          7 |         14 |          7 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          7 |         13 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          7 |          7 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          7 |          7 |          0 |          0 |          0 |          0 |
    bne     be_else.30964               # |          7 |         11 |          0 |          0 |          0 |          2 |
be_then.30964:
.count stack_move
    add     $sp, 8, $sp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $zero, -1, $3               # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [$sp - 8], $10              # |          2 |          8 |          0 |          0 |          1 |          0 |
    add     $10, 1, $2                  # |          2 |          4 |          2 |          0 |          0 |          0 |
    b       min_caml_create_array       # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.30964:
    call    min_caml_read_int           # |          5 |         11 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 0], $12              # |          5 |         17 |          0 |          0 |          2 |          0 |
    cmp     $11, -1                     # |          5 |          5 |          0 |          0 |          0 |          0 |
    add     $12, 1, $13                 # |          5 |          8 |          3 |          0 |          0 |          0 |
    bne     be_else.30965               # |          5 |          7 |          0 |          0 |          0 |          1 |
be_then.30965:
    add     $13, 1, $2                  # |          3 |          3 |          0 |          0 |          0 |          0 |
    add     $zero, -1, $3               # |          3 |          9 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          3 |          3 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 8, $sp                 # |          3 |          3 |          0 |          0 |          0 |          0 |
.count storer
    add     $1, $12, $tmp               # |          3 |          3 |          0 |          0 |          0 |          0 |
    store   $10, [$tmp + 0]             # |          3 |          6 |          3 |          0 |          0 |          0 |
    ret                                 # |          3 |          3 |          0 |          0 |          0 |          0 |
be_else.30965:
    call    min_caml_read_int           # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $13, 1, $15                 # |          2 |          8 |          0 |          1 |          0 |          0 |
    cmp     $14, -1                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.30966               # |          2 |          4 |          0 |          0 |          0 |          1 |
be_then.30966:
    add     $15, 1, $2                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $zero, -1, $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 8, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $1, $13, $tmp               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$tmp + 0]             # |          1 |          2 |          1 |          0 |          0 |          0 |
.count storer
    add     $1, $12, $tmp               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$tmp + 0]             # |          1 |          2 |          1 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
be_else.30966:
    call    min_caml_read_int           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $15, 1, $17                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $16, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $17, 1, $2                  # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.30967               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.30967:
    add     $zero, -1, $3
    call    min_caml_create_array
.count stack_move
    add     $sp, 8, $sp
.count storer
    add     $1, $15, $tmp
    store   $14, [$tmp + 0]
.count storer
    add     $1, $13, $tmp
    store   $11, [$tmp + 0]
.count storer
    add     $1, $12, $tmp
    store   $10, [$tmp + 0]
    ret
be_else.30967:
    store   $10, [$sp + 1]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $13, [$sp + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$sp + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$sp + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $14, [$sp + 5]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $17, [$sp + 6]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$sp + 7]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 8, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp - 2], $2               # |          1 |          2 |          1 |          0 |          0 |          0 |
    load    [$sp - 1], $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $1, $2, $tmp                # |          1 |          2 |          1 |          0 |          0 |          0 |
    store   $3, [$tmp + 0]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$sp - 4], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp - 3], $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $1, $2, $tmp                # |          1 |          2 |          1 |          0 |          0 |          0 |
    store   $3, [$tmp + 0]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    load    [$sp - 6], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp - 5], $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $1, $2, $tmp                # |          1 |          2 |          1 |          0 |          0 |          0 |
    store   $3, [$tmp + 0]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$sp - 8], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp - 7], $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $1, $2, $tmp                # |          1 |          2 |          1 |          0 |          0 |          0 |
    store   $3, [$tmp + 0]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.end read_net_item

######################################################################
.begin read_or_network
read_or_network.2727:
.count stack_move
    sub     $sp, 9, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 0]               # |          1 |          2 |          1 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.30968               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.30968:
    li      1, $2
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $10
    b       be_cont.30968
be_else.30968:
    call    min_caml_read_int           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $11, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.30969               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.30969:
    li      2, $2
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $11
    store   $10, [$11 + 0]
    mov     $11, $10
    b       be_cont.30969
be_else.30969:
    call    min_caml_read_int           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $12, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.30970               # |          1 |          9 |          0 |          1 |          0 |          1 |
be_then.30970:
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $12
    store   $11, [$12 + 1]
    store   $10, [$12 + 0]
    mov     $12, $10
    b       be_cont.30970
be_else.30970:
    store   $10, [$sp + 1]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $11, [$sp + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$sp + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $11              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 2]              # |          1 |          3 |          2 |          0 |          0 |          0 |
    load    [$sp + 2], $11              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 1]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$sp + 1], $11              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 0]              # |          1 |          3 |          2 |          0 |          0 |          0 |
be_cont.30970:
be_cont.30969:
be_cont.30968:
    mov     $10, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $10               # |          1 |          7 |          0 |          0 |          1 |          0 |
    cmp     $10, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.30971               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.30971:
.count stack_move
    add     $sp, 9, $sp
    load    [$sp - 9], $10
    add     $10, 1, $2
    b       min_caml_create_array
be_else.30971:
    store   $3, [$sp + 4]               # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_read_int           # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.30972               # |          1 |          1 |          0 |          0 |          0 |          0 |
be_then.30972:
    li      1, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    add     $zero, -1, $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       be_cont.30972               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_else.30972:
    call    min_caml_read_int
.count move_ret
    mov     $1, $11
    cmp     $11, -1
    li      2, $2
    bne     be_else.30973
be_then.30973:
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $11
    store   $10, [$11 + 0]
    mov     $11, $10
    b       be_cont.30973
be_else.30973:
    store   $10, [$sp + 5]
    store   $11, [$sp + 6]
    call    read_net_item.2725
.count move_ret
    mov     $1, $10
    load    [$sp + 6], $11
    store   $11, [$10 + 1]
    load    [$sp + 5], $11
    store   $11, [$10 + 0]
be_cont.30973:
be_cont.30972:
    mov     $10, $3                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$3 + 0], $10               # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [$sp + 0], $11              # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $11, 1, $12                 # |          1 |          2 |          1 |          0 |          0 |          0 |
    add     $12, 1, $2                  # |          1 |          2 |          1 |          0 |          0 |          0 |
    bne     be_else.30974               # |          1 |          1 |          0 |          0 |          0 |          0 |
be_then.30974:
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 9, $sp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
.count storer
    add     $1, $11, $tmp               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp - 5], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$tmp + 0]              # |          1 |          3 |          2 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
be_else.30974:
    store   $12, [$sp + 7]
    store   $3, [$sp + 8]
    call    read_or_network.2727
.count stack_move
    add     $sp, 9, $sp
    load    [$sp - 2], $2
    load    [$sp - 1], $3
.count storer
    add     $1, $2, $tmp
    store   $3, [$tmp + 0]
    load    [$sp - 9], $2
    load    [$sp - 5], $3
.count storer
    add     $1, $2, $tmp
    store   $3, [$tmp + 0]
    ret
.end read_or_network

######################################################################
.begin read_and_network
read_and_network.2729:
.count stack_move
    sub     $sp, 13, $sp                # |          3 |          9 |          0 |          1 |          0 |          0 |
    store   $2, [$sp + 0]               # |          3 |          6 |          3 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          3 |          3 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          3 |          3 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          3 |          3 |          0 |          0 |          0 |          0 |
    bne     be_else.30975               # |          3 |          9 |          0 |          0 |          0 |          3 |
be_then.30975:
    li      1, $2
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $10
    b       be_cont.30975
be_else.30975:
    call    min_caml_read_int           # |          3 |          9 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          3 |          3 |          0 |          0 |          0 |          0 |
    cmp     $11, -1                     # |          3 |          3 |          0 |          0 |          0 |          0 |
    bne     be_else.30976               # |          3 |         13 |          0 |          1 |          0 |          2 |
be_then.30976:
    li      2, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $zero, -1, $3               # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $11, $10                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    b       be_cont.30976               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.30976:
    call    min_caml_read_int           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $12, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.30977               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.30977:
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $12
    store   $11, [$12 + 1]
    store   $10, [$12 + 0]
    mov     $12, $10
    b       be_cont.30977
be_else.30977:
    store   $10, [$sp + 1]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $11, [$sp + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$sp + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$sp + 3], $11              # |          1 |          7 |          0 |          0 |          1 |          0 |
    store   $11, [$10 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 2], $11              # |          1 |          7 |          0 |          0 |          1 |          0 |
    store   $11, [$10 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 1], $11              # |          1 |          7 |          0 |          0 |          1 |          0 |
    store   $11, [$10 + 0]              # |          1 |          1 |          0 |          0 |          0 |          0 |
be_cont.30977:
be_cont.30976:
be_cont.30975:
    load    [$10 + 0], $11              # |          3 |         21 |          0 |          0 |          3 |          0 |
    cmp     $11, -1                     # |          3 |          9 |          0 |          1 |          0 |          0 |
    bne     be_else.30978               # |          3 |          9 |          0 |          0 |          0 |          3 |
be_then.30978:
.count stack_move
    add     $sp, 13, $sp
    ret
be_else.30978:
    load    [$sp + 0], $11              # |          3 |          9 |          0 |          0 |          1 |          0 |
    store   $10, [min_caml_and_net + $11]# |          3 |          7 |          4 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          3 |          3 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          3 |          3 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          3 |          9 |          0 |          1 |          0 |          0 |
    bne     be_else.30979               # |          3 |          7 |          0 |          0 |          0 |          2 |
be_then.30979:
    li      1, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $zero, -1, $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       be_cont.30979               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_else.30979:
    call    min_caml_read_int           # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    cmp     $11, -1                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      2, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.30980               # |          2 |          4 |          0 |          0 |          0 |          1 |
be_then.30980:
    add     $zero, -1, $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 0]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $11, $10                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       be_cont.30980               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_else.30980:
    store   $10, [$sp + 4]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $11, [$sp + 5]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 5], $11              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 1]              # |          1 |          3 |          2 |          0 |          0 |          0 |
    load    [$sp + 4], $11              # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $11, [$10 + 0]              # |          1 |          3 |          2 |          0 |          0 |          0 |
be_cont.30980:
be_cont.30979:
    load    [$10 + 0], $11              # |          3 |          9 |          0 |          0 |          1 |          0 |
    cmp     $11, -1                     # |          3 |          7 |          4 |          0 |          0 |          0 |
    bne     be_else.30981               # |          3 |          7 |          0 |          0 |          0 |          2 |
be_then.30981:
.count stack_move
    add     $sp, 13, $sp                # |          1 |          1 |          0 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
be_else.30981:
    load    [$sp + 0], $11              # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $11, 1, $11                 # |          2 |         10 |          2 |          1 |          0 |          0 |
    store   $11, [$sp + 6]              # |          2 |          4 |          2 |          0 |          0 |          0 |
    store   $10, [min_caml_and_net + $11]# |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.30982               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_then.30982:
    li      1, $2
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $10
    b       be_cont.30982
be_else.30982:
    call    min_caml_read_int           # |          2 |          8 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    cmp     $11, -1                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.30983               # |          2 |          2 |          0 |          0 |          0 |          0 |
be_then.30983:
    li      2, $2                       # |          2 |          8 |          0 |          1 |          0 |          0 |
    add     $zero, -1, $3               # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $11, $10                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    b       be_cont.30983               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.30983:
    call    min_caml_read_int
.count move_ret
    mov     $1, $12
    cmp     $12, -1
    li      3, $2
    bne     be_else.30984
be_then.30984:
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $12
    store   $11, [$12 + 1]
    store   $10, [$12 + 0]
    mov     $12, $10
    b       be_cont.30984
be_else.30984:
    store   $10, [$sp + 7]
    store   $11, [$sp + 8]
    store   $12, [$sp + 9]
    call    read_net_item.2725
.count move_ret
    mov     $1, $10
    load    [$sp + 9], $11
    store   $11, [$10 + 2]
    load    [$sp + 8], $11
    store   $11, [$10 + 1]
    load    [$sp + 7], $11
    store   $11, [$10 + 0]
be_cont.30984:
be_cont.30983:
be_cont.30982:
    load    [$10 + 0], $11              # |          2 |         20 |          0 |          1 |          2 |          0 |
    cmp     $11, -1                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.30985               # |          2 |         12 |          0 |          1 |          0 |          2 |
be_then.30985:
.count stack_move
    add     $sp, 13, $sp
    ret
be_else.30985:
    load    [$sp + 6], $11              # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $11, 1, $11                 # |          2 |          6 |          4 |          0 |          0 |          0 |
    store   $11, [$sp + 10]             # |          2 |          4 |          2 |          0 |          0 |          0 |
    store   $10, [min_caml_and_net + $11]# |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    cmp     $10, -1                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.30986               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_then.30986:
    li      1, $2
    add     $zero, -1, $3
    call    min_caml_create_array
    b       be_cont.30986
be_else.30986:
    call    min_caml_read_int           # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          8 |          0 |          1 |          0 |          0 |
    cmp     $11, -1                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      2, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.30987               # |          2 |          4 |          0 |          0 |          0 |          1 |
be_then.30987:
    add     $zero, -1, $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$1 + 0]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       be_cont.30987               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_else.30987:
    store   $10, [$sp + 11]             # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $11, [$sp + 12]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 12], $2              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$1 + 1]                # |          1 |          3 |          2 |          0 |          0 |          0 |
    load    [$sp + 11], $2              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$1 + 0]                # |          1 |          3 |          2 |          0 |          0 |          0 |
be_cont.30987:
be_cont.30986:
.count stack_move
    add     $sp, 13, $sp                # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [$1 + 0], $2                # |          2 |          8 |          0 |          1 |          0 |          0 |
    cmp     $2, -1                      # |          2 |          6 |          4 |          0 |          0 |          0 |
    bne     be_else.30988               # |          2 |          6 |          0 |          0 |          0 |          2 |
be_then.30988:
    ret
be_else.30988:
    load    [$sp - 3], $2               # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $2, 1, $2                   # |          2 |          6 |          4 |          0 |          0 |          0 |
    store   $1, [min_caml_and_net + $2] # |          2 |          4 |          2 |          0 |          0 |          0 |
    add     $2, 1, $2                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    b       read_and_network.2729       # |          2 |         12 |          0 |          1 |          0 |          2 |
.end read_and_network

######################################################################
.begin solver
solver.2773:
    load    [min_caml_objects + $2], $1 # |     23,754 |    136,032 |          0 |     18,557 |        156 |          0 |
    load    [min_caml_startp + 0], $7   # |     23,754 |     24,108 |          0 |          0 |         59 |          0 |
    load    [min_caml_startp + 1], $8   # |     23,754 |     24,624 |          0 |          0 |        145 |          0 |
    load    [$1 + 5], $2                # |     23,754 |     26,052 |          0 |          0 |        383 |          0 |
    load    [$1 + 5], $4                # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$1 + 5], $5                # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$1 + 1], $6                # |     23,754 |     25,746 |          0 |          0 |        332 |          0 |
    load    [$2 + 0], $2                # |     23,754 |    137,520 |          0 |     18,557 |        404 |          0 |
    load    [$4 + 1], $4                # |     23,754 |     24,582 |          0 |          0 |        138 |          0 |
    load    [min_caml_startp + 2], $9   # |     23,754 |     23,814 |          0 |          0 |         10 |          0 |
    load    [$5 + 2], $5                # |     23,754 |     25,800 |          0 |          0 |        341 |          0 |
    fsub    $7, $2, $2                  # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    fsub    $8, $4, $4                  # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    fsub    $9, $5, $5                  # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    cmp     $6, 1                       # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    bne     be_else.30989               # |     23,754 |    135,322 |          0 |     18,557 |          0 |        113 |
be_then.30989:
    load    [$3 + 0], $6                # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    fcmp    $6, $zero                   # |     23,754 |     71,262 |     47,508 |          0 |          0 |          0 |
    bne     be_else.30990               # |     23,754 |     23,852 |          0 |          0 |          0 |         49 |
be_then.30990:
    li      0, $6
    b       be_cont.30990
be_else.30990:
    load    [$1 + 4], $7                # |     23,754 |     24,162 |          0 |          0 |         68 |          0 |
    load    [$3 + 1], $9                # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$1 + 6], $10               # |     23,754 |     28,404 |          0 |         39 |        736 |          0 |
    load    [$7 + 1], $8                # |     23,754 |     25,164 |          0 |          0 |        235 |          0 |
    fcmp    $zero, $6                   # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    bg      ble_else.30991              # |     23,754 |     35,112 |          0 |          0 |          0 |      5,679 |
ble_then.30991:
    li      0, $11                      # |     23,580 |     23,580 |          0 |          0 |          0 |          0 |
    b       ble_cont.30991              # |     23,580 |     23,588 |          0 |          0 |          0 |          4 |
ble_else.30991:
    li      1, $11                      # |        174 |        174 |          0 |          0 |          0 |          0 |
ble_cont.30991:
    cmp     $10, 0                      # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    bne     be_else.30992               # |     23,754 |    135,096 |          0 |     18,557 |          0 |          0 |
be_then.30992:
    mov     $11, $10                    # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    b       be_cont.30992               # |     23,754 |     24,048 |          0 |          0 |          0 |        147 |
be_else.30992:
    cmp     $11, 0
    bne     be_else.30993
be_then.30993:
    li      1, $10
    b       be_cont.30993
be_else.30993:
    li      0, $10
be_cont.30993:
be_cont.30992:
    load    [$7 + 0], $11               # |     23,754 |    136,500 |          0 |     18,567 |        224 |          0 |
    cmp     $10, 0                      # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    bne     be_else.30994               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
be_then.30994:
    fneg    $11, $10                    # |     23,580 |     23,580 |          0 |          0 |          0 |          0 |
    b       be_cont.30994               # |     23,580 |     23,584 |          0 |          0 |          0 |          2 |
be_else.30994:
    mov     $11, $10                    # |        174 |        174 |          0 |          0 |          0 |          0 |
be_cont.30994:
    fsub    $10, $2, $10                # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    finv    $6, $6                      # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    fmul    $10, $6, $6                 # |     23,754 |    140,424 |     51,708 |     10,827 |          0 |          0 |
    fmul    $6, $9, $9                  # |     23,754 |    118,770 |     95,016 |          0 |          0 |          0 |
    fadd    $9, $4, $9                  # |     23,754 |    118,770 |     95,016 |          0 |          0 |          0 |
    fabs    $9, $9                      # |     23,754 |    118,770 |     95,016 |          0 |          0 |          0 |
    fcmp    $8, $9                      # |     23,754 |     47,508 |     23,754 |          0 |          0 |          0 |
    bg      ble_else.30995              # |     23,754 |     24,748 |          0 |          0 |          0 |        497 |
ble_then.30995:
    li      0, $6                       # |     14,964 |     14,964 |          0 |          0 |          0 |          0 |
    b       ble_cont.30995              # |     14,964 |     14,968 |          0 |          0 |          0 |          2 |
ble_else.30995:
    load    [$7 + 2], $7                # |      8,790 |     57,648 |          0 |      8,132 |         11 |          0 |
    load    [$3 + 2], $8                # |      8,790 |      8,790 |          0 |          0 |          0 |          0 |
    fmul    $6, $8, $8                  # |      8,790 |     26,370 |     17,580 |          0 |          0 |          0 |
    fadd    $8, $5, $8                  # |      8,790 |     43,950 |     35,160 |          0 |          0 |          0 |
    fabs    $8, $8                      # |      8,790 |     43,950 |     35,160 |          0 |          0 |          0 |
    fcmp    $7, $8                      # |      8,790 |     17,580 |      8,790 |          0 |          0 |          0 |
    bg      ble_else.30996              # |      8,790 |      9,630 |          0 |          0 |          0 |        420 |
ble_then.30996:
    li      0, $6                       # |      5,123 |      5,123 |          0 |          0 |          0 |          0 |
    b       ble_cont.30996              # |      5,123 |     32,941 |          0 |      4,635 |          0 |          4 |
ble_else.30996:
.count move_float
    mov     $6, $42                     # |      3,667 |     24,481 |          0 |      3,469 |          0 |          0 |
    li      1, $6                       # |      3,667 |      3,667 |          0 |          0 |          0 |          0 |
ble_cont.30996:
ble_cont.30995:
be_cont.30990:
    cmp     $6, 0                       # |     23,754 |     90,283 |      3,667 |     10,477 |          0 |          0 |
    bne     be_else.30997               # |     23,754 |     23,892 |          0 |          0 |          0 |         69 |
be_then.30997:
    load    [$3 + 1], $6                # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    fcmp    $6, $zero                   # |     20,087 |     60,261 |     40,174 |          0 |          0 |          0 |
    bne     be_else.30998               # |     20,087 |     20,099 |          0 |          0 |          0 |          6 |
be_then.30998:
    li      0, $6
    b       be_cont.30998
be_else.30998:
    load    [$1 + 4], $7                # |     20,087 |    111,353 |          0 |     15,211 |          0 |          0 |
    load    [$3 + 2], $9                # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    load    [$1 + 6], $10               # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    load    [$7 + 2], $8                # |     20,087 |     20,111 |          0 |          0 |          4 |          0 |
    fcmp    $zero, $6                   # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    bg      ble_else.30999              # |     20,087 |     20,153 |          0 |          0 |          0 |         33 |
ble_then.30999:
    li      0, $11                      # |         38 |        266 |          0 |         38 |          0 |          0 |
    b       ble_cont.30999              # |         38 |         52 |          0 |          0 |          0 |          7 |
ble_else.30999:
    li      1, $11                      # |     20,049 |    111,087 |          0 |     15,173 |          0 |          0 |
ble_cont.30999:
    cmp     $10, 0                      # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    bne     be_else.31000               # |     20,087 |     20,921 |          0 |          0 |          0 |        417 |
be_then.31000:
    mov     $11, $10                    # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    b       be_cont.31000               # |     20,087 |     20,099 |          0 |          0 |          0 |          6 |
be_else.31000:
    cmp     $11, 0
    bne     be_else.31001
be_then.31001:
    li      1, $10
    b       be_cont.31001
be_else.31001:
    li      0, $10
be_cont.31001:
be_cont.31000:
    load    [$7 + 1], $11               # |     20,087 |    111,353 |          0 |     15,211 |          0 |          0 |
    cmp     $10, 0                      # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    bne     be_else.31002               # |     20,087 |     20,095 |          0 |          0 |          0 |          4 |
be_then.31002:
    fneg    $11, $10                    # |         38 |         38 |          0 |          0 |          0 |          0 |
    b       be_cont.31002               # |         38 |         88 |          0 |          8 |          0 |          1 |
be_else.31002:
    mov     $11, $10                    # |     20,049 |     70,659 |          0 |      8,435 |          0 |          0 |
be_cont.31002:
    fsub    $10, $4, $10                # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    finv    $6, $6                      # |     20,087 |     20,087 |          0 |          0 |          0 |          0 |
    fmul    $10, $6, $6                 # |     20,087 |    100,435 |     80,348 |          0 |          0 |          0 |
    fmul    $6, $9, $9                  # |     20,087 |    100,435 |     80,348 |          0 |          0 |          0 |
    fadd    $9, $5, $9                  # |     20,087 |    100,435 |     80,348 |          0 |          0 |          0 |
    fabs    $9, $9                      # |     20,087 |    100,435 |     80,348 |          0 |          0 |          0 |
    fcmp    $8, $9                      # |     20,087 |     82,389 |     11,644 |      8,443 |          0 |          0 |
    bg      ble_else.31003              # |     20,087 |     39,369 |          0 |          0 |          0 |      9,641 |
ble_then.31003:
    li      0, $6                       # |     16,512 |     16,512 |          0 |          0 |          0 |          0 |
    b       ble_cont.31003              # |     16,512 |     16,520 |          0 |          0 |          0 |          4 |
ble_else.31003:
    load    [$7 + 0], $7                # |      3,575 |      3,575 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $8                # |      3,575 |      3,575 |          0 |          0 |          0 |          0 |
    fmul    $6, $8, $8                  # |      3,575 |     10,725 |      7,150 |          0 |          0 |          0 |
    fadd    $8, $2, $8                  # |      3,575 |     17,875 |     14,300 |          0 |          0 |          0 |
    fabs    $8, $8                      # |      3,575 |     21,855 |      6,340 |      1,990 |          0 |          0 |
    fcmp    $7, $8                      # |      3,575 |      7,150 |      3,575 |          0 |          0 |          0 |
    bg      ble_else.31004              # |      3,575 |      3,833 |          0 |          0 |          0 |        129 |
ble_then.31004:
    li      0, $6                       # |      2,631 |      2,631 |          0 |          0 |          0 |          0 |
    b       ble_cont.31004              # |      2,631 |      2,661 |          0 |          0 |          0 |         15 |
ble_else.31004:
.count move_float
    mov     $6, $42                     # |        944 |        944 |          0 |          0 |          0 |          0 |
    li      1, $6                       # |        944 |        944 |          0 |          0 |          0 |          0 |
ble_cont.31004:
ble_cont.31003:
be_cont.30998:
    cmp     $6, 0                       # |     20,087 |     59,761 |        944 |      6,455 |          0 |          0 |
    bne     be_else.31005               # |     20,087 |     75,231 |          0 |      8,436 |          0 |      2,264 |
be_then.31005:
    load    [$3 + 2], $6                # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    fcmp    $6, $zero                   # |     19,143 |     57,429 |     38,286 |          0 |          0 |          0 |
    bne     be_else.31006               # |     19,143 |     19,847 |          0 |          0 |          0 |        352 |
be_then.31006:
    li      0, $1
    ret
be_else.31006:
    load    [$1 + 4], $7                # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    load    [$1 + 6], $1                # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $9                # |     19,143 |    108,567 |          0 |     14,904 |          0 |          0 |
    load    [$7 + 0], $8                # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    fcmp    $zero, $6                   # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    bg      ble_else.31007              # |     19,143 |     19,791 |          0 |          0 |          0 |        324 |
ble_then.31007:
    li      0, $10                      # |     12,429 |     12,429 |          0 |          0 |          0 |          0 |
    b       ble_cont.31007              # |     12,429 |     12,441 |          0 |          0 |          0 |          6 |
ble_else.31007:
    li      1, $10                      # |      6,714 |      6,714 |          0 |          0 |          0 |          0 |
ble_cont.31007:
    cmp     $1, 0                       # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    bne     be_else.31008               # |     19,143 |     67,851 |          0 |      7,781 |          0 |      1,011 |
be_then.31008:
    mov     $10, $1                     # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    b       be_cont.31008               # |     19,143 |     19,155 |          0 |          0 |          0 |          6 |
be_else.31008:
    cmp     $10, 0
    bne     be_else.31009
be_then.31009:
    li      1, $1
    b       be_cont.31009
be_else.31009:
    li      0, $1
be_cont.31009:
be_cont.31008:
    load    [$7 + 2], $10               # |     19,143 |    107,643 |          0 |     14,750 |          0 |          0 |
    cmp     $1, 0                       # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    bne     be_else.31010               # |     19,143 |     19,173 |          0 |          0 |          0 |         15 |
be_then.31010:
    fneg    $10, $1                     # |     12,429 |     12,429 |          0 |          0 |          0 |          0 |
    b       be_cont.31010               # |     12,429 |     12,433 |          0 |          0 |          0 |          2 |
be_else.31010:
    mov     $10, $1                     # |      6,714 |      6,714 |          0 |          0 |          0 |          0 |
be_cont.31010:
    fsub    $1, $5, $1                  # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    finv    $6, $5                      # |     19,143 |     19,143 |          0 |          0 |          0 |          0 |
    fmul    $1, $5, $1                  # |     19,143 |     95,947 |     76,108 |        116 |          0 |          0 |
    fmul    $1, $9, $5                  # |     19,143 |     95,715 |     76,572 |          0 |          0 |          0 |
    fadd    $5, $2, $2                  # |     19,143 |     95,715 |     76,572 |          0 |          0 |          0 |
    fabs    $2, $2                      # |     19,143 |     95,715 |     76,572 |          0 |          0 |          0 |
    fcmp    $8, $2                      # |     19,143 |     38,286 |     19,143 |          0 |          0 |          0 |
    bg      ble_else.31011              # |     19,143 |     20,731 |          0 |          0 |          0 |        794 |
ble_then.31011:
    li      0, $1                       # |     15,261 |     15,261 |          0 |          0 |          0 |          0 |
    ret                                 # |     15,261 |     15,261 |          0 |          0 |          0 |          0 |
ble_else.31011:
    load    [$7 + 1], $2                # |      3,882 |      4,578 |          0 |        116 |          0 |          0 |
    load    [$3 + 1], $3                # |      3,882 |      3,882 |          0 |          0 |          0 |          0 |
    fmul    $1, $3, $3                  # |      3,882 |     11,646 |      7,764 |          0 |          0 |          0 |
    fadd    $3, $4, $3                  # |      3,882 |     19,410 |     15,528 |          0 |          0 |          0 |
    fabs    $3, $3                      # |      3,882 |     19,410 |     15,528 |          0 |          0 |          0 |
    fcmp    $2, $3                      # |      3,882 |      7,764 |      3,882 |          0 |          0 |          0 |
    bg      ble_else.31012              # |      3,882 |      4,078 |          0 |          0 |          0 |         98 |
ble_then.31012:
    li      0, $1                       # |      1,717 |      1,717 |          0 |          0 |          0 |          0 |
    ret                                 # |      1,717 |      2,611 |          0 |        149 |          0 |          0 |
ble_else.31012:
.count move_float
    mov     $1, $42                     # |      2,165 |      3,413 |          0 |        208 |          0 |          0 |
    li      3, $1                       # |      2,165 |      2,165 |          0 |          0 |          0 |          0 |
    ret                                 # |      2,165 |      2,165 |          0 |          0 |          0 |          0 |
be_else.31005:
    li      2, $1                       # |        944 |      1,136 |          0 |         32 |          0 |          0 |
    ret                                 # |        944 |        944 |          0 |          0 |          0 |          0 |
be_else.30997:
    li      1, $1                       # |      3,667 |      9,625 |          0 |        993 |          0 |          0 |
    ret                                 # |      3,667 |      3,667 |          0 |          0 |          0 |          0 |
be_else.30989:
    cmp     $6, 2
    bne     be_else.31013
be_then.31013:
    load    [$1 + 4], $1
    load    [$3 + 0], $6
    load    [$3 + 1], $8
    load    [$1 + 0], $7
    load    [$1 + 1], $9
    load    [$3 + 2], $3
    fmul    $6, $7, $6
    fmul    $8, $9, $8
    load    [$1 + 2], $1
    fmul    $3, $1, $3
    fadd    $6, $8, $6
    fadd    $6, $3, $3
    fcmp    $3, $zero
    bg      ble_else.31014
ble_then.31014:
    li      0, $1
    ret
ble_else.31014:
    fmul    $7, $2, $2
    fmul    $9, $4, $4
    fmul    $1, $5, $1
    fadd    $2, $4, $2
    fadd    $2, $1, $1
    finv    $3, $2
    fneg    $1, $1
    fmul    $1, $2, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
be_else.31013:
    load    [$1 + 4], $7
    load    [$1 + 4], $8
    load    [$1 + 4], $9
    load    [$1 + 3], $10
    load    [$3 + 0], $11
    load    [$3 + 1], $12
    load    [$3 + 2], $3
    fmul    $11, $11, $13
    load    [$7 + 0], $7
    fmul    $12, $12, $14
    load    [$8 + 1], $8
    load    [$9 + 2], $9
    fmul    $13, $7, $13
    cmp     $10, 0
    fmul    $14, $8, $14
    fadd    $13, $14, $13
    fmul    $3, $3, $14
    fmul    $14, $9, $14
    fadd    $13, $14, $13
    bne     be_else.31015
be_then.31015:
    mov     $13, $10
    b       be_cont.31015
be_else.31015:
    fmul    $12, $3, $10
    load    [$1 + 9], $14
    load    [$14 + 0], $14
    fmul    $10, $14, $10
    load    [$1 + 9], $14
    load    [$14 + 1], $14
    fadd    $13, $10, $10
    fmul    $3, $11, $13
    fmul    $13, $14, $13
    load    [$1 + 9], $14
    load    [$14 + 2], $14
    fadd    $10, $13, $10
    fmul    $11, $12, $13
    fmul    $13, $14, $13
    fadd    $10, $13, $10
be_cont.31015:
    fcmp    $10, $zero
    bne     be_else.31016
be_then.31016:
    li      0, $1
    ret
be_else.31016:
    load    [$1 + 3], $13
    load    [$1 + 3], $14
    fmul    $11, $2, $15
    fmul    $12, $4, $16
    cmp     $13, 0
    fmul    $15, $7, $15
    fmul    $16, $8, $16
    fadd    $15, $16, $15
    fmul    $3, $5, $16
    fmul    $16, $9, $16
    fadd    $15, $16, $15
    bne     be_else.31017
be_then.31017:
    mov     $15, $3
    b       be_cont.31017
be_else.31017:
    fmul    $3, $4, $13
    fmul    $12, $5, $16
    fmul    $3, $2, $3
    fmul    $12, $2, $12
    fadd    $13, $16, $13
    load    [$1 + 9], $16
    load    [$16 + 0], $16
    fmul    $13, $16, $13
    fmul    $11, $5, $16
    fmul    $11, $4, $11
    fadd    $16, $3, $3
    load    [$1 + 9], $16
    fadd    $11, $12, $11
    load    [$1 + 9], $12
    load    [$16 + 1], $16
    load    [$12 + 2], $12
    fmul    $3, $16, $3
    fmul    $11, $12, $11
    fadd    $13, $3, $3
    fadd    $3, $11, $3
    fmul    $3, $39, $3
    fadd    $15, $3, $3
be_cont.31017:
    fmul    $3, $3, $11
    fmul    $2, $2, $12
    cmp     $14, 0
    fmul    $12, $7, $7
    fmul    $4, $4, $12
    fmul    $12, $8, $8
    fadd    $7, $8, $7
    fmul    $5, $5, $8
    fmul    $8, $9, $8
    fadd    $7, $8, $7
    bne     be_else.31018
be_then.31018:
    mov     $7, $2
    b       be_cont.31018
be_else.31018:
    fmul    $4, $5, $8
    load    [$1 + 9], $9
    fmul    $5, $2, $5
    fmul    $2, $4, $2
    load    [$9 + 0], $9
    load    [$1 + 9], $4
    fmul    $8, $9, $8
    load    [$4 + 2], $4
    fmul    $2, $4, $2
    fadd    $7, $8, $7
    load    [$1 + 9], $8
    load    [$8 + 1], $8
    fmul    $5, $8, $5
    fadd    $7, $5, $5
    fadd    $5, $2, $2
be_cont.31018:
    cmp     $6, 3
    bne     be_cont.31019
be_then.31019:
    fsub    $2, $36, $2
be_cont.31019:
    fmul    $10, $2, $2
    fsub    $11, $2, $2
    fcmp    $2, $zero
    bg      ble_else.31020
ble_then.31020:
    li      0, $1
    ret
ble_else.31020:
    load    [$1 + 6], $1
    fsqrt   $2, $2
    cmp     $1, 0
    bne     be_else.31021
be_then.31021:
    fneg    $2, $1
    finv    $10, $2
    fsub    $1, $3, $1
    fmul    $1, $2, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
be_else.31021:
    fsub    $2, $3, $1
    finv    $10, $2
    fmul    $1, $2, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
.end solver

######################################################################
.begin solver_fast
solver_fast.2796:
    load    [min_caml_objects + $2], $1 # |    660,661 |    872,989 |          0 |     21,103 |     14,285 |          0 |
    load    [min_caml_light_dirvec + 1], $6# |    660,661 |    863,755 |          0 |          0 |     33,849 |          0 |
    load    [min_caml_intersection_point + 0], $8# |    660,661 |    881,659 |          0 |          0 |     36,833 |          0 |
    load    [$1 + 5], $3                # |    660,661 |    835,291 |          0 |          0 |     29,105 |          0 |
    load    [$1 + 5], $4                # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$1 + 5], $5                # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$1 + 1], $7                # |    660,661 |    810,553 |          0 |          0 |     24,982 |          0 |
    load    [$3 + 0], $3                # |    660,661 |    781,117 |          0 |          0 |     20,076 |          0 |
    load    [min_caml_intersection_point + 1], $9# |    660,661 |    801,751 |          0 |     20,531 |      2,984 |          0 |
    load    [$4 + 1], $4                # |    660,661 |    666,109 |          0 |          0 |        908 |          0 |
    load    [min_caml_intersection_point + 2], $10# |    660,661 |    679,441 |          0 |          0 |      3,130 |          0 |
    load    [$5 + 2], $5                # |    660,661 |    731,611 |          0 |          0 |     11,825 |          0 |
    fsub    $8, $3, $3                  # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    fsub    $9, $4, $4                  # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    fsub    $10, $5, $5                 # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$6 + $2], $2               # |    660,661 |    829,981 |          0 |          0 |     28,220 |          0 |
    cmp     $7, 1                       # |    660,661 |    783,847 |          0 |     20,531 |          0 |          0 |
    bne     be_else.31022               # |    660,661 |    667,309 |          0 |          0 |          0 |      3,324 |
be_then.31022:
    load    [min_caml_light_dirvec + 0], $6# |    660,661 |    879,223 |          0 |          0 |     36,427 |          0 |
    load    [$1 + 4], $7                # |    660,661 |    690,853 |          0 |          0 |      5,032 |          0 |
    load    [$2 + 0], $9                # |    660,661 |  1,434,151 |          0 |          0 |    128,915 |          0 |
    load    [$6 + 1], $8                # |    660,661 |    683,953 |          0 |          0 |      3,882 |          0 |
    load    [$7 + 1], $7                # |    660,661 |    749,779 |          0 |          0 |     14,853 |          0 |
    fsub    $9, $3, $9                  # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $10               # |    660,661 |  1,413,523 |          0 |    118,699 |      6,778 |          0 |
    fmul    $9, $10, $9                 # |    660,661 |  2,504,968 |  1,844,307 |          0 |          0 |          0 |
    fmul    $9, $8, $8                  # |    660,661 |  3,303,305 |  2,642,644 |          0 |          0 |          0 |
    fadd    $8, $4, $8                  # |    660,661 |  3,303,305 |  2,642,644 |          0 |          0 |          0 |
    fabs    $8, $8                      # |    660,661 |  3,303,305 |  2,642,644 |          0 |          0 |          0 |
    fcmp    $7, $8                      # |    660,661 |  1,321,322 |    660,661 |          0 |          0 |          0 |
    bg      ble_else.31023              # |    660,661 |    875,363 |          0 |          0 |          0 |    107,351 |
ble_then.31023:
    li      0, $8                       # |    437,614 |    437,614 |          0 |          0 |          0 |          0 |
    b       ble_cont.31023              # |    437,614 |  2,916,528 |          0 |    411,950 |          0 |      3,607 |
ble_else.31023:
    load    [$1 + 4], $8                # |    223,047 |  1,406,277 |          0 |    197,205 |          0 |          0 |
    load    [$6 + 2], $10               # |    223,047 |    232,971 |          0 |          0 |      1,654 |          0 |
    load    [$8 + 2], $8                # |    223,047 |    448,304 |    221,393 |          0 |        644 |          0 |
    fmul    $9, $10, $10                # |    223,047 |    223,047 |          0 |          0 |          0 |          0 |
    fadd    $10, $5, $10                # |    223,047 |  1,115,235 |    892,188 |          0 |          0 |          0 |
    fabs    $10, $10                    # |    223,047 |  1,115,235 |    892,188 |          0 |          0 |          0 |
    fcmp    $8, $10                     # |    223,047 |    446,094 |    223,047 |          0 |          0 |          0 |
    bg      ble_else.31024              # |    223,047 |  1,280,831 |          0 |    160,174 |          0 |     48,370 |
ble_then.31024:
    li      0, $8                       # |     76,254 |     76,254 |          0 |          0 |          0 |          0 |
    b       ble_cont.31024              # |     76,254 |     76,282 |          0 |          0 |          0 |         14 |
ble_else.31024:
    load    [$2 + 1], $8                # |    146,793 |    146,793 |          0 |          0 |          0 |          0 |
    fcmp    $8, $zero                   # |    146,793 |    440,379 |    293,586 |          0 |          0 |          0 |
    bne     be_else.31025               # |    146,793 |    150,887 |          0 |          0 |          0 |      2,047 |
be_then.31025:
    li      0, $8
    b       be_cont.31025
be_else.31025:
    li      1, $8                       # |    146,793 |    716,931 |          0 |     95,023 |          0 |          0 |
be_cont.31025:
ble_cont.31024:
ble_cont.31023:
    cmp     $8, 0                       # |    660,661 |  3,574,672 |    146,793 |    461,203 |          0 |          0 |
    bne     be_else.31026               # |    660,661 |    705,653 |          0 |          0 |          0 |     22,496 |
be_then.31026:
    load    [$1 + 4], $8                # |    513,868 |    513,868 |          0 |          0 |          0 |          0 |
    load    [$6 + 0], $9                # |    513,868 |    527,122 |          0 |          0 |      2,209 |          0 |
    load    [$2 + 2], $10               # |    513,868 |    583,120 |          0 |          0 |     11,542 |          0 |
    load    [$8 + 0], $8                # |    513,868 |    587,848 |          0 |          0 |     12,330 |          0 |
    load    [$2 + 3], $11               # |    513,868 |    514,480 |          0 |          0 |        102 |          0 |
    fsub    $10, $4, $10                # |    513,868 |    660,598 |          0 |     24,455 |          0 |          0 |
    fmul    $10, $11, $10               # |    513,868 |  2,569,340 |  2,055,472 |          0 |          0 |          0 |
    fmul    $10, $9, $9                 # |    513,868 |  2,569,340 |  2,055,472 |          0 |          0 |          0 |
    fadd    $9, $3, $9                  # |    513,868 |  2,569,340 |  2,055,472 |          0 |          0 |          0 |
    fabs    $9, $9                      # |    513,868 |  2,569,340 |  2,055,472 |          0 |          0 |          0 |
    fcmp    $8, $9                      # |    513,868 |  1,027,736 |    513,868 |          0 |          0 |          0 |
    bg      ble_else.31027              # |    513,868 |    665,240 |          0 |          0 |          0 |     75,686 |
ble_then.31027:
    li      0, $1                       # |    438,844 |    438,844 |          0 |          0 |          0 |          0 |
    b       ble_cont.31027              # |    438,844 |    561,298 |          0 |     20,407 |          0 |          6 |
ble_else.31027:
    load    [$1 + 4], $1                # |     75,024 |     99,312 |          0 |      4,048 |          0 |          0 |
    load    [$6 + 2], $9                # |     75,024 |     79,788 |          0 |          0 |        794 |          0 |
    load    [$1 + 2], $1                # |     75,024 |    150,274 |     74,230 |          0 |        170 |          0 |
    fmul    $10, $9, $9                 # |     75,024 |     75,024 |          0 |          0 |          0 |          0 |
    fadd    $9, $5, $9                  # |     75,024 |    375,120 |    300,096 |          0 |          0 |          0 |
    fabs    $9, $9                      # |     75,024 |    375,120 |    300,096 |          0 |          0 |          0 |
    fcmp    $1, $9                      # |     75,024 |    150,048 |     75,024 |          0 |          0 |          0 |
    bg      ble_else.31028              # |     75,024 |    161,294 |          0 |      8,556 |          0 |     17,467 |
ble_then.31028:
    li      0, $1                       # |     40,191 |     40,191 |          0 |          0 |          0 |          0 |
    b       ble_cont.31028              # |     40,191 |     40,199 |          0 |          0 |          0 |          4 |
ble_else.31028:
    load    [$2 + 3], $1                # |     34,833 |     34,833 |          0 |          0 |          0 |          0 |
    fcmp    $1, $zero                   # |     34,833 |    104,499 |     69,666 |          0 |          0 |          0 |
    bne     be_else.31029               # |     34,833 |     34,841 |          0 |          0 |          0 |          4 |
be_then.31029:
    li      0, $1
    b       be_cont.31029
be_else.31029:
    li      1, $1                       # |     34,833 |     42,819 |          0 |      1,331 |          0 |          0 |
be_cont.31029:
ble_cont.31028:
ble_cont.31027:
    cmp     $1, 0                       # |    513,868 |    625,783 |     34,833 |     12,847 |          0 |          0 |
    bne     be_else.31030               # |    513,868 |    513,878 |          0 |          0 |          0 |          5 |
be_then.31030:
    load    [$6 + 0], $1                # |    479,035 |    479,035 |          0 |          0 |          0 |          0 |
    load    [$2 + 4], $9                # |    479,035 |    773,737 |          0 |          0 |     49,117 |          0 |
    fsub    $9, $5, $5                  # |    479,035 |  1,338,871 |    859,836 |          0 |          0 |          0 |
    load    [$2 + 5], $9                # |    479,035 |    532,747 |          0 |          0 |      8,952 |          0 |
    fmul    $5, $9, $5                  # |    479,035 |  1,889,284 |  1,410,249 |          0 |          0 |          0 |
    fmul    $5, $1, $1                  # |    479,035 |  2,446,237 |  1,814,016 |     25,531 |          0 |          0 |
    fadd    $1, $3, $1                  # |    479,035 |  2,395,175 |  1,916,140 |          0 |          0 |          0 |
    fabs    $1, $1                      # |    479,035 |  2,395,175 |  1,916,140 |          0 |          0 |          0 |
    fcmp    $8, $1                      # |    479,035 |    958,070 |    479,035 |          0 |          0 |          0 |
    bg      ble_else.31031              # |    479,035 |    511,549 |          0 |          0 |          0 |     16,257 |
ble_then.31031:
    li      0, $1                       # |    447,036 |    447,036 |          0 |          0 |          0 |          0 |
    ret                                 # |    447,036 |    447,036 |          0 |          0 |          0 |          0 |
ble_else.31031:
    load    [$6 + 1], $1                # |     31,999 |     31,999 |          0 |          0 |          0 |          0 |
    fmul    $5, $1, $1                  # |     31,999 |    122,037 |     50,978 |      6,510 |          0 |          0 |
    fadd    $1, $4, $1                  # |     31,999 |    159,995 |    127,996 |          0 |          0 |          0 |
    fabs    $1, $1                      # |     31,999 |    159,995 |    127,996 |          0 |          0 |          0 |
    fcmp    $7, $1                      # |     31,999 |     63,998 |     31,999 |          0 |          0 |          0 |
    bg      ble_else.31032              # |     31,999 |     41,447 |          0 |          0 |          0 |      4,724 |
ble_then.31032:
    li      0, $1                       # |      7,652 |      7,652 |          0 |          0 |          0 |          0 |
    ret                                 # |      7,652 |      7,652 |          0 |          0 |          0 |          0 |
ble_else.31032:
    load    [$2 + 5], $1                # |     24,347 |     24,347 |          0 |          0 |          0 |          0 |
    fcmp    $1, $zero                   # |     24,347 |     83,249 |     43,590 |      2,552 |          0 |          0 |
    bne     be_else.31033               # |     24,347 |     24,753 |          0 |          0 |          0 |        203 |
be_then.31033:
    li      0, $1
    ret
be_else.31033:
.count move_float
    mov     $5, $42                     # |     24,347 |     24,347 |          0 |          0 |          0 |          0 |
    li      3, $1                       # |     24,347 |     24,347 |          0 |          0 |          0 |          0 |
    ret                                 # |     24,347 |     24,347 |          0 |          0 |          0 |          0 |
be_else.31030:
.count move_float
    mov     $10, $42                    # |     34,833 |     60,015 |          0 |      4,197 |          0 |          0 |
    li      2, $1                       # |     34,833 |     52,905 |          0 |      3,012 |          0 |          0 |
    ret                                 # |     34,833 |     34,833 |          0 |          0 |          0 |          0 |
be_else.31026:
.count move_float
    mov     $9, $42                     # |    146,793 |    208,041 |          0 |     10,208 |          0 |          0 |
    li      1, $1                       # |    146,793 |    146,793 |          0 |          0 |          0 |          0 |
    ret                                 # |    146,793 |    146,793 |          0 |          0 |          0 |          0 |
be_else.31022:
    cmp     $7, 2
    bne     be_else.31034
be_then.31034:
    load    [$2 + 0], $1
    fcmp    $zero, $1
    bg      ble_else.31035
ble_then.31035:
    li      0, $1
    ret
ble_else.31035:
    load    [$2 + 1], $1
    fmul    $1, $3, $1
    load    [$2 + 2], $3
    load    [$2 + 3], $2
    fmul    $3, $4, $3
    fmul    $2, $5, $2
    fadd    $1, $3, $1
    fadd    $1, $2, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
be_else.31034:
    load    [$2 + 0], $6
    fcmp    $6, $zero
    bne     be_else.31036
be_then.31036:
    li      0, $1
    ret
be_else.31036:
    load    [$1 + 4], $8
    load    [$1 + 4], $9
    load    [$1 + 4], $10
    load    [$1 + 3], $11
    load    [$2 + 1], $12
    load    [$2 + 2], $13
    fmul    $3, $3, $14
    fmul    $12, $3, $12
    fmul    $13, $4, $13
    load    [$8 + 0], $8
    load    [$9 + 1], $9
    load    [$10 + 2], $10
    fmul    $14, $8, $8
    fadd    $12, $13, $12
    load    [$2 + 3], $13
    fmul    $4, $4, $14
    cmp     $11, 0
    fmul    $13, $5, $13
    fmul    $14, $9, $9
    fadd    $12, $13, $12
    fadd    $8, $9, $8
    fmul    $5, $5, $9
    fmul    $12, $12, $13
    fmul    $9, $10, $9
    fadd    $8, $9, $8
    bne     be_else.31037
be_then.31037:
    mov     $8, $3
    b       be_cont.31037
be_else.31037:
    fmul    $4, $5, $9
    load    [$1 + 9], $10
    fmul    $5, $3, $5
    fmul    $3, $4, $3
    load    [$10 + 0], $10
    load    [$1 + 9], $4
    fmul    $9, $10, $9
    load    [$4 + 2], $4
    fmul    $3, $4, $3
    fadd    $8, $9, $8
    load    [$1 + 9], $9
    load    [$9 + 1], $9
    fmul    $5, $9, $5
    fadd    $8, $5, $5
    fadd    $5, $3, $3
be_cont.31037:
    cmp     $7, 3
    bne     be_cont.31038
be_then.31038:
    fsub    $3, $36, $3
be_cont.31038:
    fmul    $6, $3, $3
    fsub    $13, $3, $3
    fcmp    $3, $zero
    bg      ble_else.31039
ble_then.31039:
    li      0, $1
    ret
ble_else.31039:
    load    [$1 + 6], $1
    load    [$2 + 4], $2
    cmp     $1, 0
    fsqrt   $3, $1
    bne     be_else.31040
be_then.31040:
    fsub    $12, $1, $1
    fmul    $1, $2, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
be_else.31040:
    fadd    $12, $1, $1
    fmul    $1, $2, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
.end solver_fast

######################################################################
.begin solver_fast2
solver_fast2.2814:
    load    [min_caml_objects + $2], $1 # |  1,134,616 |  1,375,522 |          0 |     27,655 |     12,496 |          0 |
    load    [$3 + 1], $5                # |  1,134,616 |  4,564,420 |          0 |     30,013 |    541,621 |          0 |
    load    [$1 + 10], $4               # |  1,134,616 |  1,973,299 |    585,105 |          0 |     42,263 |          0 |
    load    [$1 + 1], $6                # |  1,134,616 |  1,171,132 |          0 |          0 |      6,086 |          0 |
    load    [$5 + $2], $2               # |  1,134,616 |  7,888,186 |          0 |          0 |  1,125,595 |          0 |
    load    [$4 + 0], $7                # |  1,134,616 |  1,404,298 |          0 |          0 |     44,947 |          0 |
    load    [$4 + 1], $8                # |  1,134,616 |  1,150,732 |          0 |          0 |      2,686 |          0 |
    load    [$4 + 2], $9                # |  1,134,616 |  1,160,542 |          0 |          0 |      4,321 |          0 |
    cmp     $6, 1                       # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    bne     be_else.31041               # |  1,134,616 |  1,329,854 |          0 |     30,027 |          0 |      7,538 |
be_then.31041:
    load    [$3 + 0], $3                # |  1,134,616 |  4,408,276 |          0 |          0 |    545,610 |          0 |
    load    [$1 + 4], $4                # |  1,134,616 |  1,221,382 |          0 |          0 |     14,461 |          0 |
    load    [$2 + 0], $6                # |  1,134,616 |  7,941,694 |          0 |          0 |  1,134,513 |          0 |
    load    [$3 + 1], $5                # |  1,134,616 |  1,866,028 |          0 |          0 |    121,902 |          0 |
    load    [$4 + 1], $4                # |  1,134,616 |  1,330,888 |          0 |          0 |     32,712 |          0 |
    fsub    $6, $7, $6                  # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $10               # |  1,134,616 |  1,142,998 |          0 |          0 |      1,397 |          0 |
    fmul    $6, $10, $6                 # |  1,134,616 |  4,651,519 |  3,282,411 |     39,082 |          0 |          0 |
    fmul    $6, $5, $5                  # |  1,134,616 |  5,673,080 |  4,538,464 |          0 |          0 |          0 |
    fadd    $5, $8, $5                  # |  1,134,616 |  5,673,080 |  4,538,464 |          0 |          0 |          0 |
    fabs    $5, $5                      # |  1,134,616 |  5,673,080 |  4,538,464 |          0 |          0 |          0 |
    fcmp    $4, $5                      # |  1,134,616 |  2,269,232 |  1,134,616 |          0 |          0 |          0 |
    bg      ble_else.31042              # |  1,134,616 |  1,853,570 |          0 |          0 |          0 |    359,477 |
ble_then.31042:
    li      0, $5                       # |    640,191 |    640,191 |          0 |          0 |          0 |          0 |
    b       ble_cont.31042              # |    640,191 |    898,589 |          0 |          0 |          0 |    129,199 |
ble_else.31042:
    load    [$1 + 4], $5                # |    494,425 |    603,535 |          0 |     18,185 |          0 |          0 |
    load    [$3 + 2], $10               # |    494,425 |  1,740,373 |          0 |          0 |    207,658 |          0 |
    load    [$5 + 2], $5                # |    494,425 |    789,706 |    286,767 |          0 |      1,419 |          0 |
    fmul    $6, $10, $10                # |    494,425 |    494,425 |          0 |          0 |          0 |          0 |
    fadd    $10, $9, $10                # |    494,425 |  2,472,125 |  1,977,700 |          0 |          0 |          0 |
    fabs    $10, $10                    # |    494,425 |  2,472,125 |  1,977,700 |          0 |          0 |          0 |
    fcmp    $5, $10                     # |    494,425 |    988,850 |    494,425 |          0 |          0 |          0 |
    bg      ble_else.31043              # |    494,425 |    752,399 |          0 |          0 |          0 |    128,987 |
ble_then.31043:
    li      0, $5                       # |    164,419 |    198,385 |          0 |      5,661 |          0 |          0 |
    b       ble_cont.31043              # |    164,419 |    219,993 |          0 |          0 |          0 |     27,787 |
ble_else.31043:
    load    [$2 + 1], $5                # |    330,006 |    382,446 |          0 |      8,576 |        164 |          0 |
    fcmp    $5, $zero                   # |    330,006 |    989,690 |    659,684 |          0 |          0 |          0 |
    bne     be_else.31044               # |    330,006 |    330,038 |          0 |          0 |          0 |         16 |
be_then.31044:
    li      0, $5
    b       be_cont.31044
be_else.31044:
    li      1, $5                       # |    330,006 |    330,006 |          0 |          0 |          0 |          0 |
be_cont.31044:
ble_cont.31043:
ble_cont.31042:
    cmp     $5, 0                       # |  1,134,616 |  1,576,870 |    328,674 |     18,930 |          0 |          0 |
    bne     be_else.31045               # |  1,134,616 |  1,281,926 |          0 |          0 |          0 |     73,655 |
be_then.31045:
    load    [$1 + 4], $5                # |    804,610 |    804,610 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $6                # |    804,610 |  1,241,728 |          0 |          0 |     72,853 |          0 |
    load    [$2 + 2], $10               # |    804,610 |    804,766 |          0 |          0 |         26 |          0 |
    load    [$5 + 0], $5                # |    804,610 |    976,192 |          0 |          0 |     28,597 |          0 |
    load    [$2 + 3], $11               # |    804,610 |    811,510 |          0 |          0 |      1,150 |          0 |
    fsub    $10, $8, $10                # |    804,610 |    804,610 |          0 |          0 |          0 |          0 |
    fmul    $10, $11, $10               # |    804,610 |  4,062,112 |  3,140,316 |     19,531 |          0 |          0 |
    fmul    $10, $6, $6                 # |    804,610 |  4,023,050 |  3,218,440 |          0 |          0 |          0 |
    fadd    $6, $7, $6                  # |    804,610 |  4,023,050 |  3,218,440 |          0 |          0 |          0 |
    fabs    $6, $6                      # |    804,610 |  4,023,050 |  3,218,440 |          0 |          0 |          0 |
    fcmp    $5, $6                      # |    804,610 |  1,609,220 |    804,610 |          0 |          0 |          0 |
    bg      ble_else.31046              # |    804,610 |    891,800 |          0 |          0 |          0 |     43,595 |
ble_then.31046:
    li      0, $1                       # |    453,618 |    453,618 |          0 |          0 |          0 |          0 |
    b       ble_cont.31046              # |    453,618 |    453,986 |          0 |          0 |          0 |        184 |
ble_else.31046:
    load    [$1 + 4], $1                # |    350,992 |    434,302 |          0 |     12,963 |        922 |          0 |
    load    [$3 + 2], $6                # |    350,992 |  1,069,060 |          0 |          0 |    119,678 |          0 |
    load    [$1 + 2], $1                # |    350,992 |    583,536 |    231,314 |          0 |        205 |          0 |
    fmul    $10, $6, $6                 # |    350,992 |    350,992 |          0 |          0 |          0 |          0 |
    fadd    $6, $9, $6                  # |    350,992 |  1,754,960 |  1,403,968 |          0 |          0 |          0 |
    fabs    $6, $6                      # |    350,992 |  1,754,960 |  1,403,968 |          0 |          0 |          0 |
    fcmp    $1, $6                      # |    350,992 |    701,984 |    350,992 |          0 |          0 |          0 |
    bg      ble_else.31047              # |    350,992 |    509,908 |          0 |          0 |          0 |     79,458 |
ble_then.31047:
    li      0, $1                       # |    123,643 |    158,785 |          0 |      5,857 |          0 |          0 |
    b       ble_cont.31047              # |    123,643 |    123,651 |          0 |          0 |          0 |          4 |
ble_else.31047:
    load    [$2 + 3], $1                # |    227,349 |    277,305 |          0 |      7,480 |        846 |          0 |
    fcmp    $1, $zero                   # |    227,349 |    680,355 |    453,006 |          0 |          0 |          0 |
    bne     be_else.31048               # |    227,349 |    227,351 |          0 |          0 |          0 |          1 |
be_then.31048:
    li      0, $1
    b       be_cont.31048
be_else.31048:
    li      1, $1                       # |    227,349 |    227,349 |          0 |          0 |          0 |          0 |
be_cont.31048:
ble_cont.31047:
ble_cont.31046:
    cmp     $1, 0                       # |    804,610 |  1,084,913 |    225,037 |      9,211 |          0 |          0 |
    bne     be_else.31049               # |    804,610 |    918,740 |          0 |          0 |          0 |     57,065 |
be_then.31049:
    load    [$3 + 0], $1                # |    577,261 |    585,445 |          0 |          0 |      1,364 |          0 |
    load    [$2 + 4], $6                # |    577,261 |  4,038,631 |          0 |          0 |    576,895 |          0 |
    fsub    $6, $9, $6                  # |    577,261 |    577,993 |        732 |          0 |          0 |          0 |
    load    [$2 + 5], $9                # |    577,261 |    579,103 |          0 |          0 |        307 |          0 |
    fmul    $6, $9, $6                  # |    577,261 |  2,308,123 |  1,730,862 |          0 |          0 |          0 |
    fmul    $6, $1, $1                  # |    577,261 |  2,886,305 |  2,309,044 |          0 |          0 |          0 |
    fadd    $1, $7, $1                  # |    577,261 |  3,523,943 |  1,033,768 |    318,819 |          0 |          0 |
    fabs    $1, $1                      # |    577,261 |  2,886,305 |  2,309,044 |          0 |          0 |          0 |
    fcmp    $5, $1                      # |    577,261 |  1,154,522 |    577,261 |          0 |          0 |          0 |
    bg      ble_else.31050              # |    577,261 |    829,161 |          0 |          0 |          0 |    125,950 |
ble_then.31050:
    li      0, $1                       # |    412,314 |    412,314 |          0 |          0 |          0 |          0 |
    ret                                 # |    412,314 |    412,314 |          0 |          0 |          0 |          0 |
ble_else.31050:
    load    [$3 + 1], $1                # |    164,947 |    165,301 |          0 |          0 |         59 |          0 |
    fmul    $6, $1, $1                  # |    164,947 |    494,723 |    329,776 |          0 |          0 |          0 |
    fadd    $1, $8, $1                  # |    164,947 |    850,041 |    609,176 |     12,653 |          0 |          0 |
    fabs    $1, $1                      # |    164,947 |    824,735 |    659,788 |          0 |          0 |          0 |
    fcmp    $4, $1                      # |    164,947 |    329,894 |    164,947 |          0 |          0 |          0 |
    bg      ble_else.31051              # |    164,947 |    178,273 |          0 |          0 |          0 |      6,663 |
ble_then.31051:
    li      0, $1                       # |     37,478 |     37,478 |          0 |          0 |          0 |          0 |
    ret                                 # |     37,478 |     37,478 |          0 |          0 |          0 |          0 |
ble_else.31051:
    load    [$2 + 5], $1                # |    127,469 |    127,697 |          0 |          0 |         38 |          0 |
    fcmp    $1, $zero                   # |    127,469 |    382,331 |    254,862 |          0 |          0 |          0 |
    bne     be_else.31052               # |    127,469 |    156,313 |          0 |      4,803 |          0 |         13 |
be_then.31052:
    li      0, $1
    ret
be_else.31052:
.count move_float
    mov     $6, $42                     # |    127,469 |    127,469 |          0 |          0 |          0 |          0 |
    li      3, $1                       # |    127,469 |    127,469 |          0 |          0 |          0 |          0 |
    ret                                 # |    127,469 |    127,469 |          0 |          0 |          0 |          0 |
be_else.31049:
.count move_float
    mov     $10, $42                    # |    227,349 |    270,783 |          0 |      7,239 |          0 |          0 |
    li      2, $1                       # |    227,349 |    227,349 |          0 |          0 |          0 |          0 |
    ret                                 # |    227,349 |    235,539 |          0 |      1,365 |          0 |          0 |
be_else.31045:
.count move_float
    mov     $6, $42                     # |    330,006 |    349,602 |          0 |      3,266 |          0 |          0 |
    li      1, $1                       # |    330,006 |    330,006 |          0 |          0 |          0 |          0 |
    ret                                 # |    330,006 |    330,006 |          0 |          0 |          0 |          0 |
be_else.31041:
    cmp     $6, 2
    bne     be_else.31053
be_then.31053:
    load    [$2 + 0], $1
    fcmp    $zero, $1
    bg      ble_else.31054
ble_then.31054:
    li      0, $1
    ret
ble_else.31054:
    load    [$4 + 3], $2
    fmul    $1, $2, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
be_else.31053:
    load    [$2 + 0], $3
    fcmp    $3, $zero
    bne     be_else.31055
be_then.31055:
    li      0, $1
    ret
be_else.31055:
    load    [$2 + 1], $5
    load    [$2 + 2], $6
    load    [$4 + 3], $4
    fmul    $5, $7, $5
    fmul    $6, $8, $6
    fmul    $3, $4, $3
    fadd    $5, $6, $5
    load    [$2 + 3], $6
    fmul    $6, $9, $6
    fadd    $5, $6, $5
    fmul    $5, $5, $6
    fsub    $6, $3, $3
    fcmp    $3, $zero
    bg      ble_else.31056
ble_then.31056:
    li      0, $1
    ret
ble_else.31056:
    load    [$1 + 6], $1
    load    [$2 + 4], $2
    cmp     $1, 0
    fsqrt   $3, $1
    bne     be_else.31057
be_then.31057:
    fsub    $5, $1, $1
    fmul    $1, $2, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
be_else.31057:
    fadd    $5, $1, $1
    fmul    $1, $2, $1
.count move_float
    mov     $1, $42
    li      1, $1
    ret
.end solver_fast2

######################################################################
.begin iter_setup_dirvec_constants
iter_setup_dirvec_constants.2826:
    cmp     $3, 0                       # |      7,375 |      7,381 |          0 |          1 |          0 |          0 |
    bl      bge_else.31058              # |      7,375 |      7,375 |          0 |          0 |          0 |          0 |
bge_then.31058:
.count stack_move
    sub     $sp, 2, $sp                 # |      7,375 |      7,375 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $10               # |      7,375 |      8,473 |          0 |          0 |        183 |          0 |
    load    [min_caml_objects + $3], $11# |      7,375 |      7,687 |          0 |          1 |         51 |          0 |
    load    [$2 + 0], $13               # |      7,375 |      8,335 |          0 |          0 |        160 |          0 |
    load    [$11 + 1], $12              # |      7,375 |     14,864 |      7,171 |          0 |         53 |          0 |
    store   $2, [$sp + 0]               # |      7,375 |      7,375 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 1]               # |      7,375 |      7,375 |          0 |          0 |          0 |          0 |
    cmp     $12, 1                      # |      7,375 |      7,375 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |      7,375 |      7,375 |          0 |          0 |          0 |          0 |
    bne     be_else.31059               # |      7,375 |     15,783 |          0 |          0 |          0 |      4,204 |
be_then.31059:
    li      6, $2                       # |      3,010 |      3,016 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    load    [$13 + 0], $14              # |      3,010 |      3,106 |          0 |          0 |         16 |          0 |
    fcmp    $14, $zero                  # |      3,010 |      8,998 |      5,988 |          0 |          0 |          0 |
    bne     be_else.31060               # |      3,010 |      3,014 |          0 |          0 |          0 |          2 |
be_then.31060:
    store   $zero, [$12 + 1]
    b       be_cont.31060
be_else.31060:
    load    [$11 + 6], $15              # |      3,010 |      3,178 |          0 |          1 |         27 |          0 |
    fcmp    $zero, $14                  # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    bg      ble_else.31061              # |      3,010 |      4,622 |          0 |          0 |          0 |        806 |
ble_then.31061:
    li      0, $14                      # |      1,505 |      1,505 |          0 |          0 |          0 |          0 |
    b       ble_cont.31061              # |      1,505 |      1,509 |          0 |          0 |          0 |          2 |
ble_else.31061:
    li      1, $14                      # |      1,505 |      1,505 |          0 |          0 |          0 |          0 |
ble_cont.31061:
    cmp     $15, 0                      # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    be      bne_cont.31062              # |      3,010 |      3,606 |          0 |          0 |          0 |        298 |
bne_then.31062:
    cmp     $14, 0
    bne     be_else.31063
be_then.31063:
    li      1, $14
    b       be_cont.31063
be_else.31063:
    li      0, $14
be_cont.31063:
bne_cont.31062:
    load    [$11 + 4], $15              # |      3,010 |      3,160 |          0 |          1 |         24 |          0 |
    cmp     $14, 0                      # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    load    [$15 + 0], $15              # |      3,010 |      6,170 |      2,986 |          0 |         29 |          0 |
    bne     be_else.31064               # |      3,010 |      3,020 |          0 |          1 |          0 |          2 |
be_then.31064:
    fneg    $15, $14                    # |      1,505 |      3,000 |      1,495 |          0 |          0 |          0 |
    store   $14, [$12 + 0]              # |      1,505 |      3,010 |      1,505 |          0 |          0 |          0 |
    load    [$13 + 0], $14              # |      1,505 |      1,511 |          0 |          0 |          1 |          0 |
    finv    $14, $14                    # |      1,505 |      4,513 |      3,008 |          0 |          0 |          0 |
    store   $14, [$12 + 1]              # |      1,505 |      7,525 |      6,020 |          0 |          0 |          0 |
    b       be_cont.31064               # |      1,505 |      1,509 |          0 |          0 |          0 |          2 |
be_else.31064:
    store   $15, [$12 + 0]              # |      1,505 |      2,991 |      1,486 |          0 |          0 |          0 |
    load    [$13 + 0], $14              # |      1,505 |      1,565 |          0 |          1 |          9 |          0 |
    finv    $14, $14                    # |      1,505 |      4,497 |      2,992 |          0 |          0 |          0 |
    store   $14, [$12 + 1]              # |      1,505 |      7,525 |      6,020 |          0 |          0 |          0 |
be_cont.31064:
be_cont.31060:
    load    [$13 + 1], $14              # |      3,010 |      3,034 |          0 |          0 |          4 |          0 |
    fcmp    $14, $zero                  # |      3,010 |      9,022 |      6,012 |          0 |          0 |          0 |
    bne     be_else.31065               # |      3,010 |      3,018 |          0 |          0 |          0 |          4 |
be_then.31065:
    store   $zero, [$12 + 3]
    b       be_cont.31065
be_else.31065:
    load    [$11 + 6], $15              # |      3,010 |      3,940 |          0 |        150 |          5 |          0 |
    fcmp    $zero, $14                  # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    bg      ble_else.31066              # |      3,010 |      5,254 |          0 |          0 |          0 |      1,122 |
ble_then.31066:
    li      0, $14                      # |      1,505 |      1,505 |          0 |          0 |          0 |          0 |
    b       ble_cont.31066              # |      1,505 |      1,513 |          0 |          0 |          0 |          4 |
ble_else.31066:
    li      1, $14                      # |      1,505 |      1,505 |          0 |          0 |          0 |          0 |
ble_cont.31066:
    cmp     $15, 0                      # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    be      bne_cont.31067              # |      3,010 |      3,026 |          0 |          0 |          0 |          8 |
bne_then.31067:
    cmp     $14, 0
    bne     be_else.31068
be_then.31068:
    li      1, $14
    b       be_cont.31068
be_else.31068:
    li      0, $14
be_cont.31068:
bne_cont.31067:
    load    [$11 + 4], $15              # |      3,010 |      3,922 |          0 |        149 |          3 |          0 |
    cmp     $14, 0                      # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    load    [$15 + 1], $15              # |      3,010 |      6,071 |      3,007 |          0 |          9 |          0 |
    bne     be_else.31069               # |      3,010 |      3,904 |          0 |        148 |          0 |          3 |
be_then.31069:
    fneg    $15, $14                    # |      1,505 |      2,919 |      1,414 |          0 |          0 |          0 |
    store   $14, [$12 + 2]              # |      1,505 |      3,010 |      1,505 |          0 |          0 |          0 |
    load    [$13 + 1], $14              # |      1,505 |      1,535 |          0 |          0 |          5 |          0 |
    finv    $14, $14                    # |      1,505 |      4,505 |      3,000 |          0 |          0 |          0 |
    store   $14, [$12 + 3]              # |      1,505 |      7,525 |      6,020 |          0 |          0 |          0 |
    b       be_cont.31069               # |      1,505 |      1,513 |          0 |          0 |          0 |          4 |
be_else.31069:
    store   $15, [$12 + 2]              # |      1,505 |      2,943 |      1,438 |          0 |          0 |          0 |
    load    [$13 + 1], $14              # |      1,505 |      1,535 |          0 |          0 |          5 |          0 |
    finv    $14, $14                    # |      1,505 |      4,505 |      3,000 |          0 |          0 |          0 |
    store   $14, [$12 + 3]              # |      1,505 |      7,525 |      6,020 |          0 |          0 |          0 |
be_cont.31069:
be_cont.31065:
    load    [$13 + 2], $14              # |      3,010 |      3,094 |          0 |          1 |         13 |          0 |
    fcmp    $14, $zero                  # |      3,010 |      9,004 |      5,994 |          0 |          0 |          0 |
    bne     be_else.31070               # |      3,010 |      3,014 |          0 |          0 |          0 |          2 |
be_then.31070:
    store   $zero, [$12 + 5]
    mov     $12, $11
    b       be_cont.31070
be_else.31070:
    load    [$11 + 6], $15              # |      3,010 |      3,064 |          0 |          1 |          8 |          0 |
    fcmp    $zero, $14                  # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    bg      ble_else.31071              # |      3,010 |      3,334 |          0 |          0 |          0 |        162 |
ble_then.31071:
    li      0, $14                      # |      1,510 |      1,510 |          0 |          0 |          0 |          0 |
    b       ble_cont.31071              # |      1,510 |      1,518 |          0 |          0 |          0 |          4 |
ble_else.31071:
    li      1, $14                      # |      1,500 |      1,500 |          0 |          0 |          0 |          0 |
ble_cont.31071:
    cmp     $15, 0                      # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    be      bne_cont.31072              # |      3,010 |      3,040 |          0 |          1 |          0 |         12 |
bne_then.31072:
    cmp     $14, 0
    bne     be_else.31073
be_then.31073:
    li      1, $14
    b       be_cont.31073
be_else.31073:
    li      0, $14
be_cont.31073:
bne_cont.31072:
    load    [$11 + 4], $11              # |      3,010 |      3,034 |          0 |          0 |          4 |          0 |
    cmp     $14, 0                      # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    load    [$11 + 2], $11              # |      3,010 |      6,075 |      3,005 |          1 |          9 |          0 |
    bne     be_else.31074               # |      3,010 |      3,024 |          0 |          0 |          0 |          7 |
be_then.31074:
    fneg    $11, $11                    # |      1,510 |      3,018 |      1,508 |          0 |          0 |          0 |
    store   $11, [$12 + 4]              # |      1,510 |      3,020 |      1,510 |          0 |          0 |          0 |
    load    [$13 + 2], $11              # |      1,510 |      1,552 |          0 |          0 |          7 |          0 |
    finv    $11, $11                    # |      1,510 |      4,516 |      3,006 |          0 |          0 |          0 |
    store   $11, [$12 + 5]              # |      1,510 |      7,550 |      6,040 |          0 |          0 |          0 |
    mov     $12, $11                    # |      1,510 |      1,510 |          0 |          0 |          0 |          0 |
    b       be_cont.31074               # |      1,510 |      1,518 |          0 |          0 |          0 |          4 |
be_else.31074:
    store   $11, [$12 + 4]              # |      1,500 |      2,992 |      1,486 |          1 |          0 |          0 |
    load    [$13 + 2], $11              # |      1,500 |      1,536 |          0 |          0 |          6 |          0 |
    finv    $11, $11                    # |      1,500 |      4,488 |      2,988 |          0 |          0 |          0 |
    store   $11, [$12 + 5]              # |      1,500 |      7,500 |      6,000 |          0 |          0 |          0 |
    mov     $12, $11                    # |      1,500 |      1,500 |          0 |          0 |          0 |          0 |
be_cont.31074:
be_cont.31070:
    load    [$sp + 1], $12              # |      3,010 |      3,100 |          0 |          0 |         15 |          0 |
.count storer
    add     $10, $12, $tmp              # |      3,010 |      9,000 |      5,990 |          0 |          0 |          0 |
    store   $11, [$tmp + 0]             # |      3,010 |      6,025 |      3,009 |          1 |          0 |          0 |
    sub     $12, 1, $11                 # |      3,010 |      3,010 |          0 |          0 |          0 |          0 |
    cmp     $11, 0                      # |      3,010 |      6,020 |      3,010 |          0 |          0 |          0 |
    bl      bge_else.31075              # |      3,010 |      5,410 |          0 |          0 |          0 |      1,200 |
bge_then.31075:
    load    [min_caml_objects + $11], $12# |      2,408 |      2,504 |          0 |          0 |         16 |          0 |
.count move_args
    mov     $zero, $3                   # |      2,408 |      2,408 |          0 |          0 |          0 |          0 |
    load    [$12 + 1], $14              # |      2,408 |      4,890 |      2,392 |          0 |         15 |          0 |
    cmp     $14, 1                      # |      2,408 |      7,194 |      4,786 |          0 |          0 |          0 |
    bne     be_else.31076               # |      2,408 |      4,822 |          0 |          1 |          0 |      1,204 |
be_then.31076:
    li      6, $2                       # |        602 |        602 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        602 |        602 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$13 + 0], $2               # |        602 |        632 |          0 |          0 |          5 |          0 |
    fcmp    $2, $zero                   # |        602 |      1,796 |      1,194 |          0 |          0 |          0 |
    bne     be_else.31077               # |        602 |        606 |          0 |          0 |          0 |          2 |
be_then.31077:
    store   $zero, [$1 + 1]
    b       be_cont.31077
be_else.31077:
    load    [$12 + 6], $3               # |        602 |        650 |          0 |          1 |          7 |          0 |
    fcmp    $zero, $2                   # |        602 |        602 |          0 |          0 |          0 |          0 |
    bg      ble_else.31078              # |        602 |      1,400 |          0 |          0 |          0 |        399 |
ble_then.31078:
    li      0, $2                       # |        301 |        301 |          0 |          0 |          0 |          0 |
    b       ble_cont.31078              # |        301 |        305 |          0 |          0 |          0 |          2 |
ble_else.31078:
    li      1, $2                       # |        301 |        301 |          0 |          0 |          0 |          0 |
ble_cont.31078:
    cmp     $3, 0                       # |        602 |        602 |          0 |          0 |          0 |          0 |
    be      bne_cont.31079              # |        602 |        616 |          0 |          1 |          0 |          4 |
bne_then.31079:
    cmp     $2, 0
    bne     be_else.31080
be_then.31080:
    li      1, $2
    b       be_cont.31080
be_else.31080:
    li      0, $2
be_cont.31080:
bne_cont.31079:
    load    [$12 + 4], $3               # |        602 |        632 |          0 |          0 |          5 |          0 |
    cmp     $2, 0                       # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $3                # |        602 |      1,234 |        596 |          1 |          5 |          0 |
    bne     be_else.31081               # |        602 |        606 |          0 |          0 |          0 |          2 |
be_then.31081:
    fneg    $3, $2                      # |        301 |        600 |        299 |          0 |          0 |          0 |
    store   $2, [$1 + 0]                # |        301 |        602 |        301 |          0 |          0 |          0 |
    load    [$13 + 0], $2               # |        301 |        313 |          0 |          0 |          2 |          0 |
    finv    $2, $2                      # |        301 |        899 |        598 |          0 |          0 |          0 |
    store   $2, [$1 + 1]                # |        301 |      1,505 |      1,204 |          0 |          0 |          0 |
    b       be_cont.31081               # |        301 |        305 |          0 |          0 |          0 |          2 |
be_else.31081:
    store   $3, [$1 + 0]                # |        301 |        604 |        297 |          1 |          0 |          0 |
    load    [$13 + 0], $2               # |        301 |        313 |          0 |          0 |          2 |          0 |
    finv    $2, $2                      # |        301 |        899 |        598 |          0 |          0 |          0 |
    store   $2, [$1 + 1]                # |        301 |      1,505 |      1,204 |          0 |          0 |          0 |
be_cont.31081:
be_cont.31077:
    load    [$13 + 1], $2               # |        602 |        614 |          0 |          0 |          2 |          0 |
    fcmp    $2, $zero                   # |        602 |      1,802 |      1,200 |          0 |          0 |          0 |
    bne     be_else.31082               # |        602 |        610 |          0 |          0 |          0 |          4 |
be_then.31082:
    store   $zero, [$1 + 3]
    b       be_cont.31082
be_else.31082:
    load    [$12 + 6], $3               # |        602 |        620 |          0 |          1 |          2 |          0 |
    fcmp    $zero, $2                   # |        602 |        602 |          0 |          0 |          0 |          0 |
    bg      ble_else.31083              # |        602 |        762 |          0 |          0 |          0 |         80 |
ble_then.31083:
    li      0, $2                       # |        301 |        301 |          0 |          0 |          0 |          0 |
    b       ble_cont.31083              # |        301 |        309 |          0 |          0 |          0 |          4 |
ble_else.31083:
    li      1, $2                       # |        301 |        301 |          0 |          0 |          0 |          0 |
ble_cont.31083:
    cmp     $3, 0                       # |        602 |        602 |          0 |          0 |          0 |          0 |
    be      bne_cont.31084              # |        602 |        652 |          0 |          1 |          0 |         22 |
bne_then.31084:
    cmp     $2, 0
    bne     be_else.31085
be_then.31085:
    li      1, $2
    b       be_cont.31085
be_else.31085:
    li      0, $2
be_cont.31085:
bne_cont.31084:
    load    [$12 + 4], $3               # |        602 |        608 |          0 |          0 |          1 |          0 |
    cmp     $2, 0                       # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $3                # |        602 |      1,949 |        453 |        148 |          1 |          0 |
    bne     be_else.31086               # |        602 |        614 |          0 |          0 |          0 |          6 |
be_then.31086:
    fneg    $3, $2                      # |        301 |        600 |        299 |          0 |          0 |          0 |
    store   $2, [$1 + 2]                # |        301 |        602 |        301 |          0 |          0 |          0 |
    load    [$13 + 1], $2               # |        301 |        307 |          0 |          0 |          1 |          0 |
    finv    $2, $2                      # |        301 |        901 |        600 |          0 |          0 |          0 |
    store   $2, [$1 + 3]                # |        301 |      1,505 |      1,204 |          0 |          0 |          0 |
    b       be_cont.31086               # |        301 |        309 |          0 |          0 |          0 |          4 |
be_else.31086:
    store   $3, [$1 + 2]                # |        301 |        912 |        233 |         63 |          0 |          0 |
    load    [$13 + 1], $2               # |        301 |        313 |          0 |          0 |          2 |          0 |
    finv    $2, $2                      # |        301 |        899 |        598 |          0 |          0 |          0 |
    store   $2, [$1 + 3]                # |        301 |      1,505 |      1,204 |          0 |          0 |          0 |
be_cont.31086:
be_cont.31082:
    load    [$13 + 2], $2               # |        602 |      1,112 |          0 |         85 |          0 |          0 |
    fcmp    $2, $zero                   # |        602 |      1,806 |      1,204 |          0 |          0 |          0 |
    bne     be_else.31087               # |        602 |        618 |          0 |          0 |          0 |          8 |
be_then.31087:
    store   $zero, [$1 + 5]
.count storer
    add     $10, $11, $tmp
    sub     $11, 1, $3
    store   $1, [$tmp + 0]
    load    [$sp - 2], $2
    b       iter_setup_dirvec_constants.2826
be_else.31087:
    load    [$12 + 6], $3               # |        602 |      1,496 |          0 |        148 |          1 |          0 |
    load    [$12 + 4], $4               # |        602 |        602 |          0 |          0 |          0 |          0 |
    fcmp    $zero, $2                   # |        602 |        602 |          0 |          0 |          0 |          0 |
    bg      ble_else.31088              # |        602 |      1,760 |          0 |        148 |          0 |        135 |
ble_then.31088:
    li      0, $2                       # |        302 |        302 |          0 |          0 |          0 |          0 |
    b       ble_cont.31088              # |        302 |        312 |          0 |          0 |          0 |          5 |
ble_else.31088:
    li      1, $2                       # |        300 |        300 |          0 |          0 |          0 |          0 |
ble_cont.31088:
    cmp     $3, 0                       # |        602 |        602 |          0 |          0 |          0 |          0 |
    be      bne_cont.31089              # |        602 |        618 |          0 |          0 |          0 |          8 |
bne_then.31089:
    cmp     $2, 0
    bne     be_else.31090
be_then.31090:
    li      1, $2
    b       be_cont.31090
be_else.31090:
    li      0, $2
be_cont.31090:
bne_cont.31089:
    load    [$4 + 2], $3                # |        602 |      1,100 |          0 |         80 |          3 |          0 |
    cmp     $2, 0                       # |        602 |        602 |          0 |          0 |          0 |          0 |
    bne     be_else.31091               # |        602 |        614 |          0 |          0 |          0 |          6 |
be_then.31091:
    fneg    $3, $2                      # |        302 |        302 |          0 |          0 |          0 |          0 |
    b       be_cont.31091               # |        302 |        310 |          0 |          0 |          0 |          4 |
be_else.31091:
    mov     $3, $2                      # |        300 |        306 |          0 |          1 |          0 |          0 |
be_cont.31091:
    store   $2, [$1 + 4]                # |        602 |      1,076 |          0 |         79 |          0 |          0 |
    load    [$13 + 2], $2               # |        602 |        620 |          0 |          0 |          3 |          0 |
.count storer
    add     $10, $11, $tmp              # |        602 |        602 |          0 |          0 |          0 |          0 |
    sub     $11, 1, $3                  # |        602 |        602 |          0 |          0 |          0 |          0 |
    finv    $2, $2                      # |        602 |        602 |          0 |          0 |          0 |          0 |
    store   $2, [$1 + 5]                # |        602 |      3,010 |      2,408 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$sp - 2], $2               # |        602 |      1,094 |          0 |         80 |          2 |          0 |
    b       iter_setup_dirvec_constants.2826# |        602 |        618 |          0 |          0 |          0 |          8 |
be_else.31076:
    cmp     $14, 2                      # |      1,806 |      1,806 |          0 |          0 |          0 |          0 |
    bne     be_else.31092               # |      1,806 |      4,206 |          0 |          0 |          0 |      1,200 |
be_then.31092:
    li      4, $2                       # |        602 |        602 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        602 |        602 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$12 + 4], $2               # |        602 |        614 |          0 |          0 |          2 |          0 |
    load    [$12 + 4], $3               # |        602 |        608 |          0 |          1 |          0 |          0 |
    load    [$12 + 4], $4               # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$13 + 0], $5               # |        602 |        626 |          0 |          0 |          4 |          0 |
    load    [$2 + 0], $2                # |        602 |        644 |          0 |          0 |          7 |          0 |
    load    [$3 + 1], $3                # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$4 + 2], $4                # |        602 |        602 |          0 |          0 |          0 |          0 |
    fmul    $5, $2, $2                  # |        602 |        602 |          0 |          0 |          0 |          0 |
    load    [$13 + 1], $5               # |        602 |        620 |          0 |          0 |          3 |          0 |
.count storer
    add     $10, $11, $tmp              # |        602 |        608 |          0 |          1 |          0 |          0 |
    fmul    $5, $3, $3                  # |        602 |      1,200 |        598 |          0 |          0 |          0 |
    fadd    $2, $3, $2                  # |        602 |      3,010 |      2,408 |          0 |          0 |          0 |
    load    [$13 + 2], $3               # |        602 |        602 |          0 |          0 |          0 |          0 |
    fmul    $3, $4, $3                  # |        602 |      1,806 |      1,204 |          0 |          0 |          0 |
    fadd    $2, $3, $2                  # |        602 |      3,010 |      2,408 |          0 |          0 |          0 |
    fcmp    $2, $zero                   # |        602 |      3,010 |      2,408 |          0 |          0 |          0 |
    bg      ble_else.31093              # |        602 |        936 |          0 |          0 |          0 |        167 |
ble_then.31093:
    store   $zero, [$1 + 0]             # |        301 |        301 |          0 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |        301 |        301 |          0 |          0 |          0 |          0 |
    sub     $11, 1, $3                  # |        301 |        301 |          0 |          0 |          0 |          0 |
    load    [$sp - 2], $2               # |        301 |        301 |          0 |          0 |          0 |          0 |
    b       iter_setup_dirvec_constants.2826# |        301 |        305 |          0 |          0 |          0 |          2 |
ble_else.31093:
    finv    $2, $2                      # |        301 |        307 |          0 |          1 |          0 |          0 |
    fneg    $2, $3                      # |        301 |      1,505 |      1,204 |          0 |          0 |          0 |
    store   $3, [$1 + 0]                # |        301 |        602 |        301 |          0 |          0 |          0 |
    load    [$12 + 4], $3               # |        301 |        307 |          0 |          1 |          0 |          0 |
    load    [$3 + 0], $3                # |        301 |        915 |        602 |          0 |          2 |          0 |
    fmul    $3, $2, $3                  # |        301 |        899 |        598 |          0 |          0 |          0 |
    fneg    $3, $3                      # |        301 |      1,505 |      1,204 |          0 |          0 |          0 |
    store   $3, [$1 + 1]                # |        301 |        602 |        301 |          0 |          0 |          0 |
    load    [$12 + 4], $3               # |        301 |        301 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $3                # |        301 |        903 |        602 |          0 |          0 |          0 |
    fmul    $3, $2, $3                  # |        301 |        903 |        602 |          0 |          0 |          0 |
    fneg    $3, $3                      # |        301 |      1,507 |      1,200 |          1 |          0 |          0 |
    store   $3, [$1 + 2]                # |        301 |        602 |        301 |          0 |          0 |          0 |
    load    [$12 + 4], $3               # |        301 |        301 |          0 |          0 |          0 |          0 |
    load    [$3 + 2], $3                # |        301 |        903 |        602 |          0 |          0 |          0 |
    fmul    $3, $2, $2                  # |        301 |        903 |        602 |          0 |          0 |          0 |
    sub     $11, 1, $3                  # |        301 |        301 |          0 |          0 |          0 |          0 |
    fneg    $2, $2                      # |        301 |      1,204 |        903 |          0 |          0 |          0 |
    store   $2, [$1 + 3]                # |        301 |        602 |        301 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |        301 |        301 |          0 |          0 |          0 |          0 |
    load    [$sp - 2], $2               # |        301 |        313 |          0 |          0 |          2 |          0 |
    b       iter_setup_dirvec_constants.2826# |        301 |        301 |          0 |          0 |          0 |          0 |
be_else.31092:
    li      5, $2                       # |      1,204 |      1,210 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$12 + 3], $2               # |      1,204 |      1,228 |          0 |          0 |          4 |          0 |
    load    [$12 + 4], $3               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$12 + 4], $4               # |      1,204 |      1,210 |          0 |          1 |          0 |          0 |
    load    [$12 + 4], $5               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$13 + 0], $6               # |      1,204 |      1,258 |          0 |          0 |          9 |          0 |
    load    [$13 + 1], $7               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$13 + 2], $8               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fmul    $6, $6, $9                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $3                # |      1,204 |      1,246 |          0 |          0 |          7 |          0 |
    load    [$4 + 1], $4                # |      1,204 |      1,216 |          0 |          0 |          2 |          0 |
    load    [$5 + 2], $5                # |      1,204 |      1,210 |          0 |          1 |          0 |          0 |
    cmp     $2, 0                       # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fmul    $9, $3, $3                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fmul    $7, $7, $9                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fmul    $9, $4, $4                  # |      1,204 |      6,020 |      4,816 |          0 |          0 |          0 |
    fadd    $3, $4, $3                  # |      1,204 |      6,020 |      4,816 |          0 |          0 |          0 |
    fmul    $8, $8, $4                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fmul    $4, $5, $4                  # |      1,204 |      6,020 |      4,816 |          0 |          0 |          0 |
    fadd    $3, $4, $3                  # |      1,204 |      6,022 |      4,812 |          1 |          0 |          0 |
    be      bne_cont.31094              # |      1,204 |      1,208 |          0 |          0 |          0 |          2 |
bne_then.31094:
    fmul    $7, $8, $4
    load    [$12 + 9], $5
    load    [$5 + 0], $5
    fmul    $4, $5, $4
    load    [$12 + 9], $5
    load    [$5 + 1], $5
    fadd    $3, $4, $3
    fmul    $8, $6, $4
    fmul    $4, $5, $4
    load    [$12 + 9], $5
    load    [$5 + 2], $5
    fadd    $3, $4, $3
    fmul    $6, $7, $4
    fmul    $4, $5, $4
    fadd    $3, $4, $3
bne_cont.31094:
    store   $3, [$1 + 0]                # |      1,204 |      4,817 |      3,607 |          1 |          0 |          0 |
    load    [$12 + 4], $4               # |      1,204 |      1,222 |          0 |          0 |          3 |          0 |
    load    [$12 + 4], $5               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$12 + 4], $6               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$13 + 0], $7               # |      1,204 |      1,210 |          0 |          0 |          1 |          0 |
    load    [$4 + 0], $4                # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$5 + 1], $5                # |      1,204 |      1,210 |          0 |          0 |          1 |          0 |
    load    [$13 + 2], $8               # |      1,204 |      1,240 |          0 |          1 |          5 |          0 |
    fmul    $7, $4, $4                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    load    [$13 + 1], $7               # |      1,204 |      1,234 |          0 |          0 |          5 |          0 |
    load    [$6 + 2], $6                # |      1,204 |      1,222 |          0 |          0 |          3 |          0 |
    cmp     $2, 0                       # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fmul    $7, $5, $5                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fmul    $8, $6, $6                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fneg    $4, $4                      # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
.count storer
    add     $10, $11, $tmp              # |      1,204 |      2,974 |          0 |        295 |          0 |          0 |
    fneg    $5, $5                      # |      1,204 |      2,113 |        909 |          0 |          0 |          0 |
    fneg    $6, $6                      # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    bne     be_else.31095               # |      1,204 |      1,208 |          0 |          0 |          0 |          2 |
be_then.31095:
    store   $4, [$1 + 1]                # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    store   $5, [$1 + 2]                # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    store   $6, [$1 + 3]                # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fcmp    $3, $zero                   # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    bne     be_else.31096               # |      1,204 |      2,102 |          0 |        149 |          0 |          2 |
be_then.31096:
    store   $1, [$tmp + 0]
    sub     $11, 1, $3
    load    [$sp - 2], $2
    b       iter_setup_dirvec_constants.2826
be_else.31096:
    finv    $3, $2                      # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    sub     $11, 1, $3                  # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    store   $2, [$1 + 4]                # |      1,204 |      4,816 |      3,612 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |      1,204 |      1,240 |          0 |          6 |          0 |          0 |
    load    [$sp - 2], $2               # |      1,204 |      1,228 |          0 |          0 |          4 |          0 |
    b       iter_setup_dirvec_constants.2826# |      1,204 |      1,206 |          0 |          0 |          0 |          1 |
be_else.31095:
    load    [$12 + 9], $2
    load    [$12 + 9], $9
    fcmp    $3, $zero
    load    [$2 + 1], $2
    load    [$9 + 2], $9
    fmul    $8, $2, $8
    fmul    $7, $9, $7
    fadd    $8, $7, $7
    fmul    $7, $39, $7
    fsub    $4, $7, $4
    store   $4, [$1 + 1]
    load    [$12 + 9], $4
    load    [$13 + 2], $7
    load    [$13 + 0], $8
    load    [$4 + 0], $4
    fmul    $8, $9, $8
    fmul    $7, $4, $7
    fadd    $7, $8, $7
    fmul    $7, $39, $7
    fsub    $5, $7, $5
    store   $5, [$1 + 2]
    load    [$13 + 1], $5
    fmul    $5, $4, $4
    load    [$13 + 0], $5
    fmul    $5, $2, $2
    fadd    $4, $2, $2
    fmul    $2, $39, $2
    fsub    $6, $2, $2
    store   $2, [$1 + 3]
    bne     be_else.31097
be_then.31097:
    store   $1, [$tmp + 0]
    sub     $11, 1, $3
    load    [$sp - 2], $2
    b       iter_setup_dirvec_constants.2826
be_else.31097:
    finv    $3, $2
    sub     $11, 1, $3
    store   $2, [$1 + 4]
    store   $1, [$tmp + 0]
    load    [$sp - 2], $2
    b       iter_setup_dirvec_constants.2826
bge_else.31075:
.count stack_move
    add     $sp, 2, $sp                 # |        602 |        602 |          0 |          0 |          0 |          0 |
    ret                                 # |        602 |        602 |          0 |          0 |          0 |          0 |
be_else.31059:
    cmp     $12, 2                      # |      4,365 |      4,371 |          0 |          1 |          0 |          0 |
    bne     be_else.31098               # |      4,365 |      4,403 |          0 |          0 |          0 |         19 |
be_then.31098:
    li      4, $2                       # |        151 |        151 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        151 |        157 |          0 |          1 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |        151 |        151 |          0 |          0 |          0 |          0 |
    load    [$11 + 4], $2               # |        151 |        151 |          0 |          0 |          0 |          0 |
    load    [$11 + 4], $3               # |        151 |        151 |          0 |          0 |          0 |          0 |
    load    [$11 + 4], $4               # |        151 |        151 |          0 |          0 |          0 |          0 |
    load    [$13 + 0], $5               # |        151 |        205 |          0 |          0 |          9 |          0 |
    load    [$2 + 0], $2                # |        151 |        151 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $3                # |        151 |        151 |          0 |          0 |          0 |          0 |
    load    [$4 + 2], $4                # |        151 |        157 |          0 |          1 |          0 |          0 |
    fmul    $5, $2, $2                  # |        151 |        151 |          0 |          0 |          0 |          0 |
    load    [$13 + 1], $5               # |        151 |        157 |          0 |          0 |          1 |          0 |
    fmul    $5, $3, $3                  # |        151 |        451 |        300 |          0 |          0 |          0 |
    fadd    $2, $3, $2                  # |        151 |        755 |        604 |          0 |          0 |          0 |
    load    [$13 + 2], $3               # |        151 |        301 |          0 |          0 |         25 |          0 |
    fmul    $3, $4, $3                  # |        151 |        403 |        252 |          0 |          0 |          0 |
    fadd    $2, $3, $2                  # |        151 |        755 |        604 |          0 |          0 |          0 |
    fcmp    $2, $zero                   # |        151 |        757 |        600 |          1 |          0 |          0 |
    bg      ble_else.31099              # |        151 |        249 |          0 |          0 |          0 |         49 |
ble_then.31099:
    store   $zero, [$1 + 0]             # |         80 |         80 |          0 |          0 |          0 |          0 |
    load    [$sp - 1], $2               # |         80 |         86 |          0 |          0 |          1 |          0 |
.count storer
    add     $10, $2, $tmp               # |         80 |        238 |        158 |          0 |          0 |          0 |
    sub     $2, 1, $3                   # |         80 |         80 |          0 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |         80 |         80 |          0 |          0 |          0 |          0 |
    load    [$sp - 2], $2               # |         80 |         86 |          0 |          0 |          1 |          0 |
    b       iter_setup_dirvec_constants.2826# |         80 |         90 |          0 |          1 |          0 |          2 |
ble_else.31099:
    finv    $2, $2                      # |         71 |         71 |          0 |          0 |          0 |          0 |
    fneg    $2, $3                      # |         71 |        355 |        284 |          0 |          0 |          0 |
    store   $3, [$1 + 0]                # |         71 |        142 |         71 |          0 |          0 |          0 |
    load    [$11 + 4], $3               # |         71 |         71 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $3                # |         71 |        213 |        142 |          0 |          0 |          0 |
    fmul    $3, $2, $3                  # |         71 |        213 |        142 |          0 |          0 |          0 |
    fneg    $3, $3                      # |         71 |        355 |        284 |          0 |          0 |          0 |
    store   $3, [$1 + 1]                # |         71 |        147 |         70 |          1 |          0 |          0 |
    load    [$11 + 4], $3               # |         71 |         71 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $3                # |         71 |        213 |        142 |          0 |          0 |          0 |
    fmul    $3, $2, $3                  # |         71 |        213 |        142 |          0 |          0 |          0 |
    fneg    $3, $3                      # |         71 |        355 |        284 |          0 |          0 |          0 |
    store   $3, [$1 + 2]                # |         71 |        142 |         71 |          0 |          0 |          0 |
    load    [$11 + 4], $3               # |         71 |         71 |          0 |          0 |          0 |          0 |
    load    [$3 + 2], $3                # |         71 |        213 |        142 |          0 |          0 |          0 |
    fmul    $3, $2, $2                  # |         71 |        217 |        140 |          1 |          0 |          0 |
    fneg    $2, $2                      # |         71 |        355 |        284 |          0 |          0 |          0 |
    store   $2, [$1 + 3]                # |         71 |        142 |         71 |          0 |          0 |          0 |
    load    [$sp - 1], $2               # |         71 |         83 |          0 |          0 |          2 |          0 |
.count storer
    add     $10, $2, $tmp               # |         71 |        209 |        138 |          0 |          0 |          0 |
    sub     $2, 1, $3                   # |         71 |         71 |          0 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |         71 |         71 |          0 |          0 |          0 |          0 |
    load    [$sp - 2], $2               # |         71 |         89 |          0 |          0 |          3 |          0 |
    b       iter_setup_dirvec_constants.2826# |         71 |         75 |          0 |          0 |          0 |          2 |
be_else.31098:
    li      5, $2                       # |      4,214 |      4,220 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$11 + 3], $2               # |      4,214 |      4,310 |          0 |          0 |         16 |          0 |
    load    [$11 + 4], $3               # |      4,214 |      4,280 |          0 |          0 |         11 |          0 |
    load    [$11 + 4], $4               # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$11 + 4], $5               # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$13 + 0], $6               # |      4,214 |      4,424 |          0 |          3 |         32 |          0 |
    load    [$13 + 1], $7               # |      4,214 |      4,220 |          0 |          0 |          1 |          0 |
    load    [$13 + 2], $8               # |      4,214 |      4,274 |          0 |          0 |         10 |          0 |
    fmul    $6, $6, $9                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $3                # |      4,214 |      4,472 |          0 |          0 |         43 |          0 |
    load    [$4 + 1], $4                # |      4,214 |      4,250 |          0 |          0 |          6 |          0 |
    load    [$5 + 2], $5                # |      4,214 |      4,256 |          0 |          0 |          7 |          0 |
    cmp     $2, 0                       # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fmul    $9, $3, $3                  # |      4,214 |      4,226 |          0 |          2 |          0 |          0 |
    fmul    $7, $7, $9                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fmul    $9, $4, $4                  # |      4,214 |     21,070 |     16,856 |          0 |          0 |          0 |
    fadd    $3, $4, $3                  # |      4,214 |     21,070 |     16,856 |          0 |          0 |          0 |
    fmul    $8, $8, $4                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fmul    $4, $5, $4                  # |      4,214 |     21,070 |     16,856 |          0 |          0 |          0 |
    fadd    $3, $4, $3                  # |      4,214 |     21,070 |     16,856 |          0 |          0 |          0 |
    be      bne_cont.31100              # |      4,214 |      4,218 |          0 |          0 |          0 |          2 |
bne_then.31100:
    fmul    $7, $8, $4
    load    [$11 + 9], $5
    load    [$5 + 0], $5
    fmul    $4, $5, $4
    load    [$11 + 9], $5
    load    [$5 + 1], $5
    fadd    $3, $4, $3
    fmul    $8, $6, $4
    fmul    $4, $5, $4
    load    [$11 + 9], $5
    load    [$5 + 2], $5
    fadd    $3, $4, $3
    fmul    $6, $7, $4
    fmul    $4, $5, $4
    fadd    $3, $4, $3
bne_cont.31100:
    store   $3, [$1 + 0]                # |      4,214 |     16,860 |     12,634 |          2 |          0 |          0 |
    load    [$11 + 4], $4               # |      4,214 |      4,280 |          0 |          2 |          9 |          0 |
    load    [$11 + 4], $5               # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$11 + 4], $6               # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$13 + 0], $7               # |      4,214 |      4,292 |          0 |          0 |         13 |          0 |
    load    [$4 + 0], $4                # |      4,214 |      4,226 |          0 |          0 |          2 |          0 |
    load    [$5 + 1], $5                # |      4,214 |      4,232 |          0 |          0 |          3 |          0 |
    load    [$13 + 2], $8               # |      4,214 |      4,292 |          0 |          0 |         13 |          0 |
    fmul    $7, $4, $4                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$13 + 1], $7               # |      4,214 |      4,280 |          0 |          2 |          9 |          0 |
    load    [$6 + 2], $6                # |      4,214 |      4,292 |          0 |          0 |         13 |          0 |
    cmp     $2, 0                       # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fmul    $7, $5, $5                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fmul    $8, $6, $6                  # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fneg    $4, $4                      # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fneg    $5, $5                      # |      4,214 |     12,642 |      8,428 |          0 |          0 |          0 |
    fneg    $6, $6                      # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    bne     be_else.31101               # |      4,214 |      4,226 |          0 |          2 |          0 |          0 |
be_then.31101:
    store   $4, [$1 + 1]                # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    store   $5, [$1 + 2]                # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    store   $6, [$1 + 3]                # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    fcmp    $3, $zero                   # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    bne     be_else.31102               # |      4,214 |      4,218 |          0 |          0 |          0 |          2 |
be_then.31102:
    load    [$sp - 1], $2
.count storer
    add     $10, $2, $tmp
    sub     $2, 1, $3
    store   $1, [$tmp + 0]
    load    [$sp - 2], $2
    b       iter_setup_dirvec_constants.2826
be_else.31102:
    finv    $3, $2                      # |      4,214 |      4,232 |          0 |          3 |          0 |          0 |
    store   $2, [$1 + 4]                # |      4,214 |     21,070 |     16,856 |          0 |          0 |          0 |
    load    [$sp - 1], $2               # |      4,214 |      4,382 |          0 |          0 |         28 |          0 |
.count storer
    add     $10, $2, $tmp               # |      4,214 |     12,586 |      8,372 |          0 |          0 |          0 |
    sub     $2, 1, $3                   # |      4,214 |      4,220 |          0 |          1 |          0 |          0 |
    store   $1, [$tmp + 0]              # |      4,214 |      4,214 |          0 |          0 |          0 |          0 |
    load    [$sp - 2], $2               # |      4,214 |      4,358 |          0 |          0 |         24 |          0 |
    b       iter_setup_dirvec_constants.2826# |      4,214 |      4,218 |          0 |          0 |          0 |          2 |
be_else.31101:
    load    [$11 + 9], $2
    load    [$11 + 9], $9
    fcmp    $3, $zero
    load    [$2 + 1], $2
    load    [$9 + 2], $9
    fmul    $8, $2, $8
    fmul    $7, $9, $7
    fadd    $8, $7, $7
    fmul    $7, $39, $7
    fsub    $4, $7, $4
    store   $4, [$1 + 1]
    load    [$11 + 9], $4
    load    [$13 + 2], $7
    load    [$13 + 0], $8
    load    [$4 + 0], $4
    fmul    $8, $9, $8
    fmul    $7, $4, $7
    fadd    $7, $8, $7
    fmul    $7, $39, $7
    fsub    $5, $7, $5
    store   $5, [$1 + 2]
    load    [$13 + 1], $5
    fmul    $5, $4, $4
    load    [$13 + 0], $5
    fmul    $5, $2, $2
    fadd    $4, $2, $2
    fmul    $2, $39, $2
    fsub    $6, $2, $2
    store   $2, [$1 + 3]
    bne     be_else.31103
be_then.31103:
    load    [$sp - 1], $2
.count storer
    add     $10, $2, $tmp
    sub     $2, 1, $3
    store   $1, [$tmp + 0]
    load    [$sp - 2], $2
    b       iter_setup_dirvec_constants.2826
be_else.31103:
    finv    $3, $2
    store   $2, [$1 + 4]
    load    [$sp - 1], $2
.count storer
    add     $10, $2, $tmp
    sub     $2, 1, $3
    store   $1, [$tmp + 0]
    load    [$sp - 2], $2
    b       iter_setup_dirvec_constants.2826
bge_else.31058:
    ret
.end iter_setup_dirvec_constants

######################################################################
.begin setup_startp_constants
setup_startp_constants.2831:
    cmp     $3, 0                       # |    667,764 |    776,994 |          0 |     18,205 |          0 |          0 |
    bl      bge_else.31104              # |    667,764 |    878,458 |          0 |          0 |          0 |    105,347 |
bge_then.31104:
    load    [min_caml_objects + $3], $1 # |    630,666 |    732,000 |          0 |          0 |     16,889 |          0 |
    load    [$2 + 0], $6                # |    630,666 |    645,798 |          0 |          0 |      2,522 |          0 |
    load    [$1 + 5], $4                # |    630,666 |  1,936,180 |    611,572 |          0 |    115,657 |          0 |
    load    [$1 + 10], $5               # |    630,666 |  1,282,356 |          0 |          0 |    108,615 |          0 |
    load    [$4 + 0], $4                # |    630,666 |  2,012,986 |    455,146 |          0 |    154,529 |          0 |
    fsub    $6, $4, $4                  # |    630,666 |  1,687,488 |    902,388 |     25,739 |          0 |          0 |
    store   $4, [$5 + 0]                # |    630,666 |  3,153,330 |  2,522,664 |          0 |          0 |          0 |
    load    [$1 + 5], $4                # |    630,666 |    630,666 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $6                # |    630,666 |    641,778 |          0 |          0 |      1,852 |          0 |
    load    [$4 + 1], $4                # |    630,666 |  1,317,422 |    628,814 |          0 |      9,657 |          0 |
    fsub    $6, $4, $4                  # |    630,666 |  1,872,684 |  1,242,018 |          0 |          0 |          0 |
    store   $4, [$5 + 1]                # |    630,666 |  3,153,330 |  2,522,664 |          0 |          0 |          0 |
    load    [$1 + 5], $4                # |    630,666 |    632,220 |          0 |          0 |        259 |          0 |
    load    [$2 + 2], $6                # |    630,666 |    785,562 |          0 |     24,599 |      1,217 |          0 |
    load    [$4 + 2], $4                # |    630,666 |  1,294,531 |    604,861 |          0 |      9,834 |          0 |
    fsub    $6, $4, $4                  # |    630,666 |  1,872,330 |  1,241,664 |          0 |          0 |          0 |
    store   $4, [$5 + 2]                # |    630,666 |  3,153,330 |  2,522,664 |          0 |          0 |          0 |
    load    [$1 + 1], $4                # |    630,666 |  1,250,466 |          0 |          0 |    103,300 |          0 |
    cmp     $4, 2                       # |    630,666 |  1,685,398 |  1,054,732 |          0 |          0 |          0 |
    bne     be_else.31105               # |    630,666 |    781,364 |          0 |          0 |          0 |     75,349 |
be_then.31105:
    load    [$1 + 4], $1                # |     74,196 |     81,912 |          0 |          0 |      1,286 |          0 |
    load    [$5 + 0], $4                # |     74,196 |    234,036 |          0 |     17,175 |      9,465 |          0 |
    sub     $3, 1, $3                   # |     74,196 |     74,196 |          0 |          0 |          0 |          0 |
    load    [$1 + 0], $6                # |     74,196 |     95,820 |          0 |          0 |      3,604 |          0 |
    load    [$1 + 1], $7                # |     74,196 |     76,158 |          0 |          0 |        327 |          0 |
    load    [$1 + 2], $1                # |     74,196 |     84,528 |          0 |          0 |      1,722 |          0 |
    fmul    $6, $4, $4                  # |     74,196 |     74,196 |          0 |          0 |          0 |          0 |
    load    [$5 + 1], $6                # |     74,196 |     75,798 |          0 |          0 |        267 |          0 |
    fmul    $7, $6, $6                  # |     74,196 |    222,054 |    147,858 |          0 |          0 |          0 |
    fadd    $4, $6, $4                  # |     74,196 |    419,600 |    199,544 |     24,310 |          0 |          0 |
    load    [$5 + 2], $6                # |     74,196 |     75,894 |          0 |          0 |        283 |          0 |
    fmul    $1, $6, $1                  # |     74,196 |    222,022 |    147,826 |          0 |          0 |          0 |
    fadd    $4, $1, $1                  # |     74,196 |    370,980 |    296,784 |          0 |          0 |          0 |
    store   $1, [$5 + 3]                # |     74,196 |    370,980 |    296,784 |          0 |          0 |          0 |
    b       setup_startp_constants.2831 # |     74,196 |    129,206 |          0 |          0 |          0 |     27,505 |
be_else.31105:
    cmp     $4, 2                       # |    556,470 |    556,470 |          0 |          0 |          0 |          0 |
    bg      ble_else.31106              # |    556,470 |  1,197,886 |          0 |          0 |          0 |    320,708 |
ble_then.31106:
    sub     $3, 1, $3                   # |    222,588 |    222,588 |          0 |          0 |          0 |          0 |
    b       setup_startp_constants.2831 # |    222,588 |    222,600 |          0 |          0 |          0 |          6 |
ble_else.31106:
    load    [$1 + 4], $6                # |    333,882 |    538,254 |          0 |     24,310 |      9,752 |          0 |
    load    [$1 + 4], $7                # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    load    [$1 + 4], $8                # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    load    [$1 + 3], $9                # |    333,882 |    375,636 |          0 |          0 |      6,959 |          0 |
    load    [$5 + 0], $10               # |    333,882 |    683,214 |          0 |          0 |     58,222 |          0 |
    load    [$5 + 1], $11               # |    333,882 |    465,336 |          0 |          0 |     21,909 |          0 |
    load    [$5 + 2], $12               # |    333,882 |    497,976 |          0 |     25,663 |      1,686 |          0 |
    fmul    $10, $10, $13               # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    load    [$6 + 0], $6                # |    333,882 |    721,332 |          0 |          0 |     64,575 |          0 |
    load    [$7 + 1], $7                # |    333,882 |    440,112 |          0 |          0 |     17,705 |          0 |
    load    [$8 + 2], $8                # |    333,882 |    352,794 |          0 |          0 |      3,152 |          0 |
    cmp     $9, 0                       # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    fmul    $13, $6, $6                 # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    fmul    $11, $11, $13               # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    fmul    $13, $7, $7                 # |    333,882 |  1,714,210 |  1,245,928 |     22,400 |          0 |          0 |
    fadd    $6, $7, $6                  # |    333,882 |  1,669,410 |  1,335,528 |          0 |          0 |          0 |
    fmul    $12, $12, $7                # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    fmul    $7, $8, $7                  # |    333,882 |  1,669,410 |  1,335,528 |          0 |          0 |          0 |
    fadd    $6, $7, $6                  # |    333,882 |  1,669,410 |  1,335,528 |          0 |          0 |          0 |
    bne     be_else.31107               # |    333,882 |    334,380 |          0 |          0 |          0 |        249 |
be_then.31107:
    mov     $6, $1                      # |    333,882 |  1,335,030 |  1,001,148 |          0 |          0 |          0 |
    b       be_cont.31107               # |    333,882 |    356,466 |          0 |          0 |          0 |     11,292 |
be_else.31107:
    load    [$1 + 9], $7
    load    [$1 + 9], $8
    load    [$1 + 9], $1
    fmul    $11, $12, $9
    load    [$7 + 0], $7
    load    [$8 + 1], $8
    load    [$1 + 2], $1
    fmul    $9, $7, $7
    fadd    $6, $7, $6
    fmul    $12, $10, $7
    fmul    $7, $8, $7
    fadd    $6, $7, $6
    fmul    $10, $11, $7
    fmul    $7, $1, $1
    fadd    $6, $1, $1
be_cont.31107:
    cmp     $4, 3                       # |    333,882 |    463,632 |          0 |     21,625 |          0 |          0 |
    sub     $3, 1, $3                   # |    333,882 |    463,632 |          0 |     21,625 |          0 |          0 |
    bne     be_else.31108               # |    333,882 |    440,566 |          0 |          0 |          0 |     53,342 |
be_then.31108:
    fsub    $1, $36, $1                 # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    store   $1, [$5 + 3]                # |    333,882 |  1,669,410 |  1,335,528 |          0 |          0 |          0 |
    b       setup_startp_constants.2831 # |    333,882 |    333,890 |          0 |          0 |          0 |          4 |
be_else.31108:
    store   $1, [$5 + 3]
    b       setup_startp_constants.2831
bge_else.31104:
    ret                                 # |     37,098 |     37,098 |          0 |          0 |          0 |          0 |
.end setup_startp_constants

######################################################################
.begin check_all_inside
check_all_inside.2856:
    load    [$3 + $2], $1               # |  1,716,028 |  2,646,568 |          0 |    140,437 |     14,653 |          0 |
    cmp     $1, -1                      # |  1,716,028 |  5,118,778 |  3,402,750 |          0 |          0 |          0 |
    bne     be_else.31109               # |  1,716,028 |  1,717,292 |          0 |          0 |          0 |        632 |
be_then.31109:
    li      1, $1                       # |     22,090 |     22,090 |          0 |          0 |          0 |          0 |
    ret                                 # |     22,090 |     22,090 |          0 |          0 |          0 |          0 |
be_else.31109:
    load    [min_caml_objects + $1], $1 # |  1,693,938 |  1,767,318 |          0 |          0 |     12,230 |          0 |
    load    [$1 + 1], $7                # |  1,693,938 |  5,174,960 |  3,363,416 |          0 |     19,601 |          0 |
    load    [$1 + 5], $8                # |  1,693,938 |  2,202,564 |          0 |          0 |     84,771 |          0 |
    load    [$1 + 5], $9                # |  1,693,938 |  5,702,940 |          0 |    668,167 |          0 |          0 |
    load    [$1 + 5], $10               # |  1,693,938 |  1,693,938 |          0 |          0 |          0 |          0 |
    load    [$8 + 0], $8                # |  1,693,938 |  2,111,028 |          0 |          0 |     69,515 |          0 |
    load    [$9 + 1], $9                # |  1,693,938 |  1,757,094 |          0 |          0 |     10,526 |          0 |
    load    [$10 + 2], $10              # |  1,693,938 |  1,916,256 |          0 |          0 |     37,053 |          0 |
    fsub    $4, $8, $8                  # |  1,693,938 |  1,693,938 |          0 |          0 |          0 |          0 |
    fsub    $5, $9, $9                  # |  1,693,938 |  1,693,938 |          0 |          0 |          0 |          0 |
    fsub    $6, $10, $10                # |  1,693,938 |  1,693,938 |          0 |          0 |          0 |          0 |
    cmp     $7, 1                       # |  1,693,938 |  4,875,156 |          0 |    530,203 |          0 |          0 |
    bne     be_else.31110               # |  1,693,938 |  1,830,904 |          0 |          0 |          0 |     68,483 |
be_then.31110:
    load    [$1 + 4], $7                # |    716,909 |    719,681 |          0 |          0 |        462 |          0 |
    fabs    $8, $8                      # |    716,909 |    716,909 |          0 |          0 |          0 |          0 |
    load    [$7 + 0], $7                # |    716,909 |  1,514,440 |    716,447 |          0 |     13,514 |          0 |
    fcmp    $7, $8                      # |    716,909 |  2,123,699 |  1,406,790 |          0 |          0 |          0 |
    bg      ble_else.31111              # |    716,909 |  1,054,799 |          0 |          0 |          0 |    168,945 |
ble_then.31111:
    load    [$1 + 6], $1                # |    198,344 |    253,730 |          0 |          0 |      9,231 |          0 |
    cmp     $1, 0                       # |    198,344 |    828,722 |    265,824 |     60,759 |          0 |          0 |
    bne     be_else.31112               # |    198,344 |    198,344 |          0 |          0 |          0 |          0 |
be_then.31112:
    li      1, $1                       # |    198,344 |    198,344 |          0 |          0 |          0 |          0 |
    b       be_cont.31110               # |    198,344 |    198,438 |          0 |          0 |          0 |         47 |
be_else.31112:
    li      0, $1
    b       be_cont.31110
ble_else.31111:
    load    [$1 + 4], $7                # |    518,565 |  1,497,711 |          0 |    163,191 |          0 |          0 |
    fabs    $9, $8                      # |    518,565 |    518,565 |          0 |          0 |          0 |          0 |
    load    [$7 + 1], $7                # |    518,565 |  2,026,653 |    321,858 |    196,707 |        998 |          0 |
    fcmp    $7, $8                      # |    518,565 |  1,553,699 |  1,035,134 |          0 |          0 |          0 |
    bg      ble_else.31113              # |    518,565 |    623,111 |          0 |          0 |          0 |     52,273 |
ble_then.31113:
    load    [$1 + 6], $1                # |     55,268 |     55,268 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |     55,268 |    165,804 |    110,536 |          0 |          0 |          0 |
    bne     be_else.31114               # |     55,268 |     59,284 |          0 |          0 |          0 |      2,008 |
be_then.31114:
    li      1, $1                       # |     55,268 |     55,268 |          0 |          0 |          0 |          0 |
    b       be_cont.31110               # |     55,268 |     55,272 |          0 |          0 |          0 |          2 |
be_else.31114:
    li      0, $1
    b       be_cont.31110
ble_else.31113:
    load    [$1 + 4], $7                # |    463,297 |  2,146,375 |          0 |    280,513 |          0 |          0 |
    fabs    $10, $8                     # |    463,297 |    463,297 |          0 |          0 |          0 |          0 |
    load    [$1 + 6], $1                # |    463,297 |    595,711 |          0 |          0 |     22,069 |          0 |
    load    [$7 + 2], $7                # |    463,297 |    464,197 |          0 |          0 |        150 |          0 |
    fcmp    $7, $8                      # |    463,297 |  1,389,591 |    926,294 |          0 |          0 |          0 |
    bg      be_cont.31110               # |    463,297 |    491,361 |          0 |          0 |          0 |     14,032 |
ble_then.31115:
    cmp     $1, 0                       # |     17,085 |     80,961 |          0 |     10,646 |          0 |          0 |
    bne     be_else.31116               # |     17,085 |     17,085 |          0 |          0 |          0 |          0 |
be_then.31116:
    li      1, $1                       # |     17,085 |     17,085 |          0 |          0 |          0 |          0 |
    b       be_cont.31110               # |     17,085 |     17,089 |          0 |          0 |          0 |          2 |
be_else.31116:
    li      0, $1
    b       be_cont.31110
be_else.31110:
    cmp     $7, 2                       # |    977,029 |  3,385,345 |          0 |    401,386 |          0 |          0 |
    bne     be_else.31117               # |    977,029 |    997,519 |          0 |          0 |          0 |     10,245 |
be_then.31117:
    load    [$1 + 6], $7                # |    460,725 |  2,425,989 |          0 |    326,197 |      1,347 |          0 |
    load    [$1 + 4], $1                # |    460,725 |    488,427 |          0 |          0 |      4,617 |          0 |
    load    [$1 + 0], $11               # |    460,725 |  1,518,513 |    912,216 |          0 |     24,262 |          0 |
    fmul    $11, $8, $8                 # |    460,725 |  1,333,651 |    872,926 |          0 |          0 |          0 |
    load    [$1 + 1], $11               # |    460,725 |    470,079 |          0 |          0 |      1,559 |          0 |
    load    [$1 + 2], $1                # |    460,725 |    474,333 |          0 |          0 |      2,268 |          0 |
    fmul    $11, $9, $9                 # |    460,725 |    917,623 |    456,898 |          0 |          0 |          0 |
    fmul    $1, $10, $1                 # |    460,725 |    462,284 |      1,559 |          0 |          0 |          0 |
    fadd    $8, $9, $8                  # |    460,725 |  2,973,309 |    251,262 |    376,887 |          0 |          0 |
    fadd    $8, $1, $1                  # |    460,725 |  2,303,625 |  1,842,900 |          0 |          0 |          0 |
    fcmp    $zero, $1                   # |    460,725 |  2,303,625 |  1,842,900 |          0 |          0 |          0 |
    bg      ble_else.31118              # |    460,725 |    460,725 |          0 |          0 |          0 |          0 |
ble_then.31118:
    cmp     $7, 0                       # |    460,725 |    460,725 |          0 |          0 |          0 |          0 |
    bne     be_else.31119               # |    460,725 |    657,425 |          0 |          0 |          0 |     98,350 |
be_then.31119:
    li      1, $1
    b       be_cont.31117
be_else.31119:
    li      0, $1                       # |    460,725 |  2,029,413 |          0 |    261,448 |          0 |          0 |
    b       be_cont.31117               # |    460,725 |    460,979 |          0 |          0 |          0 |        127 |
ble_else.31118:
    cmp     $7, 0
    bne     be_else.31120
be_then.31120:
    li      0, $1
    b       be_cont.31117
be_else.31120:
    li      1, $1
    b       be_cont.31117
be_else.31117:
    load    [$1 + 6], $11               # |    516,304 |  1,605,088 |          0 |    101,307 |     80,157 |          0 |
    fmul    $8, $8, $12                 # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    load    [$1 + 4], $13               # |    516,304 |    537,058 |          0 |          0 |      3,459 |          0 |
    load    [$1 + 4], $14               # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    load    [$13 + 0], $13              # |    516,304 |  1,152,671 |    512,845 |          0 |     20,587 |          0 |
    load    [$14 + 1], $14              # |    516,304 |    532,724 |      1,960 |          0 |      2,410 |          0 |
    fmul    $12, $13, $12               # |    516,304 |  1,007,884 |    491,580 |          0 |          0 |          0 |
    fmul    $9, $9, $13                 # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    fmul    $13, $14, $13               # |    516,304 |  2,733,798 |  1,760,660 |     76,139 |          0 |          0 |
    load    [$1 + 4], $14               # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    load    [$14 + 2], $14              # |    516,304 |  1,555,470 |  1,032,608 |          0 |      1,093 |          0 |
    fadd    $12, $13, $12               # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    fmul    $10, $10, $13               # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    fmul    $13, $14, $13               # |    516,304 |  2,581,520 |  2,065,216 |          0 |          0 |          0 |
    fadd    $12, $13, $12               # |    516,304 |  2,581,520 |  2,065,216 |          0 |          0 |          0 |
    load    [$1 + 3], $13               # |    516,304 |    533,590 |          0 |          0 |      2,881 |          0 |
    cmp     $13, 0                      # |    516,304 |  1,826,220 |    888,620 |     70,216 |          0 |          0 |
    bne     be_else.31121               # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
be_then.31121:
    mov     $12, $1                     # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
    b       be_cont.31121               # |    516,304 |    516,312 |          0 |          0 |          0 |          4 |
be_else.31121:
    fmul    $9, $10, $13
    load    [$1 + 9], $14
    fmul    $10, $8, $10
    fmul    $8, $9, $8
    load    [$14 + 0], $14
    fmul    $13, $14, $13
    fadd    $12, $13, $12
    load    [$1 + 9], $13
    load    [$1 + 9], $1
    load    [$13 + 1], $13
    load    [$1 + 2], $1
    fmul    $10, $13, $10
    fmul    $8, $1, $1
    fadd    $12, $10, $10
    fadd    $10, $1, $1
be_cont.31121:
    cmp     $7, 3                       # |    516,304 |    875,368 |          0 |     59,844 |          0 |          0 |
    bne     be_cont.31122               # |    516,304 |    516,370 |          0 |          0 |          0 |         33 |
be_then.31122:
    fsub    $1, $36, $1                 # |    516,304 |    516,304 |          0 |          0 |          0 |          0 |
be_cont.31122:
    fcmp    $zero, $1                   # |    516,304 |  2,581,520 |  2,065,216 |          0 |          0 |          0 |
    bg      ble_else.31123              # |    516,304 |    672,212 |          0 |          0 |          0 |     77,954 |
ble_then.31123:
    cmp     $11, 0                      # |    184,512 |    374,802 |          0 |     31,715 |          0 |          0 |
    bne     be_else.31124               # |    184,512 |    184,512 |          0 |          0 |          0 |          0 |
be_then.31124:
    li      1, $1                       # |    184,512 |    184,512 |          0 |          0 |          0 |          0 |
    b       ble_cont.31123              # |    184,512 |    184,526 |          0 |          0 |          0 |          7 |
be_else.31124:
    li      0, $1
    b       ble_cont.31123
ble_else.31123:
    cmp     $11, 0                      # |    331,792 |    500,734 |          0 |     28,157 |          0 |          0 |
    bne     be_else.31125               # |    331,792 |    331,792 |          0 |          0 |          0 |          0 |
be_then.31125:
    li      0, $1                       # |    331,792 |    340,168 |          0 |      1,396 |          0 |          0 |
    b       be_cont.31125               # |    331,792 |    331,800 |          0 |          0 |          0 |          4 |
be_else.31125:
    li      1, $1
be_cont.31125:
ble_cont.31123:
be_cont.31117:
be_cont.31110:
    cmp     $1, 0                       # |  1,693,938 |  2,579,220 |          0 |    147,547 |          0 |          0 |
    bne     be_else.31126               # |  1,693,938 |  1,695,890 |          0 |          0 |          0 |        976 |
be_then.31126:
    add     $2, 1, $1                   # |  1,238,729 |  1,238,729 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $2               # |  1,238,729 |  2,539,828 |  1,238,729 |          0 |     10,395 |          0 |
    cmp     $2, -1                      # |  1,238,729 |  3,695,397 |  2,456,668 |          0 |          0 |          0 |
    bne     be_else.31127               # |  1,238,729 |  2,338,679 |          0 |    144,772 |          0 |    115,659 |
be_then.31127:
    li      1, $1                       # |    596,960 |    596,960 |          0 |          0 |          0 |          0 |
    ret                                 # |    596,960 |    596,960 |          0 |          0 |          0 |          0 |
be_else.31127:
    load    [min_caml_objects + $2], $2 # |    641,769 |    675,417 |          0 |          0 |      5,608 |          0 |
    load    [$2 + 5], $7                # |    641,769 |  3,060,433 |  1,272,322 |          0 |    191,057 |          0 |
    load    [$2 + 5], $8                # |    641,769 |    641,769 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $9                # |    641,769 |    641,769 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $10               # |    641,769 |  1,634,523 |          0 |          0 |    165,459 |          0 |
    load    [$7 + 0], $7                # |    641,769 |  1,672,941 |          0 |     70,186 |    101,676 |          0 |
    load    [$8 + 1], $8                # |    641,769 |    955,749 |          0 |          0 |     52,330 |          0 |
    load    [$9 + 2], $9                # |    641,769 |    651,267 |          0 |          0 |      1,583 |          0 |
    fsub    $4, $7, $7                  # |    641,769 |    641,769 |          0 |          0 |          0 |          0 |
    fsub    $5, $8, $8                  # |    641,769 |    641,769 |          0 |          0 |          0 |          0 |
    fsub    $6, $9, $9                  # |    641,769 |    641,769 |          0 |          0 |          0 |          0 |
    cmp     $10, 1                      # |    641,769 |    641,769 |          0 |          0 |          0 |          0 |
    bne     be_else.31128               # |    641,769 |    641,773 |          0 |          0 |          0 |          2 |
be_then.31128:
    load    [$2 + 4], $10
    fabs    $7, $7
    load    [$10 + 0], $10
    fcmp    $10, $7
    bg      ble_else.31129
ble_then.31129:
    load    [$2 + 6], $2
    cmp     $2, 0
    bne     be_else.31130
be_then.31130:
    li      1, $2
    b       be_cont.31128
be_else.31130:
    li      0, $2
    b       be_cont.31128
ble_else.31129:
    load    [$2 + 4], $7
    fabs    $8, $8
    load    [$7 + 1], $7
    fcmp    $7, $8
    bg      ble_else.31131
ble_then.31131:
    load    [$2 + 6], $2
    cmp     $2, 0
    bne     be_else.31132
be_then.31132:
    li      1, $2
    b       be_cont.31128
be_else.31132:
    li      0, $2
    b       be_cont.31128
ble_else.31131:
    load    [$2 + 4], $7
    fabs    $9, $8
    load    [$2 + 6], $2
    load    [$7 + 2], $7
    fcmp    $7, $8
    bg      be_cont.31128
ble_then.31133:
    cmp     $2, 0
    bne     be_else.31134
be_then.31134:
    li      1, $2
    b       be_cont.31128
be_else.31134:
    li      0, $2
    b       be_cont.31128
be_else.31128:
    cmp     $10, 2                      # |    641,769 |    648,333 |          0 |      1,094 |          0 |          0 |
    load    [$2 + 6], $10               # |    641,769 |  1,109,295 |          0 |          0 |     77,921 |          0 |
    bne     be_else.31135               # |    641,769 |    690,405 |          0 |          0 |          0 |     24,318 |
be_then.31135:
    load    [$2 + 4], $2                # |     31,829 |     33,041 |          0 |          0 |        202 |          0 |
    load    [$2 + 0], $11               # |     31,829 |     99,205 |     62,534 |        372 |        435 |          0 |
    fmul    $11, $7, $7                 # |     31,829 |     94,617 |     62,788 |          0 |          0 |          0 |
    load    [$2 + 1], $11               # |     31,829 |     32,135 |          0 |          0 |         51 |          0 |
    load    [$2 + 2], $2                # |     31,829 |     31,949 |          0 |          0 |         20 |          0 |
    fmul    $11, $8, $8                 # |     31,829 |     63,587 |     31,758 |          0 |          0 |          0 |
    fmul    $2, $9, $2                  # |     31,829 |     31,880 |         51 |          0 |          0 |          0 |
    fadd    $7, $8, $7                  # |     31,829 |    127,265 |     95,436 |          0 |          0 |          0 |
    fadd    $7, $2, $2                  # |     31,829 |    159,145 |    127,316 |          0 |          0 |          0 |
    fcmp    $zero, $2                   # |     31,829 |    159,889 |    125,828 |        372 |          0 |          0 |
    bg      ble_else.31136              # |     31,829 |     47,893 |          0 |          0 |          0 |      8,032 |
ble_then.31136:
    cmp     $10, 0                      # |     20,422 |     20,422 |          0 |          0 |          0 |          0 |
    bne     be_else.31137               # |     20,422 |     20,422 |          0 |          0 |          0 |          0 |
be_then.31137:
    li      1, $2
    b       be_cont.31135
be_else.31137:
    li      0, $2                       # |     20,422 |     20,422 |          0 |          0 |          0 |          0 |
    b       be_cont.31135               # |     20,422 |     20,426 |          0 |          0 |          0 |          2 |
ble_else.31136:
    cmp     $10, 0                      # |     11,407 |     11,467 |          0 |         10 |          0 |          0 |
    bne     be_else.31138               # |     11,407 |     11,455 |          0 |          0 |          0 |         24 |
be_then.31138:
    li      0, $2
    b       be_cont.31135
be_else.31138:
    li      1, $2                       # |     11,407 |     11,407 |          0 |          0 |          0 |          0 |
    b       be_cont.31135               # |     11,407 |     11,411 |          0 |          0 |          0 |          2 |
be_else.31135:
    load    [$2 + 1], $11               # |    609,940 |    616,960 |          0 |      1,170 |          0 |          0 |
    load    [$2 + 4], $12               # |    609,940 |    663,328 |          0 |          0 |      8,898 |          0 |
    load    [$2 + 4], $13               # |    609,940 |    623,512 |          0 |      2,262 |          0 |          0 |
    load    [$2 + 4], $14               # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    load    [$2 + 3], $15               # |    609,940 |    650,338 |          0 |          0 |      6,733 |          0 |
    fmul    $7, $7, $16                 # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    load    [$12 + 0], $12              # |    609,940 |  1,236,448 |          0 |          0 |    104,418 |          0 |
    load    [$13 + 1], $13              # |    609,940 |    618,226 |          0 |          0 |      1,381 |          0 |
    load    [$14 + 2], $14              # |    609,940 |    616,426 |          0 |          0 |      1,081 |          0 |
    cmp     $15, 0                      # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    fmul    $16, $12, $12               # |    609,940 |    617,122 |          0 |      1,197 |          0 |          0 |
    fmul    $8, $8, $16                 # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    fmul    $16, $13, $13               # |    609,940 |  3,049,700 |  2,439,760 |          0 |          0 |          0 |
    fadd    $12, $13, $12               # |    609,940 |  3,049,700 |  2,439,760 |          0 |          0 |          0 |
    fmul    $9, $9, $13                 # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
    fmul    $13, $14, $13               # |    609,940 |  3,049,700 |  2,439,760 |          0 |          0 |          0 |
    fadd    $12, $13, $12               # |    609,940 |  3,049,700 |  2,439,760 |          0 |          0 |          0 |
    bne     be_else.31139               # |    609,940 |    800,644 |          0 |          0 |          0 |     95,352 |
be_then.31139:
    mov     $12, $2                     # |    609,940 |  2,252,887 |  1,635,765 |      1,197 |          0 |          0 |
    b       be_cont.31139               # |    609,940 |    609,948 |          0 |          0 |          0 |          4 |
be_else.31139:
    load    [$2 + 9], $13
    load    [$2 + 9], $14
    load    [$2 + 9], $2
    fmul    $8, $9, $15
    load    [$13 + 0], $13
    fmul    $9, $7, $9
    fmul    $7, $8, $7
    load    [$2 + 2], $2
    fmul    $15, $13, $13
    fmul    $7, $2, $2
    fadd    $12, $13, $12
    load    [$14 + 1], $13
    fmul    $9, $13, $9
    fadd    $12, $9, $9
    fadd    $9, $2, $2
be_cont.31139:
    cmp     $11, 3                      # |    609,940 |    617,356 |          0 |      1,236 |          0 |          0 |
    bne     be_cont.31140               # |    609,940 |    635,262 |          0 |          0 |          0 |     12,661 |
be_then.31140:
    fsub    $2, $36, $2                 # |    609,940 |    609,940 |          0 |          0 |          0 |          0 |
be_cont.31140:
    fcmp    $zero, $2                   # |    609,940 |  3,049,700 |  2,439,760 |          0 |          0 |          0 |
    bg      ble_else.31141              # |    609,940 |    872,046 |          0 |          0 |          0 |    131,053 |
ble_then.31141:
    cmp     $10, 0                      # |    299,723 |    299,723 |          0 |          0 |          0 |          0 |
    bne     be_else.31142               # |    299,723 |    526,131 |          0 |          0 |          0 |    113,204 |
be_then.31142:
    li      1, $2                       # |    108,345 |    112,227 |          0 |        647 |          0 |          0 |
    b       ble_cont.31141              # |    108,345 |    108,349 |          0 |          0 |          0 |          2 |
be_else.31142:
    li      0, $2                       # |    191,378 |    191,918 |          0 |         90 |          0 |          0 |
    b       ble_cont.31141              # |    191,378 |    191,382 |          0 |          0 |          0 |          2 |
ble_else.31141:
    cmp     $10, 0                      # |    310,217 |    314,015 |          0 |        633 |          0 |          0 |
    bne     be_else.31143               # |    310,217 |    496,745 |          0 |          0 |          0 |     93,264 |
be_then.31143:
    li      0, $2                       # |    243,275 |    243,275 |          0 |          0 |          0 |          0 |
    b       be_cont.31143               # |    243,275 |    243,279 |          0 |          0 |          0 |          2 |
be_else.31143:
    li      1, $2                       # |     66,942 |     67,068 |          0 |         21 |          0 |          0 |
be_cont.31143:
ble_cont.31141:
be_cont.31135:
be_cont.31128:
    cmp     $2, 0                       # |    641,769 |    722,883 |     66,942 |      2,362 |          0 |          0 |
    bne     be_else.31144               # |    641,769 |    659,641 |          0 |          0 |          0 |      8,936 |
be_then.31144:
    add     $1, 1, $1                   # |    455,075 |    455,075 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $2               # |    455,075 |    955,378 |    455,075 |          0 |      7,538 |          0 |
    cmp     $2, -1                      # |    455,075 |  1,350,149 |    895,074 |          0 |          0 |          0 |
    bne     be_else.31145               # |    455,075 |    461,847 |          0 |          0 |          0 |      3,386 |
be_then.31145:
    li      1, $1                       # |    219,472 |    219,472 |          0 |          0 |          0 |          0 |
    ret                                 # |    219,472 |    896,776 |          0 |    112,884 |          0 |          0 |
be_else.31145:
    load    [min_caml_objects + $2], $2 # |    235,603 |  1,674,241 |          0 |    234,102 |      5,671 |          0 |
    load    [$2 + 1], $7                # |    235,603 |    913,627 |    459,864 |          0 |     36,360 |          0 |
    load    [$2 + 5], $8                # |    235,603 |    510,619 |          0 |          0 |     45,836 |          0 |
    load    [$2 + 5], $9                # |    235,603 |    235,603 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $10               # |    235,603 |    235,603 |          0 |          0 |          0 |          0 |
    load    [$8 + 0], $8                # |    235,603 |    487,693 |          0 |          0 |     42,015 |          0 |
    load    [$9 + 1], $9                # |    235,603 |    270,931 |          0 |          0 |      5,888 |          0 |
    load    [$10 + 2], $10              # |    235,603 |  1,656,133 |          0 |    234,353 |      2,402 |          0 |
    fsub    $4, $8, $8                  # |    235,603 |    235,603 |          0 |          0 |          0 |          0 |
    fsub    $5, $9, $9                  # |    235,603 |    235,603 |          0 |          0 |          0 |          0 |
    fsub    $6, $10, $10                # |    235,603 |    235,603 |          0 |          0 |          0 |          0 |
    cmp     $7, 1                       # |    235,603 |    235,603 |          0 |          0 |          0 |          0 |
    bne     be_else.31146               # |    235,603 |    235,603 |          0 |          0 |          0 |          0 |
be_then.31146:
    load    [$2 + 4], $7
    fabs    $8, $8
    load    [$7 + 0], $7
    fcmp    $7, $8
    bg      ble_else.31147
ble_then.31147:
    load    [$2 + 6], $2
    cmp     $2, 0
    bne     be_else.31148
be_then.31148:
    li      1, $2
    b       be_cont.31146
be_else.31148:
    li      0, $2
    b       be_cont.31146
ble_else.31147:
    load    [$2 + 4], $7
    fabs    $9, $8
    load    [$7 + 1], $7
    fcmp    $7, $8
    bg      ble_else.31149
ble_then.31149:
    load    [$2 + 6], $2
    cmp     $2, 0
    bne     be_else.31150
be_then.31150:
    li      1, $2
    b       be_cont.31146
be_else.31150:
    li      0, $2
    b       be_cont.31146
ble_else.31149:
    load    [$2 + 4], $7
    fabs    $10, $8
    load    [$2 + 6], $2
    load    [$7 + 2], $7
    fcmp    $7, $8
    bg      be_cont.31146
ble_then.31151:
    cmp     $2, 0
    bne     be_else.31152
be_then.31152:
    li      1, $2
    b       be_cont.31146
be_else.31152:
    li      0, $2
    b       be_cont.31146
be_else.31146:
    cmp     $7, 2                       # |    235,603 |  1,440,985 |          0 |    200,897 |          0 |          0 |
    load    [$2 + 6], $7                # |    235,603 |    248,551 |          0 |          0 |      2,158 |          0 |
    bne     be_else.31153               # |    235,603 |    331,931 |          0 |          0 |          0 |     48,164 |
be_then.31153:
    load    [$2 + 4], $2                # |     46,306 |     57,400 |          0 |          0 |      1,849 |          0 |
    load    [$2 + 0], $11               # |     46,306 |    139,144 |     88,914 |          0 |        654 |          0 |
    fmul    $11, $8, $8                 # |     46,306 |    137,610 |     91,304 |          0 |          0 |          0 |
    load    [$2 + 1], $11               # |     46,306 |    246,760 |          0 |     33,329 |         80 |          0 |
    load    [$2 + 2], $2                # |     46,306 |     47,914 |          0 |          0 |        268 |          0 |
    fmul    $11, $9, $9                 # |     46,306 |     92,264 |     45,958 |          0 |          0 |          0 |
    fmul    $2, $10, $2                 # |     46,306 |     46,386 |         80 |          0 |          0 |          0 |
    fadd    $8, $9, $8                  # |     46,306 |    185,144 |    138,838 |          0 |          0 |          0 |
    fadd    $8, $2, $2                  # |     46,306 |    231,530 |    185,224 |          0 |          0 |          0 |
    fcmp    $zero, $2                   # |     46,306 |    231,530 |    185,224 |          0 |          0 |          0 |
    bg      ble_else.31154              # |     46,306 |     69,412 |          0 |          0 |          0 |     11,553 |
ble_then.31154:
    cmp     $7, 0                       # |     26,044 |    104,524 |          0 |     13,080 |          0 |          0 |
    bne     be_else.31155               # |     26,044 |     26,046 |          0 |          0 |          0 |          1 |
be_then.31155:
    li      1, $2
    b       be_cont.31153
be_else.31155:
    li      0, $2                       # |     26,044 |     26,044 |          0 |          0 |          0 |          0 |
    b       be_cont.31153               # |     26,044 |     26,048 |          0 |          0 |          0 |          2 |
ble_else.31154:
    cmp     $7, 0                       # |     20,262 |    141,756 |          0 |     20,249 |          0 |          0 |
    bne     be_else.31156               # |     20,262 |     20,262 |          0 |          0 |          0 |          0 |
be_then.31156:
    li      0, $2
    b       be_cont.31153
be_else.31156:
    li      1, $2                       # |     20,262 |    127,356 |          0 |     17,849 |          0 |          0 |
    b       be_cont.31153               # |     20,262 |     20,266 |          0 |          0 |          0 |          2 |
be_else.31153:
    load    [$2 + 1], $11               # |    189,297 |  1,090,761 |          0 |    150,244 |          0 |          0 |
    load    [$2 + 3], $12               # |    189,297 |    207,477 |          0 |          0 |      3,030 |          0 |
    fmul    $8, $8, $13                 # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    load    [$2 + 4], $14               # |    189,297 |    197,733 |          0 |          0 |      1,406 |          0 |
    load    [$2 + 4], $15               # |    189,297 |  1,195,197 |          0 |    167,650 |          0 |          0 |
    cmp     $12, 0                      # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    load    [$14 + 0], $14              # |    189,297 |    328,683 |          0 |          0 |     23,231 |          0 |
    load    [$15 + 1], $15              # |    189,297 |    194,661 |          0 |          0 |        894 |          0 |
    fmul    $13, $14, $13               # |    189,297 |    354,469 |    165,172 |          0 |          0 |          0 |
    fmul    $9, $9, $14                 # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    fmul    $14, $15, $14               # |    189,297 |    946,485 |    757,188 |          0 |          0 |          0 |
    load    [$2 + 4], $15               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    load    [$15 + 2], $15              # |    189,297 |  1,237,503 |     45,138 |    166,728 |        450 |          0 |
    fadd    $13, $14, $13               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    fmul    $10, $10, $14               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
    fmul    $14, $15, $14               # |    189,297 |    946,485 |    757,188 |          0 |          0 |          0 |
    fadd    $13, $14, $13               # |    189,297 |    946,485 |    757,188 |          0 |          0 |          0 |
    bne     be_else.31157               # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
be_then.31157:
    mov     $13, $2                     # |    189,297 |    757,188 |    567,891 |          0 |          0 |          0 |
    b       be_cont.31157               # |    189,297 |    189,301 |          0 |          0 |          0 |          2 |
be_else.31157:
    fmul    $9, $10, $12
    load    [$2 + 9], $14
    fmul    $10, $8, $10
    fmul    $8, $9, $8
    load    [$14 + 0], $14
    fmul    $12, $14, $12
    fadd    $13, $12, $12
    load    [$2 + 9], $13
    load    [$2 + 9], $2
    load    [$13 + 1], $13
    load    [$2 + 2], $2
    fmul    $10, $13, $10
    fmul    $8, $2, $2
    fadd    $12, $10, $10
    fadd    $10, $2, $2
be_cont.31157:
    cmp     $11, 3                      # |    189,297 |    762,339 |          0 |     95,507 |          0 |          0 |
    bne     be_cont.31158               # |    189,297 |  1,098,675 |          0 |    151,563 |          0 |          0 |
be_then.31158:
    fsub    $2, $36, $2                 # |    189,297 |    189,297 |          0 |          0 |          0 |          0 |
be_cont.31158:
    fcmp    $zero, $2                   # |    189,297 |    946,485 |    757,188 |          0 |          0 |          0 |
    bg      ble_else.31159              # |    189,297 |    287,553 |          0 |          0 |          0 |     49,128 |
ble_then.31159:
    cmp     $7, 0                       # |    153,079 |    153,079 |          0 |          0 |          0 |          0 |
    bne     be_else.31160               # |    153,079 |    153,083 |          0 |          0 |          0 |          2 |
be_then.31160:
    li      1, $2
    b       ble_cont.31159
be_else.31160:
    li      0, $2                       # |    153,079 |  1,064,623 |          0 |    151,924 |          0 |          0 |
    b       ble_cont.31159              # |    153,079 |    153,083 |          0 |          0 |          0 |          2 |
ble_else.31159:
    cmp     $7, 0                       # |     36,218 |    251,402 |          0 |     35,864 |          0 |          0 |
    bne     be_else.31161               # |     36,218 |     36,222 |          0 |          0 |          0 |          2 |
be_then.31161:
    li      0, $2
    b       be_cont.31161
be_else.31161:
    li      1, $2                       # |     36,218 |     36,218 |          0 |          0 |          0 |          0 |
be_cont.31161:
ble_cont.31159:
be_cont.31153:
be_cont.31146:
    cmp     $2, 0                       # |    235,603 |    548,685 |     36,218 |     46,144 |          0 |          0 |
    bne     be_else.31162               # |    235,603 |  1,613,087 |          0 |    229,557 |          0 |         71 |
be_then.31162:
    add     $1, 1, $1                   # |    179,123 |    179,123 |          0 |          0 |          0 |          0 |
    load    [$3 + $1], $2               # |    179,123 |    386,776 |    179,123 |          0 |      4,755 |          0 |
    cmp     $2, -1                      # |    179,123 |    527,859 |    348,736 |          0 |          0 |          0 |
    bne     be_else.31163               # |    179,123 |    179,125 |          0 |          0 |          0 |          1 |
be_then.31163:
    li      1, $1                       # |    179,123 |    179,123 |          0 |          0 |          0 |          0 |
    ret                                 # |    179,123 |    179,123 |          0 |          0 |          0 |          0 |
be_else.31163:
    load    [min_caml_objects + $2], $2
    load    [$2 + 5], $7
    load    [$2 + 5], $8
    load    [$2 + 5], $9
    load    [$2 + 1], $10
    load    [$7 + 0], $7
    load    [$8 + 1], $8
    load    [$9 + 2], $9
    fsub    $4, $7, $7
    fsub    $5, $8, $8
    fsub    $6, $9, $9
    cmp     $10, 1
    bne     be_else.31164
be_then.31164:
    load    [$2 + 4], $10
    fabs    $7, $7
    load    [$10 + 0], $10
    fcmp    $10, $7
    bg      ble_else.31165
ble_then.31165:
    li      0, $7
    b       ble_cont.31165
ble_else.31165:
    load    [$2 + 4], $7
    fabs    $8, $8
    load    [$7 + 1], $7
    fcmp    $7, $8
    bg      ble_else.31166
ble_then.31166:
    li      0, $7
    b       ble_cont.31166
ble_else.31166:
    load    [$2 + 4], $7
    fabs    $9, $8
    load    [$7 + 2], $7
    fcmp    $7, $8
    bg      ble_else.31167
ble_then.31167:
    li      0, $7
    b       ble_cont.31167
ble_else.31167:
    li      1, $7
ble_cont.31167:
ble_cont.31166:
ble_cont.31165:
    cmp     $7, 0
    load    [$2 + 6], $2
    bne     be_else.31168
be_then.31168:
    cmp     $2, 0
    bne     be_else.31169
be_then.31169:
    li      0, $1
    ret
be_else.31169:
    add     $1, 1, $2
    b       check_all_inside.2856
be_else.31168:
    cmp     $2, 0
    bne     be_else.31170
be_then.31170:
    add     $1, 1, $2
    b       check_all_inside.2856
be_else.31170:
    li      0, $1
    ret
be_else.31164:
    cmp     $10, 2
    bne     be_else.31171
be_then.31171:
    load    [$2 + 6], $10
    load    [$2 + 4], $2
    load    [$2 + 0], $11
    fmul    $11, $7, $7
    load    [$2 + 1], $11
    load    [$2 + 2], $2
    fmul    $11, $8, $8
    fmul    $2, $9, $2
    fadd    $7, $8, $7
    fadd    $7, $2, $2
    fcmp    $zero, $2
    bg      ble_else.31172
ble_then.31172:
    cmp     $10, 0
    bne     be_else.31173
be_then.31173:
    li      0, $1
    ret
be_else.31173:
    add     $1, 1, $2
    b       check_all_inside.2856
ble_else.31172:
    cmp     $10, 0
    bne     be_else.31174
be_then.31174:
    add     $1, 1, $2
    b       check_all_inside.2856
be_else.31174:
    li      0, $1
    ret
be_else.31171:
    load    [$2 + 6], $11
    load    [$2 + 4], $12
    load    [$2 + 4], $13
    load    [$2 + 4], $14
    load    [$2 + 3], $15
    fmul    $7, $7, $16
    load    [$12 + 0], $12
    load    [$13 + 1], $13
    load    [$14 + 2], $14
    cmp     $15, 0
    fmul    $16, $12, $12
    fmul    $8, $8, $16
    fmul    $16, $13, $13
    fadd    $12, $13, $12
    fmul    $9, $9, $13
    fmul    $13, $14, $13
    fadd    $12, $13, $12
    bne     be_else.31175
be_then.31175:
    mov     $12, $2
    b       be_cont.31175
be_else.31175:
    fmul    $8, $9, $13
    load    [$2 + 9], $14
    fmul    $9, $7, $9
    fmul    $7, $8, $7
    load    [$14 + 0], $14
    fmul    $13, $14, $13
    fadd    $12, $13, $12
    load    [$2 + 9], $13
    load    [$2 + 9], $2
    load    [$13 + 1], $13
    load    [$2 + 2], $2
    fmul    $9, $13, $9
    fmul    $7, $2, $2
    fadd    $12, $9, $9
    fadd    $9, $2, $2
be_cont.31175:
    cmp     $10, 3
    bne     be_cont.31176
be_then.31176:
    fsub    $2, $36, $2
be_cont.31176:
    fcmp    $zero, $2
    bg      ble_else.31177
ble_then.31177:
    cmp     $11, 0
    bne     be_else.31178
be_then.31178:
    li      0, $1
    ret
be_else.31178:
    add     $1, 1, $2
    b       check_all_inside.2856
ble_else.31177:
    cmp     $11, 0
    bne     be_else.31179
be_then.31179:
    add     $1, 1, $2
    b       check_all_inside.2856
be_else.31179:
    li      0, $1
    ret
be_else.31162:
    li      0, $1                       # |     56,480 |    389,738 |          0 |     55,543 |          0 |          0 |
    ret                                 # |     56,480 |    106,652 |          0 |      8,362 |          0 |          0 |
be_else.31144:
    li      0, $1                       # |    186,694 |    342,160 |          0 |     25,911 |          0 |          0 |
    ret                                 # |    186,694 |    186,694 |          0 |          0 |          0 |          0 |
be_else.31126:
    li      0, $1                       # |    455,209 |    868,027 |          0 |     68,803 |          0 |          0 |
    ret                                 # |    455,209 |    455,209 |          0 |          0 |          0 |          0 |
.end check_all_inside

######################################################################
.begin shadow_check_and_group
shadow_check_and_group.2862:
    load    [$3 + $2], $17              # |  4,222,772 |  9,490,931 |  2,499,615 |    431,735 |     29,689 |          0 |
    cmp     $17, -1                     # |  4,222,772 | 12,608,938 |  8,386,166 |          0 |          0 |          0 |
    bne     be_else.31180               # |  4,222,772 |  4,299,290 |          0 |          0 |          0 |     38,259 |
be_then.31180:
    li      0, $1                       # |    627,857 |    627,857 |          0 |          0 |          0 |          0 |
    ret                                 # |    627,857 |    627,857 |          0 |          0 |          0 |          0 |
be_else.31180:
    load    [min_caml_objects + $17], $18# |  3,594,915 |  6,313,467 |          0 |    441,688 |     11,404 |          0 |
    load    [min_caml_light_dirvec + 1], $22# |  3,594,915 |  3,594,915 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 0], $24# |  3,594,915 |  3,594,915 |          0 |          0 |          0 |          0 |
    load    [$18 + 5], $19              # |  3,594,915 |  4,807,059 |          0 |          0 |    202,024 |          0 |
    load    [$18 + 5], $20              # |  3,594,915 |  3,594,915 |          0 |          0 |          0 |          0 |
    load    [$18 + 5], $21              # |  3,594,915 |  3,594,915 |          0 |          0 |          0 |          0 |
    load    [$18 + 1], $23              # |  3,594,915 |  6,542,463 |          0 |    441,619 |     49,639 |          0 |
    load    [$19 + 0], $19              # |  3,594,915 |  4,781,235 |          0 |          0 |    197,720 |          0 |
    load    [$20 + 1], $20              # |  3,594,915 |  3,963,705 |          0 |          0 |     61,465 |          0 |
    load    [$21 + 2], $21              # |  3,594,915 |  3,892,647 |          0 |          0 |     49,622 |          0 |
    fsub    $24, $19, $19               # |  3,594,915 |  3,594,915 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 1], $24# |  3,594,915 |  3,594,915 |          0 |          0 |          0 |          0 |
    load    [$22 + $17], $22            # |  3,594,915 |  4,420,983 |          0 |          0 |    137,678 |          0 |
    cmp     $23, 1                      # |  3,594,915 |  3,594,915 |          0 |          0 |          0 |          0 |
    fsub    $24, $20, $20               # |  3,594,915 |  6,245,559 |          0 |    441,774 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $24# |  3,594,915 |  3,594,915 |          0 |          0 |          0 |          0 |
    fsub    $24, $21, $21               # |  3,594,915 | 10,784,745 |  7,189,830 |          0 |          0 |          0 |
    bne     be_else.31181               # |  3,594,915 |  4,536,835 |          0 |          0 |          0 |    470,960 |
be_then.31181:
    load    [min_caml_light_dirvec + 0], $23# |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    load    [$18 + 4], $24              # |  1,409,409 |  1,451,421 |          0 |          0 |      7,002 |          0 |
    load    [$22 + 0], $26              # |  1,409,409 |  4,460,631 |          0 |          0 |    508,537 |          0 |
    load    [$23 + 1], $25              # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    load    [$24 + 1], $24              # |  1,409,409 |  4,193,199 |          0 |    441,463 |     22,502 |          0 |
    fsub    $26, $19, $26               # |  1,409,409 |  1,409,409 |          0 |          0 |          0 |          0 |
    load    [$22 + 1], $27              # |  1,409,409 |  1,460,847 |          0 |          0 |      8,573 |          0 |
    fmul    $26, $27, $26               # |  1,409,409 |  5,611,917 |  4,202,508 |          0 |          0 |          0 |
    fmul    $26, $25, $25               # |  1,409,409 |  7,047,045 |  5,637,636 |          0 |          0 |          0 |
    fadd    $25, $20, $25               # |  1,409,409 |  7,047,045 |  5,637,636 |          0 |          0 |          0 |
    fabs    $25, $25                    # |  1,409,409 |  7,047,045 |  5,637,636 |          0 |          0 |          0 |
    fcmp    $24, $25                    # |  1,409,409 |  2,818,818 |  1,409,409 |          0 |          0 |          0 |
    bg      ble_else.31182              # |  1,409,409 |  2,156,501 |          0 |        108 |          0 |    373,222 |
ble_then.31182:
    li      0, $24                      # |    998,347 |    998,347 |          0 |          0 |          0 |          0 |
    b       ble_cont.31182              # |    998,347 |  1,001,681 |          0 |          0 |          0 |      1,667 |
ble_else.31182:
    load    [$18 + 4], $24              # |    411,062 |    411,062 |          0 |          0 |          0 |          0 |
    load    [$23 + 2], $25              # |    411,062 |    411,260 |          0 |          0 |         33 |          0 |
    load    [$24 + 2], $24              # |    411,062 |    830,389 |    411,029 |          0 |      1,383 |          0 |
    fmul    $26, $25, $25               # |    411,062 |    411,062 |          0 |          0 |          0 |          0 |
    fadd    $25, $21, $25               # |    411,062 |  2,055,310 |  1,644,248 |          0 |          0 |          0 |
    fabs    $25, $25                    # |    411,062 |  2,414,602 |    925,664 |    179,646 |          0 |          0 |
    fcmp    $24, $25                    # |    411,062 |    822,124 |    411,062 |          0 |          0 |          0 |
    bg      ble_else.31183              # |    411,062 |    546,766 |          0 |          0 |          0 |     67,852 |
ble_then.31183:
    li      0, $24                      # |    136,251 |    136,251 |          0 |          0 |          0 |          0 |
    b       ble_cont.31183              # |    136,251 |    143,171 |          0 |          0 |          0 |      3,460 |
ble_else.31183:
    load    [$22 + 1], $24              # |    274,811 |    274,811 |          0 |          0 |          0 |          0 |
    fcmp    $24, $zero                  # |    274,811 |    824,433 |    549,622 |          0 |          0 |          0 |
    bne     be_else.31184               # |    274,811 |    274,823 |          0 |          0 |          0 |          6 |
be_then.31184:
    li      0, $24
    b       be_cont.31184
be_else.31184:
    li      1, $24                      # |    274,811 |    651,335 |          0 |     62,754 |          0 |          0 |
be_cont.31184:
ble_cont.31183:
ble_cont.31182:
    cmp     $24, 0                      # |  1,409,409 |  5,263,016 |    274,811 |    596,466 |          0 |          0 |
    bne     be_else.31185               # |  1,409,409 |  1,409,987 |          0 |          0 |          0 |        289 |
be_then.31185:
    load    [$18 + 4], $24              # |  1,134,598 |  1,134,598 |          0 |          0 |          0 |          0 |
    load    [$23 + 0], $25              # |  1,134,598 |  1,136,248 |          0 |          0 |        275 |          0 |
    load    [$22 + 2], $26              # |  1,134,598 |  1,224,730 |          0 |          0 |     15,022 |          0 |
    load    [$24 + 0], $24              # |  1,134,598 |  5,025,328 |          0 |    630,765 |     17,690 |          0 |
    load    [$22 + 3], $27              # |  1,134,598 |  1,174,774 |          0 |          0 |      6,696 |          0 |
    fsub    $26, $20, $26               # |  1,134,598 |  1,134,598 |          0 |          0 |          0 |          0 |
    fmul    $26, $27, $26               # |  1,134,598 |  5,672,990 |  4,538,392 |          0 |          0 |          0 |
    fmul    $26, $25, $25               # |  1,134,598 |  5,672,990 |  4,538,392 |          0 |          0 |          0 |
    fadd    $25, $19, $25               # |  1,134,598 |  5,672,990 |  4,538,392 |          0 |          0 |          0 |
    fabs    $25, $25                    # |  1,134,598 |  5,672,990 |  4,538,392 |          0 |          0 |          0 |
    fcmp    $24, $25                    # |  1,134,598 |  2,269,196 |  1,134,598 |          0 |          0 |          0 |
    bg      ble_else.31186              # |  1,134,598 |  5,468,164 |          0 |    630,765 |          0 |    274,488 |
ble_then.31186:
    li      0, $24                      # |    632,414 |    632,414 |          0 |          0 |          0 |          0 |
    b       ble_cont.31186              # |    632,414 |    632,430 |          0 |          0 |          0 |          8 |
ble_else.31186:
    load    [$18 + 4], $24              # |    502,184 |    502,184 |          0 |          0 |          0 |          0 |
    load    [$23 + 2], $25              # |    502,184 |    508,562 |          0 |          0 |      1,063 |          0 |
    load    [$24 + 2], $24              # |    502,184 |  1,005,093 |    501,121 |          0 |        298 |          0 |
    fmul    $26, $25, $25               # |    502,184 |    502,184 |          0 |          0 |          0 |          0 |
    fadd    $25, $21, $25               # |    502,184 |  2,510,920 |  2,008,736 |          0 |          0 |          0 |
    fabs    $25, $25                    # |    502,184 |  3,200,836 |    628,904 |    344,958 |          0 |          0 |
    fcmp    $24, $25                    # |    502,184 |  1,004,368 |    502,184 |          0 |          0 |          0 |
    bg      ble_else.31187              # |    502,184 |    734,562 |          0 |          0 |          0 |    116,189 |
ble_then.31187:
    li      0, $24                      # |    138,902 |    138,902 |          0 |          0 |          0 |          0 |
    b       ble_cont.31187              # |    138,902 |    138,910 |          0 |          0 |          0 |          4 |
ble_else.31187:
    load    [$22 + 3], $24              # |    363,282 |    363,282 |          0 |          0 |          0 |          0 |
    fcmp    $24, $zero                  # |    363,282 |  1,089,846 |    726,564 |          0 |          0 |          0 |
    bne     be_else.31188               # |    363,282 |    363,286 |          0 |          0 |          0 |          2 |
be_then.31188:
    li      0, $24
    b       be_cont.31188
be_else.31188:
    li      1, $24                      # |    363,282 |  1,777,662 |          0 |    235,730 |          0 |          0 |
be_cont.31188:
ble_cont.31187:
ble_cont.31186:
    cmp     $24, 0                      # |  1,134,598 |  3,868,090 |    363,282 |    395,035 |          0 |          0 |
    bne     be_else.31189               # |  1,134,598 |  1,134,602 |          0 |          0 |          0 |          2 |
be_then.31189:
    load    [$18 + 4], $24              # |    771,316 |    771,316 |          0 |          0 |          0 |          0 |
    load    [$23 + 0], $25              # |    771,316 |    771,316 |          0 |          0 |          0 |          0 |
    load    [$22 + 4], $26              # |    771,316 |  2,644,456 |          0 |          0 |    312,190 |          0 |
    load    [$24 + 0], $24              # |    771,316 |    771,940 |          0 |        104 |          0 |          0 |
    fsub    $26, $21, $21               # |    771,316 |  1,230,417 |    459,101 |          0 |          0 |          0 |
    load    [$22 + 5], $26              # |    771,316 |  1,069,354 |          0 |          0 |     49,673 |          0 |
    fmul    $21, $26, $21               # |    771,316 |  2,936,245 |  2,164,929 |          0 |          0 |          0 |
    fmul    $21, $25, $25               # |    771,316 |  3,856,580 |  3,085,264 |          0 |          0 |          0 |
    fadd    $25, $19, $19               # |    771,316 |  3,856,580 |  3,085,264 |          0 |          0 |          0 |
    fabs    $19, $19                    # |    771,316 |  3,856,580 |  3,085,264 |          0 |          0 |          0 |
    fcmp    $24, $19                    # |    771,316 |  1,542,632 |    771,316 |          0 |          0 |          0 |
    bg      ble_else.31190              # |    771,316 |  3,513,240 |          0 |    421,375 |          0 |    106,837 |
ble_then.31190:
    li      0, $18                      # |    642,019 |    642,019 |          0 |          0 |          0 |          0 |
    b       be_cont.31181               # |    642,019 |    642,029 |          0 |          0 |          0 |          5 |
ble_else.31190:
    load    [$18 + 4], $18              # |    129,297 |    129,297 |          0 |          0 |          0 |          0 |
    load    [$23 + 1], $19              # |    129,297 |    129,297 |          0 |          0 |          0 |          0 |
    load    [$18 + 1], $18              # |    129,297 |    258,594 |    129,297 |          0 |          0 |          0 |
    fmul    $21, $19, $19               # |    129,297 |    129,297 |          0 |          0 |          0 |          0 |
    fadd    $19, $20, $19               # |    129,297 |    646,485 |    517,188 |          0 |          0 |          0 |
    fabs    $19, $19                    # |    129,297 |    786,815 |    236,528 |     70,165 |          0 |          0 |
    fcmp    $18, $19                    # |    129,297 |    258,594 |    129,297 |          0 |          0 |          0 |
    bg      ble_else.31191              # |    129,297 |    159,777 |          0 |          0 |          0 |     15,240 |
ble_then.31191:
    li      0, $18                      # |     78,455 |     78,455 |          0 |          0 |          0 |          0 |
    b       be_cont.31181               # |     78,455 |     78,461 |          0 |          0 |          0 |          3 |
ble_else.31191:
    load    [$22 + 5], $18              # |     50,842 |     50,842 |          0 |          0 |          0 |          0 |
    fcmp    $18, $zero                  # |     50,842 |    152,526 |    101,684 |          0 |          0 |          0 |
    bne     be_else.31192               # |     50,842 |     54,760 |          0 |          0 |          0 |      1,959 |
be_then.31192:
    li      0, $18
    b       be_cont.31181
be_else.31192:
.count move_float
    mov     $21, $42                    # |     50,842 |     50,890 |          0 |          8 |          0 |          0 |
    li      3, $18                      # |     50,842 |     50,842 |          0 |          0 |          0 |          0 |
    b       be_cont.31181               # |     50,842 |     50,848 |          0 |          0 |          0 |          3 |
be_else.31189:
.count move_float
    mov     $26, $42                    # |    363,282 |    364,650 |          0 |        228 |          0 |          0 |
    li      2, $18                      # |    363,282 |    363,282 |          0 |          0 |          0 |          0 |
    b       be_cont.31181               # |    363,282 |    419,370 |          0 |          0 |          0 |     28,044 |
be_else.31185:
.count move_float
    mov     $26, $42                    # |    274,811 |    274,937 |          0 |         21 |          0 |          0 |
    li      1, $18                      # |    274,811 |    274,811 |          0 |          0 |          0 |          0 |
    b       be_cont.31181               # |    274,811 |    274,819 |          0 |          0 |          0 |          4 |
be_else.31181:
    cmp     $23, 2                      # |  2,185,506 |  2,186,028 |          0 |         87 |          0 |          0 |
    bne     be_else.31193               # |  2,185,506 |  2,198,108 |          0 |          0 |          0 |      6,301 |
be_then.31193:
    load    [$22 + 0], $18              # |    566,355 |    779,565 |          0 |          0 |     35,535 |          0 |
    fcmp    $zero, $18                  # |    566,355 |  1,627,995 |  1,061,640 |          0 |          0 |          0 |
    bg      ble_else.31194              # |    566,355 |    566,361 |          0 |          0 |          0 |          3 |
ble_then.31194:
    li      0, $18                      # |     11,416 |     11,488 |          0 |         12 |          0 |          0 |
    b       be_cont.31193               # |     11,416 |     11,424 |          0 |          0 |          0 |          4 |
ble_else.31194:
    load    [$22 + 1], $18              # |    554,939 |    561,527 |          0 |         96 |      1,002 |          0 |
    fmul    $18, $19, $18               # |    554,939 |  1,662,813 |  1,107,874 |          0 |          0 |          0 |
    load    [$22 + 2], $19              # |    554,939 |    611,255 |          0 |          0 |      9,386 |          0 |
    fmul    $19, $20, $19               # |    554,939 |  1,646,045 |  1,091,106 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |    554,939 |  2,774,695 |  2,219,756 |          0 |          0 |          0 |
    load    [$22 + 3], $19              # |    554,939 |    597,245 |          0 |          0 |      7,051 |          0 |
    fmul    $19, $21, $19               # |    554,939 |  1,651,055 |  1,095,606 |         85 |          0 |          0 |
    fadd    $18, $19, $18               # |    554,939 |  2,774,695 |  2,219,756 |          0 |          0 |          0 |
.count move_float
    mov     $18, $42                    # |    554,939 |  2,774,695 |  2,219,756 |          0 |          0 |          0 |
    li      1, $18                      # |    554,939 |    554,939 |          0 |          0 |          0 |          0 |
    b       be_cont.31193               # |    554,939 |    555,093 |          0 |          0 |          0 |         77 |
be_else.31193:
    load    [$22 + 0], $24              # |  1,619,151 |  7,949,283 |          0 |         23 |  1,054,999 |          0 |
    fcmp    $24, $zero                  # |  1,619,151 |  2,747,455 |  1,128,304 |          0 |          0 |          0 |
    bne     be_else.31195               # |  1,619,151 |  1,619,177 |          0 |          0 |          0 |         13 |
be_then.31195:
    li      0, $18
    b       be_cont.31195
be_else.31195:
    load    [$22 + 1], $25              # |  1,619,151 |  1,824,489 |          0 |        108 |     34,115 |          0 |
    load    [$22 + 2], $26              # |  1,619,151 |  1,715,577 |          0 |          0 |     16,071 |          0 |
    fmul    $19, $19, $27               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    fmul    $25, $19, $25               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    fmul    $26, $20, $26               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    load    [$18 + 4], $28              # |  1,619,151 |  1,837,497 |          0 |          0 |     36,391 |          0 |
    load    [$18 + 4], $29              # |  1,619,151 |  1,731,945 |          0 |     18,799 |          0 |          0 |
    load    [$28 + 0], $28              # |  1,619,151 |  3,625,975 |  1,564,024 |          0 |     73,800 |          0 |
    fadd    $25, $26, $25               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    load    [$22 + 3], $26              # |  1,619,151 |  1,844,235 |          0 |          0 |     37,514 |          0 |
    fmul    $27, $28, $27               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    fmul    $20, $20, $28               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    fmul    $26, $21, $26               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    load    [$29 + 1], $29              # |  1,619,151 |  1,904,223 |          0 |          0 |     47,512 |          0 |
    fmul    $28, $29, $28               # |  1,619,151 |  4,837,303 |  3,106,018 |     18,689 |          0 |          0 |
    fadd    $25, $26, $25               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    load    [$18 + 4], $29              # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    fadd    $27, $28, $27               # |  1,619,151 |  4,857,453 |  3,238,302 |          0 |          0 |          0 |
    fmul    $25, $25, $26               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    fmul    $21, $21, $28               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    load    [$29 + 2], $29              # |  1,619,151 |  1,834,461 |          0 |          0 |     35,885 |          0 |
    fmul    $28, $29, $28               # |  1,619,151 |  6,368,949 |  4,749,798 |          0 |          0 |          0 |
    fadd    $27, $28, $27               # |  1,619,151 |  8,133,133 |  6,401,848 |     18,689 |          0 |          0 |
    load    [$18 + 3], $28              # |  1,619,151 |  1,778,133 |          0 |          0 |     26,497 |          0 |
    cmp     $28, 0                      # |  1,619,151 |  4,804,459 |  3,185,308 |          0 |          0 |          0 |
    bne     be_else.31196               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
be_then.31196:
    mov     $27, $19                    # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
    b       be_cont.31196               # |  1,619,151 |  1,619,159 |          0 |          0 |          0 |          4 |
be_else.31196:
    fmul    $20, $21, $28
    load    [$18 + 9], $29
    fmul    $21, $19, $21
    fmul    $19, $20, $19
    load    [$29 + 0], $29
    load    [$18 + 9], $20
    fmul    $28, $29, $28
    load    [$20 + 2], $20
    fmul    $19, $20, $19
    fadd    $27, $28, $27
    load    [$18 + 9], $28
    load    [$28 + 1], $28
    fmul    $21, $28, $21
    fadd    $27, $21, $21
    fadd    $21, $19, $19
be_cont.31196:
    cmp     $23, 3                      # |  1,619,151 |  1,730,493 |          0 |     18,557 |          0 |          0 |
    bne     be_cont.31197               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
be_then.31197:
    fsub    $19, $36, $19               # |  1,619,151 |  1,619,151 |          0 |          0 |          0 |          0 |
be_cont.31197:
    fmul    $24, $19, $19               # |  1,619,151 |  8,136,253 |  6,395,608 |     20,249 |          0 |          0 |
    fsub    $26, $19, $19               # |  1,619,151 |  8,095,755 |  6,476,604 |          0 |          0 |          0 |
    fcmp    $19, $zero                  # |  1,619,151 |  8,095,755 |  6,476,604 |          0 |          0 |          0 |
    bg      ble_else.31198              # |  1,619,151 |  2,173,955 |          0 |          0 |          0 |    277,402 |
ble_then.31198:
    li      0, $18                      # |  1,270,619 |  1,270,619 |          0 |          0 |          0 |          0 |
    b       ble_cont.31198              # |  1,270,619 |  1,271,293 |          0 |          0 |          0 |        337 |
ble_else.31198:
    load    [$18 + 6], $18              # |    348,532 |    348,988 |          0 |          0 |         76 |          0 |
    cmp     $18, 0                      # |    348,532 |  1,045,444 |    696,912 |          0 |          0 |          0 |
    fsqrt   $19, $18                    # |    348,532 |    419,506 |          0 |     11,829 |          0 |          0 |
    load    [$22 + 4], $19              # |    348,532 |  1,304,692 |          0 |          0 |    159,360 |          0 |
    bne     be_else.31199               # |    348,532 |    502,194 |          0 |          0 |          0 |     76,831 |
be_then.31199:
    fsub    $25, $18, $18               # |    278,489 |    567,467 |    288,978 |          0 |          0 |          0 |
    fmul    $18, $19, $18               # |    278,489 |  1,392,445 |  1,113,956 |          0 |          0 |          0 |
.count move_float
    mov     $18, $42                    # |    278,489 |  1,392,445 |  1,113,956 |          0 |          0 |          0 |
    li      1, $18                      # |    278,489 |    278,489 |          0 |          0 |          0 |          0 |
    b       be_cont.31199               # |    278,489 |    278,493 |          0 |          0 |          0 |          2 |
be_else.31199:
    fadd    $25, $18, $18               # |     70,043 |     85,081 |     15,038 |          0 |          0 |          0 |
    fmul    $18, $19, $18               # |     70,043 |    350,215 |    280,172 |          0 |          0 |          0 |
.count move_float
    mov     $18, $42                    # |     70,043 |    350,215 |    280,172 |          0 |          0 |          0 |
    li      1, $18                      # |     70,043 |     70,043 |          0 |          0 |          0 |          0 |
be_cont.31199:
ble_cont.31198:
be_cont.31195:
be_cont.31193:
be_cont.31181:
    cmp     $18, 0                      # |  3,594,915 |  3,721,574 |     70,043 |      9,436 |          0 |          0 |
    bne     be_else.31200               # |  3,594,915 |  3,612,841 |          0 |          0 |          0 |      8,963 |
be_then.31200:
    li      0, $18                      # |  2,002,509 |  2,002,509 |          0 |          0 |          0 |          0 |
    b       be_cont.31200               # |  2,002,509 |  2,002,549 |          0 |          0 |          0 |         20 |
be_else.31200:
.count load_float
    load    [f.27087], $18              # |  1,592,406 |  2,368,158 |          0 |     17,378 |    111,914 |          0 |
    fcmp    $18, $42                    # |  1,592,406 |  4,553,390 |  2,960,984 |          0 |          0 |          0 |
    bg      ble_else.31201              # |  1,592,406 |  1,887,454 |          0 |          0 |          0 |    147,524 |
ble_then.31201:
    li      0, $18                      # |  1,029,338 |  1,029,338 |          0 |          0 |          0 |          0 |
    b       ble_cont.31201              # |  1,029,338 |  1,029,422 |          0 |          0 |          0 |         42 |
ble_else.31201:
    li      1, $18                      # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
ble_cont.31201:
be_cont.31200:
    cmp     $18, 0                      # |  3,594,915 |  4,171,021 |    563,068 |      2,173 |          0 |          0 |
    bne     be_else.31202               # |  3,594,915 |  3,903,373 |          0 |          0 |          0 |    154,229 |
be_then.31202:
    load    [min_caml_objects + $17], $1# |  3,031,847 |  6,753,161 |          0 |    620,219 |          0 |          0 |
    load    [$1 + 6], $1                # |  3,031,847 |  9,184,959 |  6,063,694 |          0 |     14,903 |          0 |
    cmp     $1, 0                       # |  3,031,847 |  9,065,735 |  6,033,888 |          0 |          0 |          0 |
    bne     be_else.31203               # |  3,031,847 |  3,041,075 |          0 |          0 |          0 |      4,614 |
be_then.31203:
    li      0, $1                       # |  2,406,042 |  2,406,042 |          0 |          0 |          0 |          0 |
    ret                                 # |  2,406,042 |  2,406,042 |          0 |          0 |          0 |          0 |
be_else.31203:
    add     $2, 1, $2                   # |    625,805 |    625,805 |          0 |          0 |          0 |          0 |
    b       shadow_check_and_group.2862 # |    625,805 |    815,511 |          0 |          0 |          0 |     94,853 |
be_else.31202:
    load    [$3 + 0], $17               # |    563,068 |  1,573,780 |          0 |    168,452 |          0 |          0 |
    cmp     $17, -1                     # |    563,068 |  1,689,204 |  1,126,136 |          0 |          0 |          0 |
    bne     be_else.31204               # |    563,068 |    612,240 |          0 |          0 |          0 |     24,586 |
be_then.31204:
    li      1, $1
    ret
be_else.31204:
    load    [min_caml_objects + $17], $17# |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27088], $22              # |    563,068 |  1,161,766 |          0 |          0 |     99,783 |          0 |
    load    [min_caml_intersection_point + 0], $24# |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [$17 + 5], $18              # |    563,068 |  1,573,780 |          0 |    168,452 |          0 |          0 |
    load    [$17 + 5], $19              # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [$17 + 5], $20              # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [$17 + 1], $21              # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [$18 + 0], $18              # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    fadd    $42, $22, $22               # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [$19 + 1], $19              # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [$20 + 2], $20              # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    cmp     $21, 1                      # |    563,068 |    781,900 |          0 |     36,472 |          0 |          0 |
    fmul    $55, $22, $23               # |    563,068 |  1,089,664 |    526,596 |          0 |          0 |          0 |
    fadd    $23, $24, $4                # |    563,068 |  2,815,340 |  2,252,272 |          0 |          0 |          0 |
    fmul    $56, $22, $23               # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 1], $24# |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    fmul    $57, $22, $22               # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    fsub    $4, $18, $18                # |    563,068 |  1,126,136 |    563,068 |          0 |          0 |          0 |
    fadd    $23, $24, $5                # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $23# |    563,068 |    782,578 |          0 |     36,585 |          0 |          0 |
    fadd    $22, $23, $6                # |    563,068 |  1,689,204 |  1,126,136 |          0 |          0 |          0 |
    fsub    $5, $19, $19                # |    563,068 |    563,068 |          0 |          0 |          0 |          0 |
    fsub    $6, $20, $20                # |    563,068 |  2,252,272 |  1,689,204 |          0 |          0 |          0 |
    bne     be_else.31205               # |    563,068 |    599,518 |          0 |          0 |          0 |     18,225 |
be_then.31205:
    load    [$17 + 4], $21              # |    541,392 |    541,392 |          0 |          0 |          0 |          0 |
    fabs    $18, $18                    # |    541,392 |    541,392 |          0 |          0 |          0 |          0 |
    load    [$21 + 0], $21              # |    541,392 |  1,106,700 |    541,392 |          0 |      3,986 |          0 |
    fcmp    $21, $18                    # |    541,392 |  1,760,328 |  1,004,622 |     35,719 |          0 |          0 |
    bg      ble_else.31206              # |    541,392 |    608,620 |          0 |          0 |          0 |     33,614 |
ble_then.31206:
    load    [$17 + 6], $17              # |     56,355 |     56,355 |          0 |          0 |          0 |          0 |
    cmp     $17, 0                      # |     56,355 |    169,065 |    112,710 |          0 |          0 |          0 |
    bne     be_else.31207               # |     56,355 |     56,355 |          0 |          0 |          0 |          0 |
be_then.31207:
    li      1, $17                      # |     56,355 |     56,355 |          0 |          0 |          0 |          0 |
    b       be_cont.31205               # |     56,355 |     56,363 |          0 |          0 |          0 |          4 |
be_else.31207:
    li      0, $17
    b       be_cont.31205
ble_else.31206:
    load    [$17 + 4], $18              # |    485,037 |    698,955 |          0 |     35,653 |          0 |          0 |
    fabs    $19, $19                    # |    485,037 |    485,037 |          0 |          0 |          0 |          0 |
    load    [$18 + 1], $18              # |    485,037 |    970,074 |    485,037 |          0 |          0 |          0 |
    fcmp    $18, $19                    # |    485,037 |  1,455,111 |    970,074 |          0 |          0 |          0 |
    bg      ble_else.31208              # |    485,037 |    500,907 |          0 |          0 |          0 |      7,935 |
ble_then.31208:
    load    [$17 + 6], $17              # |      5,586 |      5,586 |          0 |          0 |          0 |          0 |
    cmp     $17, 0                      # |      5,586 |     16,758 |     11,172 |          0 |          0 |          0 |
    bne     be_else.31209               # |      5,586 |     13,404 |          0 |         21 |          0 |      3,846 |
be_then.31209:
    li      1, $17                      # |      5,586 |      5,586 |          0 |          0 |          0 |          0 |
    b       be_cont.31205               # |      5,586 |      5,586 |          0 |          0 |          0 |          0 |
be_else.31209:
    li      0, $17
    b       be_cont.31205
ble_else.31208:
    load    [$17 + 4], $18              # |    479,451 |  1,433,727 |          0 |    159,046 |          0 |          0 |
    fabs    $20, $19                    # |    479,451 |    479,451 |          0 |          0 |          0 |          0 |
    load    [$17 + 6], $17              # |    479,451 |    546,921 |          0 |          0 |     11,245 |          0 |
    load    [$18 + 2], $18              # |    479,451 |    534,987 |          0 |      9,256 |          0 |          0 |
    fcmp    $18, $19                    # |    479,451 |  1,438,353 |    958,902 |          0 |          0 |          0 |
    bg      be_cont.31205               # |    479,451 |    483,027 |          0 |          0 |          0 |      1,788 |
ble_then.31210:
    cmp     $17, 0                      # |      2,205 |      2,205 |          0 |          0 |          0 |          0 |
    bne     be_else.31211               # |      2,205 |      2,205 |          0 |          0 |          0 |          0 |
be_then.31211:
    li      1, $17                      # |      2,205 |      2,205 |          0 |          0 |          0 |          0 |
    b       be_cont.31205               # |      2,205 |      2,209 |          0 |          0 |          0 |          2 |
be_else.31211:
    li      0, $17
    b       be_cont.31205
be_else.31205:
    cmp     $21, 2                      # |     21,676 |     97,120 |          0 |     12,574 |          0 |          0 |
    bne     be_else.31212               # |     21,676 |     28,282 |          0 |          0 |          0 |      3,303 |
be_then.31212:
    load    [$17 + 6], $21
    load    [$17 + 4], $17
    load    [$17 + 0], $22
    fmul    $22, $18, $18
    load    [$17 + 1], $22
    load    [$17 + 2], $17
    fmul    $22, $19, $19
    fmul    $17, $20, $17
    fadd    $18, $19, $18
    fadd    $18, $17, $17
    fcmp    $zero, $17
    bg      ble_else.31213
ble_then.31213:
    cmp     $21, 0
    bne     be_else.31214
be_then.31214:
    li      1, $17
    b       be_cont.31212
be_else.31214:
    li      0, $17
    b       be_cont.31212
ble_else.31213:
    cmp     $21, 0
    bne     be_else.31215
be_then.31215:
    li      0, $17
    b       be_cont.31212
be_else.31215:
    li      1, $17
    b       be_cont.31212
be_else.31212:
    load    [$17 + 6], $22              # |     21,676 |     31,276 |          0 |      1,600 |          0 |          0 |
    fmul    $18, $18, $23               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    load    [$17 + 4], $24              # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    load    [$17 + 4], $25              # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    load    [$24 + 0], $24              # |     21,676 |     43,352 |     21,676 |          0 |          0 |          0 |
    load    [$25 + 1], $25              # |     21,676 |     96,394 |          0 |     12,453 |          0 |          0 |
    fmul    $23, $24, $23               # |     21,676 |     30,899 |      9,223 |          0 |          0 |          0 |
    fmul    $19, $19, $24               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    fmul    $24, $25, $24               # |     21,676 |    108,380 |     86,704 |          0 |          0 |          0 |
    load    [$17 + 4], $25              # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    load    [$25 + 2], $25              # |     21,676 |     65,028 |     43,352 |          0 |          0 |          0 |
    fadd    $23, $24, $23               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    fmul    $20, $20, $24               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    fmul    $24, $25, $24               # |     21,676 |    133,286 |     36,892 |     12,453 |          0 |          0 |
    load    [$17 + 3], $25              # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    cmp     $25, 0                      # |     21,676 |     65,028 |     43,352 |          0 |          0 |          0 |
    fadd    $23, $24, $23               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    bne     be_else.31216               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
be_then.31216:
    mov     $23, $17                    # |     21,676 |     86,704 |     65,028 |          0 |          0 |          0 |
    b       be_cont.31216               # |     21,676 |     21,680 |          0 |          0 |          0 |          2 |
be_else.31216:
    fmul    $19, $20, $24
    load    [$17 + 9], $25
    fmul    $20, $18, $20
    fmul    $18, $19, $18
    load    [$25 + 0], $25
    fmul    $24, $25, $24
    fadd    $23, $24, $23
    load    [$17 + 9], $24
    load    [$17 + 9], $17
    load    [$24 + 1], $24
    load    [$17 + 2], $17
    fmul    $20, $24, $20
    fmul    $18, $17, $17
    fadd    $23, $20, $20
    fadd    $20, $17, $17
be_cont.31216:
    cmp     $21, 3                      # |     21,676 |     43,528 |          0 |      3,642 |          0 |          0 |
    bne     be_cont.31217               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
be_then.31217:
    fsub    $17, $36, $17               # |     21,676 |     21,838 |          0 |         27 |          0 |          0 |
be_cont.31217:
    fcmp    $zero, $17                  # |     21,676 |    108,380 |     86,704 |          0 |          0 |          0 |
    bg      ble_else.31218              # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
ble_then.31218:
    cmp     $22, 0
    bne     be_else.31219
be_then.31219:
    li      1, $17
    b       ble_cont.31218
be_else.31219:
    li      0, $17
    b       ble_cont.31218
ble_else.31218:
    cmp     $22, 0                      # |     21,676 |     21,682 |          0 |          1 |          0 |          0 |
    bne     be_else.31220               # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
be_then.31220:
    li      0, $17                      # |     21,676 |     21,676 |          0 |          0 |          0 |          0 |
    b       be_cont.31220               # |     21,676 |     27,464 |          0 |          0 |          0 |      2,894 |
be_else.31220:
    li      1, $17
be_cont.31220:
ble_cont.31218:
be_cont.31212:
be_cont.31205:
    cmp     $17, 0                      # |    563,068 |    563,134 |          0 |         11 |          0 |          0 |
    bne     be_else.31221               # |    563,068 |    610,046 |          0 |          0 |          0 |     23,489 |
be_then.31221:
.count stack_move
    sub     $sp, 2, $sp                 # |    498,922 |    498,982 |          0 |         10 |          0 |          0 |
    store   $3, [$sp + 0]               # |    498,922 |    997,844 |    498,922 |          0 |          0 |          0 |
    store   $2, [$sp + 1]               # |    498,922 |    498,922 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |    498,922 |    498,922 |          0 |          0 |          0 |          0 |
    call    check_all_inside.2856       # |    498,922 |    498,922 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |    498,922 |    498,922 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    498,922 |    498,922 |          0 |          0 |          0 |          0 |
    bne     be_else.31222               # |    498,922 |    574,028 |          0 |          0 |          0 |     37,553 |
be_then.31222:
    load    [$sp - 1], $1               # |    262,860 |    265,254 |          0 |          7 |        392 |          0 |
    load    [$sp - 2], $3               # |    262,860 |    265,656 |          0 |          0 |        466 |          0 |
    add     $1, 1, $2                   # |    262,860 |    524,921 |    262,061 |          0 |          0 |          0 |
    b       shadow_check_and_group.2862 # |    262,860 |    262,872 |          0 |          0 |          0 |          6 |
be_else.31222:
    li      1, $1                       # |    236,062 |    236,080 |          0 |          3 |          0 |          0 |
    ret                                 # |    236,062 |    236,062 |          0 |          0 |          0 |          0 |
be_else.31221:
    add     $2, 1, $2                   # |     64,146 |     64,146 |          0 |          0 |          0 |          0 |
    b       shadow_check_and_group.2862 # |     64,146 |     64,312 |          0 |          0 |          0 |         83 |
.end shadow_check_and_group

######################################################################
.begin shadow_check_one_or_group
shadow_check_one_or_group.2865:
    load    [$3 + $2], $30              # |    223,481 |    225,725 |          0 |         10 |        364 |          0 |
    cmp     $30, -1                     # |    223,481 |    669,715 |    446,234 |          0 |          0 |          0 |
    bne     be_else.31223               # |    223,481 |    248,815 |          0 |          0 |          0 |     12,667 |
be_then.31223:
    li      0, $1
    ret
be_else.31223:
.count stack_move
    sub     $sp, 2, $sp                 # |    223,481 |    223,481 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 0]               # |    223,481 |    446,962 |    223,481 |          0 |          0 |          0 |
    store   $2, [$sp + 1]               # |    223,481 |    223,481 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |    223,481 |    223,541 |          0 |         10 |          0 |          0 |
    load    [min_caml_and_net + $30], $3# |    223,481 |    223,583 |          0 |          0 |         17 |          0 |
    call    shadow_check_and_group.2862 # |    223,481 |    223,481 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $30                     # |    223,481 |    223,481 |          0 |          0 |          0 |          0 |
    cmp     $30, 0                      # |    223,481 |    223,481 |          0 |          0 |          0 |          0 |
    bne     be_else.31224               # |    223,481 |    223,593 |          0 |          0 |          0 |         56 |
be_then.31224:
    load    [$sp + 1], $30              # |    113,403 |    115,053 |          0 |          0 |        275 |          0 |
    load    [$sp + 0], $31              # |    113,403 |    113,475 |          0 |          0 |         12 |          0 |
    add     $30, 1, $30                 # |    113,403 |    226,536 |    113,127 |          1 |          0 |          0 |
    load    [$31 + $30], $32            # |    113,403 |    236,064 |    113,403 |          0 |      1,543 |          0 |
    cmp     $32, -1                     # |    113,403 |    337,123 |    223,720 |          0 |          0 |          0 |
    bne     be_else.31225               # |    113,403 |    113,671 |          0 |          0 |          0 |        134 |
be_then.31225:
.count stack_move
    add     $sp, 2, $sp
    li      0, $1
    ret
be_else.31225:
    li      0, $2                       # |    113,403 |    113,403 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $32], $3# |    113,403 |    616,389 |          0 |     83,819 |         12 |          0 |
    call    shadow_check_and_group.2862 # |    113,403 |    113,403 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $32                     # |    113,403 |    113,403 |          0 |          0 |          0 |          0 |
    cmp     $32, 0                      # |    113,403 |    113,403 |          0 |          0 |          0 |          0 |
    bne     be_else.31226               # |    113,403 |    113,407 |          0 |          0 |          0 |          2 |
be_then.31226:
    add     $30, 1, $30                 # |    106,755 |    106,755 |          0 |          0 |          0 |          0 |
    load    [$31 + $30], $32            # |    106,755 |    220,134 |    106,755 |          0 |      1,104 |          0 |
    cmp     $32, -1                     # |    106,755 |    318,057 |    211,302 |          0 |          0 |          0 |
    bne     be_else.31227               # |    106,755 |    253,241 |          0 |     20,641 |          0 |     11,320 |
be_then.31227:
.count stack_move
    add     $sp, 2, $sp                 # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    li      0, $1                       # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    ret                                 # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
be_else.31227:
    li      0, $2                       # |     96,421 |     96,421 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $32], $3# |     96,421 |    104,557 |          0 |          0 |      1,356 |          0 |
    call    shadow_check_and_group.2862 # |     96,421 |     96,421 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $32                     # |     96,421 |     96,421 |          0 |          0 |          0 |          0 |
    cmp     $32, 0                      # |     96,421 |    158,263 |          0 |     10,307 |          0 |          0 |
    bne     be_else.31228               # |     96,421 |     96,447 |          0 |          0 |          0 |         13 |
be_then.31228:
    add     $30, 1, $30                 # |     94,249 |     94,249 |          0 |          0 |          0 |          0 |
    load    [$31 + $30], $32            # |     94,249 |    192,242 |     94,249 |          0 |        624 |          0 |
    cmp     $32, -1                     # |     94,249 |    281,499 |    187,250 |          0 |          0 |          0 |
    bne     be_else.31229               # |     94,249 |     94,273 |          0 |          0 |          0 |         12 |
be_then.31229:
.count stack_move
    add     $sp, 2, $sp
    li      0, $1
    ret
be_else.31229:
    li      0, $2                       # |     94,249 |    155,431 |          0 |     10,197 |          0 |          0 |
    load    [min_caml_and_net + $32], $3# |     94,249 |     94,639 |          0 |          0 |         65 |          0 |
    call    shadow_check_and_group.2862 # |     94,249 |     94,249 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $32                     # |     94,249 |     94,249 |          0 |          0 |          0 |          0 |
    cmp     $32, 0                      # |     94,249 |     94,249 |          0 |          0 |          0 |          0 |
    bne     be_else.31230               # |     94,249 |     94,593 |          0 |          0 |          0 |        172 |
be_then.31230:
    add     $30, 1, $30                 # |     82,757 |     82,757 |          0 |          0 |          0 |          0 |
    load    [$31 + $30], $32            # |     82,757 |    177,117 |     81,292 |      1,465 |        713 |          0 |
    cmp     $32, -1                     # |     82,757 |    246,845 |    164,088 |          0 |          0 |          0 |
    bne     be_else.31231               # |     82,757 |     82,757 |          0 |          0 |          0 |          0 |
be_then.31231:
.count stack_move
    add     $sp, 2, $sp                 # |     82,757 |     82,757 |          0 |          0 |          0 |          0 |
    li      0, $1                       # |     82,757 |     82,757 |          0 |          0 |          0 |          0 |
    ret                                 # |     82,757 |     82,757 |          0 |          0 |          0 |          0 |
be_else.31231:
    li      0, $2
    load    [min_caml_and_net + $32], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $32
    cmp     $32, 0
    bne     be_else.31232
be_then.31232:
    add     $30, 1, $30
    load    [$31 + $30], $32
    cmp     $32, -1
    bne     be_else.31233
be_then.31233:
.count stack_move
    add     $sp, 2, $sp
    li      0, $1
    ret
be_else.31233:
    li      0, $2
    load    [min_caml_and_net + $32], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $32
    cmp     $32, 0
    bne     be_else.31234
be_then.31234:
    add     $30, 1, $30
    load    [$31 + $30], $32
    cmp     $32, -1
    bne     be_else.31235
be_then.31235:
.count stack_move
    add     $sp, 2, $sp
    li      0, $1
    ret
be_else.31235:
    li      0, $2
    load    [min_caml_and_net + $32], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $32
    cmp     $32, 0
    bne     be_else.31236
be_then.31236:
    add     $30, 1, $30
    load    [$31 + $30], $32
    cmp     $32, -1
    bne     be_else.31237
be_then.31237:
.count stack_move
    add     $sp, 2, $sp
    li      0, $1
    ret
be_else.31237:
    li      0, $2
    load    [min_caml_and_net + $32], $3
    call    shadow_check_and_group.2862
.count stack_move
    add     $sp, 2, $sp
    cmp     $1, 0
    bne     be_else.31238
be_then.31238:
    add     $30, 1, $2
.count move_args
    mov     $31, $3
    b       shadow_check_one_or_group.2865
be_else.31238:
    li      1, $1
    ret
be_else.31236:
.count stack_move
    add     $sp, 2, $sp
    li      1, $1
    ret
be_else.31234:
.count stack_move
    add     $sp, 2, $sp
    li      1, $1
    ret
be_else.31232:
.count stack_move
    add     $sp, 2, $sp
    li      1, $1
    ret
be_else.31230:
.count stack_move
    add     $sp, 2, $sp                 # |     11,492 |     45,968 |          0 |      5,746 |          0 |          0 |
    li      1, $1                       # |     11,492 |     11,492 |          0 |          0 |          0 |          0 |
    ret                                 # |     11,492 |     11,492 |          0 |          0 |          0 |          0 |
be_else.31228:
.count stack_move
    add     $sp, 2, $sp                 # |      2,172 |      8,688 |          0 |      1,086 |          0 |          0 |
    li      1, $1                       # |      2,172 |      2,172 |          0 |          0 |          0 |          0 |
    ret                                 # |      2,172 |      2,172 |          0 |          0 |          0 |          0 |
be_else.31226:
.count stack_move
    add     $sp, 2, $sp                 # |      6,648 |     26,592 |          0 |      3,324 |          0 |          0 |
    li      1, $1                       # |      6,648 |     26,592 |          0 |      3,324 |          0 |          0 |
    ret                                 # |      6,648 |      6,648 |          0 |          0 |          0 |          0 |
be_else.31224:
.count stack_move
    add     $sp, 2, $sp                 # |    110,078 |    440,312 |          0 |     55,039 |          0 |          0 |
    li      1, $1                       # |    110,078 |    110,078 |          0 |          0 |          0 |          0 |
    ret                                 # |    110,078 |    110,078 |          0 |          0 |          0 |          0 |
.end shadow_check_one_or_group

######################################################################
.begin shadow_check_one_or_matrix
shadow_check_one_or_matrix.2868:
    load    [$3 + $2], $30              # |    565,273 |  3,920,071 |          0 |    554,939 |      4,194 |          0 |
    load    [$30 + 0], $31              # |    565,273 |  1,734,261 |  1,122,158 |          0 |      7,805 |          0 |
    cmp     $31, -1                     # |    565,273 |  1,680,209 |  1,114,936 |          0 |          0 |          0 |
    bne     be_else.31239               # |    565,273 |  1,923,133 |          0 |    218,307 |          0 |     24,009 |
be_then.31239:
    li      0, $1                       # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    ret                                 # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
be_else.31239:
.count stack_move
    sub     $sp, 7, $sp                 # |    554,939 |    554,939 |          0 |          0 |          0 |          0 |
    cmp     $31, 99                     # |    554,939 |    554,939 |          0 |          0 |          0 |          0 |
    store   $30, [$sp + 0]              # |    554,939 |    554,939 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 1]               # |    554,939 |    554,939 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 2]               # |    554,939 |    554,939 |          0 |          0 |          0 |          0 |
    bne     be_else.31240               # |    554,939 |  3,885,663 |          0 |    554,939 |          0 |        545 |
be_then.31240:
    li      1, $15                      # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
    b       be_cont.31240               # |    544,605 |    849,065 |          0 |          0 |          0 |    152,230 |
be_else.31240:
    load    [min_caml_objects + $31], $32# |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 0], $33# |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$32 + 5], $34              # |     10,334 |     34,408 |     10,334 |          0 |      2,290 |          0 |
    load    [$32 + 5], $35              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$32 + 5], $15              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$34 + 0], $34              # |     10,334 |     86,858 |          0 |     10,334 |      2,420 |          0 |
    load    [$35 + 1], $35              # |     10,334 |     20,330 |          0 |          0 |      1,666 |          0 |
    load    [$15 + 2], $15              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fsub    $33, $34, $33               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 1], $34# |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fsub    $34, $35, $34               # |     10,334 |     31,002 |     20,668 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $35# |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fsub    $35, $15, $35               # |     10,334 |     31,002 |     20,668 |          0 |          0 |          0 |
    load    [min_caml_light_dirvec + 1], $15# |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    load    [$15 + $31], $31            # |     10,334 |     31,002 |     20,668 |          0 |          0 |          0 |
    load    [$32 + 1], $15              # |     10,334 |     31,412 |          0 |          0 |      3,513 |          0 |
    cmp     $15, 1                      # |     10,334 |     23,976 |     13,642 |          0 |          0 |          0 |
    bne     be_else.31241               # |     10,334 |     10,620 |          0 |          0 |          0 |        143 |
be_then.31241:
    load    [min_caml_light_dirvec + 0], $15# |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$32 + 4], $16              # |     10,334 |     12,314 |          0 |          0 |        330 |          0 |
    load    [$31 + 0], $18              # |     10,334 |     69,302 |          0 |          0 |      9,828 |          0 |
    load    [$15 + 1], $17              # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    load    [$16 + 1], $16              # |     10,334 |     23,942 |          0 |          0 |      2,268 |          0 |
    fsub    $18, $33, $18               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$31 + 1], $19              # |     10,334 |     10,742 |          0 |          0 |         68 |          0 |
    fmul    $18, $19, $18               # |     10,334 |     41,132 |     30,798 |          0 |          0 |          0 |
    fmul    $18, $17, $17               # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    fadd    $17, $34, $17               # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    fabs    $17, $17                    # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    fcmp    $16, $17                    # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    bg      ble_else.31242              # |     10,334 |     11,146 |          0 |          0 |          0 |        406 |
ble_then.31242:
    li      0, $16                      # |      6,459 |      6,459 |          0 |          0 |          0 |          0 |
    b       ble_cont.31242              # |      6,459 |      6,467 |          0 |          0 |          0 |          4 |
ble_else.31242:
    load    [$32 + 4], $16              # |      3,875 |      3,875 |          0 |          0 |          0 |          0 |
    load    [$15 + 2], $17              # |      3,875 |      3,875 |          0 |          0 |          0 |          0 |
    load    [$16 + 2], $16              # |      3,875 |      7,750 |      3,875 |          0 |          0 |          0 |
    fmul    $18, $17, $17               # |      3,875 |      3,875 |          0 |          0 |          0 |          0 |
    fadd    $17, $35, $17               # |      3,875 |     27,125 |          0 |      3,875 |          0 |          0 |
    fabs    $17, $17                    # |      3,875 |     19,375 |     15,500 |          0 |          0 |          0 |
    fcmp    $16, $17                    # |      3,875 |      7,750 |      3,875 |          0 |          0 |          0 |
    bg      ble_else.31243              # |      3,875 |      3,875 |          0 |          0 |          0 |          0 |
ble_then.31243:
    li      0, $16                      # |      3,875 |      3,875 |          0 |          0 |          0 |          0 |
    b       ble_cont.31243              # |      3,875 |      3,879 |          0 |          0 |          0 |          2 |
ble_else.31243:
    load    [$31 + 1], $16
    fcmp    $16, $zero
    bne     be_else.31244
be_then.31244:
    li      0, $16
    b       be_cont.31244
be_else.31244:
    li      1, $16
be_cont.31244:
ble_cont.31243:
ble_cont.31242:
    cmp     $16, 0                      # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    bne     be_else.31245               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
be_then.31245:
    load    [$32 + 4], $16              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$15 + 0], $17              # |     10,334 |     10,346 |          0 |          0 |          2 |          0 |
    load    [$31 + 2], $18              # |     10,334 |     72,434 |          0 |     10,334 |         16 |          0 |
    load    [$16 + 0], $16              # |     10,334 |     23,942 |          0 |          0 |      2,268 |          0 |
    load    [$31 + 3], $19              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fsub    $18, $34, $18               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $18, $19, $18               # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    fmul    $18, $17, $17               # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    fadd    $17, $33, $17               # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    fabs    $17, $17                    # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    fcmp    $16, $17                    # |     10,334 |     72,233 |         21 |     10,313 |          0 |          0 |
    bg      ble_else.31246              # |     10,334 |     10,962 |          0 |          0 |          0 |        314 |
ble_then.31246:
    li      0, $16                      # |      9,079 |      9,079 |          0 |          0 |          0 |          0 |
    b       ble_cont.31246              # |      9,079 |      9,083 |          0 |          0 |          0 |          2 |
ble_else.31246:
    load    [$32 + 4], $16              # |      1,255 |      1,255 |          0 |          0 |          0 |          0 |
    load    [$15 + 2], $17              # |      1,255 |      1,255 |          0 |          0 |          0 |          0 |
    load    [$16 + 2], $16              # |      1,255 |      2,510 |      1,255 |          0 |          0 |          0 |
    fmul    $18, $17, $17               # |      1,255 |      1,255 |          0 |          0 |          0 |          0 |
    fadd    $17, $35, $17               # |      1,255 |      8,785 |          0 |      1,255 |          0 |          0 |
    fabs    $17, $17                    # |      1,255 |      6,275 |      5,020 |          0 |          0 |          0 |
    fcmp    $16, $17                    # |      1,255 |      2,510 |      1,255 |          0 |          0 |          0 |
    bg      ble_else.31247              # |      1,255 |      1,255 |          0 |          0 |          0 |          0 |
ble_then.31247:
    li      0, $16                      # |      1,255 |      1,255 |          0 |          0 |          0 |          0 |
    b       ble_cont.31247              # |      1,255 |      1,259 |          0 |          0 |          0 |          2 |
ble_else.31247:
    load    [$31 + 3], $16
    fcmp    $16, $zero
    bne     be_else.31248
be_then.31248:
    li      0, $16
    b       be_cont.31248
be_else.31248:
    li      1, $16
be_cont.31248:
ble_cont.31247:
ble_cont.31246:
    cmp     $16, 0                      # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    bne     be_else.31249               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
be_then.31249:
    load    [$32 + 4], $16              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$15 + 0], $17              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$31 + 4], $18              # |     10,334 |     77,612 |          0 |     10,334 |        879 |          0 |
    load    [$16 + 0], $16              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fsub    $18, $35, $35               # |     10,334 |     19,789 |      9,455 |          0 |          0 |          0 |
    load    [$31 + 5], $18              # |     10,334 |     10,898 |          0 |          0 |         94 |          0 |
    fmul    $35, $18, $35               # |     10,334 |     41,054 |     30,720 |          0 |          0 |          0 |
    fmul    $35, $17, $17               # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    fadd    $17, $33, $33               # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    fabs    $33, $33                    # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    fcmp    $16, $33                    # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    bg      ble_else.31250              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
ble_then.31250:
    li      0, $31                      # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    b       be_cont.31241               # |     10,334 |     10,342 |          0 |          0 |          0 |          4 |
ble_else.31250:
    load    [$32 + 4], $32
    load    [$15 + 1], $33
    load    [$32 + 1], $32
    fmul    $35, $33, $33
    fadd    $33, $34, $33
    fabs    $33, $33
    fcmp    $32, $33
    bg      ble_else.31251
ble_then.31251:
    li      0, $31
    b       be_cont.31241
ble_else.31251:
    load    [$31 + 5], $31
    fcmp    $31, $zero
    bne     be_else.31252
be_then.31252:
    li      0, $31
    b       be_cont.31241
be_else.31252:
.count move_float
    mov     $35, $42
    li      3, $31
    b       be_cont.31241
be_else.31249:
.count move_float
    mov     $18, $42
    li      2, $31
    b       be_cont.31241
be_else.31245:
.count move_float
    mov     $18, $42
    li      1, $31
    b       be_cont.31241
be_else.31241:
    cmp     $15, 2
    bne     be_else.31253
be_then.31253:
    load    [$31 + 0], $32
    fcmp    $zero, $32
    bg      ble_else.31254
ble_then.31254:
    li      0, $31
    b       be_cont.31253
ble_else.31254:
    load    [$31 + 1], $32
    fmul    $32, $33, $32
    load    [$31 + 2], $33
    load    [$31 + 3], $31
    fmul    $33, $34, $33
    fmul    $31, $35, $31
    fadd    $32, $33, $32
    fadd    $32, $31, $31
.count move_float
    mov     $31, $42
    li      1, $31
    b       be_cont.31253
be_else.31253:
    load    [$31 + 0], $16
    fcmp    $16, $zero
    bne     be_else.31255
be_then.31255:
    li      0, $31
    b       be_cont.31255
be_else.31255:
    load    [$31 + 1], $17
    load    [$31 + 2], $18
    fmul    $33, $33, $19
    fmul    $17, $33, $17
    fmul    $18, $34, $18
    load    [$32 + 4], $20
    load    [$32 + 4], $21
    load    [$20 + 0], $20
    fadd    $17, $18, $17
    load    [$31 + 3], $18
    fmul    $19, $20, $19
    fmul    $34, $34, $20
    fmul    $18, $35, $18
    load    [$21 + 1], $21
    fmul    $20, $21, $20
    fadd    $17, $18, $17
    load    [$32 + 4], $21
    fadd    $19, $20, $19
    fmul    $17, $17, $18
    fmul    $35, $35, $20
    load    [$21 + 2], $21
    fmul    $20, $21, $20
    fadd    $19, $20, $19
    load    [$32 + 3], $20
    cmp     $20, 0
    bne     be_else.31256
be_then.31256:
    mov     $19, $33
    b       be_cont.31256
be_else.31256:
    fmul    $34, $35, $20
    load    [$32 + 9], $21
    fmul    $35, $33, $35
    fmul    $33, $34, $33
    load    [$21 + 0], $21
    load    [$32 + 9], $34
    fmul    $20, $21, $20
    load    [$34 + 2], $34
    fmul    $33, $34, $33
    fadd    $19, $20, $19
    load    [$32 + 9], $20
    load    [$20 + 1], $20
    fmul    $35, $20, $35
    fadd    $19, $35, $35
    fadd    $35, $33, $33
be_cont.31256:
    cmp     $15, 3
    bne     be_cont.31257
be_then.31257:
    fsub    $33, $36, $33
be_cont.31257:
    fmul    $16, $33, $33
    fsub    $18, $33, $33
    fcmp    $33, $zero
    bg      ble_else.31258
ble_then.31258:
    li      0, $31
    b       ble_cont.31258
ble_else.31258:
    load    [$32 + 6], $32
    load    [$31 + 4], $31
    cmp     $32, 0
    fsqrt   $33, $32
    bne     be_else.31259
be_then.31259:
    fsub    $17, $32, $32
    fmul    $32, $31, $31
.count move_float
    mov     $31, $42
    li      1, $31
    b       be_cont.31259
be_else.31259:
    fadd    $17, $32, $32
    fmul    $32, $31, $31
.count move_float
    mov     $31, $42
    li      1, $31
be_cont.31259:
ble_cont.31258:
be_cont.31255:
be_cont.31253:
be_cont.31241:
    cmp     $31, 0                      # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    bne     be_else.31260               # |     10,334 |     12,478 |          0 |          0 |          0 |      1,072 |
be_then.31260:
    li      0, $15                      # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    b       be_cont.31260               # |     10,334 |     69,772 |          0 |      9,905 |          0 |          4 |
be_else.31260:
.count load_float
    load    [f.27089], $31
    fcmp    $31, $42
    bg      ble_else.31261
ble_then.31261:
    li      0, $15
    b       ble_cont.31261
ble_else.31261:
    load    [$30 + 1], $31
    cmp     $31, -1
    bne     be_else.31262
be_then.31262:
    li      0, $15
    b       be_cont.31262
be_else.31262:
    load    [min_caml_and_net + $31], $3
    li      0, $2
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $33
    cmp     $33, 0
    bne     be_else.31263
be_then.31263:
    li      2, $2
.count move_args
    mov     $30, $3
    call    shadow_check_one_or_group.2865
.count move_ret
    mov     $1, $15
    cmp     $15, 0
    bne     be_else.31264
be_then.31264:
    li      0, $15
    b       be_cont.31263
be_else.31264:
    li      1, $15
    b       be_cont.31263
be_else.31263:
    li      1, $15
be_cont.31263:
be_cont.31262:
ble_cont.31261:
be_cont.31260:
be_cont.31240:
    cmp     $15, 0                      # |    554,939 |  2,506,913 |          0 |    325,329 |          0 |          0 |
    bne     be_else.31265               # |    554,939 |    555,819 |          0 |          0 |          0 |        440 |
be_then.31265:
    load    [$sp + 2], $15              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$sp + 1], $16              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    add     $15, 1, $15                 # |     10,334 |     72,058 |         56 |     10,278 |          0 |          0 |
    load    [$16 + $15], $17            # |     10,334 |     20,668 |     10,334 |          0 |          0 |          0 |
    load    [$17 + 0], $2               # |     10,334 |     31,002 |     20,668 |          0 |          0 |          0 |
    cmp     $2, -1                      # |     10,334 |     31,002 |     20,668 |          0 |          0 |          0 |
    bne     be_else.31266               # |     10,334 |     10,342 |          0 |          0 |          0 |          4 |
be_then.31266:
.count stack_move
    add     $sp, 7, $sp
    li      0, $1
    ret
be_else.31266:
    store   $17, [$sp + 3]              # |     10,334 |     68,720 |          0 |      9,731 |          0 |          0 |
    store   $15, [$sp + 4]              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    cmp     $2, 99                      # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    bne     be_else.31267               # |     10,334 |     21,354 |          0 |          0 |          0 |      5,510 |
be_then.31267:
    li      1, $30                      # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    b       be_cont.31267               # |     10,334 |     10,338 |          0 |          0 |          0 |          2 |
be_else.31267:
    call    solver_fast.2796
.count move_ret
    mov     $1, $30
    cmp     $30, 0
    bne     be_else.31268
be_then.31268:
    li      0, $30
    b       be_cont.31268
be_else.31268:
.count load_float
    load    [f.27089], $30
    fcmp    $30, $42
    bg      ble_else.31269
ble_then.31269:
    li      0, $30
    b       ble_cont.31269
ble_else.31269:
    load    [$17 + 1], $30
    cmp     $30, -1
    bne     be_else.31270
be_then.31270:
    li      0, $30
    b       be_cont.31270
be_else.31270:
    li      0, $2
    load    [min_caml_and_net + $30], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $30
    cmp     $30, 0
    bne     be_else.31271
be_then.31271:
    load    [$sp + 3], $30
    load    [$30 + 2], $31
    cmp     $31, -1
    bne     be_else.31272
be_then.31272:
    li      0, $30
    b       be_cont.31271
be_else.31272:
    li      0, $2
    load    [min_caml_and_net + $31], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $33
    cmp     $33, 0
    bne     be_else.31273
be_then.31273:
    li      3, $2
.count move_args
    mov     $30, $3
    call    shadow_check_one_or_group.2865
.count move_ret
    mov     $1, $30
    cmp     $30, 0
    bne     be_else.31274
be_then.31274:
    li      0, $30
    b       be_cont.31271
be_else.31274:
    li      1, $30
    b       be_cont.31271
be_else.31273:
    li      1, $30
    b       be_cont.31271
be_else.31271:
    li      1, $30
be_cont.31271:
be_cont.31270:
ble_cont.31269:
be_cont.31268:
be_cont.31267:
    cmp     $30, 0                      # |     10,334 |     11,042 |          0 |        118 |          0 |          0 |
    bne     be_else.31275               # |     10,334 |     10,338 |          0 |          0 |          0 |          2 |
be_then.31275:
.count stack_move
    add     $sp, 7, $sp
    load    [$sp - 3], $1
    load    [$sp - 6], $3
    add     $1, 1, $2
    b       shadow_check_one_or_matrix.2868
be_else.31275:
    load    [$sp + 3], $30              # |     10,334 |     11,006 |          0 |        112 |          0 |          0 |
    load    [$30 + 1], $31              # |     10,334 |     31,002 |     20,668 |          0 |          0 |          0 |
    cmp     $31, -1                     # |     10,334 |     31,002 |     20,668 |          0 |          0 |          0 |
    bne     be_else.31276               # |     10,334 |     30,816 |          0 |          0 |          0 |     10,241 |
be_then.31276:
.count stack_move
    add     $sp, 7, $sp
    load    [$sp - 3], $1
    load    [$sp - 6], $3
    add     $1, 1, $2
    b       shadow_check_one_or_matrix.2868
be_else.31276:
    li      0, $2                       # |     10,334 |     28,286 |          0 |      2,992 |          0 |          0 |
    load    [min_caml_and_net + $31], $3# |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    call    shadow_check_and_group.2862 # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $31                     # |     10,334 |     28,286 |          0 |      2,992 |          0 |          0 |
    cmp     $31, 0                      # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    bne     be_else.31277               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
be_then.31277:
    load    [$30 + 2], $31              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    cmp     $31, -1                     # |     10,334 |     31,002 |     20,668 |          0 |          0 |          0 |
    bne     be_else.31278               # |     10,334 |     10,338 |          0 |          0 |          0 |          2 |
be_then.31278:
.count stack_move
    add     $sp, 7, $sp
    load    [$sp - 3], $1
    load    [$sp - 6], $3
    add     $1, 1, $2
    b       shadow_check_one_or_matrix.2868
be_else.31278:
    li      0, $2                       # |     10,334 |     28,286 |          0 |      2,992 |          0 |          0 |
    load    [min_caml_and_net + $31], $3# |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    call    shadow_check_and_group.2862 # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $33                     # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    cmp     $33, 0                      # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    bne     be_else.31279               # |     10,334 |     85,398 |          0 |     10,334 |          0 |      6,530 |
be_then.31279:
    li      3, $2                       # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $30, $3                     # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_group.2865# |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 7, $sp                 # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    bne     be_else.31280               # |     10,334 |     10,344 |          0 |          0 |          0 |          5 |
be_then.31280:
    load    [$sp - 3], $1               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$sp - 6], $3               # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    add     $1, 1, $2                   # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    b       shadow_check_one_or_matrix.2868# |     10,334 |     17,478 |          0 |          0 |          0 |      3,572 |
be_else.31280:
    li      1, $1
    ret
be_else.31279:
.count stack_move
    add     $sp, 7, $sp
    li      1, $1
    ret
be_else.31277:
.count stack_move
    add     $sp, 7, $sp
    li      1, $1
    ret
be_else.31265:
    load    [$sp + 0], $30              # |    544,605 |    708,135 |          0 |     18,866 |      8,389 |          0 |
    load    [$30 + 1], $31              # |    544,605 |  1,645,927 |  1,072,432 |          0 |      4,815 |          0 |
    cmp     $31, -1                     # |    544,605 |  1,624,185 |  1,079,580 |          0 |          0 |          0 |
    bne     be_else.31281               # |    544,605 |    544,615 |          0 |          0 |          0 |          5 |
be_then.31281:
    li      0, $15
    b       be_cont.31281
be_else.31281:
    load    [min_caml_and_net + $31], $3# |    544,605 |    718,185 |          0 |     18,866 |     10,064 |          0 |
    li      0, $2                       # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
    call    shadow_check_and_group.2862 # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $31                     # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
    cmp     $31, 0                      # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
    bne     be_else.31282               # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
be_then.31282:
    load    [$30 + 2], $31              # |    544,605 |    558,003 |          0 |          0 |      2,233 |          0 |
    cmp     $31, -1                     # |    544,605 |  1,704,869 |  1,047,068 |     18,866 |          0 |          0 |
    bne     be_else.31283               # |    544,605 |    544,609 |          0 |          0 |          0 |          2 |
be_then.31283:
    li      0, $15
    b       be_cont.31282
be_else.31283:
    li      0, $2                       # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $31], $3# |    544,605 |    604,893 |          0 |          0 |     10,048 |          0 |
    call    shadow_check_and_group.2862 # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $31                     # |    544,605 |    544,605 |          0 |          0 |          0 |          0 |
    cmp     $31, 0                      # |    544,605 |    613,719 |          0 |     11,519 |          0 |          0 |
    bne     be_else.31284               # |    544,605 |    544,613 |          0 |          0 |          0 |          4 |
be_then.31284:
    load    [$30 + 3], $31              # |    543,022 |    562,198 |          0 |          0 |      3,196 |          0 |
    cmp     $31, -1                     # |    543,022 |  1,622,674 |  1,079,652 |          0 |          0 |          0 |
    bne     be_else.31285               # |    543,022 |    543,026 |          0 |          0 |          0 |          2 |
be_then.31285:
    li      0, $15
    b       be_cont.31282
be_else.31285:
    li      0, $2                       # |    543,022 |    543,022 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $31], $3# |    543,022 |    666,478 |          0 |     11,519 |      9,057 |          0 |
    call    shadow_check_and_group.2862 # |    543,022 |    543,022 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $31                     # |    543,022 |    543,022 |          0 |          0 |          0 |          0 |
    cmp     $31, 0                      # |    543,022 |    543,022 |          0 |          0 |          0 |          0 |
    bne     be_else.31286               # |    543,022 |    543,102 |          0 |          0 |          0 |         40 |
be_then.31286:
    load    [$30 + 4], $31              # |    541,069 |    595,123 |          0 |          0 |      9,009 |          0 |
    cmp     $31, -1                     # |    541,069 |  1,605,189 |  1,064,120 |          0 |          0 |          0 |
    bne     be_else.31287               # |    541,069 |    541,077 |          0 |          0 |          0 |          4 |
be_then.31287:
    li      0, $15
    b       be_cont.31282
be_else.31287:
    li      0, $2                       # |    541,069 |    610,183 |          0 |     11,519 |          0 |          0 |
    load    [min_caml_and_net + $31], $3# |    541,069 |    550,747 |          0 |          0 |      1,613 |          0 |
    call    shadow_check_and_group.2862 # |    541,069 |    541,069 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $31                     # |    541,069 |    541,069 |          0 |          0 |          0 |          0 |
    cmp     $31, 0                      # |    541,069 |    541,069 |          0 |          0 |          0 |          0 |
    bne     be_else.31288               # |    541,069 |    582,947 |          0 |          0 |          0 |     20,939 |
be_then.31288:
    load    [$30 + 5], $31              # |    540,655 |    658,495 |          0 |     19,640 |          0 |          0 |
    cmp     $31, -1                     # |    540,655 |  1,621,965 |  1,081,310 |          0 |          0 |          0 |
    bne     be_else.31289               # |    540,655 |    540,655 |          0 |          0 |          0 |          0 |
be_then.31289:
    li      0, $15                      # |    540,655 |    540,655 |          0 |          0 |          0 |          0 |
    b       be_cont.31282               # |    540,655 |    540,667 |          0 |          0 |          0 |          6 |
be_else.31289:
    li      0, $2
    load    [min_caml_and_net + $31], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $31
    cmp     $31, 0
    bne     be_else.31290
be_then.31290:
    load    [$30 + 6], $31
    cmp     $31, -1
    bne     be_else.31291
be_then.31291:
    li      0, $15
    b       be_cont.31282
be_else.31291:
    li      0, $2
    load    [min_caml_and_net + $31], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $31
    cmp     $31, 0
    bne     be_else.31292
be_then.31292:
    load    [$30 + 7], $31
    cmp     $31, -1
    bne     be_else.31293
be_then.31293:
    li      0, $15
    b       be_cont.31282
be_else.31293:
    li      0, $2
    load    [min_caml_and_net + $31], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $33
    cmp     $33, 0
    bne     be_else.31294
be_then.31294:
    li      8, $2
.count move_args
    mov     $30, $3
    call    shadow_check_one_or_group.2865
.count move_ret
    mov     $1, $15
    b       be_cont.31282
be_else.31294:
    li      1, $15
    b       be_cont.31282
be_else.31292:
    li      1, $15
    b       be_cont.31282
be_else.31290:
    li      1, $15
    b       be_cont.31282
be_else.31288:
    li      1, $15                      # |        414 |      1,440 |          0 |        171 |          0 |          0 |
    b       be_cont.31282               # |        414 |        698 |          0 |          0 |          0 |        142 |
be_else.31286:
    li      1, $15                      # |      1,953 |      9,447 |          0 |      1,249 |          0 |          0 |
    b       be_cont.31282               # |      1,953 |      3,969 |          0 |          0 |          0 |      1,008 |
be_else.31284:
    li      1, $15                      # |      1,583 |      1,643 |          0 |         10 |          0 |          0 |
    b       be_cont.31282               # |      1,583 |      1,587 |          0 |          0 |          0 |          2 |
be_else.31282:
    li      1, $15
be_cont.31282:
be_cont.31281:
    cmp     $15, 0                      # |    544,605 |    582,669 |          0 |      6,344 |          0 |          0 |
    bne     be_else.31295               # |    544,605 |    544,613 |          0 |          0 |          0 |          4 |
be_then.31295:
    load    [$sp + 2], $15              # |    540,655 |    555,061 |          0 |          0 |      2,401 |          0 |
    load    [$sp + 1], $16              # |    540,655 |    551,371 |          0 |          0 |      1,786 |          0 |
    add     $15, 1, $15                 # |    540,655 |  1,078,909 |    538,254 |          0 |          0 |          0 |
    load    [$16 + $15], $17            # |    540,655 |  1,111,980 |    534,521 |      6,134 |          0 |          0 |
    load    [$17 + 0], $2               # |    540,655 |  1,622,229 |  1,081,310 |          0 |         44 |          0 |
    cmp     $2, -1                      # |    540,655 |  1,621,877 |  1,081,222 |          0 |          0 |          0 |
    bne     be_else.31296               # |    540,655 |    540,655 |          0 |          0 |          0 |          0 |
be_then.31296:
.count stack_move
    add     $sp, 7, $sp                 # |    540,655 |    540,655 |          0 |          0 |          0 |          0 |
    li      0, $1                       # |    540,655 |    540,655 |          0 |          0 |          0 |          0 |
    ret                                 # |    540,655 |    540,655 |          0 |          0 |          0 |          0 |
be_else.31296:
    store   $17, [$sp + 5]
    store   $15, [$sp + 6]
    cmp     $2, 99
    bne     be_else.31297
be_then.31297:
    li      1, $30
    b       be_cont.31297
be_else.31297:
    call    solver_fast.2796
.count move_ret
    mov     $1, $30
    cmp     $30, 0
    bne     be_else.31298
be_then.31298:
    li      0, $30
    b       be_cont.31298
be_else.31298:
.count load_float
    load    [f.27089], $30
    fcmp    $30, $42
    bg      ble_else.31299
ble_then.31299:
    li      0, $30
    b       ble_cont.31299
ble_else.31299:
    load    [$17 + 1], $30
    cmp     $30, -1
    bne     be_else.31300
be_then.31300:
    li      0, $30
    b       be_cont.31300
be_else.31300:
    li      0, $2
    load    [min_caml_and_net + $30], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $30
    cmp     $30, 0
    bne     be_else.31301
be_then.31301:
    load    [$sp + 5], $30
    load    [$30 + 2], $31
    cmp     $31, -1
    bne     be_else.31302
be_then.31302:
    li      0, $30
    b       be_cont.31301
be_else.31302:
    li      0, $2
    load    [min_caml_and_net + $31], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $33
    cmp     $33, 0
    bne     be_else.31303
be_then.31303:
    li      3, $2
.count move_args
    mov     $30, $3
    call    shadow_check_one_or_group.2865
.count move_ret
    mov     $1, $30
    cmp     $30, 0
    bne     be_else.31304
be_then.31304:
    li      0, $30
    b       be_cont.31301
be_else.31304:
    li      1, $30
    b       be_cont.31301
be_else.31303:
    li      1, $30
    b       be_cont.31301
be_else.31301:
    li      1, $30
be_cont.31301:
be_cont.31300:
ble_cont.31299:
be_cont.31298:
be_cont.31297:
    cmp     $30, 0
    bne     be_else.31305
be_then.31305:
.count stack_move
    add     $sp, 7, $sp
    load    [$sp - 1], $1
    load    [$sp - 6], $3
    add     $1, 1, $2
    b       shadow_check_one_or_matrix.2868
be_else.31305:
    load    [$sp + 5], $30
    load    [$30 + 1], $31
    cmp     $31, -1
    bne     be_else.31306
be_then.31306:
.count stack_move
    add     $sp, 7, $sp
    load    [$sp - 1], $1
    load    [$sp - 6], $3
    add     $1, 1, $2
    b       shadow_check_one_or_matrix.2868
be_else.31306:
    li      0, $2
    load    [min_caml_and_net + $31], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $31
    cmp     $31, 0
    bne     be_else.31307
be_then.31307:
    load    [$30 + 2], $31
    cmp     $31, -1
    bne     be_else.31308
be_then.31308:
.count stack_move
    add     $sp, 7, $sp
    load    [$sp - 1], $1
    load    [$sp - 6], $3
    add     $1, 1, $2
    b       shadow_check_one_or_matrix.2868
be_else.31308:
    li      0, $2
    load    [min_caml_and_net + $31], $3
    call    shadow_check_and_group.2862
.count move_ret
    mov     $1, $33
    cmp     $33, 0
    bne     be_else.31309
be_then.31309:
    li      3, $2
.count move_args
    mov     $30, $3
    call    shadow_check_one_or_group.2865
.count stack_move
    add     $sp, 7, $sp
    cmp     $1, 0
    bne     be_else.31310
be_then.31310:
    load    [$sp - 1], $1
    load    [$sp - 6], $3
    add     $1, 1, $2
    b       shadow_check_one_or_matrix.2868
be_else.31310:
    li      1, $1
    ret
be_else.31309:
.count stack_move
    add     $sp, 7, $sp
    li      1, $1
    ret
be_else.31307:
.count stack_move
    add     $sp, 7, $sp
    li      1, $1
    ret
be_else.31295:
.count stack_move
    add     $sp, 7, $sp                 # |      3,950 |     14,420 |          0 |      1,745 |          0 |          0 |
    li      1, $1                       # |      3,950 |      3,950 |          0 |          0 |          0 |          0 |
    ret                                 # |      3,950 |      3,950 |          0 |          0 |          0 |          0 |
.end shadow_check_one_or_matrix

######################################################################
.begin solve_each_element
solve_each_element.2871:
    load    [$3 + $2], $17              # |    193,311 |    311,518 |     14,521 |     15,857 |      1,424 |          0 |
    cmp     $17, -1                     # |    193,311 |    577,085 |    383,774 |          0 |          0 |          0 |
    bne     be_else.31311               # |    193,311 |    208,905 |          0 |          0 |          0 |      7,797 |
be_then.31311:
    ret                                 # |     43,491 |     43,491 |          0 |          0 |          0 |          0 |
be_else.31311:
    load    [min_caml_objects + $17], $18# |    149,820 |    259,350 |          0 |     17,626 |        629 |          0 |
    load    [min_caml_startp + 0], $23  # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
    load    [$18 + 5], $19              # |    149,820 |    388,975 |    149,191 |          0 |     14,994 |          0 |
    load    [$18 + 5], $20              # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
    load    [$18 + 5], $21              # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
    load    [$18 + 1], $22              # |    149,820 |    187,770 |          0 |          0 |      6,325 |          0 |
    load    [$19 + 0], $19              # |    149,820 |    250,134 |          0 |          0 |     16,719 |          0 |
    load    [$20 + 1], $20              # |    149,820 |    272,088 |          0 |     18,539 |      1,839 |          0 |
    load    [$21 + 2], $21              # |    149,820 |    170,976 |          0 |          0 |      3,526 |          0 |
    fsub    $23, $19, $19               # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp + 1], $23  # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
    cmp     $22, 1                      # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
    fsub    $23, $20, $20               # |    149,820 |    299,640 |    149,820 |          0 |          0 |          0 |
    load    [min_caml_startp + 2], $23  # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
    fsub    $23, $21, $21               # |    149,820 |    449,460 |    299,640 |          0 |          0 |          0 |
    bne     be_else.31312               # |    149,820 |    283,134 |          0 |     18,539 |          0 |     11,040 |
be_then.31312:
    load    [$4 + 0], $22               # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    fcmp    $22, $zero                  # |     50,858 |    152,574 |    101,716 |          0 |          0 |          0 |
    bne     be_else.31313               # |     50,858 |     51,858 |          0 |          0 |          0 |        500 |
be_then.31313:
    li      0, $22
    b       be_cont.31313
be_else.31313:
    load    [$18 + 4], $23              # |     50,858 |     54,362 |          0 |          0 |        584 |          0 |
    load    [$18 + 6], $24              # |     50,858 |     71,090 |          0 |          0 |      3,372 |          0 |
    fcmp    $zero, $22                  # |     50,858 |    162,092 |          0 |     18,539 |          0 |          0 |
    bg      ble_else.31314              # |     50,858 |     57,988 |          0 |          0 |          0 |      3,565 |
ble_then.31314:
    li      0, $25                      # |     50,160 |     50,160 |          0 |          0 |          0 |          0 |
    b       ble_cont.31314              # |     50,160 |     50,374 |          0 |          0 |          0 |        107 |
ble_else.31314:
    li      1, $25                      # |        698 |        698 |          0 |          0 |          0 |          0 |
ble_cont.31314:
    cmp     $24, 0                      # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    bne     be_else.31315               # |     50,858 |     50,862 |          0 |          0 |          0 |          2 |
be_then.31315:
    mov     $25, $24                    # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    b       be_cont.31315               # |     50,858 |    162,232 |          0 |     18,539 |          0 |         70 |
be_else.31315:
    cmp     $25, 0
    bne     be_else.31316
be_then.31316:
    li      1, $24
    b       be_cont.31316
be_else.31316:
    li      0, $24
be_cont.31316:
be_cont.31315:
    load    [$23 + 0], $25              # |     50,858 |     77,480 |          0 |          0 |      4,437 |          0 |
    cmp     $24, 0                      # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    bne     be_else.31317               # |     50,858 |    162,216 |          0 |     18,539 |          0 |         62 |
be_then.31317:
    fneg    $25, $24                    # |     50,160 |     50,160 |          0 |          0 |          0 |          0 |
    b       be_cont.31317               # |     50,160 |     50,168 |          0 |          0 |          0 |          4 |
be_else.31317:
    mov     $25, $24                    # |        698 |        698 |          0 |          0 |          0 |          0 |
be_cont.31317:
    fsub    $24, $19, $24               # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    finv    $22, $22                    # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    load    [$4 + 1], $25               # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
    fmul    $24, $22, $22               # |     50,858 |    203,432 |    152,574 |          0 |          0 |          0 |
    load    [$23 + 1], $24              # |     50,858 |     95,834 |          0 |      7,434 |         62 |          0 |
    fmul    $22, $25, $25               # |     50,858 |    180,977 |    130,119 |          0 |          0 |          0 |
    fadd    $25, $20, $25               # |     50,858 |    254,290 |    203,432 |          0 |          0 |          0 |
    fabs    $25, $25                    # |     50,858 |    254,290 |    203,432 |          0 |          0 |          0 |
    fcmp    $24, $25                    # |     50,858 |    101,716 |     50,858 |          0 |          0 |          0 |
    bg      ble_else.31318              # |     50,858 |     81,502 |          0 |          0 |          0 |     15,322 |
ble_then.31318:
    li      0, $22                      # |     41,048 |     41,048 |          0 |          0 |          0 |          0 |
    b       ble_cont.31318              # |     41,048 |     41,060 |          0 |          0 |          0 |          6 |
ble_else.31318:
    load    [$23 + 2], $23              # |      9,810 |     46,884 |          0 |      6,171 |          8 |          0 |
    load    [$4 + 2], $24               # |      9,810 |      9,810 |          0 |          0 |          0 |          0 |
    fmul    $22, $24, $24               # |      9,810 |     29,430 |     19,620 |          0 |          0 |          0 |
    fadd    $24, $21, $24               # |      9,810 |     49,050 |     39,240 |          0 |          0 |          0 |
    fabs    $24, $24                    # |      9,810 |     49,050 |     39,240 |          0 |          0 |          0 |
    fcmp    $23, $24                    # |      9,810 |     19,620 |      9,810 |          0 |          0 |          0 |
    bg      ble_else.31319              # |      9,810 |     11,210 |          0 |          0 |          0 |        700 |
ble_then.31319:
    li      0, $22                      # |      5,699 |      5,699 |          0 |          0 |          0 |          0 |
    b       ble_cont.31319              # |      5,699 |     11,247 |          0 |        909 |          0 |         47 |
ble_else.31319:
.count move_float
    mov     $22, $42                    # |      4,111 |     13,273 |          0 |      1,527 |          0 |          0 |
    li      1, $22                      # |      4,111 |      4,111 |          0 |          0 |          0 |          0 |
ble_cont.31319:
ble_cont.31318:
be_cont.31313:
    cmp     $22, 0                      # |     50,858 |    107,595 |      4,111 |      8,771 |          0 |          0 |
    bne     be_else.31320               # |     50,858 |     50,858 |          0 |          0 |          0 |          0 |
be_then.31320:
    load    [$4 + 1], $22               # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    fcmp    $22, $zero                  # |     46,747 |    140,241 |     93,494 |          0 |          0 |          0 |
    bne     be_else.31321               # |     46,747 |     46,755 |          0 |          0 |          0 |          4 |
be_then.31321:
    li      0, $22
    b       be_cont.31321
be_else.31321:
    load    [$18 + 4], $23              # |     46,747 |     47,131 |          0 |         64 |          0 |          0 |
    load    [$18 + 6], $24              # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    fcmp    $zero, $22                  # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    bg      ble_else.31322              # |     46,747 |     46,865 |          0 |          0 |          0 |         59 |
ble_then.31322:
    li      0, $25                      # |        217 |        217 |          0 |          0 |          0 |          0 |
    b       ble_cont.31322              # |        217 |        391 |          0 |          0 |          0 |         87 |
ble_else.31322:
    li      1, $25                      # |     46,530 |     46,914 |          0 |         64 |          0 |          0 |
ble_cont.31322:
    cmp     $24, 0                      # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    bne     be_else.31323               # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
be_then.31323:
    mov     $25, $24                    # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    b       be_cont.31323               # |     46,747 |     49,533 |          0 |          0 |          0 |      1,393 |
be_else.31323:
    cmp     $25, 0
    bne     be_else.31324
be_then.31324:
    li      1, $24
    b       be_cont.31324
be_else.31324:
    li      0, $24
be_cont.31324:
be_cont.31323:
    load    [$23 + 1], $25              # |     46,747 |     47,131 |          0 |         64 |          0 |          0 |
    cmp     $24, 0                      # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    bne     be_else.31325               # |     46,747 |     46,767 |          0 |          0 |          0 |         10 |
be_then.31325:
    fneg    $25, $24                    # |        217 |        217 |          0 |          0 |          0 |          0 |
    b       be_cont.31325               # |        217 |        269 |          0 |          0 |          0 |         26 |
be_else.31325:
    mov     $25, $24                    # |     46,530 |     46,530 |          0 |          0 |          0 |          0 |
be_cont.31325:
    fsub    $24, $20, $24               # |     46,747 |     47,131 |          0 |         64 |          0 |          0 |
    finv    $22, $22                    # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    load    [$4 + 2], $25               # |     46,747 |     46,747 |          0 |          0 |          0 |          0 |
    fmul    $24, $22, $22               # |     46,747 |    186,988 |    140,241 |          0 |          0 |          0 |
    load    [$23 + 2], $24              # |     46,747 |     47,077 |          0 |          0 |         55 |          0 |
    fmul    $22, $25, $25               # |     46,747 |    186,823 |    140,076 |          0 |          0 |          0 |
    fadd    $25, $21, $25               # |     46,747 |    233,735 |    186,988 |          0 |          0 |          0 |
    fabs    $25, $25                    # |     46,747 |    233,735 |    186,988 |          0 |          0 |          0 |
    fcmp    $24, $25                    # |     46,747 |     93,814 |     46,683 |         64 |          0 |          0 |
    bg      ble_else.31326              # |     46,747 |     78,435 |          0 |          0 |          0 |     15,844 |
ble_then.31326:
    li      0, $22                      # |     28,211 |     28,211 |          0 |          0 |          0 |          0 |
    b       ble_cont.31326              # |     28,211 |     28,215 |          0 |          0 |          0 |          2 |
ble_else.31326:
    load    [$23 + 0], $23              # |     18,536 |     18,536 |          0 |          0 |          0 |          0 |
    load    [$4 + 0], $24               # |     18,536 |     18,536 |          0 |          0 |          0 |          0 |
    fmul    $22, $24, $24               # |     18,536 |     55,608 |     37,072 |          0 |          0 |          0 |
    fadd    $24, $19, $24               # |     18,536 |     92,680 |     74,144 |          0 |          0 |          0 |
    fabs    $24, $24                    # |     18,536 |     92,706 |     74,092 |         13 |          0 |          0 |
    fcmp    $23, $24                    # |     18,536 |     37,072 |     18,536 |          0 |          0 |          0 |
    bg      ble_else.31327              # |     18,536 |     23,832 |          0 |          0 |          0 |      2,648 |
ble_then.31327:
    li      0, $22                      # |      6,456 |      6,456 |          0 |          0 |          0 |          0 |
    b       ble_cont.31327              # |      6,456 |      6,464 |          0 |          0 |          0 |          4 |
ble_else.31327:
.count move_float
    mov     $22, $42                    # |     12,080 |     12,080 |          0 |          0 |          0 |          0 |
    li      1, $22                      # |     12,080 |     12,080 |          0 |          0 |          0 |          0 |
ble_cont.31327:
ble_cont.31326:
be_cont.31321:
    cmp     $22, 0                      # |     46,747 |     59,133 |     12,080 |         51 |          0 |          0 |
    bne     be_else.31328               # |     46,747 |    117,165 |          0 |     10,996 |          0 |      2,221 |
be_then.31328:
    load    [$4 + 2], $22               # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    fcmp    $22, $zero                  # |     34,667 |    104,001 |     69,334 |          0 |          0 |          0 |
    bne     be_else.31329               # |     34,667 |     34,797 |          0 |          0 |          0 |         65 |
be_then.31329:
    li      0, $18
    b       be_cont.31312
be_else.31329:
    load    [$18 + 4], $23              # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    load    [$4 + 0], $25               # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    load    [$18 + 6], $18              # |     34,667 |     71,561 |          0 |      6,149 |          0 |          0 |
    load    [$23 + 0], $24              # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    fcmp    $zero, $22                  # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    bg      ble_else.31330              # |     34,667 |     42,067 |          0 |          0 |          0 |      3,700 |
ble_then.31330:
    li      0, $26                      # |     24,683 |     24,683 |          0 |          0 |          0 |          0 |
    b       ble_cont.31330              # |     24,683 |     42,239 |          0 |          0 |          0 |      8,778 |
ble_else.31330:
    li      1, $26                      # |      9,984 |      9,984 |          0 |          0 |          0 |          0 |
ble_cont.31330:
    cmp     $18, 0                      # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    bne     be_else.31331               # |     34,667 |     75,433 |          0 |      6,144 |          0 |      1,951 |
be_then.31331:
    mov     $26, $18                    # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    b       be_cont.31331               # |     34,667 |     34,693 |          0 |          0 |          0 |         13 |
be_else.31331:
    cmp     $26, 0
    bne     be_else.31332
be_then.31332:
    li      1, $18
    b       be_cont.31332
be_else.31332:
    li      0, $18
be_cont.31332:
be_cont.31331:
    load    [$23 + 2], $26              # |     34,667 |     71,531 |          0 |      6,144 |          0 |          0 |
    cmp     $18, 0                      # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    bne     be_else.31333               # |     34,667 |     34,675 |          0 |          0 |          0 |          4 |
be_then.31333:
    fneg    $26, $18                    # |     24,683 |     24,683 |          0 |          0 |          0 |          0 |
    b       be_cont.31333               # |     24,683 |     24,687 |          0 |          0 |          0 |          2 |
be_else.31333:
    mov     $26, $18                    # |      9,984 |      9,984 |          0 |          0 |          0 |          0 |
be_cont.31333:
    fsub    $18, $21, $18               # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    finv    $22, $21                    # |     34,667 |     34,667 |          0 |          0 |          0 |          0 |
    fmul    $18, $21, $18               # |     34,667 |    185,613 |    114,112 |      6,139 |          0 |          0 |
    fmul    $18, $25, $21               # |     34,667 |    173,335 |    138,668 |          0 |          0 |          0 |
    fadd    $21, $19, $19               # |     34,667 |    173,335 |    138,668 |          0 |          0 |          0 |
    fabs    $19, $19                    # |     34,667 |    173,335 |    138,668 |          0 |          0 |          0 |
    fcmp    $24, $19                    # |     34,667 |     69,334 |     34,667 |          0 |          0 |          0 |
    bg      ble_else.31334              # |     34,667 |     52,009 |          0 |          0 |          0 |      8,671 |
ble_then.31334:
    li      0, $18                      # |     18,798 |     18,798 |          0 |          0 |          0 |          0 |
    b       be_cont.31312               # |     18,798 |     18,806 |          0 |          0 |          0 |          4 |
ble_else.31334:
    load    [$23 + 1], $19              # |     15,869 |     41,987 |          0 |      4,353 |          0 |          0 |
    load    [$4 + 1], $21               # |     15,869 |     15,869 |          0 |          0 |          0 |          0 |
    fmul    $18, $21, $21               # |     15,869 |     47,607 |     31,738 |          0 |          0 |          0 |
    fadd    $21, $20, $20               # |     15,869 |     79,345 |     63,476 |          0 |          0 |          0 |
    fabs    $20, $20                    # |     15,869 |     79,345 |     63,476 |          0 |          0 |          0 |
    fcmp    $19, $20                    # |     15,869 |     31,738 |     15,869 |          0 |          0 |          0 |
    bg      ble_else.31335              # |     15,869 |     19,195 |          0 |          0 |          0 |      1,663 |
ble_then.31335:
    li      0, $18                      # |     12,844 |     12,844 |          0 |          0 |          0 |          0 |
    b       be_cont.31312               # |     12,844 |     24,198 |          0 |      1,891 |          0 |          4 |
ble_else.31335:
.count move_float
    mov     $18, $42                    # |      3,025 |      8,869 |          0 |        974 |          0 |          0 |
    li      3, $18                      # |      3,025 |      3,025 |          0 |          0 |          0 |          0 |
    b       be_cont.31312               # |      3,025 |      3,029 |          0 |          0 |          0 |          2 |
be_else.31328:
    li      2, $18                      # |     12,080 |     47,468 |          0 |      5,898 |          0 |          0 |
    b       be_cont.31312               # |     12,080 |     12,082 |          0 |          0 |          0 |          1 |
be_else.31320:
    li      1, $18                      # |      4,111 |     17,623 |          0 |      2,252 |          0 |          0 |
    b       be_cont.31312               # |      4,111 |      4,111 |          0 |          0 |          0 |          0 |
be_else.31312:
    cmp     $22, 2                      # |     98,962 |    149,440 |          0 |      8,413 |          0 |          0 |
    bne     be_else.31336               # |     98,962 |    100,416 |          0 |          0 |          0 |        727 |
be_then.31336:
    load    [$18 + 4], $18              # |     24,693 |     25,965 |          0 |          0 |        212 |          0 |
    load    [$4 + 0], $22               # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
    load    [$4 + 1], $24               # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
    load    [$18 + 0], $23              # |     24,693 |     28,761 |          0 |          0 |        678 |          0 |
    load    [$18 + 1], $25              # |     24,693 |     25,113 |          0 |          0 |         70 |          0 |
    load    [$18 + 2], $18              # |     24,693 |     27,051 |          0 |          0 |        393 |          0 |
    fmul    $22, $23, $22               # |     24,693 |     90,981 |          0 |     11,048 |          0 |          0 |
    fmul    $24, $25, $24               # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
    fadd    $22, $24, $22               # |     24,693 |    123,465 |     98,772 |          0 |          0 |          0 |
    load    [$4 + 2], $24               # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
    fmul    $24, $18, $24               # |     24,693 |     74,079 |     49,386 |          0 |          0 |          0 |
    fadd    $22, $24, $22               # |     24,693 |    123,465 |     98,772 |          0 |          0 |          0 |
    fcmp    $22, $zero                  # |     24,693 |    123,465 |     98,772 |          0 |          0 |          0 |
    bg      ble_else.31337              # |     24,693 |     25,753 |          0 |          0 |          0 |        530 |
ble_then.31337:
    li      0, $18                      # |      7,535 |      7,535 |          0 |          0 |          0 |          0 |
    b       be_cont.31336               # |      7,535 |      7,547 |          0 |          0 |          0 |          6 |
ble_else.31337:
    fmul    $23, $19, $19               # |     17,158 |     82,624 |          0 |     10,911 |          0 |          0 |
    fmul    $25, $20, $20               # |     17,158 |     17,158 |          0 |          0 |          0 |          0 |
    fmul    $18, $21, $18               # |     17,158 |     17,158 |          0 |          0 |          0 |          0 |
    fadd    $19, $20, $19               # |     17,158 |     68,632 |     51,474 |          0 |          0 |          0 |
    fadd    $19, $18, $18               # |     17,158 |     85,790 |     68,632 |          0 |          0 |          0 |
    finv    $22, $19                    # |     17,158 |     17,158 |          0 |          0 |          0 |          0 |
    fneg    $18, $18                    # |     17,158 |     88,366 |     31,740 |      6,578 |          0 |          0 |
    fmul    $18, $19, $18               # |     17,158 |     34,316 |     17,158 |          0 |          0 |          0 |
.count move_float
    mov     $18, $42                    # |     17,158 |     85,790 |     68,632 |          0 |          0 |          0 |
    li      1, $18                      # |     17,158 |     17,158 |          0 |          0 |          0 |          0 |
    b       be_cont.31336               # |     17,158 |     17,170 |          0 |          0 |          0 |          6 |
be_else.31336:
    load    [$18 + 3], $22              # |     74,269 |    104,671 |          0 |      4,426 |        641 |          0 |
    load    [$18 + 4], $23              # |     74,269 |     77,647 |          0 |          0 |        563 |          0 |
    load    [$18 + 4], $24              # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$18 + 4], $25              # |     74,269 |    127,735 |          0 |      8,911 |          0 |          0 |
    load    [$4 + 0], $26               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$4 + 1], $27               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$4 + 2], $28               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $26, $26, $29               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$23 + 0], $23              # |     74,269 |     88,465 |          0 |          0 |      2,366 |          0 |
    fmul    $27, $27, $30               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$24 + 1], $24              # |     74,269 |     81,529 |          0 |          0 |      1,210 |          0 |
    load    [$25 + 2], $25              # |     74,269 |    131,893 |          0 |      8,911 |        693 |          0 |
    fmul    $29, $23, $29               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    cmp     $22, 0                      # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $30, $24, $30               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fadd    $29, $30, $29               # |     74,269 |    371,345 |    297,076 |          0 |          0 |          0 |
    fmul    $28, $28, $30               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $30, $25, $30               # |     74,269 |    371,345 |    297,076 |          0 |          0 |          0 |
    fadd    $29, $30, $29               # |     74,269 |    371,345 |    297,076 |          0 |          0 |          0 |
    be      bne_cont.31338              # |     74,269 |    128,611 |          0 |      8,911 |          0 |        438 |
bne_then.31338:
    fmul    $27, $28, $30
    load    [$18 + 9], $31
    load    [$31 + 0], $31
    fmul    $30, $31, $30
    load    [$18 + 9], $31
    load    [$31 + 1], $31
    fadd    $29, $30, $29
    fmul    $28, $26, $30
    fmul    $30, $31, $30
    load    [$18 + 9], $31
    load    [$31 + 2], $31
    fadd    $29, $30, $29
    fmul    $26, $27, $30
    fmul    $30, $31, $30
    fadd    $29, $30, $29
bne_cont.31338:
    fcmp    $29, $zero                  # |     74,269 |    269,499 |    195,224 |          1 |          0 |          0 |
    bne     be_else.31339               # |     74,269 |     74,297 |          0 |          0 |          0 |         14 |
be_then.31339:
    li      0, $18
    b       be_cont.31339
be_else.31339:
    load    [$18 + 1], $30              # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $26, $19, $31               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $27, $20, $32               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    cmp     $22, 0                      # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $31, $23, $31               # |     74,269 |    222,811 |    148,536 |          1 |          0 |          0 |
    fmul    $32, $24, $32               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fadd    $31, $32, $31               # |     74,269 |    371,345 |    297,076 |          0 |          0 |          0 |
    fmul    $28, $21, $32               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $32, $25, $32               # |     74,269 |    371,345 |    297,076 |          0 |          0 |          0 |
    fadd    $31, $32, $31               # |     74,269 |    371,345 |    297,076 |          0 |          0 |          0 |
    bne     be_else.31340               # |     74,269 |     91,361 |          0 |          0 |          0 |      8,546 |
be_then.31340:
    mov     $31, $26                    # |     74,269 |    279,984 |    205,715 |          0 |          0 |          0 |
    b       be_cont.31340               # |     74,269 |    127,755 |          0 |      8,911 |          0 |         10 |
be_else.31340:
    fmul    $28, $20, $32
    fmul    $27, $21, $33
    fmul    $28, $19, $28
    fmul    $27, $19, $27
    fadd    $32, $33, $32
    load    [$18 + 9], $33
    load    [$33 + 0], $33
    fmul    $32, $33, $32
    fmul    $26, $21, $33
    fmul    $26, $20, $26
    fadd    $33, $28, $28
    load    [$18 + 9], $33
    fadd    $26, $27, $26
    load    [$18 + 9], $27
    load    [$33 + 1], $33
    load    [$27 + 2], $27
    fmul    $28, $33, $28
    fmul    $26, $27, $26
    fadd    $32, $28, $28
    fadd    $28, $26, $26
    fmul    $26, $39, $26
    fadd    $31, $26, $26
be_cont.31340:
    fmul    $26, $26, $27               # |     74,269 |    127,735 |          0 |      8,911 |          0 |          0 |
    fmul    $19, $19, $28               # |     74,269 |    140,557 |          0 |     11,048 |          0 |          0 |
    cmp     $22, 0                      # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $28, $23, $23               # |     74,269 |    297,076 |    222,807 |          0 |          0 |          0 |
    fmul    $20, $20, $28               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $28, $24, $24               # |     74,269 |    371,345 |    297,076 |          0 |          0 |          0 |
    fadd    $23, $24, $23               # |     74,269 |    371,345 |    297,076 |          0 |          0 |          0 |
    fmul    $21, $21, $24               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $24, $25, $24               # |     74,269 |    371,345 |    297,076 |          0 |          0 |          0 |
    fadd    $23, $24, $23               # |     74,269 |    393,441 |    252,884 |     11,048 |          0 |          0 |
    bne     be_else.31341               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
be_then.31341:
    mov     $23, $19                    # |     74,269 |    297,076 |    222,807 |          0 |          0 |          0 |
    b       be_cont.31341               # |     74,269 |     74,277 |          0 |          0 |          0 |          4 |
be_else.31341:
    fmul    $20, $21, $22
    load    [$18 + 9], $24
    fmul    $21, $19, $21
    fmul    $19, $20, $19
    load    [$24 + 0], $24
    load    [$18 + 9], $20
    fmul    $22, $24, $22
    load    [$20 + 2], $20
    fmul    $19, $20, $19
    fadd    $23, $22, $22
    load    [$18 + 9], $23
    load    [$23 + 1], $23
    fmul    $21, $23, $21
    fadd    $22, $21, $21
    fadd    $21, $19, $19
be_cont.31341:
    cmp     $30, 3                      # |     74,269 |    185,701 |          0 |     18,572 |          0 |          0 |
    bne     be_cont.31342               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
be_then.31342:
    fsub    $19, $36, $19               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
be_cont.31342:
    fmul    $29, $19, $19               # |     74,269 |    371,345 |    297,076 |          0 |          0 |          0 |
    fsub    $27, $19, $19               # |     74,269 |    371,345 |    297,076 |          0 |          0 |          0 |
    fcmp    $19, $zero                  # |     74,269 |    408,489 |    222,788 |     18,572 |          0 |          0 |
    bg      ble_else.31343              # |     74,269 |    105,961 |          0 |          0 |          0 |     15,846 |
ble_then.31343:
    li      0, $18                      # |     62,376 |     62,376 |          0 |          0 |          0 |          0 |
    b       ble_cont.31343              # |     62,376 |     62,380 |          0 |          0 |          0 |          2 |
ble_else.31343:
    load    [$18 + 6], $18              # |     11,893 |     12,829 |          0 |          0 |        156 |          0 |
    fsqrt   $19, $19                    # |     11,893 |     11,893 |          0 |          0 |          0 |          0 |
    cmp     $18, 0                      # |     11,893 |     23,630 |     11,737 |          0 |          0 |          0 |
    bne     be_else.31344               # |     11,893 |     17,201 |          0 |          0 |          0 |      2,654 |
be_then.31344:
    fneg    $19, $18                    # |      9,138 |     40,537 |      4,099 |      4,550 |          0 |          0 |
    finv    $29, $19                    # |      9,138 |      9,138 |          0 |          0 |          0 |          0 |
    fsub    $18, $26, $18               # |      9,138 |      9,138 |          0 |          0 |          0 |          0 |
    fmul    $18, $19, $18               # |      9,138 |     45,690 |     36,552 |          0 |          0 |          0 |
.count move_float
    mov     $18, $42                    # |      9,138 |     45,690 |     36,552 |          0 |          0 |          0 |
    li      1, $18                      # |      9,138 |      9,138 |          0 |          0 |          0 |          0 |
    b       be_cont.31344               # |      9,138 |      9,142 |          0 |          0 |          0 |          2 |
be_else.31344:
    fsub    $19, $26, $18               # |      2,755 |      4,183 |      1,428 |          0 |          0 |          0 |
    finv    $29, $19                    # |      2,755 |      2,755 |          0 |          0 |          0 |          0 |
    fmul    $18, $19, $18               # |      2,755 |     13,775 |     11,020 |          0 |          0 |          0 |
.count move_float
    mov     $18, $42                    # |      2,755 |     13,775 |     11,020 |          0 |          0 |          0 |
    li      1, $18                      # |      2,755 |      2,755 |          0 |          0 |          0 |          0 |
be_cont.31344:
ble_cont.31343:
be_cont.31339:
be_cont.31336:
be_cont.31312:
    cmp     $18, 0                      # |    149,820 |    264,007 |      2,755 |     18,572 |          0 |          0 |
    bne     be_else.31345               # |    149,820 |    164,204 |          0 |          0 |          0 |      7,192 |
be_then.31345:
    load    [min_caml_objects + $17], $1# |    101,553 |    101,553 |          0 |          0 |          0 |          0 |
    load    [$1 + 6], $1                # |    101,553 |    305,613 |    203,106 |          0 |        159 |          0 |
    cmp     $1, 0                       # |    101,553 |    340,105 |    184,906 |      8,941 |          0 |          0 |
    bne     be_else.31346               # |    101,553 |    109,135 |          0 |          0 |          0 |      3,791 |
be_then.31346:
    ret                                 # |     92,181 |     92,181 |          0 |          0 |          0 |          0 |
be_else.31346:
    add     $2, 1, $2                   # |      9,372 |      9,372 |          0 |          0 |          0 |          0 |
    b       solve_each_element.2871     # |      9,372 |      9,388 |          0 |          0 |          0 |          8 |
be_else.31345:
    fcmp    $42, $zero                  # |     48,267 |    106,053 |          0 |      9,631 |          0 |          0 |
    bg      ble_else.31347              # |     48,267 |     50,327 |          0 |          0 |          0 |      1,030 |
ble_then.31347:
    add     $2, 1, $2                   # |        847 |        847 |          0 |          0 |          0 |          0 |
    b       solve_each_element.2871     # |        847 |      1,891 |          0 |        142 |          0 |         96 |
ble_else.31347:
    fcmp    $49, $42                    # |     47,420 |    157,544 |          0 |     18,354 |          0 |          0 |
    bg      ble_else.31348              # |     47,420 |     55,258 |          0 |          0 |          0 |      3,919 |
ble_then.31348:
    add     $2, 1, $2                   # |     11,681 |     11,681 |          0 |          0 |          0 |          0 |
    b       solve_each_element.2871     # |     11,681 |     14,361 |          0 |          0 |          0 |      1,340 |
ble_else.31348:
.count stack_move
    sub     $sp, 5, $sp                 # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27088], $20              # |     35,739 |     58,701 |          0 |          0 |      3,827 |          0 |
    store   $4, [$sp + 0]               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 1]               # |     35,739 |    146,715 |          0 |     18,496 |          0 |          0 |
    store   $2, [$sp + 2]               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    load    [$4 + 0], $19               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    fadd    $42, $20, $20               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp + 0], $21  # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp + 1], $22  # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    fmul    $19, $20, $19               # |     35,739 |    107,217 |     71,478 |          0 |          0 |          0 |
    fadd    $19, $21, $19               # |     35,739 |    194,809 |    110,728 |      8,057 |          0 |          0 |
    load    [$4 + 1], $21               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    fmul    $21, $20, $21               # |     35,739 |    107,217 |     71,478 |          0 |          0 |          0 |
    fadd    $21, $22, $5                # |     35,739 |    178,695 |    142,956 |          0 |          0 |          0 |
    store   $5, [$sp + 3]               # |     35,739 |    178,695 |    142,956 |          0 |          0 |          0 |
    load    [$4 + 2], $21               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp + 2], $22  # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $19, $4                     # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    fmul    $21, $20, $21               # |     35,739 |    146,715 |          0 |     18,496 |          0 |          0 |
    fadd    $21, $22, $6                # |     35,739 |    178,695 |    142,956 |          0 |          0 |          0 |
    store   $6, [$sp + 4]               # |     35,739 |    178,695 |    142,956 |          0 |          0 |          0 |
    call    check_all_inside.2856       # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 5, $sp                 # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    bne     be_else.31349               # |     35,739 |     35,757 |          0 |          0 |          0 |          9 |
be_then.31349:
    load    [$sp - 3], $1               # |     10,575 |     11,397 |          0 |          0 |        137 |          0 |
    load    [$sp - 4], $3               # |     10,575 |     39,543 |          0 |      4,710 |        118 |          0 |
    load    [$sp - 5], $4               # |     10,575 |     11,241 |          0 |          0 |        111 |          0 |
    add     $1, 1, $2                   # |     10,575 |     10,575 |          0 |          0 |          0 |          0 |
    b       solve_each_element.2871     # |     10,575 |     10,637 |          0 |          0 |          0 |         31 |
be_else.31349:
.count move_float
    mov     $20, $49                    # |     25,164 |    107,880 |          0 |     13,786 |          0 |          0 |
    store   $19, [min_caml_intersection_point + 0]# |     25,164 |     25,164 |          0 |          0 |          0 |          0 |
    load    [$sp - 2], $1               # |     25,164 |     27,516 |          0 |          0 |        392 |          0 |
    store   $1, [min_caml_intersection_point + 1]# |     25,164 |     74,708 |     49,544 |          0 |          0 |          0 |
    load    [$sp - 1], $1               # |     25,164 |    178,116 |          0 |     25,164 |        328 |          0 |
    store   $1, [min_caml_intersection_point + 2]# |     25,164 |     74,836 |     49,672 |          0 |          0 |          0 |
    store   $17, [min_caml_intersected_object_id + 0]# |     25,164 |     25,164 |          0 |          0 |          0 |          0 |
    store   $18, [min_caml_intsec_rectside + 0]# |     25,164 |     25,164 |          0 |          0 |          0 |          0 |
    load    [$sp - 3], $1               # |     25,164 |     27,168 |          0 |          0 |        334 |          0 |
    load    [$sp - 4], $3               # |     25,164 |     27,168 |          0 |          0 |        334 |          0 |
    load    [$sp - 5], $4               # |     25,164 |     28,446 |          0 |          0 |        547 |          0 |
    add     $1, 1, $2                   # |     25,164 |     25,164 |          0 |          0 |          0 |          0 |
    b       solve_each_element.2871     # |     25,164 |    176,162 |          0 |     25,164 |          0 |          7 |
.end solve_each_element

######################################################################
.begin solve_one_or_network
solve_one_or_network.2875:
    load    [$3 + $2], $34              # |      6,776 |     34,520 |          0 |      4,622 |          2 |          0 |
    cmp     $34, -1                     # |      6,776 |     20,324 |     13,548 |          0 |          0 |          0 |
    bne     be_else.31350               # |      6,776 |      7,120 |          0 |          0 |          0 |        172 |
be_then.31350:
    ret
be_else.31350:
.count stack_move
    sub     $sp, 3, $sp                 # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    store   $4, [$sp + 0]               # |      6,776 |     13,552 |      6,776 |          0 |          0 |          0 |
    store   $3, [$sp + 1]               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 2]               # |      6,776 |     47,372 |          0 |      6,766 |          0 |          0 |
    li      0, $2                       # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $34], $3# |      6,776 |      9,356 |          0 |          0 |        430 |          0 |
    call    solve_each_element.2871     # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [$sp + 2], $34              # |      6,776 |     28,862 |          0 |      3,391 |        290 |          0 |
    load    [$sp + 1], $35              # |      6,776 |      8,318 |          0 |          0 |        257 |          0 |
    add     $34, 1, $34                 # |      6,776 |     13,241 |      6,465 |          0 |          0 |          0 |
    load    [$35 + $34], $1             # |      6,776 |     13,618 |      6,776 |          0 |         11 |          0 |
    cmp     $1, -1                      # |      6,776 |     45,518 |        954 |      6,298 |          0 |          0 |
    bne     be_else.31351               # |      6,776 |      6,922 |          0 |          0 |          0 |         73 |
be_then.31351:
.count stack_move
    add     $sp, 3, $sp
    ret
be_else.31351:
    li      0, $2                       # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $1], $3 # |      6,776 |      8,084 |          0 |          0 |        218 |          0 |
    load    [$sp + 0], $4               # |      6,776 |      8,024 |          0 |          0 |        208 |          0 |
    call    solve_each_element.2871     # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    add     $34, 1, $34                 # |      6,776 |     44,036 |          0 |      6,210 |          0 |          0 |
    load    [$35 + $34], $1             # |      6,776 |     13,768 |      6,776 |          0 |         36 |          0 |
    cmp     $1, -1                      # |      6,776 |     20,256 |     13,480 |          0 |          0 |          0 |
    bne     be_else.31352               # |      6,776 |      8,142 |          0 |          0 |          0 |        683 |
be_then.31352:
.count stack_move
    add     $sp, 3, $sp
    ret
be_else.31352:
    li      0, $2                       # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $1], $3 # |      6,776 |      6,920 |          0 |          0 |         24 |          0 |
    load    [$sp + 0], $4               # |      6,776 |     43,940 |          0 |      6,194 |          0 |          0 |
    call    solve_each_element.2871     # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    add     $34, 1, $34                 # |      6,776 |     21,818 |          0 |      2,507 |          0 |          0 |
    load    [$35 + $34], $1             # |      6,776 |     14,116 |      6,776 |          0 |         94 |          0 |
    cmp     $1, -1                      # |      6,776 |     20,140 |     13,364 |          0 |          0 |          0 |
    bne     be_else.31353               # |      6,776 |      6,898 |          0 |          0 |          0 |         61 |
be_then.31353:
.count stack_move
    add     $sp, 3, $sp
    ret
be_else.31353:
    li      0, $2                       # |      6,776 |     47,372 |          0 |      6,766 |          0 |          0 |
    load    [min_caml_and_net + $1], $3 # |      6,776 |      6,908 |          0 |          0 |         22 |          0 |
    load    [$sp + 0], $4               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    call    solve_each_element.2871     # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    add     $34, 1, $34                 # |      6,776 |      7,478 |          0 |        117 |          0 |          0 |
    load    [$35 + $34], $1             # |      6,776 |     13,852 |      6,776 |          0 |         50 |          0 |
    cmp     $1, -1                      # |      6,776 |     20,228 |     13,452 |          0 |          0 |          0 |
    bne     be_else.31354               # |      6,776 |      6,792 |          0 |          0 |          0 |          8 |
be_then.31354:
.count stack_move
    add     $sp, 3, $sp
    ret
be_else.31354:
    li      0, $2                       # |      6,776 |     47,186 |          0 |      6,735 |          0 |          0 |
    load    [min_caml_and_net + $1], $3 # |      6,776 |      7,136 |          0 |          0 |         60 |          0 |
    load    [$sp + 0], $4               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    call    solve_each_element.2871     # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    add     $34, 1, $34                 # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [$35 + $34], $1             # |      6,776 |     13,564 |      6,776 |          0 |          2 |          0 |
    cmp     $1, -1                      # |      6,776 |     47,268 |         82 |      6,735 |          0 |          0 |
    bne     be_else.31355               # |      6,776 |      6,946 |          0 |          0 |          0 |         85 |
be_then.31355:
.count stack_move
    add     $sp, 3, $sp
    ret
be_else.31355:
    li      0, $2                       # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $1], $3 # |      6,776 |      7,736 |          0 |          0 |        160 |          0 |
    load    [$sp + 0], $4               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    call    solve_each_element.2871     # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    add     $34, 1, $34                 # |      6,776 |     47,186 |          0 |      6,735 |          0 |          0 |
    load    [$35 + $34], $1             # |      6,776 |     13,618 |      6,776 |          0 |         11 |          0 |
    cmp     $1, -1                      # |      6,776 |     20,306 |     13,530 |          0 |          0 |          0 |
    bne     be_else.31356               # |      6,776 |     16,342 |          0 |          0 |          0 |      4,783 |
be_then.31356:
.count stack_move
    add     $sp, 3, $sp                 # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    ret                                 # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
be_else.31356:
    li      0, $2
    load    [min_caml_and_net + $1], $3
    load    [$sp + 0], $4
    call    solve_each_element.2871
    add     $34, 1, $34
    load    [$35 + $34], $1
    cmp     $1, -1
    bne     be_else.31357
be_then.31357:
.count stack_move
    add     $sp, 3, $sp
    ret
be_else.31357:
    li      0, $2
    load    [min_caml_and_net + $1], $3
    load    [$sp + 0], $4
    call    solve_each_element.2871
.count stack_move
    add     $sp, 3, $sp
    add     $34, 1, $2
    load    [$sp - 3], $4
.count move_args
    mov     $35, $3
    b       solve_one_or_network.2875
.end solve_one_or_network

######################################################################
.begin trace_or_matrix
trace_or_matrix.2879:
    load    [$3 + $2], $34              # |     23,754 |     92,034 |          0 |     11,366 |         14 |          0 |
    load    [$34 + 0], $35              # |     23,754 |     71,534 |     47,480 |          0 |         50 |          0 |
    cmp     $35, -1                     # |     23,754 |     71,162 |     47,408 |          0 |          0 |          0 |
    bne     be_else.31358               # |     23,754 |     23,814 |          0 |          0 |          0 |         30 |
be_then.31358:
    ret
be_else.31358:
.count stack_move
    sub     $sp, 4, $sp                 # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    cmp     $35, 99                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    store   $4, [$sp + 0]               # |     23,754 |     90,966 |          0 |     11,202 |          0 |          0 |
    store   $3, [$sp + 1]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 2]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    bne     be_else.31359               # |     23,754 |     23,952 |          0 |          0 |          0 |         99 |
be_then.31359:
    load    [$34 + 1], $35              # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    cmp     $35, -1                     # |     23,754 |     71,262 |     47,508 |          0 |          0 |          0 |
    be      bne_cont.31360              # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
bne_then.31360:
    li      0, $2                       # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $35], $3# |     23,754 |     92,946 |          0 |     11,367 |        165 |          0 |
    call    solve_each_element.2871     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$34 + 2], $35              # |     23,754 |     24,210 |          0 |          0 |         76 |          0 |
    cmp     $35, -1                     # |     23,754 |     71,110 |     47,356 |          0 |          0 |          0 |
    be      bne_cont.31361              # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
bne_then.31361:
    li      0, $2                       # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $35], $3# |     23,754 |     24,672 |          0 |          0 |        153 |          0 |
    load    [$sp + 0], $4               # |     23,754 |     23,958 |          0 |          0 |         34 |          0 |
    call    solve_each_element.2871     # |     23,754 |     91,950 |          0 |     11,366 |          0 |          0 |
    load    [$34 + 3], $35              # |     23,754 |     27,372 |          0 |        524 |         79 |          0 |
    cmp     $35, -1                     # |     23,754 |     71,104 |     47,350 |          0 |          0 |          0 |
    be      bne_cont.31362              # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
bne_then.31362:
    li      0, $2                       # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $35], $3# |     23,754 |     24,738 |          0 |          0 |        164 |          0 |
    load    [$sp + 0], $4               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    call    solve_each_element.2871     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$34 + 4], $35              # |     23,754 |    129,372 |          0 |     17,559 |         44 |          0 |
    cmp     $35, -1                     # |     23,754 |     71,174 |     47,420 |          0 |          0 |          0 |
    be      bne_cont.31363              # |     23,754 |     23,758 |          0 |          0 |          0 |          2 |
bne_then.31363:
    li      0, $2                       # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $35], $3# |     23,754 |     24,762 |          0 |          0 |        168 |          0 |
    load    [$sp + 0], $4               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    call    solve_each_element.2871     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$34 + 5], $35              # |     23,754 |     66,210 |          0 |      7,023 |         53 |          0 |
    cmp     $35, -1                     # |     23,754 |    146,086 |     10,096 |     18,706 |          0 |          0 |
    be      bne_cont.31364              # |     23,754 |     23,820 |          0 |          0 |          0 |         33 |
bne_then.31364:
    li      0, $2
    load    [min_caml_and_net + $35], $3
    load    [$sp + 0], $4
    call    solve_each_element.2871
    load    [$34 + 6], $35
    cmp     $35, -1
    be      bne_cont.31365
bne_then.31365:
    li      0, $2
    load    [min_caml_and_net + $35], $3
    load    [$sp + 0], $4
    call    solve_each_element.2871
    li      7, $2
    load    [$sp + 0], $4
.count move_args
    mov     $34, $3
    call    solve_one_or_network.2875
bne_cont.31365:
bne_cont.31364:
bne_cont.31363:
bne_cont.31362:
bne_cont.31361:
bne_cont.31360:
    load    [$sp + 2], $34              # |     23,754 |     99,180 |          0 |     11,155 |      1,416 |          0 |
    load    [$sp + 1], $3               # |     23,754 |     29,382 |          0 |          0 |        938 |          0 |
    add     $34, 1, $34                 # |     23,754 |     46,092 |     22,338 |          0 |          0 |          0 |
    load    [$3 + $34], $35             # |     23,754 |     47,508 |     23,754 |          0 |          0 |          0 |
    load    [$35 + 0], $2               # |     23,754 |     71,298 |     47,508 |          0 |          6 |          0 |
    cmp     $2, -1                      # |     23,754 |     71,250 |     47,496 |          0 |          0 |          0 |
    bne     be_else.31366               # |     23,754 |     24,072 |          0 |          0 |          0 |        159 |
be_then.31366:
.count stack_move
    add     $sp, 4, $sp                 # |     23,754 |     24,456 |          0 |        117 |          0 |          0 |
    ret                                 # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
be_else.31366:
    cmp     $2, 99
    bne     be_else.31367
be_then.31367:
    load    [$35 + 1], $1
    cmp     $1, -1
    bne     be_else.31368
be_then.31368:
.count stack_move
    add     $sp, 4, $sp
    add     $34, 1, $2
    load    [$sp - 4], $4
    b       trace_or_matrix.2879
be_else.31368:
    li      0, $2
    load    [min_caml_and_net + $1], $3
    load    [$sp + 0], $4
    call    solve_each_element.2871
    load    [$35 + 2], $1
    cmp     $1, -1
    bne     be_else.31369
be_then.31369:
.count stack_move
    add     $sp, 4, $sp
    add     $34, 1, $2
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    b       trace_or_matrix.2879
be_else.31369:
    li      0, $2
    load    [min_caml_and_net + $1], $3
    load    [$sp + 0], $4
    call    solve_each_element.2871
    load    [$35 + 3], $1
    cmp     $1, -1
    bne     be_else.31370
be_then.31370:
.count stack_move
    add     $sp, 4, $sp
    add     $34, 1, $2
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    b       trace_or_matrix.2879
be_else.31370:
    li      0, $2
    load    [min_caml_and_net + $1], $3
    load    [$sp + 0], $4
    call    solve_each_element.2871
    load    [$35 + 4], $1
    cmp     $1, -1
    bne     be_else.31371
be_then.31371:
.count stack_move
    add     $sp, 4, $sp
    add     $34, 1, $2
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    b       trace_or_matrix.2879
be_else.31371:
    store   $34, [$sp + 3]
    li      0, $2
    load    [min_caml_and_net + $1], $3
    load    [$sp + 0], $4
    call    solve_each_element.2871
    li      5, $2
    load    [$sp + 0], $4
.count move_args
    mov     $35, $3
    call    solve_one_or_network.2875
.count stack_move
    add     $sp, 4, $sp
    load    [$sp - 1], $1
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    add     $1, 1, $2
    b       trace_or_matrix.2879
be_else.31367:
    load    [$sp + 0], $3
    call    solver.2773
    cmp     $1, 0
    bne     be_else.31372
be_then.31372:
.count stack_move
    add     $sp, 4, $sp
    add     $34, 1, $2
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    b       trace_or_matrix.2879
be_else.31372:
    fcmp    $49, $42
    bg      ble_else.31373
ble_then.31373:
.count stack_move
    add     $sp, 4, $sp
    add     $34, 1, $2
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    b       trace_or_matrix.2879
ble_else.31373:
    store   $34, [$sp + 3]
    li      1, $2
    load    [$sp + 0], $4
.count move_args
    mov     $35, $3
    call    solve_one_or_network.2875
.count stack_move
    add     $sp, 4, $sp
    load    [$sp - 1], $1
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    add     $1, 1, $2
    b       trace_or_matrix.2879
be_else.31359:
.count move_args
    mov     $4, $3
.count move_args
    mov     $35, $2
    call    solver.2773
    cmp     $1, 0
    bne     be_else.31374
be_then.31374:
.count stack_move
    add     $sp, 4, $sp
    load    [$sp - 2], $1
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    add     $1, 1, $2
    b       trace_or_matrix.2879
be_else.31374:
    fcmp    $49, $42
    bg      ble_else.31375
ble_then.31375:
.count stack_move
    add     $sp, 4, $sp
    load    [$sp - 2], $1
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    add     $1, 1, $2
    b       trace_or_matrix.2879
ble_else.31375:
    li      1, $2
    load    [$sp + 0], $4
.count move_args
    mov     $34, $3
    call    solve_one_or_network.2875
.count stack_move
    add     $sp, 4, $sp
    load    [$sp - 2], $1
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    add     $1, 1, $2
    b       trace_or_matrix.2879
.end trace_or_matrix

######################################################################
.begin solve_each_element_fast
solve_each_element_fast.2885:
    load    [$3 + $2], $17              # | 13,852,375 | 19,424,491 |  1,635,918 |    348,237 |    307,796 |          0 |
    cmp     $17, -1                     # | 13,852,375 | 40,941,533 | 27,089,158 |          0 |          0 |          0 |
    bne     be_else.31376               # | 13,852,375 | 17,150,017 |          0 |    235,754 |          0 |    941,559 |
be_then.31376:
    ret                                 # |  3,308,310 |  3,308,310 |          0 |          0 |          0 |          0 |
be_else.31376:
    load    [min_caml_objects + $17], $18# | 10,544,065 | 11,746,621 |          0 |          0 |    200,426 |          0 |
    load    [$4 + 1], $20               # | 10,544,065 | 11,416,351 |          0 |          0 |    145,381 |          0 |
    load    [$18 + 10], $19             # | 10,544,065 | 26,561,675 | 10,212,478 |          0 |    967,522 |          0 |
    load    [$18 + 1], $21              # | 10,544,065 | 15,960,751 |          0 |          0 |    902,781 |          0 |
    load    [$20 + $17], $20            # | 10,544,065 | 34,796,419 |          0 |          0 |  4,042,059 |          0 |
    load    [$19 + 0], $22              # | 10,544,065 | 16,656,187 |          0 |          0 |  1,018,687 |          0 |
    load    [$19 + 1], $23              # | 10,544,065 | 11,075,581 |          0 |      1,401 |     87,185 |          0 |
    load    [$19 + 2], $24              # | 10,544,065 | 10,871,977 |          0 |          0 |     54,652 |          0 |
    cmp     $21, 1                      # | 10,544,065 | 10,544,065 |          0 |          0 |          0 |          0 |
    bne     be_else.31377               # | 10,544,065 | 12,852,427 |          0 |          0 |          0 |  1,154,181 |
be_then.31377:
    load    [$4 + 0], $19               # |  3,873,912 |  4,391,106 |          0 |          0 |     86,199 |          0 |
    load    [$18 + 4], $21              # |  3,873,912 |  4,396,290 |          0 |          0 |     87,063 |          0 |
    load    [$20 + 0], $26              # |  3,873,912 | 26,692,128 |          0 |          0 |  3,803,036 |          0 |
    load    [$19 + 1], $25              # |  3,873,912 |  4,518,762 |          0 |          0 |    107,475 |          0 |
    load    [$21 + 1], $21              # |  3,873,912 |  4,957,212 |          0 |      1,526 |    179,024 |          0 |
    fsub    $26, $22, $26               # |  3,873,912 |  3,873,912 |          0 |          0 |          0 |          0 |
    load    [$20 + 1], $27              # |  3,873,912 |  3,899,502 |          0 |          0 |      4,265 |          0 |
    fmul    $26, $27, $26               # |  3,873,912 | 15,482,853 | 11,608,941 |          0 |          0 |          0 |
    fmul    $26, $25, $25               # |  3,873,912 | 19,369,560 | 15,495,648 |          0 |          0 |          0 |
    fadd    $25, $23, $25               # |  3,873,912 | 19,369,560 | 15,495,648 |          0 |          0 |          0 |
    fabs    $25, $25                    # |  3,873,912 | 19,369,560 | 15,495,648 |          0 |          0 |          0 |
    fcmp    $21, $25                    # |  3,873,912 |  7,747,824 |  3,873,912 |          0 |          0 |          0 |
    bg      ble_else.31378              # |  3,873,912 |  5,679,440 |          0 |      2,801 |          0 |    894,361 |
ble_then.31378:
    li      0, $21                      # |  3,045,892 |  3,045,892 |          0 |          0 |          0 |          0 |
    b       ble_cont.31378              # |  3,045,892 |  3,051,208 |          0 |          0 |          0 |      2,658 |
ble_else.31378:
    load    [$18 + 4], $21              # |    828,020 |    831,776 |          0 |          0 |        626 |          0 |
    load    [$19 + 2], $25              # |    828,020 |    898,388 |          0 |          0 |     11,728 |          0 |
    load    [$21 + 2], $21              # |    828,020 |  1,668,647 |    815,805 |          0 |      4,137 |          0 |
    fmul    $26, $25, $25               # |    828,020 |    828,507 |        487 |          0 |          0 |          0 |
    fadd    $25, $24, $25               # |    828,020 |  4,140,100 |  3,312,080 |          0 |          0 |          0 |
    fabs    $25, $25                    # |    828,020 |  4,146,126 |  3,300,028 |      3,013 |          0 |          0 |
    fcmp    $21, $25                    # |    828,020 |  1,656,040 |    828,020 |          0 |          0 |          0 |
    bg      ble_else.31379              # |    828,020 |  1,269,788 |          0 |          0 |          0 |    220,884 |
ble_then.31379:
    li      0, $21                      # |    324,595 |    324,595 |          0 |          0 |          0 |          0 |
    b       ble_cont.31379              # |    324,595 |    353,083 |          0 |          0 |          0 |     14,244 |
ble_else.31379:
    load    [$20 + 1], $21              # |    503,425 |    506,023 |          0 |          0 |        433 |          0 |
    fcmp    $21, $zero                  # |    503,425 |  1,509,409 |  1,005,984 |          0 |          0 |          0 |
    bne     be_else.31380               # |    503,425 |    507,099 |          0 |          0 |          0 |      1,837 |
be_then.31380:
    li      0, $21
    b       be_cont.31380
be_else.31380:
    li      1, $21                      # |    503,425 |    563,353 |          0 |      9,988 |          0 |          0 |
be_cont.31380:
ble_cont.31379:
ble_cont.31378:
    cmp     $21, 0                      # |  3,873,912 |  5,531,107 |    503,425 |    192,295 |          0 |          0 |
    bne     be_else.31381               # |  3,873,912 |  3,900,948 |          0 |          0 |          0 |     13,518 |
be_then.31381:
    load    [$18 + 4], $21              # |  3,370,487 |  3,430,391 |          0 |          0 |      9,984 |          0 |
    load    [$19 + 0], $25              # |  3,370,487 |  4,049,477 |          0 |          0 |    113,165 |          0 |
    load    [$20 + 2], $26              # |  3,370,487 |  3,436,523 |          0 |          0 |     11,006 |          0 |
    load    [$21 + 0], $21              # |  3,370,487 |  4,491,239 |          0 |     34,715 |    152,077 |          0 |
    load    [$20 + 3], $27              # |  3,370,487 |  3,748,895 |          0 |          0 |     63,068 |          0 |
    fsub    $26, $23, $26               # |  3,370,487 |  3,370,487 |          0 |          0 |          0 |          0 |
    fmul    $26, $27, $26               # |  3,370,487 | 16,852,435 | 13,481,948 |          0 |          0 |          0 |
    fmul    $26, $25, $25               # |  3,370,487 | 16,852,435 | 13,481,948 |          0 |          0 |          0 |
    fadd    $25, $22, $25               # |  3,370,487 | 16,852,435 | 13,481,948 |          0 |          0 |          0 |
    fabs    $25, $25                    # |  3,370,487 | 16,852,435 | 13,481,948 |          0 |          0 |          0 |
    fcmp    $21, $25                    # |  3,370,487 |  6,740,974 |  3,370,487 |          0 |          0 |          0 |
    bg      ble_else.31382              # |  3,370,487 |  5,173,797 |          0 |     34,715 |          0 |    797,510 |
ble_then.31382:
    li      0, $21                      # |  1,577,233 |  1,577,233 |          0 |          0 |          0 |          0 |
    b       ble_cont.31382              # |  1,577,233 |  1,577,265 |          0 |          0 |          0 |         16 |
ble_else.31382:
    load    [$18 + 4], $21              # |  1,793,254 |  1,813,426 |          0 |          0 |      3,362 |          0 |
    load    [$19 + 2], $25              # |  1,793,254 |  2,216,518 |          0 |          0 |     70,544 |          0 |
    load    [$21 + 2], $21              # |  1,793,254 |  3,609,879 |  1,720,445 |          0 |     16,030 |          0 |
    fmul    $26, $25, $25               # |  1,793,254 |  1,795,519 |      2,265 |          0 |          0 |          0 |
    fadd    $25, $24, $25               # |  1,793,254 |  8,966,270 |  7,173,016 |          0 |          0 |          0 |
    fabs    $25, $25                    # |  1,793,254 |  9,302,758 |  6,500,040 |    168,244 |          0 |          0 |
    fcmp    $21, $25                    # |  1,793,254 |  3,586,508 |  1,793,254 |          0 |          0 |          0 |
    bg      ble_else.31383              # |  1,793,254 |  2,462,086 |          0 |          0 |          0 |    334,416 |
ble_then.31383:
    li      0, $21                      # |    570,589 |    570,589 |          0 |          0 |          0 |          0 |
    b       ble_cont.31383              # |    570,589 |    575,811 |          0 |          0 |          0 |      2,611 |
ble_else.31383:
    load    [$20 + 3], $21              # |  1,222,665 |  1,232,157 |          0 |          0 |      1,582 |          0 |
    fcmp    $21, $zero                  # |  1,222,665 |  3,664,831 |  2,442,166 |          0 |          0 |          0 |
    bne     be_else.31384               # |  1,222,665 |  1,248,123 |          0 |          0 |          0 |     12,729 |
be_then.31384:
    li      0, $21
    b       be_cont.31384
be_else.31384:
    li      1, $21                      # |  1,222,665 |  1,340,901 |          0 |     19,706 |          0 |          0 |
be_cont.31384:
ble_cont.31383:
ble_cont.31382:
    cmp     $21, 0                      # |  3,370,487 |  5,496,440 |  1,222,665 |    150,548 |          0 |          0 |
    bne     be_else.31385               # |  3,370,487 |  3,467,175 |          0 |          0 |          0 |     48,344 |
be_then.31385:
    load    [$18 + 4], $21              # |  2,147,822 |  2,178,638 |          0 |          0 |      5,136 |          0 |
    load    [$19 + 0], $25              # |  2,147,822 |  2,180,402 |          0 |          0 |      5,430 |          0 |
    load    [$20 + 4], $26              # |  2,147,822 | 14,884,262 |          0 |          0 |  2,122,740 |          0 |
    load    [$21 + 0], $21              # |  2,147,822 |  3,229,148 |          0 |    169,620 |     10,601 |          0 |
    fsub    $26, $24, $24               # |  2,147,822 |  2,171,511 |     23,689 |          0 |          0 |          0 |
    load    [$20 + 5], $26              # |  2,147,822 |  2,178,308 |          0 |          0 |      5,081 |          0 |
    fmul    $24, $26, $24               # |  2,147,822 |  8,576,045 |  6,428,223 |          0 |          0 |          0 |
    fmul    $24, $25, $25               # |  2,147,822 | 10,739,110 |  8,591,288 |          0 |          0 |          0 |
    fadd    $25, $22, $22               # |  2,147,822 | 10,739,110 |  8,591,288 |          0 |          0 |          0 |
    fabs    $22, $22                    # |  2,147,822 | 10,739,110 |  8,591,288 |          0 |          0 |          0 |
    fcmp    $21, $22                    # |  2,147,822 |  4,295,644 |  2,147,822 |          0 |          0 |          0 |
    bg      ble_else.31386              # |  2,147,822 |  3,267,376 |          0 |      1,386 |          0 |    555,619 |
ble_then.31386:
    li      0, $18                      # |  1,541,308 |  1,541,308 |          0 |          0 |          0 |          0 |
    b       be_cont.31377               # |  1,541,308 |  1,541,320 |          0 |          0 |          0 |          6 |
ble_else.31386:
    load    [$18 + 4], $18              # |    606,514 |    614,572 |          0 |          0 |      1,343 |          0 |
    load    [$19 + 1], $19              # |    606,514 |    611,680 |          0 |          0 |        861 |          0 |
    load    [$18 + 1], $18              # |    606,514 |  1,224,036 |    604,682 |          0 |      2,140 |          0 |
    fmul    $24, $19, $19               # |    606,514 |    607,485 |        971 |          0 |          0 |          0 |
    fadd    $19, $23, $19               # |    606,514 |  3,032,570 |  2,426,056 |          0 |          0 |          0 |
    fabs    $19, $19                    # |    606,514 |  3,225,510 |  2,040,176 |     96,470 |          0 |          0 |
    fcmp    $18, $19                    # |    606,514 |  1,213,028 |    606,514 |          0 |          0 |          0 |
    bg      ble_else.31387              # |    606,514 |    893,908 |          0 |          0 |          0 |    143,697 |
ble_then.31387:
    li      0, $18                      # |    331,936 |    331,936 |          0 |          0 |          0 |          0 |
    b       be_cont.31377               # |    331,936 |    331,948 |          0 |          0 |          0 |          6 |
ble_else.31387:
    load    [$20 + 5], $18              # |    274,578 |    275,226 |          0 |          0 |        108 |          0 |
    fcmp    $18, $zero                  # |    274,578 |    823,518 |    548,940 |          0 |          0 |          0 |
    bne     be_else.31388               # |    274,578 |    274,586 |          0 |          0 |          0 |          4 |
be_then.31388:
    li      0, $18
    b       be_cont.31377
be_else.31388:
.count move_float
    mov     $24, $42                    # |    274,578 |    486,348 |          0 |     35,295 |          0 |          0 |
    li      3, $18                      # |    274,578 |    274,578 |          0 |          0 |          0 |          0 |
    b       be_cont.31377               # |    274,578 |    360,814 |          0 |          0 |          0 |     43,118 |
be_else.31385:
.count move_float
    mov     $26, $42                    # |  1,222,665 |  1,927,989 |          0 |    117,554 |          0 |          0 |
    li      2, $18                      # |  1,222,665 |  1,222,665 |          0 |          0 |          0 |          0 |
    b       be_cont.31377               # |  1,222,665 |  1,222,669 |          0 |          0 |          0 |          2 |
be_else.31381:
.count move_float
    mov     $26, $42                    # |    503,425 |    595,285 |          0 |     15,310 |          0 |          0 |
    li      1, $18                      # |    503,425 |    503,425 |          0 |          0 |          0 |          0 |
    b       be_cont.31377               # |    503,425 |    503,445 |          0 |          0 |          0 |         10 |
be_else.31377:
    cmp     $21, 2                      # |  6,670,153 |  7,983,547 |          0 |    218,899 |          0 |          0 |
    bne     be_else.31389               # |  6,670,153 |  6,883,829 |          0 |          0 |          0 |    106,838 |
be_then.31389:
    load    [$20 + 0], $18              # |  1,242,328 |  8,216,782 |          0 |          0 |  1,162,409 |          0 |
    fcmp    $zero, $18                  # |  1,242,328 |  1,402,166 |    159,838 |          0 |          0 |          0 |
    bg      ble_else.31390              # |  1,242,328 |  1,702,124 |          0 |          0 |          0 |    229,898 |
ble_then.31390:
    li      0, $18                      # |    647,143 |    665,749 |          0 |      3,101 |          0 |          0 |
    b       be_cont.31389               # |    647,143 |    649,199 |          0 |          0 |          0 |      1,028 |
ble_else.31390:
    load    [$19 + 3], $19              # |    595,185 |    642,459 |          0 |      4,652 |      3,227 |          0 |
    fmul    $18, $19, $18               # |    595,185 |  1,779,101 |  1,183,916 |          0 |          0 |          0 |
.count move_float
    mov     $18, $42                    # |    595,185 |  2,975,925 |  2,380,740 |          0 |          0 |          0 |
    li      1, $18                      # |    595,185 |    595,185 |          0 |          0 |          0 |          0 |
    b       be_cont.31389               # |    595,185 |    595,847 |          0 |          0 |          0 |        331 |
be_else.31389:
    load    [$20 + 0], $21              # |  5,427,825 | 38,322,291 |          0 |    224,282 |  5,258,129 |          0 |
    fcmp    $21, $zero                  # |  5,427,825 |  5,777,639 |    339,392 |      1,737 |          0 |          0 |
    bne     be_else.31391               # |  5,427,825 |  5,541,203 |          0 |          0 |          0 |     56,689 |
be_then.31391:
    li      0, $18
    b       be_cont.31391
be_else.31391:
    load    [$20 + 1], $25              # |  5,427,825 |  5,482,215 |          0 |          0 |      9,065 |          0 |
    load    [$19 + 3], $19              # |  5,427,825 |  6,125,391 |          0 |          0 |    116,261 |          0 |
    fmul    $25, $22, $22               # |  5,427,825 | 10,730,397 |  5,302,572 |          0 |          0 |          0 |
    load    [$20 + 2], $25              # |  5,427,825 |  5,595,231 |          0 |          0 |     27,901 |          0 |
    fmul    $21, $19, $19               # |  5,427,825 |  5,438,247 |          0 |      1,737 |          0 |          0 |
    fmul    $25, $23, $23               # |  5,427,825 | 10,826,012 |  5,398,187 |          0 |          0 |          0 |
    fadd    $22, $23, $22               # |  5,427,825 | 27,139,125 | 21,711,300 |          0 |          0 |          0 |
    load    [$20 + 3], $23              # |  5,427,825 |  5,798,421 |          0 |          0 |     61,766 |          0 |
    fmul    $23, $24, $23               # |  5,427,825 | 16,159,943 | 10,732,118 |          0 |          0 |          0 |
    fadd    $22, $23, $22               # |  5,427,825 | 27,139,125 | 21,711,300 |          0 |          0 |          0 |
    fmul    $22, $22, $23               # |  5,427,825 | 27,139,125 | 21,711,300 |          0 |          0 |          0 |
    fsub    $23, $19, $19               # |  5,427,825 | 27,139,125 | 21,711,300 |          0 |          0 |          0 |
    fcmp    $19, $zero                  # |  5,427,825 | 27,142,995 | 21,703,560 |      1,935 |          0 |          0 |
    bg      ble_else.31392              # |  5,427,825 |  6,970,363 |          0 |          0 |          0 |    771,269 |
ble_then.31392:
    li      0, $18                      # |  3,746,732 |  3,746,732 |          0 |          0 |          0 |          0 |
    b       ble_cont.31392              # |  3,746,732 |  3,756,288 |          0 |          0 |          0 |      4,778 |
ble_else.31392:
    load    [$18 + 6], $18              # |  1,681,093 |  4,049,179 |          0 |          0 |    394,681 |          0 |
    cmp     $18, 0                      # |  1,681,093 |  4,253,917 |  2,572,824 |          0 |          0 |          0 |
    fsqrt   $19, $18                    # |  1,681,093 |  1,681,093 |          0 |          0 |          0 |          0 |
    load    [$20 + 4], $19              # |  1,681,093 | 11,212,975 |          0 |          0 |  1,588,647 |          0 |
    bne     be_else.31393               # |  1,681,093 |  2,379,965 |          0 |        141 |          0 |    349,013 |
be_then.31393:
    fsub    $22, $18, $18               # |  1,260,286 |  1,428,912 |    168,626 |          0 |          0 |          0 |
    fmul    $18, $19, $18               # |  1,260,286 |  6,301,430 |  5,041,144 |          0 |          0 |          0 |
.count move_float
    mov     $18, $42                    # |  1,260,286 |  6,301,430 |  5,041,144 |          0 |          0 |          0 |
    li      1, $18                      # |  1,260,286 |  1,260,286 |          0 |          0 |          0 |          0 |
    b       be_cont.31393               # |  1,260,286 |  1,260,300 |          0 |          0 |          0 |          7 |
be_else.31393:
    fadd    $22, $18, $18               # |    420,807 |    423,509 |      2,702 |          0 |          0 |          0 |
    fmul    $18, $19, $18               # |    420,807 |  2,104,035 |  1,683,228 |          0 |          0 |          0 |
.count move_float
    mov     $18, $42                    # |    420,807 |  2,104,035 |  1,683,228 |          0 |          0 |          0 |
    li      1, $18                      # |    420,807 |    420,807 |          0 |          0 |          0 |          0 |
be_cont.31393:
ble_cont.31392:
be_cont.31391:
be_cont.31389:
be_cont.31377:
    cmp     $18, 0                      # | 10,544,065 | 10,964,926 |    420,807 |          9 |          0 |          0 |
    bne     be_else.31394               # | 10,544,065 | 11,024,703 |          0 |          0 |          0 |    240,319 |
be_then.31394:
    load    [min_caml_objects + $17], $1# |  6,267,119 |  6,483,833 |          0 |          0 |     36,119 |          0 |
    load    [$1 + 6], $1                # |  6,267,119 | 21,103,517 | 12,462,000 |          0 |    395,733 |          0 |
    cmp     $1, 0                       # |  6,267,119 | 18,009,891 | 11,742,772 |          0 |          0 |          0 |
    bne     be_else.31395               # |  6,267,119 |  7,199,125 |          0 |          0 |          0 |    466,003 |
be_then.31395:
    ret                                 # |  5,339,098 |  5,339,104 |          0 |          1 |          0 |          0 |
be_else.31395:
    add     $2, 1, $2                   # |    928,021 |    928,021 |          0 |          0 |          0 |          0 |
    b       solve_each_element_fast.2885# |    928,021 |    930,517 |          0 |          0 |          0 |      1,248 |
be_else.31394:
    fcmp    $42, $zero                  # |  4,276,946 |  4,276,958 |          0 |          2 |          0 |          0 |
    bg      ble_else.31396              # |  4,276,946 |  5,362,256 |          0 |          0 |          0 |    542,655 |
ble_then.31396:
    add     $2, 1, $2                   # |  2,880,318 |  2,880,318 |          0 |          0 |          0 |          0 |
    b       solve_each_element_fast.2885# |  2,880,318 |  2,906,330 |          0 |          0 |          0 |     13,006 |
ble_else.31396:
    load    [$4 + 0], $19               # |  1,396,628 |  1,492,316 |          0 |          0 |     15,948 |          0 |
    fcmp    $49, $42                    # |  1,396,628 |  1,397,468 |          0 |        140 |          0 |          0 |
    bg      ble_else.31397              # |  1,396,628 |  1,842,144 |          0 |          0 |          0 |    222,758 |
ble_then.31397:
    add     $2, 1, $2                   # |    215,261 |    215,261 |          0 |          0 |          0 |          0 |
    b       solve_each_element_fast.2885# |    215,261 |    242,977 |          0 |          0 |          0 |     13,858 |
ble_else.31397:
.count stack_move
    sub     $sp, 6, $sp                 # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27088], $21              # |  1,181,367 |  3,205,539 |          0 |          0 |    337,362 |          0 |
    store   $4, [$sp + 0]               # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 1]               # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 2]               # |  1,181,367 |  1,182,165 |          0 |        133 |          0 |          0 |
    li      0, $2                       # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
    load    [$19 + 0], $20              # |  1,181,367 |  1,312,557 |          0 |          0 |     21,865 |          0 |
    fadd    $42, $21, $21               # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
    fmul    $20, $21, $20               # |  1,181,367 |  5,906,835 |  4,725,468 |          0 |          0 |          0 |
    fadd    $20, $51, $4                # |  1,181,367 |  5,906,835 |  4,725,468 |          0 |          0 |          0 |
    store   $4, [$sp + 3]               # |  1,181,367 |  5,906,835 |  4,725,468 |          0 |          0 |          0 |
    load    [$19 + 1], $20              # |  1,181,367 |  1,213,905 |          0 |          0 |      5,423 |          0 |
    fmul    $20, $21, $20               # |  1,181,367 |  3,533,787 |  2,351,622 |        133 |          0 |          0 |
    fadd    $20, $52, $5                # |  1,181,367 |  5,906,835 |  4,725,468 |          0 |          0 |          0 |
    store   $5, [$sp + 4]               # |  1,181,367 |  5,906,835 |  4,725,468 |          0 |          0 |          0 |
    load    [$19 + 2], $19              # |  1,181,367 |  1,424,919 |          0 |          0 |     40,592 |          0 |
    fmul    $19, $21, $19               # |  1,181,367 |  3,462,917 |  2,281,550 |          0 |          0 |          0 |
    fadd    $19, $53, $6                # |  1,181,367 |  5,906,835 |  4,725,468 |          0 |          0 |          0 |
    store   $6, [$sp + 5]               # |  1,181,367 |  5,906,835 |  4,725,468 |          0 |          0 |          0 |
    call    check_all_inside.2856       # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 6, $sp                 # |  1,181,367 |  1,182,165 |          0 |        133 |          0 |          0 |
    cmp     $1, 0                       # |  1,181,367 |  1,181,367 |          0 |          0 |          0 |          0 |
    bne     be_else.31398               # |  1,181,367 |  1,183,879 |          0 |          0 |          0 |      1,256 |
be_then.31398:
    load    [$sp - 4], $1               # |    424,948 |    544,798 |          0 |          0 |     19,975 |          0 |
    load    [$sp - 5], $3               # |    424,948 |    546,676 |          0 |          0 |     20,288 |          0 |
    load    [$sp - 6], $4               # |    424,948 |    552,520 |          0 |          0 |     21,262 |          0 |
    add     $1, 1, $2                   # |    424,948 |    424,948 |          0 |          0 |          0 |          0 |
    b       solve_each_element_fast.2885# |    424,948 |    424,970 |          0 |          0 |          0 |         11 |
be_else.31398:
.count move_float
    mov     $21, $49                    # |    756,419 |    757,067 |          0 |        108 |          0 |          0 |
    load    [$sp - 3], $1               # |    756,419 |  1,005,161 |          0 |          0 |     41,457 |          0 |
    store   $1, [min_caml_intersection_point + 0]# |    756,419 |  2,186,343 |  1,429,924 |          0 |          0 |          0 |
    load    [$sp - 2], $1               # |    756,419 |    803,741 |          0 |          0 |      7,887 |          0 |
    store   $1, [min_caml_intersection_point + 1]# |    756,419 |  2,253,483 |  1,497,064 |          0 |          0 |          0 |
    load    [$sp - 1], $1               # |    756,419 |    791,705 |          0 |          0 |      5,881 |          0 |
    store   $1, [min_caml_intersection_point + 2]# |    756,419 |  2,257,495 |  1,501,076 |          0 |          0 |          0 |
    store   $17, [min_caml_intersected_object_id + 0]# |    756,419 |    756,419 |          0 |          0 |          0 |          0 |
    store   $18, [min_caml_intsec_rectside + 0]# |    756,419 |    756,821 |          0 |         67 |          0 |          0 |
    load    [$sp - 4], $1               # |    756,419 |  1,024,073 |          0 |          0 |     44,609 |          0 |
    load    [$sp - 5], $3               # |    756,419 |  1,031,429 |          0 |          0 |     45,835 |          0 |
    load    [$sp - 6], $4               # |    756,419 |  1,158,857 |          0 |          0 |     67,073 |          0 |
    add     $1, 1, $2                   # |    756,419 |    756,419 |          0 |          0 |          0 |          0 |
    b       solve_each_element_fast.2885# |    756,419 |    756,435 |          0 |          0 |          0 |          8 |
.end solve_each_element_fast

######################################################################
.begin solve_one_or_network_fast
solve_one_or_network_fast.2889:
    load    [$3 + $2], $28              # |    684,824 |    775,202 |          0 |         41 |     15,022 |          0 |
    cmp     $28, -1                     # |    684,824 |  2,024,428 |  1,339,604 |          0 |          0 |          0 |
    bne     be_else.31399               # |    684,824 |    694,748 |          0 |        108 |          0 |      4,638 |
be_then.31399:
    ret
be_else.31399:
.count stack_move
    sub     $sp, 3, $sp                 # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    store   $4, [$sp + 0]               # |    684,824 |  1,369,648 |    684,824 |          0 |          0 |          0 |
    store   $3, [$sp + 1]               # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 2]               # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $28], $3# |    684,824 |    870,098 |          0 |          0 |     30,879 |          0 |
    call    solve_each_element_fast.2885# |    684,824 |    685,658 |          0 |        139 |          0 |          0 |
    load    [$sp + 2], $28              # |    684,824 |    843,344 |          0 |          0 |     26,420 |          0 |
    load    [$sp + 1], $29              # |    684,824 |    848,390 |          0 |          0 |     27,261 |          0 |
    add     $28, 1, $28                 # |    684,824 |  1,338,092 |    653,268 |          0 |          0 |          0 |
    load    [$29 + $28], $30            # |    684,824 |  1,482,784 |    684,824 |          0 |     18,856 |          0 |
    cmp     $30, -1                     # |    684,824 |  2,016,760 |  1,331,936 |          0 |          0 |          0 |
    bne     be_else.31400               # |    684,824 |    702,742 |          0 |          0 |          0 |      8,959 |
be_then.31400:
.count stack_move
    add     $sp, 3, $sp
    ret
be_else.31400:
    li      0, $2                       # |    684,824 |    686,264 |          0 |        240 |          0 |          0 |
    load    [min_caml_and_net + $30], $3# |    684,824 |    700,730 |          0 |          0 |      2,651 |          0 |
    load    [$sp + 0], $4               # |    684,824 |    832,934 |          0 |          0 |     24,685 |          0 |
    call    solve_each_element_fast.2885# |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    add     $28, 1, $28                 # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [$29 + $28], $30            # |    684,824 |  1,418,836 |    684,824 |          0 |      8,198 |          0 |
    cmp     $30, -1                     # |    684,824 |  2,038,076 |  1,353,252 |          0 |          0 |          0 |
    bne     be_else.31401               # |    684,824 |    996,936 |          0 |     49,311 |          0 |      8,123 |
be_then.31401:
.count stack_move
    add     $sp, 3, $sp
    ret
be_else.31401:
    li      0, $2                       # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $30], $3# |    684,824 |    722,492 |          0 |          0 |      6,278 |          0 |
    load    [$sp + 0], $4               # |    684,824 |    709,298 |          0 |          0 |      4,079 |          0 |
    call    solve_each_element_fast.2885# |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    add     $28, 1, $28                 # |    684,824 |    722,846 |          0 |      6,337 |          0 |          0 |
    load    [$29 + $28], $30            # |    684,824 |  4,186,406 |    150,090 |    534,734 |     23,848 |          0 |
    cmp     $30, -1                     # |    684,824 |  2,006,776 |  1,321,952 |          0 |          0 |          0 |
    bne     be_else.31402               # |    684,824 |    685,380 |          0 |          0 |          0 |        278 |
be_then.31402:
.count stack_move
    add     $sp, 3, $sp
    ret
be_else.31402:
    li      0, $2                       # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $30], $3# |    684,824 |    780,644 |          0 |          0 |     15,970 |          0 |
    load    [$sp + 0], $4               # |    684,824 |    709,520 |          0 |          0 |      4,116 |          0 |
    call    solve_each_element_fast.2885# |    684,824 |  3,334,538 |          0 |    441,619 |          0 |          0 |
    add     $28, 1, $28                 # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [$29 + $28], $30            # |    684,824 |  1,412,728 |    684,824 |          0 |      7,180 |          0 |
    cmp     $30, -1                     # |    684,824 |  2,040,112 |  1,355,288 |          0 |          0 |          0 |
    bne     be_else.31403               # |    684,824 |    684,840 |          0 |          0 |          0 |          8 |
be_then.31403:
.count stack_move
    add     $sp, 3, $sp
    ret
be_else.31403:
    li      0, $2                       # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $30], $3# |    684,824 |  3,449,084 |          0 |    441,619 |     19,091 |          0 |
    load    [$sp + 0], $4               # |    684,824 |    721,148 |          0 |          0 |      6,054 |          0 |
    call    solve_each_element_fast.2885# |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    add     $28, 1, $28                 # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [$29 + $28], $30            # |    684,824 |  1,438,468 |    684,824 |          0 |     11,470 |          0 |
    cmp     $30, -1                     # |    684,824 |  2,031,532 |  1,346,708 |          0 |          0 |          0 |
    bne     be_else.31404               # |    684,824 |    684,868 |          0 |          0 |          0 |         22 |
be_then.31404:
.count stack_move
    add     $sp, 3, $sp
    ret
be_else.31404:
    li      0, $2                       # |    684,824 |  3,334,700 |          0 |    441,646 |          0 |          0 |
    load    [min_caml_and_net + $30], $3# |    684,824 |    778,556 |          0 |          0 |     15,622 |          0 |
    load    [$sp + 0], $4               # |    684,824 |    741,236 |          0 |          0 |      9,402 |          0 |
    call    solve_each_element_fast.2885# |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    add     $28, 1, $28                 # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    load    [$29 + $28], $30            # |    684,824 |  1,431,094 |    684,824 |          0 |     10,241 |          0 |
    cmp     $30, -1                     # |    684,824 |  2,033,990 |  1,349,166 |          0 |          0 |          0 |
    bne     be_else.31405               # |    684,824 |  3,348,356 |          0 |    441,379 |          0 |      7,629 |
be_then.31405:
.count stack_move
    add     $sp, 3, $sp                 # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    ret                                 # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
be_else.31405:
    li      0, $2
    load    [min_caml_and_net + $30], $3
    load    [$sp + 0], $4
    call    solve_each_element_fast.2885
    add     $28, 1, $28
    load    [$29 + $28], $30
    cmp     $30, -1
    bne     be_else.31406
be_then.31406:
.count stack_move
    add     $sp, 3, $sp
    ret
be_else.31406:
    li      0, $2
    load    [min_caml_and_net + $30], $3
    load    [$sp + 0], $4
    call    solve_each_element_fast.2885
.count stack_move
    add     $sp, 3, $sp
    add     $28, 1, $2
    load    [$sp - 3], $4
.count move_args
    mov     $29, $3
    b       solve_one_or_network_fast.2889
.end solve_one_or_network_fast

######################################################################
.begin trace_or_matrix_fast
trace_or_matrix_fast.2893:
    load    [$3 + $2], $28              # |  1,134,616 |  2,340,514 |          0 |    179,750 |     21,233 |          0 |
    load    [$28 + 0], $29              # |  1,134,616 |  3,422,690 |  2,226,766 |          0 |     10,218 |          0 |
    cmp     $29, -1                     # |  1,134,616 |  6,031,032 |    941,096 |    659,220 |          0 |          0 |
    bne     be_else.31407               # |  1,134,616 |  1,153,068 |          0 |          0 |          0 |      9,226 |
be_then.31407:
    ret
be_else.31407:
.count stack_move
    sub     $sp, 4, $sp                 # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    cmp     $29, 99                     # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    store   $4, [$sp + 0]               # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 1]               # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 2]               # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    bne     be_else.31408               # |  1,134,616 |  4,945,816 |          0 |    630,765 |          0 |     13,305 |
be_then.31408:
    load    [$28 + 1], $29              # |  1,134,616 |  1,168,552 |          0 |          0 |      5,656 |          0 |
    cmp     $29, -1                     # |  1,134,616 |  3,392,536 |  2,257,920 |          0 |          0 |          0 |
    be      bne_cont.31409              # |  1,134,616 |  1,135,134 |          0 |          0 |          0 |        259 |
bne_then.31409:
    li      0, $2                       # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $29], $3# |  1,134,616 |  1,401,016 |          0 |          0 |     44,400 |          0 |
    call    solve_each_element_fast.2885# |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$28 + 2], $29              # |  1,134,616 |  1,223,542 |          0 |          0 |     14,821 |          0 |
    cmp     $29, -1                     # |  1,134,616 |  5,917,710 |    997,862 |    630,872 |          0 |          0 |
    be      bne_cont.31410              # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
bne_then.31410:
    li      0, $2                       # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $29], $3# |  1,134,616 |  1,387,792 |          0 |          0 |     42,196 |          0 |
    load    [$sp + 0], $4               # |  1,134,616 |  1,376,326 |          0 |          0 |     40,285 |          0 |
    call    solve_each_element_fast.2885# |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$28 + 3], $29              # |  1,134,616 |  1,201,180 |          0 |          0 |     11,094 |          0 |
    cmp     $29, -1                     # |  1,134,616 |  3,381,660 |  2,247,044 |          0 |          0 |          0 |
    be      bne_cont.31411              # |  1,134,616 |  3,208,394 |          0 |    344,962 |          0 |      2,003 |
bne_then.31411:
    li      0, $2                       # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $29], $3# |  1,134,616 |  1,304,140 |          0 |          0 |     28,254 |          0 |
    load    [$sp + 0], $4               # |  1,134,616 |  1,151,086 |          0 |          0 |      2,745 |          0 |
    call    solve_each_element_fast.2885# |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$28 + 4], $29              # |  1,134,616 |  1,281,676 |          0 |          0 |     24,510 |          0 |
    cmp     $29, -1                     # |  1,134,616 |  3,354,828 |  2,220,212 |          0 |          0 |          0 |
    be      bne_cont.31412              # |  1,134,616 |  1,135,188 |          0 |          0 |          0 |        286 |
bne_then.31412:
    li      0, $2                       # |  1,134,616 |  4,919,206 |          0 |    630,765 |          0 |          0 |
    load    [min_caml_and_net + $29], $3# |  1,134,616 |  1,228,114 |          0 |          0 |     15,583 |          0 |
    load    [$sp + 0], $4               # |  1,134,616 |  1,157,554 |          0 |          0 |      3,823 |          0 |
    call    solve_each_element_fast.2885# |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    load    [$28 + 5], $29              # |  1,134,616 |  1,301,590 |          0 |          0 |     27,829 |          0 |
    cmp     $29, -1                     # |  1,134,616 |  3,348,190 |  2,213,574 |          0 |          0 |          0 |
    be      bne_cont.31413              # |  1,134,616 |  1,136,594 |          0 |          0 |          0 |        989 |
bne_then.31413:
    li      0, $2
    load    [min_caml_and_net + $29], $3
    load    [$sp + 0], $4
    call    solve_each_element_fast.2885
    load    [$28 + 6], $29
    cmp     $29, -1
    be      bne_cont.31414
bne_then.31414:
    li      0, $2
    load    [min_caml_and_net + $29], $3
    load    [$sp + 0], $4
    call    solve_each_element_fast.2885
    li      7, $2
    load    [$sp + 0], $4
.count move_args
    mov     $28, $3
    call    solve_one_or_network_fast.2889
bne_cont.31414:
bne_cont.31413:
bne_cont.31412:
bne_cont.31411:
bne_cont.31410:
bne_cont.31409:
    load    [$sp + 2], $28              # |  1,134,616 |  3,820,480 |          0 |    421,475 |     26,169 |          0 |
    load    [$sp + 1], $3               # |  1,134,616 |  1,243,798 |          0 |          0 |     18,197 |          0 |
    add     $28, 1, $28                 # |  1,134,616 |  2,594,470 |  1,037,634 |     70,370 |          0 |          0 |
    load    [$3 + $28], $29             # |  1,134,616 |  2,446,202 |  1,134,616 |          0 |     29,495 |          0 |
    load    [$29 + 0], $30              # |  1,134,616 |  3,396,266 |  2,210,242 |          0 |      8,568 |          0 |
    cmp     $30, -1                     # |  1,134,616 |  3,386,712 |  2,252,096 |          0 |          0 |          0 |
    bne     be_else.31415               # |  1,134,616 |  1,163,088 |          0 |          0 |          0 |     14,236 |
be_then.31415:
.count stack_move
    add     $sp, 4, $sp                 # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    ret                                 # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
be_else.31415:
    cmp     $30, 99
    bne     be_else.31416
be_then.31416:
    load    [$29 + 1], $30
    cmp     $30, -1
    bne     be_else.31417
be_then.31417:
.count stack_move
    add     $sp, 4, $sp
    add     $28, 1, $2
    load    [$sp - 4], $4
    b       trace_or_matrix_fast.2893
be_else.31417:
    li      0, $2
    load    [min_caml_and_net + $30], $3
    load    [$sp + 0], $4
    call    solve_each_element_fast.2885
    load    [$29 + 2], $30
    cmp     $30, -1
    bne     be_else.31418
be_then.31418:
.count stack_move
    add     $sp, 4, $sp
    add     $28, 1, $2
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    b       trace_or_matrix_fast.2893
be_else.31418:
    li      0, $2
    load    [min_caml_and_net + $30], $3
    load    [$sp + 0], $4
    call    solve_each_element_fast.2885
    load    [$29 + 3], $30
    cmp     $30, -1
    bne     be_else.31419
be_then.31419:
.count stack_move
    add     $sp, 4, $sp
    add     $28, 1, $2
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    b       trace_or_matrix_fast.2893
be_else.31419:
    li      0, $2
    load    [min_caml_and_net + $30], $3
    load    [$sp + 0], $4
    call    solve_each_element_fast.2885
    load    [$29 + 4], $30
    cmp     $30, -1
    bne     be_else.31420
be_then.31420:
.count stack_move
    add     $sp, 4, $sp
    add     $28, 1, $2
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    b       trace_or_matrix_fast.2893
be_else.31420:
    store   $28, [$sp + 3]
    li      0, $2
    load    [min_caml_and_net + $30], $3
    load    [$sp + 0], $4
    call    solve_each_element_fast.2885
    li      5, $2
    load    [$sp + 0], $4
.count move_args
    mov     $29, $3
    call    solve_one_or_network_fast.2889
.count stack_move
    add     $sp, 4, $sp
    load    [$sp - 1], $1
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    add     $1, 1, $2
    b       trace_or_matrix_fast.2893
be_else.31416:
    load    [$sp + 0], $3
.count move_args
    mov     $30, $2
    call    solver_fast2.2814
.count move_ret
    mov     $1, $31
    cmp     $31, 0
    bne     be_else.31421
be_then.31421:
.count stack_move
    add     $sp, 4, $sp
    add     $28, 1, $2
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    b       trace_or_matrix_fast.2893
be_else.31421:
    fcmp    $49, $42
    bg      ble_else.31422
ble_then.31422:
.count stack_move
    add     $sp, 4, $sp
    add     $28, 1, $2
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    b       trace_or_matrix_fast.2893
ble_else.31422:
    store   $28, [$sp + 3]
    li      1, $2
    load    [$sp + 0], $4
.count move_args
    mov     $29, $3
    call    solve_one_or_network_fast.2889
.count stack_move
    add     $sp, 4, $sp
    load    [$sp - 1], $1
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    add     $1, 1, $2
    b       trace_or_matrix_fast.2893
be_else.31408:
.count move_args
    mov     $4, $3
.count move_args
    mov     $29, $2
    call    solver_fast2.2814
.count move_ret
    mov     $1, $31
    cmp     $31, 0
    bne     be_else.31423
be_then.31423:
.count stack_move
    add     $sp, 4, $sp
    load    [$sp - 2], $1
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    add     $1, 1, $2
    b       trace_or_matrix_fast.2893
be_else.31423:
    fcmp    $49, $42
    bg      ble_else.31424
ble_then.31424:
.count stack_move
    add     $sp, 4, $sp
    load    [$sp - 2], $1
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    add     $1, 1, $2
    b       trace_or_matrix_fast.2893
ble_else.31424:
    li      1, $2
    load    [$sp + 0], $4
.count move_args
    mov     $28, $3
    call    solve_one_or_network_fast.2889
.count stack_move
    add     $sp, 4, $sp
    load    [$sp - 2], $1
    load    [$sp - 3], $3
    load    [$sp - 4], $4
    add     $1, 1, $2
    b       trace_or_matrix_fast.2893
.end trace_or_matrix_fast

######################################################################
.begin utexture
utexture.2908:
    load    [$2 + 8], $10               # |    660,661 |  4,545,913 |          0 |    620,426 |     27,116 |          0 |
    load    [$10 + 0], $10              # |    660,661 |  2,704,079 |  1,267,090 |          0 |    129,388 |          0 |
    store   $10, [min_caml_texture_color + 0]# |    660,661 |  2,575,019 |    811,600 |    183,793 |          0 |          0 |
    load    [$2 + 8], $10               # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $10              # |    660,661 |  2,265,345 |  1,321,322 |          0 |     47,227 |          0 |
.count move_float
    mov     $10, $54                    # |    660,661 |  1,887,529 |  1,226,868 |          0 |          0 |          0 |
    load    [$2 + 8], $10               # |    660,661 |    660,661 |          0 |          0 |          0 |          0 |
    load    [$10 + 2], $10              # |    660,661 |  2,068,803 |  1,321,322 |          0 |     14,470 |          0 |
.count move_float
    mov     $10, $58                    # |    660,661 |  1,953,043 |  1,292,382 |          0 |          0 |          0 |
    load    [$2 + 0], $10               # |    660,661 |  1,122,847 |          0 |          0 |     77,031 |          0 |
    cmp     $10, 1                      # |    660,661 |  2,620,499 |    857,080 |    183,793 |          0 |          0 |
    bne     be_else.31425               # |    660,661 |    663,269 |          0 |          0 |          0 |      1,304 |
be_then.31425:
.count stack_move
    sub     $sp, 2, $sp                 # |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $10               # |     94,582 |     94,822 |          0 |          0 |         40 |          0 |
    load    [$2 + 5], $11               # |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 0], $12# |     94,582 |     97,192 |          0 |          0 |        435 |          0 |
    load    [$10 + 0], $10              # |     94,582 |     94,642 |          0 |          0 |         10 |          0 |
.count load_float
    load    [f.27100], $13              # |     94,582 |    189,016 |          0 |          0 |     15,739 |          0 |
    fsub    $12, $10, $10               # |     94,582 |    361,138 |     51,966 |     35,765 |          0 |          0 |
    fmul    $10, $13, $2                # |     94,582 |    472,910 |    378,328 |          0 |          0 |          0 |
    call    min_caml_floor              # |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |     94,582 |    326,008 |    231,426 |          0 |          0 |          0 |
.count load_float
    load    [f.27101], $14              # |     94,582 |    120,832 |          0 |          0 |      4,375 |          0 |
.count load_float
    load    [f.27102], $15              # |     94,582 |    106,930 |          0 |          0 |      2,058 |          0 |
    load    [$11 + 2], $11              # |     94,582 |     94,660 |          0 |          0 |         13 |          0 |
    fmul    $12, $14, $12               # |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
    fsub    $10, $12, $10               # |     94,582 |    544,632 |    234,884 |     35,861 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $12# |     94,582 |    128,596 |          0 |          0 |      5,669 |          0 |
    fsub    $12, $11, $11               # |     94,582 |    272,408 |    177,826 |          0 |          0 |          0 |
    fmul    $11, $13, $2                # |     94,582 |    472,910 |    378,328 |          0 |          0 |          0 |
    call    min_caml_floor              # |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
    fmul    $1, $14, $1                 # |     94,582 |    273,724 |    179,142 |          0 |          0 |          0 |
    fcmp    $15, $10                    # |     94,582 |     94,582 |          0 |          0 |          0 |          0 |
    fsub    $11, $1, $1                 # |     94,582 |    483,937 |    178,137 |     35,203 |          0 |          0 |
    bg      ble_else.31426              # |     94,582 |    179,534 |          0 |          0 |          0 |     42,476 |
ble_then.31426:
    li      0, $2                       # |     50,346 |     50,346 |          0 |          0 |          0 |          0 |
    b       ble_cont.31426              # |     50,346 |     51,892 |          0 |          0 |          0 |        773 |
ble_else.31426:
    li      1, $2                       # |     44,236 |     44,236 |          0 |          0 |          0 |          0 |
ble_cont.31426:
    fcmp    $15, $1                     # |     94,582 |    169,159 |     74,577 |          0 |          0 |          0 |
    bg      ble_else.31427              # |     94,582 |    182,562 |          0 |          0 |          0 |     43,990 |
ble_then.31427:
    cmp     $2, 0                       # |     45,724 |     45,724 |          0 |          0 |          0 |          0 |
    bne     be_else.31428               # |     45,724 |    147,204 |          0 |     16,688 |          0 |        676 |
be_then.31428:
.count load_float
    load    [f.27096], $1               # |     24,135 |    141,915 |          0 |          0 |     19,630 |          0 |
.count move_float
    mov     $1, $54                     # |     24,135 |     33,145 |      9,010 |          0 |          0 |          0 |
    ret                                 # |     24,135 |     24,135 |          0 |          0 |          0 |          0 |
be_else.31428:
.count move_float
    mov     $zero, $54                  # |     21,589 |     21,589 |          0 |          0 |          0 |          0 |
    ret                                 # |     21,589 |     21,589 |          0 |          0 |          0 |          0 |
ble_else.31427:
    cmp     $2, 0                       # |     48,858 |    159,774 |          0 |     18,486 |          0 |          0 |
    bne     be_else.31429               # |     48,858 |     60,386 |          0 |          0 |          0 |      5,764 |
be_then.31429:
.count move_float
    mov     $zero, $54                  # |     26,211 |     79,011 |          0 |      8,800 |          0 |          0 |
    ret                                 # |     26,211 |     26,211 |          0 |          0 |          0 |          0 |
be_else.31429:
.count load_float
    load    [f.27096], $1               # |     22,647 |    184,125 |          0 |      8,445 |     18,468 |          0 |
.count move_float
    mov     $1, $54                     # |     22,647 |     31,005 |      8,358 |          0 |          0 |          0 |
    ret                                 # |     22,647 |     22,647 |          0 |          0 |          0 |          0 |
be_else.31425:
    cmp     $10, 2                      # |    566,079 |  1,502,229 |          0 |    156,025 |          0 |          0 |
    bne     be_else.31430               # |    566,079 |    612,205 |          0 |          0 |          0 |     23,063 |
be_then.31430:
.count stack_move
    sub     $sp, 2, $sp                 # |      2,885 |      2,885 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 1], $11# |      2,885 |     17,849 |          0 |      2,494 |          0 |          0 |
.count load_float
    load    [f.27099], $12              # |      2,885 |     18,095 |          0 |          0 |      2,535 |          0 |
    fmul    $11, $12, $2                # |      2,885 |      3,585 |        700 |          0 |          0 |          0 |
    call    min_caml_sin                # |      2,885 |      2,885 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |      2,885 |      2,885 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27096], $2               # |      2,885 |      3,035 |          0 |          0 |         25 |          0 |
    fmul    $1, $1, $1                  # |      2,885 |      2,885 |          0 |          0 |          0 |          0 |
    fmul    $2, $1, $3                  # |      2,885 |     14,425 |     11,540 |          0 |          0 |          0 |
    fsub    $36, $1, $1                 # |      2,885 |      6,881 |          0 |        666 |          0 |          0 |
    store   $3, [min_caml_texture_color + 0]# |      2,885 |      9,542 |      6,657 |          0 |          0 |          0 |
    fmul    $2, $1, $1                  # |      2,885 |      4,883 |      1,998 |          0 |          0 |          0 |
.count move_float
    mov     $1, $54                     # |      2,885 |     14,425 |     11,540 |          0 |          0 |          0 |
    ret                                 # |      2,885 |      2,885 |          0 |          0 |          0 |          0 |
be_else.31430:
    cmp     $10, 3                      # |    563,194 |    725,950 |          0 |     27,126 |          0 |          0 |
    bne     be_else.31431               # |    563,194 |    563,530 |          0 |          0 |          0 |        168 |
be_then.31431:
.count stack_move
    sub     $sp, 2, $sp
    load    [$2 + 5], $10
    load    [$2 + 5], $11
    load    [min_caml_intersection_point + 0], $12
    load    [$10 + 0], $10
    load    [$11 + 2], $11
    fsub    $12, $10, $10
    load    [min_caml_intersection_point + 2], $12
    fsub    $12, $11, $11
    fmul    $10, $10, $10
    fmul    $11, $11, $11
    fadd    $10, $11, $10
.count load_float
    load    [f.27098], $11
    fsqrt   $10, $10
    fmul    $10, $11, $2
    store   $2, [$sp + 0]
    call    min_caml_floor
.count move_ret
    mov     $1, $11
    load    [$sp + 0], $12
    fsub    $12, $11, $11
.count load_float
    load    [f.27093], $12
    fmul    $11, $12, $2
    call    min_caml_cos
.count stack_move
    add     $sp, 2, $sp
.count load_float
    load    [f.27096], $2
    fmul    $1, $1, $1
    fmul    $1, $2, $3
    fsub    $36, $1, $1
.count move_float
    mov     $3, $54
    fmul    $1, $2, $1
.count move_float
    mov     $1, $58
    ret
be_else.31431:
    cmp     $10, 4                      # |    563,194 |    640,822 |          0 |     12,938 |          0 |          0 |
    bne     be_else.31432               # |    563,194 |    640,988 |          0 |     12,938 |          0 |         83 |
be_then.31432:
.count stack_move
    sub     $sp, 2, $sp
.count load_float
    load    [f.27090], $15
    store   $2, [$sp + 1]
    load    [$2 + 5], $11
    load    [$2 + 4], $12
    load    [$2 + 5], $13
    load    [$2 + 4], $14
    load    [min_caml_intersection_point + 0], $16
    load    [$11 + 0], $11
    load    [$12 + 0], $12
    load    [$13 + 2], $13
    fsub    $16, $11, $11
    fsqrt   $12, $12
    load    [min_caml_intersection_point + 2], $16
    load    [$14 + 2], $14
    fsub    $16, $13, $13
    fmul    $11, $12, $11
    fsqrt   $14, $14
    fabs    $11, $12
    fmul    $13, $14, $13
    fcmp    $15, $12
    bg      ble_else.31433
ble_then.31433:
    finv    $11, $12
    fmul    $13, $12, $12
    fabs    $12, $2
    call    min_caml_atan
.count move_ret
    mov     $1, $12
.count load_float
    load    [f.27092], $14
    fmul    $12, $14, $12
.count load_float
    load    [f.27093], $14
.count load_float
    load    [f.27094], $14
    fmul    $12, $14, $12
    b       ble_cont.31433
ble_else.31433:
.count load_float
    load    [f.27091], $12
ble_cont.31433:
    load    [$sp + 1], $14
    fmul    $11, $11, $11
    fmul    $13, $13, $13
    load    [$14 + 5], $16
    load    [$14 + 4], $14
    load    [min_caml_intersection_point + 1], $17
    load    [$16 + 1], $16
    fadd    $11, $13, $11
    load    [$14 + 1], $14
    fsub    $17, $16, $16
    fsqrt   $14, $14
    fabs    $11, $13
    fcmp    $15, $13
    fmul    $16, $14, $14
    bg      ble_else.31434
ble_then.31434:
    finv    $11, $11
    fmul    $14, $11, $11
    fabs    $11, $2
    call    min_caml_atan
.count move_ret
    mov     $1, $10
.count load_float
    load    [f.27092], $11
    fmul    $10, $11, $10
.count load_float
    load    [f.27093], $11
.count load_float
    load    [f.27094], $11
    fmul    $10, $11, $10
    b       ble_cont.31434
ble_else.31434:
.count load_float
    load    [f.27091], $10
ble_cont.31434:
.count load_float
    load    [f.27095], $11
.count move_args
    mov     $12, $2
    call    min_caml_floor
.count move_ret
    mov     $1, $13
    fsub    $12, $13, $12
.count move_args
    mov     $10, $2
    fsub    $39, $12, $12
    fmul    $12, $12, $12
    fsub    $11, $12, $11
    call    min_caml_floor
.count stack_move
    add     $sp, 2, $sp
    fsub    $10, $1, $1
    fsub    $39, $1, $1
    fmul    $1, $1, $1
    fsub    $11, $1, $1
    fcmp    $zero, $1
    bg      ble_else.31435
ble_then.31435:
.count load_float
    load    [f.27096], $2
    fmul    $2, $1, $1
.count load_float
    load    [f.27097], $2
    fmul    $1, $2, $1
.count move_float
    mov     $1, $58
    ret
ble_else.31435:
.count move_float
    mov     $zero, $58
    ret
be_else.31432:
    ret                                 # |    563,194 |  1,066,168 |          0 |     83,829 |          0 |          0 |
.end utexture

######################################################################
.begin trace_reflections
trace_reflections.2915:
    cmp     $2, 0                       # |     36,992 |    160,832 |          0 |     20,640 |          0 |          0 |
    bl      bge_else.31436              # |     36,992 |     37,524 |          0 |          0 |          0 |        266 |
bge_then.31436:
.count stack_move
    sub     $sp, 6, $sp                 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27103], $33              # |     18,496 |     26,014 |          0 |          0 |      1,253 |          0 |
    store   $5, [$sp + 0]               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    store   $4, [$sp + 1]               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 2]               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 3]               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [min_caml_reflections + $2], $32# |     18,496 |    142,072 |          0 |     11,165 |      9,431 |          0 |
.count move_float
    mov     $33, $49                    # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$32 + 1], $4               # |     18,496 |    103,263 |      9,065 |          0 |     12,617 |          0 |
    store   $4, [$sp + 4]               # |     18,496 |     30,254 |     11,758 |          0 |          0 |          0 |
    load    [$59 + 0], $33              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$33 + 0], $34              # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    cmp     $34, -1                     # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    be      bne_cont.31437              # |     18,496 |     19,000 |          0 |          0 |          0 |        252 |
bne_then.31437:
    cmp     $34, 99                     # |     18,496 |     85,012 |          0 |     11,086 |          0 |          0 |
    bne     be_else.31438               # |     18,496 |     38,682 |          0 |          0 |          0 |     10,093 |
be_then.31438:
    load    [$33 + 1], $34
    cmp     $34, -1
    bne     be_else.31439
be_then.31439:
    li      1, $2
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
    b       be_cont.31438
be_else.31439:
    li      0, $2
    load    [min_caml_and_net + $34], $3
    call    solve_each_element_fast.2885
    load    [$33 + 2], $34
    load    [$sp + 4], $4
    cmp     $34, -1
    bne     be_else.31440
be_then.31440:
    li      1, $2
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
    b       be_cont.31438
be_else.31440:
    li      0, $2
    load    [min_caml_and_net + $34], $3
    call    solve_each_element_fast.2885
    load    [$33 + 3], $34
    load    [$sp + 4], $4
    cmp     $34, -1
    bne     be_else.31441
be_then.31441:
    li      1, $2
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
    b       be_cont.31438
be_else.31441:
    li      0, $2
    load    [min_caml_and_net + $34], $3
    call    solve_each_element_fast.2885
    load    [$33 + 4], $34
    load    [$sp + 4], $4
    cmp     $34, -1
    bne     be_else.31442
be_then.31442:
    li      1, $2
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
    b       be_cont.31438
be_else.31442:
    li      0, $2
    load    [min_caml_and_net + $34], $3
    call    solve_each_element_fast.2885
    li      5, $2
    load    [$sp + 4], $4
.count move_args
    mov     $33, $3
    call    solve_one_or_network_fast.2889
    li      1, $2
    load    [$sp + 4], $4
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
    b       be_cont.31438
be_else.31438:
.count move_args
    mov     $4, $3                      # |     18,496 |    129,472 |          0 |     18,496 |          0 |          0 |
.count move_args
    mov     $34, $2                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    call    solver_fast2.2814           # |     18,496 |    129,472 |          0 |     18,496 |          0 |          0 |
.count move_ret
    mov     $1, $34                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    cmp     $34, 0                      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$sp + 4], $4               # |     18,496 |     18,688 |          0 |          0 |         32 |          0 |
    li      1, $2                       # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    bne     be_else.31443               # |     18,496 |     18,514 |          0 |          0 |          0 |          9 |
be_then.31443:
.count move_args
    mov     $59, $3                     # |     13,470 |     13,470 |          0 |          0 |          0 |          0 |
    call    trace_or_matrix_fast.2893   # |     13,470 |     13,470 |          0 |          0 |          0 |          0 |
    b       be_cont.31443               # |     13,470 |    109,556 |          0 |     13,470 |          0 |      7,633 |
be_else.31443:
    fcmp    $49, $42                    # |      5,026 |     35,182 |          0 |      5,026 |          0 |          0 |
    bg      ble_else.31444              # |      5,026 |      5,030 |          0 |          0 |          0 |          2 |
ble_then.31444:
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
    b       ble_cont.31444
ble_else.31444:
.count move_args
    mov     $33, $3                     # |      5,026 |      5,026 |          0 |          0 |          0 |          0 |
    call    solve_one_or_network_fast.2889# |      5,026 |      5,026 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |      5,026 |     35,182 |          0 |      5,026 |          0 |          0 |
    load    [$sp + 4], $4               # |      5,026 |      5,026 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $59, $3                     # |      5,026 |      5,026 |          0 |          0 |          0 |          0 |
    call    trace_or_matrix_fast.2893   # |      5,026 |      5,026 |          0 |          0 |          0 |          0 |
ble_cont.31444:
be_cont.31443:
be_cont.31438:
bne_cont.31437:
.count load_float
    load    [f.27089], $1               # |     18,496 |    130,792 |          0 |     13,470 |      5,246 |          0 |
    fcmp    $49, $1                     # |     18,496 |     44,996 |     26,500 |          0 |          0 |          0 |
    bg      ble_else.31445              # |     18,496 |     18,516 |          0 |          0 |          0 |         10 |
ble_then.31445:
    li      0, $1
    b       ble_cont.31445
ble_else.31445:
.count load_float
    load    [f.27104], $1               # |     18,496 |    136,150 |          0 |     18,496 |      1,113 |          0 |
    fcmp    $1, $49                     # |     18,496 |     53,262 |     34,766 |          0 |          0 |          0 |
    bg      ble_else.31446              # |     18,496 |     18,950 |          0 |          0 |          0 |        227 |
ble_then.31446:
    li      0, $1                       # |      7,212 |      7,212 |          0 |          0 |          0 |          0 |
    b       ble_cont.31446              # |      7,212 |      7,968 |          0 |          0 |          0 |        378 |
ble_else.31446:
    li      1, $1                       # |     11,284 |     11,284 |          0 |          0 |          0 |          0 |
ble_cont.31446:
ble_cont.31445:
    cmp     $1, 0                       # |     18,496 |     29,780 |     11,284 |          0 |          0 |          0 |
    bne     be_else.31447               # |     18,496 |    130,628 |          0 |     18,441 |          0 |        743 |
be_then.31447:
.count stack_move
    add     $sp, 6, $sp                 # |      7,212 |      7,212 |          0 |          0 |          0 |          0 |
    load    [$sp - 3], $1               # |      7,212 |     14,598 |      7,212 |          0 |         29 |          0 |
    load    [$sp - 4], $3               # |      7,212 |      7,212 |          0 |          0 |          0 |          0 |
    load    [$sp - 5], $4               # |      7,212 |      7,212 |          0 |          0 |          0 |          0 |
    sub     $1, 1, $2                   # |      7,212 |      7,212 |          0 |          0 |          0 |          0 |
    load    [$sp - 6], $5               # |      7,212 |      7,212 |          0 |          0 |          0 |          0 |
    b       trace_reflections.2915      # |      7,212 |      7,230 |          0 |          0 |          0 |          9 |
be_else.31447:
    load    [$32 + 0], $1               # |     11,284 |    130,492 |          0 |     11,284 |      8,584 |          0 |
    load    [min_caml_intersected_object_id + 0], $2# |     11,284 |     11,680 |          0 |          0 |         66 |          0 |
    load    [min_caml_intsec_rectside + 0], $3# |     11,284 |     12,262 |          0 |          0 |        163 |          0 |
    sll     $2, 2, $2                   # |     11,284 |     22,339 |     11,055 |          0 |          0 |          0 |
    add     $2, $3, $2                  # |     11,284 |     22,568 |     11,284 |          0 |          0 |          0 |
    cmp     $2, $1                      # |     11,284 |     22,568 |     11,284 |          0 |          0 |          0 |
    bne     be_else.31448               # |     11,284 |     12,156 |          0 |          0 |          0 |        436 |
be_then.31448:
    store   $32, [$sp + 5]              # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |     10,334 |     72,278 |          0 |     10,324 |          0 |          0 |
.count move_args
    mov     $59, $3                     # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_matrix.2868# |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 6, $sp                 # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    cmp     $1, 0                       # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$sp - 4], $3               # |     10,334 |     10,352 |          0 |          0 |          3 |          0 |
    bne     be_else.31449               # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
be_then.31449:
    load    [$sp - 1], $1               # |     10,334 |     10,886 |          0 |          0 |         92 |          0 |
    load    [$sp - 2], $2               # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    load    [min_caml_nvector + 0], $5  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $2                # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [min_caml_nvector + 1], $7  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $1, $3, $4                  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $6                # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $8                # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    load    [$2 + 2], $2                # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    fmul    $5, $6, $5                  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $7, $8, $7                  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fadd    $5, $7, $5                  # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $7  # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $7, $2, $7                  # |     10,334 |     31,002 |     20,668 |          0 |          0 |          0 |
    fadd    $5, $7, $5                  # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    fmul    $4, $5, $4                  # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    fcmp    $4, $zero                   # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    ble     bg_cont.31450               # |     10,334 |     26,314 |          0 |          0 |          0 |      7,990 |
bg_then.31450:
    load    [min_caml_texture_color + 0], $5# |      9,373 |      9,373 |          0 |          0 |          0 |          0 |
    fmul    $4, $5, $5                  # |      9,373 |     28,119 |     18,746 |          0 |          0 |          0 |
    fadd    $46, $5, $5                 # |      9,373 |     46,865 |     37,492 |          0 |          0 |          0 |
.count move_float
    mov     $5, $46                     # |      9,373 |     46,865 |     37,492 |          0 |          0 |          0 |
    fmul    $4, $54, $5                 # |      9,373 |      9,373 |          0 |          0 |          0 |          0 |
    fmul    $4, $58, $4                 # |      9,373 |      9,373 |          0 |          0 |          0 |          0 |
    fadd    $47, $5, $5                 # |      9,373 |     65,611 |          0 |      9,373 |          0 |          0 |
    fadd    $48, $4, $4                 # |      9,373 |      9,373 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $5, $47                     # |      9,373 |     37,492 |     28,119 |          0 |          0 |          0 |
.count move_float
    mov     $4, $48                     # |      9,373 |      9,373 |          0 |          0 |          0 |          0 |
bg_cont.31450:
    load    [$sp - 6], $5               # |     10,334 |     16,100 |          0 |        961 |          0 |          0 |
    load    [$5 + 0], $4                # |     10,334 |     31,002 |     20,668 |          0 |          0 |          0 |
    fmul    $4, $6, $4                  # |     10,334 |     31,002 |     20,668 |          0 |          0 |          0 |
    load    [$5 + 1], $6                # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $6, $8, $6                  # |     10,334 |     72,338 |          0 |     10,334 |          0 |          0 |
    fadd    $4, $6, $4                  # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    load    [$5 + 2], $6                # |     10,334 |     10,334 |          0 |          0 |          0 |          0 |
    fmul    $6, $2, $2                  # |     10,334 |     31,002 |     20,668 |          0 |          0 |          0 |
    fadd    $4, $2, $2                  # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    load    [$sp - 5], $4               # |     10,334 |     10,352 |          0 |          0 |          3 |          0 |
    fmul    $1, $2, $1                  # |     10,334 |     41,327 |     30,993 |          0 |          0 |          0 |
    fcmp    $1, $zero                   # |     10,334 |     51,670 |     41,336 |          0 |          0 |          0 |
    bg      ble_else.31451              # |     10,334 |     73,358 |          0 |     10,334 |          0 |        510 |
ble_then.31451:
    load    [$sp - 3], $1               # |      2,614 |      2,704 |          0 |          0 |         15 |          0 |
    sub     $1, 1, $2                   # |      2,614 |      7,812 |      5,198 |          0 |          0 |          0 |
    b       trace_reflections.2915      # |      2,614 |      2,622 |          0 |          0 |          0 |          4 |
ble_else.31451:
    fmul    $1, $1, $1                  # |      7,720 |      7,720 |          0 |          0 |          0 |          0 |
    fmul    $1, $1, $1                  # |      7,720 |     38,600 |     30,880 |          0 |          0 |          0 |
    fmul    $1, $4, $1                  # |      7,720 |     38,600 |     30,880 |          0 |          0 |          0 |
    fadd    $46, $1, $2                 # |      7,720 |     38,600 |     30,880 |          0 |          0 |          0 |
.count move_float
    mov     $2, $46                     # |      7,720 |     54,040 |          0 |      7,720 |          0 |          0 |
    fadd    $47, $1, $2                 # |      7,720 |      7,720 |          0 |          0 |          0 |          0 |
    fadd    $48, $1, $1                 # |      7,720 |      7,720 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $2, $47                     # |      7,720 |     30,880 |     23,160 |          0 |          0 |          0 |
.count move_float
    mov     $1, $48                     # |      7,720 |      7,720 |          0 |          0 |          0 |          0 |
    load    [$sp - 3], $1               # |      7,720 |      7,960 |          0 |          0 |         40 |          0 |
    sub     $1, 1, $2                   # |      7,720 |     23,080 |     15,360 |          0 |          0 |          0 |
    b       trace_reflections.2915      # |      7,720 |      7,724 |          0 |          0 |          0 |          2 |
be_else.31449:
    load    [$sp - 3], $1
    load    [$sp - 5], $4
    load    [$sp - 6], $5
    sub     $1, 1, $2
    b       trace_reflections.2915
be_else.31448:
.count stack_move
    add     $sp, 6, $sp                 # |        950 |      6,644 |          0 |        949 |          0 |          0 |
    load    [$sp - 3], $1               # |        950 |      1,912 |        950 |          0 |          2 |          0 |
    load    [$sp - 4], $3               # |        950 |        950 |          0 |          0 |          0 |          0 |
    load    [$sp - 5], $4               # |        950 |        950 |          0 |          0 |          0 |          0 |
    sub     $1, 1, $2                   # |        950 |        950 |          0 |          0 |          0 |          0 |
    load    [$sp - 6], $5               # |        950 |        950 |          0 |          0 |          0 |          0 |
    b       trace_reflections.2915      # |        950 |        950 |          0 |          0 |          0 |          0 |
bge_else.31436:
    ret                                 # |     18,496 |     80,500 |          0 |     10,334 |          0 |          0 |
.end trace_reflections

######################################################################
.begin trace_ray
trace_ray.2920:
    cmp     $2, 4                       # |     23,754 |    122,058 |          0 |     16,384 |          0 |          0 |
    bg      ble_else.31452              # |     23,754 |     29,232 |          0 |          0 |          0 |      2,739 |
ble_then.31452:
.count stack_move
    sub     $sp, 9, $sp                 # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27103], $34              # |     23,754 |    123,654 |          0 |     16,501 |        149 |          0 |
    store   $6, [$sp + 0]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 1]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    store   $4, [$sp + 2]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 3]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    store   $5, [$sp + 4]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $34, $49                    # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$59 + 0], $34              # |     23,754 |     24,738 |          0 |          0 |        164 |          0 |
    load    [$34 + 0], $35              # |     23,754 |    137,806 |     14,506 |     16,501 |         90 |          0 |
    cmp     $35, -1                     # |     23,754 |     71,082 |     47,328 |          0 |          0 |          0 |
    be      bne_cont.31453              # |     23,754 |     26,110 |          0 |          0 |          0 |      1,178 |
bne_then.31453:
    cmp     $35, 99                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    bne     be_else.31454               # |     23,754 |     23,796 |          0 |          0 |          0 |         21 |
be_then.31454:
    load    [$34 + 1], $35
    cmp     $35, -1
    bne     be_else.31455
be_then.31455:
    li      1, $2
.count move_args
    mov     $59, $3
    call    trace_or_matrix.2879
    b       be_cont.31454
be_else.31455:
    li      0, $2
    load    [min_caml_and_net + $35], $3
    call    solve_each_element.2871
    load    [$34 + 2], $35
    load    [$sp + 2], $4
    cmp     $35, -1
    bne     be_else.31456
be_then.31456:
    li      1, $2
.count move_args
    mov     $59, $3
    call    trace_or_matrix.2879
    b       be_cont.31454
be_else.31456:
    li      0, $2
    load    [min_caml_and_net + $35], $3
    call    solve_each_element.2871
    load    [$34 + 3], $35
    load    [$sp + 2], $4
    cmp     $35, -1
    bne     be_else.31457
be_then.31457:
    li      1, $2
.count move_args
    mov     $59, $3
    call    trace_or_matrix.2879
    b       be_cont.31454
be_else.31457:
    li      0, $2
    load    [min_caml_and_net + $35], $3
    call    solve_each_element.2871
    load    [$34 + 4], $35
    load    [$sp + 2], $4
    cmp     $35, -1
    bne     be_else.31458
be_then.31458:
    li      1, $2
.count move_args
    mov     $59, $3
    call    trace_or_matrix.2879
    b       be_cont.31454
be_else.31458:
    li      0, $2
    load    [min_caml_and_net + $35], $3
    call    solve_each_element.2871
    li      5, $2
    load    [$sp + 2], $4
.count move_args
    mov     $34, $3
    call    solve_one_or_network.2875
    li      1, $2
    load    [$sp + 2], $4
.count move_args
    mov     $59, $3
    call    trace_or_matrix.2879
    b       be_cont.31454
be_else.31454:
.count move_args
    mov     $4, $3                      # |     23,754 |    135,186 |          0 |     18,572 |          0 |          0 |
.count move_args
    mov     $35, $2                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    call    solver.2773                 # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    cmp     $18, 0                      # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    load    [$sp + 2], $4               # |     23,754 |     26,412 |          0 |          0 |        443 |          0 |
    li      1, $2                       # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    bne     be_else.31459               # |     23,754 |    135,214 |          0 |     18,572 |          0 |         14 |
be_then.31459:
.count move_args
    mov     $59, $3                     # |     16,978 |     16,978 |          0 |          0 |          0 |          0 |
    call    trace_or_matrix.2879        # |     16,978 |     16,978 |          0 |          0 |          0 |          0 |
    b       be_cont.31459               # |     16,978 |     16,994 |          0 |          0 |          0 |          8 |
be_else.31459:
    fcmp    $49, $42                    # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    bg      ble_else.31460              # |      6,776 |      6,954 |          0 |          0 |          0 |         89 |
ble_then.31460:
.count move_args
    mov     $59, $3
    call    trace_or_matrix.2879
    b       ble_cont.31460
ble_else.31460:
.count move_args
    mov     $34, $3                     # |      6,776 |     41,444 |          0 |      5,778 |          0 |          0 |
    call    solve_one_or_network.2875   # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    load    [$sp + 2], $4               # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $59, $3                     # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    call    trace_or_matrix.2879        # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
ble_cont.31460:
be_cont.31459:
be_cont.31454:
bne_cont.31453:
    load    [$sp + 4], $18              # |     23,754 |    101,742 |          0 |     12,794 |        204 |          0 |
.count load_float
    load    [f.27089], $20              # |     23,754 |    160,944 |          0 |     18,572 |      4,293 |          0 |
    load    [$18 + 2], $19              # |     23,754 |    129,150 |      4,440 |          0 |     16,826 |          0 |
    fcmp    $49, $20                    # |     23,754 |     28,960 |      5,206 |          0 |          0 |          0 |
    bg      ble_else.31461              # |     23,754 |     24,844 |          0 |          0 |          0 |        545 |
ble_then.31461:
    li      0, $21
    b       ble_cont.31461
ble_else.31461:
.count load_float
    load    [f.27104], $21              # |     23,754 |     24,744 |          0 |          0 |        165 |          0 |
    fcmp    $21, $49                    # |     23,754 |     70,932 |     47,178 |          0 |          0 |          0 |
    bg      ble_else.31462              # |     23,754 |    102,570 |          0 |     12,461 |          0 |      2,025 |
ble_then.31462:
    li      0, $21                      # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    b       ble_cont.31462              # |      5,258 |      5,274 |          0 |          0 |          0 |          8 |
ble_else.31462:
    li      1, $21                      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
ble_cont.31462:
ble_cont.31461:
    cmp     $21, 0                      # |     23,754 |     42,250 |     18,496 |          0 |          0 |          0 |
    bne     be_else.31463               # |     23,754 |     24,452 |          0 |          0 |          0 |        349 |
be_then.31463:
.count stack_move
    add     $sp, 9, $sp                 # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    add     $zero, -1, $1               # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    load    [$sp - 6], $2               # |      5,258 |     36,872 |          0 |      5,258 |         11 |          0 |
.count storer
    add     $19, $2, $tmp               # |      5,258 |     15,752 |     10,494 |          0 |          0 |          0 |
    cmp     $2, 0                       # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    bne     be_else.31464               # |      5,258 |      5,274 |          0 |          0 |          0 |          8 |
be_then.31464:
    ret
be_else.31464:
    load    [$sp - 7], $1               # |      5,258 |      5,324 |          0 |          0 |         11 |          0 |
    load    [$1 + 0], $2                # |      5,258 |     15,824 |     10,494 |          0 |         12 |          0 |
    load    [$1 + 1], $3                # |      5,258 |     36,806 |          0 |      5,258 |          0 |          0 |
    load    [$1 + 2], $1                # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    fmul    $2, $55, $2                 # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    fmul    $3, $56, $3                 # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    fmul    $1, $57, $1                 # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    fadd    $2, $3, $2                  # |      5,258 |     21,032 |     15,774 |          0 |          0 |          0 |
    fadd    $2, $1, $1                  # |      5,258 |     26,290 |     21,032 |          0 |          0 |          0 |
    fneg    $1, $1                      # |      5,258 |     26,290 |     21,032 |          0 |          0 |          0 |
    fcmp    $1, $zero                   # |      5,258 |     36,806 |          0 |      5,258 |          0 |          0 |
    bg      ble_else.31465              # |      5,258 |      5,640 |          0 |          0 |          0 |        191 |
ble_then.31465:
    ret                                 # |      3,274 |      3,274 |          0 |          0 |          0 |          0 |
ble_else.31465:
    fmul    $1, $1, $2                  # |      1,984 |      1,984 |          0 |          0 |          0 |          0 |
    fmul    $2, $1, $1                  # |      1,984 |      9,920 |      7,936 |          0 |          0 |          0 |
    load    [$sp - 8], $2               # |      1,984 |      1,984 |          0 |          0 |          0 |          0 |
    fmul    $1, $2, $1                  # |      1,984 |      7,936 |      5,952 |          0 |          0 |          0 |
    load    [min_caml_beam + 0], $2     # |      1,984 |      2,518 |          0 |          0 |         89 |          0 |
    fmul    $1, $2, $1                  # |      1,984 |      9,403 |      4,449 |        495 |          0 |          0 |
    fadd    $46, $1, $2                 # |      1,984 |      9,920 |      7,936 |          0 |          0 |          0 |
.count move_float
    mov     $2, $46                     # |      1,984 |      9,920 |      7,936 |          0 |          0 |          0 |
    fadd    $47, $1, $2                 # |      1,984 |      1,984 |          0 |          0 |          0 |          0 |
    fadd    $48, $1, $1                 # |      1,984 |      1,984 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $2, $47                     # |      1,984 |      7,936 |      5,952 |          0 |          0 |          0 |
.count move_float
    mov     $1, $48                     # |      1,984 |      1,984 |          0 |          0 |          0 |          0 |
    ret                                 # |      1,984 |      1,984 |          0 |          0 |          0 |          0 |
be_else.31463:
    store   $19, [$sp + 5]              # |     18,496 |     91,330 |          0 |     12,139 |          0 |          0 |
    load    [min_caml_intersected_object_id + 0], $21# |     18,496 |     22,858 |          0 |          0 |        727 |          0 |
    load    [min_caml_objects + $21], $2# |     18,496 |     54,376 |     35,538 |          0 |         57 |          0 |
    store   $2, [$sp + 6]               # |     18,496 |     55,374 |     36,878 |          0 |          0 |          0 |
    load    [$2 + 1], $22               # |     18,496 |     18,520 |          0 |          0 |          4 |          0 |
    cmp     $22, 1                      # |     18,496 |     55,480 |     36,984 |          0 |          0 |          0 |
    bne     be_else.31466               # |     18,496 |     19,600 |          0 |          0 |          0 |        552 |
be_then.31466:
    store   $zero, [min_caml_nvector + 0]# |      7,910 |      7,910 |          0 |          0 |          0 |          0 |
    store   $zero, [min_caml_nvector + 1]# |      7,910 |     55,370 |          0 |      7,910 |          0 |          0 |
    store   $zero, [min_caml_nvector + 2]# |      7,910 |      7,910 |          0 |          0 |          0 |          0 |
    load    [min_caml_intsec_rectside + 0], $22# |      7,910 |     33,344 |          0 |          0 |      4,239 |          0 |
    load    [$sp + 2], $23              # |      7,910 |      8,102 |          0 |          0 |         32 |          0 |
    sub     $22, 1, $22                 # |      7,910 |     11,569 |      3,659 |          0 |          0 |          0 |
    load    [$23 + $22], $23            # |      7,910 |     15,922 |      7,910 |          0 |         17 |          0 |
    fcmp    $23, $zero                  # |      7,910 |     23,696 |     15,786 |          0 |          0 |          0 |
    bne     be_else.31467               # |      7,910 |      7,926 |          0 |          0 |          0 |          8 |
be_then.31467:
    store   $zero, [min_caml_nvector + $22]
    b       be_cont.31466
be_else.31467:
    fcmp    $23, $zero                  # |      7,910 |     55,370 |          0 |      7,910 |          0 |          0 |
    bg      ble_else.31468              # |      7,910 |      8,772 |          0 |          0 |          0 |        431 |
ble_then.31468:
    store   $36, [min_caml_nvector + $22]# |      6,667 |      6,667 |          0 |          0 |          0 |          0 |
    b       be_cont.31466               # |      6,667 |      6,675 |          0 |          0 |          0 |          4 |
ble_else.31468:
    store   $40, [min_caml_nvector + $22]# |      1,243 |      1,243 |          0 |          0 |          0 |          0 |
    b       be_cont.31466               # |      1,243 |      1,247 |          0 |          0 |          0 |          2 |
be_else.31466:
    cmp     $22, 2                      # |     10,586 |     39,254 |          0 |      4,778 |          0 |          0 |
    bne     be_else.31469               # |     10,586 |     11,746 |          0 |          0 |          0 |        580 |
be_then.31469:
    load    [$2 + 4], $22               # |      7,226 |      7,292 |          0 |          0 |         11 |          0 |
    load    [$22 + 0], $22              # |      7,226 |     21,890 |     14,430 |          0 |         39 |          0 |
    fneg    $22, $22                    # |      7,226 |     21,600 |     14,374 |          0 |          0 |          0 |
    store   $22, [min_caml_nvector + 0] # |      7,226 |     14,452 |      7,226 |          0 |          0 |          0 |
    load    [$2 + 4], $22               # |      7,226 |      7,226 |          0 |          0 |          0 |          0 |
    load    [$22 + 1], $22              # |      7,226 |     21,678 |     14,452 |          0 |          0 |          0 |
    fneg    $22, $22                    # |      7,226 |     30,394 |     10,094 |      2,179 |          0 |          0 |
    store   $22, [min_caml_nvector + 1] # |      7,226 |     14,452 |      7,226 |          0 |          0 |          0 |
    load    [$2 + 4], $22               # |      7,226 |      7,226 |          0 |          0 |          0 |          0 |
    load    [$22 + 2], $22              # |      7,226 |     21,678 |     14,452 |          0 |          0 |          0 |
    fneg    $22, $22                    # |      7,226 |     21,678 |     14,452 |          0 |          0 |          0 |
    store   $22, [min_caml_nvector + 2] # |      7,226 |     14,452 |      7,226 |          0 |          0 |          0 |
    b       be_cont.31469               # |      7,226 |      7,458 |          0 |          0 |          0 |        116 |
be_else.31469:
    load    [$2 + 3], $22               # |      3,360 |     18,990 |          0 |      2,598 |          7 |          0 |
    load    [$2 + 4], $23               # |      3,360 |     23,580 |          0 |      3,360 |         10 |          0 |
    load    [min_caml_intersection_point + 0], $24# |      3,360 |      6,312 |          0 |          0 |        492 |          0 |
    load    [$2 + 5], $25               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$23 + 0], $23              # |      3,360 |      3,420 |          0 |          0 |         10 |          0 |
    load    [min_caml_intersection_point + 1], $26# |      3,360 |      3,366 |          0 |          0 |          1 |          0 |
    load    [$25 + 0], $25              # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $27               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $28# |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fsub    $24, $25, $24               # |      3,360 |      3,912 |          0 |         92 |          0 |          0 |
    load    [$2 + 4], $25               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$27 + 1], $27              # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $29               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$25 + 1], $25              # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fmul    $24, $23, $23               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fsub    $26, $27, $26               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$2 + 4], $27               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$29 + 2], $29              # |      3,360 |      3,930 |          0 |         92 |          3 |          0 |
    cmp     $22, 0                      # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    load    [$27 + 2], $27              # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fmul    $26, $25, $25               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fsub    $28, $29, $28               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fmul    $28, $27, $27               # |      3,360 |     16,800 |     13,440 |          0 |          0 |          0 |
    bne     be_else.31470               # |      3,360 |      3,380 |          0 |          0 |          0 |         10 |
be_then.31470:
    store   $23, [min_caml_nvector + 0] # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    store   $25, [min_caml_nvector + 1] # |      3,360 |      3,912 |          0 |         92 |          0 |          0 |
    store   $27, [min_caml_nvector + 2] # |      3,360 |      6,618 |      3,258 |          0 |          0 |          0 |
    b       be_cont.31470               # |      3,360 |      4,660 |          0 |          0 |          0 |        650 |
be_else.31470:
    load    [$2 + 9], $22
    load    [$2 + 9], $29
    load    [$22 + 2], $22
    load    [$29 + 1], $29
    fmul    $26, $22, $22
    fmul    $28, $29, $29
    fadd    $22, $29, $22
    fmul    $22, $39, $22
    fadd    $23, $22, $22
    store   $22, [min_caml_nvector + 0]
    load    [$2 + 9], $22
    load    [$2 + 9], $23
    load    [$22 + 2], $22
    load    [$23 + 0], $23
    fmul    $24, $22, $22
    fmul    $28, $23, $23
    fadd    $22, $23, $22
    fmul    $22, $39, $22
    fadd    $25, $22, $22
    store   $22, [min_caml_nvector + 1]
    load    [$2 + 9], $22
    load    [$2 + 9], $23
    load    [$22 + 1], $22
    load    [$23 + 0], $23
    fmul    $24, $22, $22
    fmul    $26, $23, $23
    fadd    $22, $23, $22
    fmul    $22, $39, $22
    fadd    $27, $22, $22
    store   $22, [min_caml_nvector + 2]
be_cont.31470:
    load    [min_caml_nvector + 0], $22 # |      3,360 |     21,942 |          0 |      2,959 |        138 |          0 |
    load    [$2 + 6], $23               # |      3,360 |      9,846 |          0 |          0 |      1,081 |          0 |
    load    [min_caml_nvector + 1], $25 # |      3,360 |      3,372 |          0 |          0 |          2 |          0 |
    fmul    $22, $22, $24               # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fmul    $25, $25, $25               # |      3,360 |      6,718 |      3,358 |          0 |          0 |          0 |
    fadd    $24, $25, $24               # |      3,360 |     16,800 |     13,440 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $25 # |      3,360 |      3,498 |          0 |          0 |         23 |          0 |
    fmul    $25, $25, $25               # |      3,360 |     21,900 |        786 |      2,959 |          0 |          0 |
    fadd    $24, $25, $24               # |      3,360 |     16,800 |     13,440 |          0 |          0 |          0 |
    fsqrt   $24, $24                    # |      3,360 |     16,800 |     13,440 |          0 |          0 |          0 |
    fcmp    $24, $zero                  # |      3,360 |     16,800 |     13,440 |          0 |          0 |          0 |
    bne     be_else.31471               # |      3,360 |      3,368 |          0 |          0 |          0 |          4 |
be_then.31471:
    mov     $36, $23
    b       be_cont.31471
be_else.31471:
    cmp     $23, 0                      # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    finv    $24, $23                    # |      3,360 |     21,114 |          0 |      2,959 |          0 |          0 |
    be      bne_cont.31472              # |      3,360 |      3,708 |          0 |          0 |          0 |        174 |
bne_then.31472:
    fneg    $23, $23                    # |        232 |        758 |        526 |          0 |          0 |          0 |
bne_cont.31472:
be_cont.31471:
    fmul    $22, $23, $22               # |      3,360 |     12,798 |      9,438 |          0 |          0 |          0 |
    store   $22, [min_caml_nvector + 0] # |      3,360 |     16,800 |     13,440 |          0 |          0 |          0 |
    load    [min_caml_nvector + 1], $22 # |      3,360 |      3,360 |          0 |          0 |          0 |          0 |
    fmul    $22, $23, $22               # |      3,360 |     10,080 |      6,720 |          0 |          0 |          0 |
    store   $22, [min_caml_nvector + 1] # |      3,360 |     16,800 |     13,440 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $22 # |      3,360 |     16,548 |          0 |      2,198 |          0 |          0 |
    fmul    $22, $23, $22               # |      3,360 |     10,080 |      6,720 |          0 |          0 |          0 |
    store   $22, [min_caml_nvector + 2] # |      3,360 |     16,800 |     13,440 |          0 |          0 |          0 |
be_cont.31469:
be_cont.31466:
    load    [min_caml_intersection_point + 0], $22# |     18,496 |     68,674 |          0 |      8,204 |        159 |          0 |
    store   $22, [min_caml_startp + 0]  # |     18,496 |     55,170 |     36,674 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 1], $22# |     18,496 |     18,532 |          0 |          0 |          6 |          0 |
    store   $22, [min_caml_startp + 1]  # |     18,496 |     55,476 |     36,980 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $22# |     18,496 |     19,792 |          0 |          0 |        216 |          0 |
    store   $22, [min_caml_startp + 2]  # |     18,496 |     97,004 |     16,096 |     10,402 |          0 |          0 |
    call    utexture.2908               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    sll     $21, 2, $15                 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [min_caml_intsec_rectside + 0], $16# |     18,496 |     34,858 |          0 |          0 |      2,727 |          0 |
    add     $15, $16, $15               # |     18,496 |     50,034 |     31,538 |          0 |          0 |          0 |
    load    [$sp + 3], $16              # |     18,496 |     19,222 |          0 |          0 |        121 |          0 |
.count storer
    add     $19, $16, $tmp              # |     18,496 |     55,246 |     36,750 |          0 |          0 |          0 |
    store   $15, [$tmp + 0]             # |     18,496 |     36,992 |     18,496 |          0 |          0 |          0 |
    load    [$18 + 1], $15              # |     18,496 |    229,912 |          0 |     18,478 |     16,758 |          0 |
    load    [min_caml_intersection_point + 0], $17# |     18,496 |     19,012 |          0 |          0 |         86 |          0 |
    load    [$15 + $16], $15            # |     18,496 |    121,322 |      1,738 |          0 |     16,848 |          0 |
    store   $17, [$15 + 0]              # |     18,496 |     21,792 |      3,296 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 1], $17# |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    store   $17, [$15 + 1]              # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $17# |     18,496 |     18,754 |          0 |          0 |         43 |          0 |
    store   $17, [$15 + 2]              # |     18,496 |     55,402 |     36,906 |          0 |          0 |          0 |
    load    [$sp + 6], $15              # |     18,496 |    141,226 |          0 |     18,478 |      1,977 |          0 |
    load    [$18 + 3], $17              # |     18,496 |     19,204 |          0 |          0 |        118 |          0 |
    load    [$sp + 1], $19              # |     18,496 |     21,772 |          0 |          0 |        546 |          0 |
    load    [$15 + 7], $15              # |     18,496 |     27,790 |          0 |          0 |      1,549 |          0 |
.count storer
    add     $17, $16, $tmp              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$15 + 0], $15              # |     18,496 |     46,969 |     16,947 |          0 |      1,921 |          0 |
    fmul    $15, $19, $19               # |     18,496 |     51,646 |     33,150 |          0 |          0 |          0 |
    fcmp    $39, $15                    # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    store   $19, [$sp + 7]              # |     18,496 |    129,418 |         54 |     18,478 |          0 |          0 |
    bg      ble_else.31473              # |     18,496 |     20,282 |          0 |          0 |          0 |        893 |
ble_then.31473:
    li      1, $15                      # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    store   $15, [$tmp + 0]             # |     11,126 |     22,252 |     11,126 |          0 |          0 |          0 |
    load    [$18 + 4], $15              # |     11,126 |     12,350 |          0 |          0 |        204 |          0 |
    load    [min_caml_texture_color + 0], $21# |     11,126 |     16,046 |          0 |          0 |        820 |          0 |
    load    [$15 + $16], $17            # |     11,126 |     87,995 |     10,113 |          0 |     11,126 |          0 |
    store   $21, [$17 + 0]              # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    store   $54, [$17 + 1]              # |     11,126 |     77,876 |          0 |     11,125 |          0 |          0 |
    store   $58, [$17 + 2]              # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    load    [$15 + $16], $15            # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27105], $17              # |     11,126 |     61,730 |          0 |          0 |      8,434 |          0 |
.count load_float
    load    [f.27106], $17              # |     11,126 |     55,190 |          0 |          0 |      7,344 |          0 |
    fmul    $17, $19, $17               # |     11,126 |     18,690 |      7,564 |          0 |          0 |          0 |
    load    [$15 + 0], $19              # |     11,126 |     77,882 |          0 |          0 |     11,126 |          0 |
    fmul    $19, $17, $19               # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    store   $19, [$15 + 0]              # |     11,126 |     77,880 |          4 |     11,125 |          0 |          0 |
    load    [$15 + 1], $19              # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    fmul    $19, $17, $19               # |     11,126 |     33,378 |     22,252 |          0 |          0 |          0 |
    store   $19, [$15 + 1]              # |     11,126 |     55,630 |     44,504 |          0 |          0 |          0 |
    load    [$15 + 2], $19              # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    fmul    $19, $17, $17               # |     11,126 |     33,378 |     22,252 |          0 |          0 |          0 |
    store   $17, [$15 + 2]              # |     11,126 |     55,630 |     44,504 |          0 |          0 |          0 |
    load    [$18 + 7], $15              # |     11,126 |     76,676 |          0 |          0 |     10,925 |          0 |
    load    [$15 + $16], $15            # |     11,126 |    144,632 |          0 |     11,125 |     11,126 |          0 |
    load    [min_caml_nvector + 0], $16 # |     11,126 |     12,254 |          0 |          0 |        188 |          0 |
    store   $16, [$15 + 0]              # |     11,126 |     33,002 |     21,876 |          0 |          0 |          0 |
    load    [min_caml_nvector + 1], $16 # |     11,126 |     11,318 |          0 |          0 |         32 |          0 |
    store   $16, [$15 + 1]              # |     11,126 |     33,314 |     22,188 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $16 # |     11,126 |     11,594 |          0 |          0 |         78 |          0 |
    store   $16, [$15 + 2]              # |     11,126 |     33,222 |     22,096 |          0 |          0 |          0 |
    b       ble_cont.31473              # |     11,126 |     11,518 |          0 |          0 |          0 |        196 |
ble_else.31473:
    li      0, $15                      # |      7,370 |     51,506 |          0 |      7,356 |          0 |          0 |
    store   $15, [$tmp + 0]             # |      7,370 |     14,740 |      7,370 |          0 |          0 |          0 |
ble_cont.31473:
    load    [min_caml_nvector + 0], $15 # |     18,496 |     85,564 |          0 |     11,095 |         83 |          0 |
.count load_float
    load    [f.27107], $16              # |     18,496 |     87,616 |          0 |          0 |     11,520 |          0 |
    load    [$sp + 2], $17              # |     18,496 |     19,048 |          0 |          0 |         92 |          0 |
    load    [min_caml_nvector + 1], $22 # |     18,496 |     18,622 |          0 |          0 |         21 |          0 |
    load    [$17 + 0], $18              # |     18,496 |     38,043 |     18,383 |          0 |        194 |          0 |
    load    [$17 + 1], $21              # |     18,496 |     18,640 |          0 |          0 |         24 |          0 |
    fmul    $18, $15, $19               # |     18,496 |     37,409 |     18,151 |        127 |          0 |          0 |
    fmul    $21, $22, $21               # |     18,496 |     18,690 |        194 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $22 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    fadd    $19, $21, $19               # |     18,496 |     73,984 |     55,488 |          0 |          0 |          0 |
    load    [$17 + 2], $21              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    fmul    $21, $22, $21               # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    fadd    $19, $21, $19               # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    fmul    $16, $19, $16               # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    fmul    $16, $15, $15               # |     18,496 |     92,734 |     73,476 |        127 |          0 |          0 |
    fadd    $18, $15, $15               # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    store   $15, [$17 + 0]              # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    load    [$17 + 1], $15              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [min_caml_nvector + 1], $18 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    fmul    $16, $18, $18               # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    fadd    $15, $18, $15               # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    store   $15, [$17 + 1]              # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    load    [$17 + 2], $15              # |     18,496 |     19,258 |          0 |        127 |          0 |          0 |
    load    [min_caml_nvector + 2], $18 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    fmul    $16, $18, $16               # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    fadd    $15, $16, $15               # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    store   $15, [$17 + 2]              # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    load    [$59 + 0], $15              # |     18,496 |     19,660 |          0 |          0 |        194 |          0 |
    load    [$15 + 0], $2               # |     18,496 |     55,700 |     36,604 |          0 |        100 |          0 |
    cmp     $2, -1                      # |     18,496 |     55,288 |     36,792 |          0 |          0 |          0 |
    bne     be_else.31474               # |     18,496 |     19,624 |          0 |        127 |          0 |        183 |
be_then.31474:
    li      0, $14
    b       be_cont.31474
be_else.31474:
    store   $15, [$sp + 8]              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    cmp     $2, 99                      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    bne     be_else.31475               # |     18,496 |     18,790 |          0 |          0 |          0 |        147 |
be_then.31475:
    li      1, $30
    b       be_cont.31475
be_else.31475:
    call    solver_fast.2796            # |     18,496 |     26,644 |          0 |      1,358 |          0 |          0 |
.count move_ret
    mov     $1, $30                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    cmp     $30, 0                      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    bne     be_else.31476               # |     18,496 |     19,584 |          0 |          0 |          0 |        544 |
be_then.31476:
    li      0, $30                      # |     13,405 |     13,405 |          0 |          0 |          0 |          0 |
    b       be_cont.31476               # |     13,405 |     13,421 |          0 |          0 |          0 |          8 |
be_else.31476:
    fcmp    $20, $42                    # |      5,091 |      5,091 |          0 |          0 |          0 |          0 |
    bg      ble_else.31477              # |      5,091 |      6,079 |          0 |          0 |          0 |        494 |
ble_then.31477:
    li      0, $30                      # |        207 |      1,431 |          0 |        204 |          0 |          0 |
    b       ble_cont.31477              # |        207 |        363 |          0 |          0 |          0 |         78 |
ble_else.31477:
    load    [$15 + 1], $30              # |      4,884 |     34,122 |          0 |      4,873 |          0 |          0 |
    cmp     $30, -1                     # |      4,884 |     14,652 |      9,768 |          0 |          0 |          0 |
    bne     be_else.31478               # |      4,884 |      6,726 |          0 |          0 |          0 |        921 |
be_then.31478:
    li      0, $30
    b       be_cont.31478
be_else.31478:
    li      0, $2                       # |      4,884 |      4,884 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $30], $3# |      4,884 |     34,392 |          0 |      4,864 |         54 |          0 |
    call    shadow_check_and_group.2862 # |      4,884 |      4,884 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $30                     # |      4,884 |      4,884 |          0 |          0 |          0 |          0 |
    cmp     $30, 0                      # |      4,884 |      4,884 |          0 |          0 |          0 |          0 |
    bne     be_else.31479               # |      4,884 |      5,974 |          0 |          0 |          0 |        545 |
be_then.31479:
    load    [$sp + 8], $30              # |      4,517 |      5,537 |          0 |          0 |        170 |          0 |
    load    [$30 + 2], $31              # |      4,517 |     13,217 |      8,694 |          0 |          1 |          0 |
    cmp     $31, -1                     # |      4,517 |     13,549 |      9,032 |          0 |          0 |          0 |
    bne     be_else.31480               # |      4,517 |      8,379 |          0 |         98 |          0 |      1,637 |
be_then.31480:
    li      0, $30
    b       be_cont.31479
be_else.31480:
    li      0, $2                       # |      4,517 |      4,517 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $31], $3# |      4,517 |      4,643 |          0 |          0 |         21 |          0 |
    call    shadow_check_and_group.2862 # |      4,517 |      4,517 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $33                     # |      4,517 |      4,517 |          0 |          0 |          0 |          0 |
    cmp     $33, 0                      # |      4,517 |      4,517 |          0 |          0 |          0 |          0 |
    bne     be_else.31481               # |      4,517 |      5,967 |          0 |         98 |          0 |        431 |
be_then.31481:
    li      3, $2                       # |      4,439 |      4,439 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $30, $3                     # |      4,439 |      4,439 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_group.2865# |      4,439 |      4,439 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $30                     # |      4,439 |      4,439 |          0 |          0 |          0 |          0 |
    cmp     $30, 0                      # |      4,439 |      4,439 |          0 |          0 |          0 |          0 |
    bne     be_else.31482               # |      4,439 |      4,675 |          0 |          0 |          0 |        118 |
be_then.31482:
    li      0, $30                      # |      4,100 |      4,100 |          0 |          0 |          0 |          0 |
    b       be_cont.31479               # |      4,100 |      4,282 |          0 |         29 |          0 |          4 |
be_else.31482:
    li      1, $30                      # |        339 |        345 |          0 |          1 |          0 |          0 |
    b       be_cont.31479               # |        339 |        343 |          0 |          0 |          0 |          2 |
be_else.31481:
    li      1, $30                      # |         78 |         78 |          0 |          0 |          0 |          0 |
    b       be_cont.31479               # |         78 |         82 |          0 |          0 |          0 |          2 |
be_else.31479:
    li      1, $30                      # |        367 |        367 |          0 |          0 |          0 |          0 |
be_cont.31479:
be_cont.31478:
ble_cont.31477:
be_cont.31476:
be_cont.31475:
    cmp     $30, 0                      # |     18,496 |     19,445 |        367 |         97 |          0 |          0 |
    bne     be_else.31483               # |     18,496 |     18,698 |          0 |          0 |          0 |        101 |
be_then.31483:
    li      1, $2                       # |     17,712 |     18,102 |          0 |         65 |          0 |          0 |
.count move_args
    mov     $59, $3                     # |     17,712 |     17,712 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_matrix.2868# |     17,712 |     17,712 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |     17,712 |     17,712 |          0 |          0 |          0 |          0 |
    b       be_cont.31483               # |     17,712 |     17,724 |          0 |          0 |          0 |          6 |
be_else.31483:
    load    [$sp + 8], $30              # |        784 |        910 |          0 |          0 |         21 |          0 |
    load    [$30 + 1], $31              # |        784 |      2,310 |      1,526 |          0 |          0 |          0 |
    cmp     $31, -1                     # |        784 |      2,352 |      1,568 |          0 |          0 |          0 |
    bne     be_else.31484               # |        784 |      1,454 |          0 |         70 |          0 |        125 |
be_then.31484:
    li      1, $2
.count move_args
    mov     $59, $3
    call    shadow_check_one_or_matrix.2868
.count move_ret
    mov     $1, $14
    b       be_cont.31484
be_else.31484:
    li      0, $2                       # |        784 |        784 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $31], $3# |        784 |        784 |          0 |          0 |          0 |          0 |
    call    shadow_check_and_group.2862 # |        784 |      1,204 |          0 |         70 |          0 |          0 |
.count move_ret
    mov     $1, $31                     # |        784 |        784 |          0 |          0 |          0 |          0 |
    cmp     $31, 0                      # |        784 |        784 |          0 |          0 |          0 |          0 |
    bne     be_else.31485               # |        784 |        846 |          0 |          0 |          0 |         31 |
be_then.31485:
    load    [$30 + 2], $31              # |        417 |        417 |          0 |          0 |          0 |          0 |
    cmp     $31, -1                     # |        417 |      1,251 |        834 |          0 |          0 |          0 |
    bne     be_else.31486               # |        417 |        449 |          0 |          0 |          0 |         16 |
be_then.31486:
    li      1, $2
.count move_args
    mov     $59, $3
    call    shadow_check_one_or_matrix.2868
.count move_ret
    mov     $1, $14
    b       be_cont.31485
be_else.31486:
    li      0, $2                       # |        417 |        783 |          0 |         61 |          0 |          0 |
    load    [min_caml_and_net + $31], $3# |        417 |        417 |          0 |          0 |          0 |          0 |
    call    shadow_check_and_group.2862 # |        417 |        417 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $33                     # |        417 |        417 |          0 |          0 |          0 |          0 |
    cmp     $33, 0                      # |        417 |        783 |          0 |         61 |          0 |          0 |
    bne     be_else.31487               # |        417 |        425 |          0 |          0 |          0 |          4 |
be_then.31487:
    li      3, $2                       # |        339 |        339 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $30, $3                     # |        339 |        339 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_group.2865# |        339 |        339 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |        339 |        339 |          0 |          0 |          0 |          0 |
    cmp     $14, 0                      # |        339 |        339 |          0 |          0 |          0 |          0 |
    bne     be_else.31488               # |        339 |        343 |          0 |          0 |          0 |          2 |
be_then.31488:
    li      1, $2
.count move_args
    mov     $59, $3
    call    shadow_check_one_or_matrix.2868
.count move_ret
    mov     $1, $14
    b       be_cont.31485
be_else.31488:
    li      1, $14                      # |        339 |        621 |          0 |         47 |          0 |          0 |
    b       be_cont.31485               # |        339 |        349 |          0 |          0 |          0 |          5 |
be_else.31487:
    li      1, $14                      # |         78 |        162 |          0 |         14 |          0 |          0 |
    b       be_cont.31485               # |         78 |         82 |          0 |          0 |          0 |          2 |
be_else.31485:
    li      1, $14                      # |        367 |        367 |          0 |          0 |          0 |          0 |
be_cont.31485:
be_cont.31484:
be_cont.31483:
be_cont.31474:
    load    [$sp + 6], $15              # |     18,496 |     19,888 |          0 |        127 |        105 |          0 |
    load    [$sp + 1], $16              # |     18,496 |     18,826 |          0 |          0 |         55 |          0 |
    cmp     $14, 0                      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$15 + 7], $15              # |     18,496 |     33,016 |          0 |          0 |      2,420 |          0 |
    load    [$15 + 1], $15              # |     18,496 |     85,256 |     32,152 |          0 |      5,768 |          0 |
    fmul    $16, $15, $15               # |     18,496 |     43,952 |     25,456 |          0 |          0 |          0 |
    bne     be_cont.31489               # |     18,496 |     19,284 |          0 |        128 |          0 |         10 |
be_then.31489:
    load    [min_caml_nvector + 0], $14 # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    load    [min_caml_nvector + 1], $16 # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    fmul    $14, $55, $14               # |     17,539 |     35,078 |     17,539 |          0 |          0 |          0 |
    fmul    $16, $56, $16               # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    fadd    $14, $16, $14               # |     17,539 |     87,695 |     70,156 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $16 # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    fmul    $16, $57, $16               # |     17,539 |     52,617 |     35,078 |          0 |          0 |          0 |
    fadd    $14, $16, $14               # |     17,539 |     87,825 |     69,896 |         65 |          0 |          0 |
    load    [$sp + 7], $16              # |     17,539 |     18,223 |          0 |          0 |        114 |          0 |
    fneg    $14, $14                    # |     17,539 |     69,814 |     52,275 |          0 |          0 |          0 |
    fmul    $14, $16, $14               # |     17,539 |     35,078 |     17,539 |          0 |          0 |          0 |
    load    [$sp + 2], $16              # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    load    [$16 + 0], $17              # |     17,539 |     52,617 |     35,078 |          0 |          0 |          0 |
    load    [$16 + 1], $18              # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    load    [$16 + 2], $16              # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    fmul    $17, $55, $17               # |     17,539 |     17,929 |          0 |         65 |          0 |          0 |
    fmul    $18, $56, $18               # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    fmul    $16, $57, $16               # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    fcmp    $14, $zero                  # |     17,539 |     17,539 |          0 |          0 |          0 |          0 |
    fadd    $17, $18, $17               # |     17,539 |     52,617 |     35,078 |          0 |          0 |          0 |
    fadd    $17, $16, $16               # |     17,539 |     87,695 |     70,156 |          0 |          0 |          0 |
    fneg    $16, $16                    # |     17,539 |     87,695 |     70,156 |          0 |          0 |          0 |
    ble     bg_cont.31490               # |     17,539 |     17,549 |          0 |          0 |          0 |          5 |
bg_then.31490:
    load    [min_caml_texture_color + 0], $17# |     17,537 |    123,551 |          0 |     17,537 |        132 |          0 |
    fmul    $14, $17, $17               # |     17,537 |     52,347 |     34,810 |          0 |          0 |          0 |
    fadd    $46, $17, $17               # |     17,537 |     87,685 |     70,148 |          0 |          0 |          0 |
.count move_float
    mov     $17, $46                    # |     17,537 |     87,685 |     70,148 |          0 |          0 |          0 |
    fmul    $14, $54, $17               # |     17,537 |     17,537 |          0 |          0 |          0 |          0 |
    fmul    $14, $58, $14               # |     17,537 |     17,537 |          0 |          0 |          0 |          0 |
    fadd    $47, $17, $17               # |     17,537 |     70,148 |     52,611 |          0 |          0 |          0 |
    fadd    $48, $14, $14               # |     17,537 |     17,537 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $17, $47                    # |     17,537 |    122,759 |          0 |     17,537 |          0 |          0 |
.count move_float
    mov     $14, $48                    # |     17,537 |     17,537 |          0 |          0 |          0 |          0 |
bg_cont.31490:
    fcmp    $16, $zero                  # |     17,539 |     17,551 |          0 |          2 |          0 |          0 |
    ble     bg_cont.31491               # |     17,539 |     19,007 |          0 |          0 |          0 |        734 |
bg_then.31491:
    fmul    $16, $16, $14               # |      6,452 |      6,452 |          0 |          0 |          0 |          0 |
    fmul    $14, $14, $14               # |      6,452 |     32,260 |     25,808 |          0 |          0 |          0 |
    fmul    $14, $15, $14               # |      6,452 |     32,260 |     25,808 |          0 |          0 |          0 |
    fadd    $46, $14, $16               # |      6,452 |     32,260 |     25,808 |          0 |          0 |          0 |
.count move_float
    mov     $16, $46                    # |      6,452 |     45,164 |          0 |      6,452 |          0 |          0 |
    fadd    $47, $14, $16               # |      6,452 |      6,452 |          0 |          0 |          0 |          0 |
    fadd    $48, $14, $14               # |      6,452 |      6,452 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $16, $47                    # |      6,452 |     25,808 |     19,356 |          0 |          0 |          0 |
.count move_float
    mov     $14, $48                    # |      6,452 |      6,452 |          0 |          0 |          0 |          0 |
bg_cont.31491:
be_cont.31489:
    li      min_caml_intersection_point, $2# |     18,496 |     90,760 |          0 |     12,044 |          0 |          0 |
    load    [min_caml_intersection_point + 0], $14# |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $3                  # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $14, $51                    # |     18,496 |    129,472 |          0 |     18,496 |          0 |          0 |
    load    [min_caml_intersection_point + 1], $14# |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $14, $52                    # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $14# |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $14, $53                    # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [min_caml_n_reflections + 0], $1# |     18,496 |     84,970 |          0 |          0 |     11,079 |          0 |
    load    [$sp + 7], $3               # |     18,496 |     18,532 |          0 |          0 |          6 |          0 |
    load    [$sp + 2], $5               # |     18,496 |    129,472 |          0 |     18,496 |          0 |          0 |
    sub     $1, 1, $2                   # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $15, $4                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    call    trace_reflections.2915      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 9, $sp                 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27098], $1               # |     18,496 |    129,472 |          0 |          0 |     18,496 |          0 |
    load    [$sp - 8], $2               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    fcmp    $2, $1                      # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    bg      ble_else.31492              # |     18,496 |    129,492 |          0 |     18,496 |          0 |         10 |
ble_then.31492:
    ret
ble_else.31492:
    load    [$sp - 6], $1               # |     18,496 |     18,802 |          0 |          0 |         51 |          0 |
    cmp     $1, 4                       # |     18,496 |     55,386 |     36,890 |          0 |          0 |          0 |
    bge     bl_cont.31493               # |     18,496 |     20,432 |          0 |          0 |          0 |        968 |
bl_then.31493:
    add     $1, 1, $1                   # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    add     $zero, -1, $3               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$sp - 4], $4               # |     18,496 |     28,948 |          0 |          0 |      1,742 |          0 |
.count storer
    add     $4, $1, $tmp                # |     18,496 |    129,472 |          0 |     18,496 |          0 |          0 |
    store   $3, [$tmp + 0]              # |     18,496 |     36,992 |     18,496 |          0 |          0 |          0 |
bl_cont.31493:
    load    [$sp - 3], $1               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $3                # |     18,496 |     63,108 |     36,992 |          0 |      1,270 |          0 |
    cmp     $3, 2                       # |     18,496 |     52,948 |     34,452 |          0 |          0 |          0 |
    bne     be_else.31494               # |     18,496 |     18,828 |          0 |          0 |          0 |        166 |
be_then.31494:
    load    [$1 + 7], $1                # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
    load    [$sp - 9], $3               # |      7,370 |      7,778 |          0 |          0 |         68 |          0 |
    load    [$sp - 7], $4               # |      7,370 |     51,590 |          0 |      7,370 |          0 |          0 |
    load    [$1 + 0], $1                # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
    fadd    $3, $49, $6                 # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
    load    [$sp - 6], $3               # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
    fsub    $36, $1, $1                 # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
    load    [$sp - 5], $5               # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
    add     $3, 1, $3                   # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
    fmul    $2, $1, $1                  # |      7,370 |     22,110 |     14,740 |          0 |          0 |          0 |
.count move_args
    mov     $3, $2                      # |      7,370 |     14,228 |          0 |      1,143 |          0 |          0 |
.count move_args
    mov     $1, $3                      # |      7,370 |     26,051 |     18,681 |          0 |          0 |          0 |
    b       trace_ray.2920              # |      7,370 |      7,468 |          0 |          0 |          0 |         49 |
be_else.31494:
    ret                                 # |     11,126 |     41,330 |          0 |      5,034 |          0 |          0 |
ble_else.31452:
    ret
.end trace_ray

######################################################################
.begin trace_diffuse_ray
trace_diffuse_ray.2926:
.count stack_move
    sub     $sp, 4, $sp                 # |  1,116,120 |  1,116,474 |          0 |         59 |          0 |          0 |
.count load_float
    load    [f.27103], $32              # |  1,116,120 |  1,315,314 |          0 |          0 |     33,199 |          0 |
    store   $3, [$sp + 0]               # |  1,116,120 |  1,124,749 |      8,629 |          0 |          0 |          0 |
    store   $2, [$sp + 1]               # |  1,116,120 |  1,183,458 |          0 |     11,223 |          0 |          0 |
.count move_float
    mov     $32, $49                    # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    load    [$59 + 0], $32              # |  1,116,120 |  1,187,124 |          0 |          0 |     11,834 |          0 |
    load    [$32 + 0], $33              # |  1,116,120 |  3,385,016 |  2,208,572 |          0 |     10,054 |          0 |
    cmp     $33, -1                     # |  1,116,120 |  3,328,252 |  2,212,132 |          0 |          0 |          0 |
    be      bne_cont.31495              # |  1,116,120 |  1,312,926 |          0 |          0 |          0 |     98,403 |
bne_then.31495:
    cmp     $33, 99                     # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    bne     be_else.31496               # |  1,116,120 |  1,163,312 |          0 |          0 |          0 |     23,596 |
be_then.31496:
    load    [$32 + 1], $33
.count move_args
    mov     $2, $4
    cmp     $33, -1
    bne     be_else.31497
be_then.31497:
    li      1, $32
.count move_args
    mov     $59, $3
.count move_args
    mov     $32, $2
    call    trace_or_matrix_fast.2893
    b       be_cont.31496
be_else.31497:
    li      0, $28
    load    [min_caml_and_net + $33], $3
.count move_args
    mov     $28, $2
    call    solve_each_element_fast.2885
    load    [$32 + 2], $33
    load    [$sp + 1], $4
    cmp     $33, -1
    bne     be_else.31498
be_then.31498:
    li      1, $2
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
    b       be_cont.31496
be_else.31498:
    li      0, $2
    load    [min_caml_and_net + $33], $3
    call    solve_each_element_fast.2885
    load    [$32 + 3], $33
    load    [$sp + 1], $4
    cmp     $33, -1
    bne     be_else.31499
be_then.31499:
    li      1, $2
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
    b       be_cont.31496
be_else.31499:
    li      0, $2
    load    [min_caml_and_net + $33], $3
    call    solve_each_element_fast.2885
    load    [$32 + 4], $33
    load    [$sp + 1], $4
    cmp     $33, -1
    bne     be_else.31500
be_then.31500:
    li      1, $2
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
    b       be_cont.31496
be_else.31500:
    li      0, $2
    load    [min_caml_and_net + $33], $3
    call    solve_each_element_fast.2885
    li      5, $2
    load    [$sp + 1], $4
.count move_args
    mov     $32, $3
    call    solve_one_or_network_fast.2889
    li      1, $2
    load    [$sp + 1], $4
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
    b       be_cont.31496
be_else.31496:
.count move_args
    mov     $2, $3                      # |  1,116,120 |  1,182,066 |          0 |     10,991 |          0 |          0 |
.count move_args
    mov     $33, $2                     # |  1,116,120 |  1,153,104 |          0 |      6,164 |          0 |          0 |
    call    solver_fast2.2814           # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $33                     # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    cmp     $33, 0                      # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    load    [$sp + 1], $4               # |  1,116,120 |  1,311,348 |          0 |          0 |     32,538 |          0 |
    li      1, $2                       # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    bne     be_else.31501               # |  1,116,120 |  1,209,632 |          0 |          0 |          0 |     46,756 |
be_then.31501:
.count move_args
    mov     $59, $3                     # |    436,322 |    436,322 |          0 |          0 |          0 |          0 |
    call    trace_or_matrix_fast.2893   # |    436,322 |    442,154 |          0 |        972 |          0 |          0 |
    b       be_cont.31501               # |    436,322 |    436,338 |          0 |          0 |          0 |          8 |
be_else.31501:
    fcmp    $49, $42                    # |    679,798 |    710,956 |          0 |      5,193 |          0 |          0 |
    bg      ble_else.31502              # |    679,798 |    679,830 |          0 |          0 |          0 |         16 |
ble_then.31502:
.count move_args
    mov     $59, $3
    call    trace_or_matrix_fast.2893
    b       ble_cont.31502
ble_else.31502:
.count move_args
    mov     $32, $3                     # |    679,798 |    679,798 |          0 |          0 |          0 |          0 |
    call    solve_one_or_network_fast.2889# |    679,798 |    710,950 |          0 |      5,192 |          0 |          0 |
    li      1, $2                       # |    679,798 |    679,798 |          0 |          0 |          0 |          0 |
    load    [$sp + 1], $4               # |    679,798 |    810,598 |          0 |          0 |     21,800 |          0 |
.count move_args
    mov     $59, $3                     # |    679,798 |    679,798 |          0 |          0 |          0 |          0 |
    call    trace_or_matrix_fast.2893   # |    679,798 |    679,798 |          0 |          0 |          0 |          0 |
ble_cont.31502:
be_cont.31501:
be_cont.31496:
bne_cont.31495:
.count load_float
    load    [f.27089], $18              # |  1,116,120 |  4,184,112 |          0 |        952 |    510,380 |          0 |
    fcmp    $49, $18                    # |  1,116,120 |  2,327,600 |  1,211,480 |          0 |          0 |          0 |
    bg      ble_else.31503              # |  1,116,120 |  1,116,956 |          0 |          0 |          0 |        418 |
ble_then.31503:
    li      0, $19
    b       ble_cont.31503
ble_else.31503:
.count load_float
    load    [f.27104], $19              # |  1,116,120 |  1,486,398 |          0 |      6,139 |     55,574 |          0 |
    fcmp    $19, $49                    # |  1,116,120 |  3,237,212 |  2,121,092 |          0 |          0 |          0 |
    bg      ble_else.31504              # |  1,116,120 |  1,586,608 |          0 |          0 |          0 |    235,244 |
ble_then.31504:
    li      0, $19                      # |    473,955 |    473,955 |          0 |          0 |          0 |          0 |
    b       ble_cont.31504              # |    473,955 |    475,275 |          0 |          0 |          0 |        660 |
ble_else.31504:
    li      1, $19                      # |    642,165 |    642,165 |          0 |          0 |          0 |          0 |
ble_cont.31504:
ble_cont.31503:
    cmp     $19, 0                      # |  1,116,120 |  1,783,999 |    641,761 |      4,353 |          0 |          0 |
    bne     be_else.31505               # |  1,116,120 |  1,147,150 |          0 |          0 |          0 |     15,515 |
be_then.31505:
.count stack_move
    add     $sp, 4, $sp                 # |    473,955 |    473,955 |          0 |          0 |          0 |          0 |
    ret                                 # |    473,955 |    473,955 |          0 |          0 |          0 |          0 |
be_else.31505:
    load    [$sp + 1], $19              # |    642,165 |    658,185 |          0 |          0 |      2,670 |          0 |
    load    [min_caml_intersected_object_id + 0], $20# |    642,165 |    971,469 |          0 |          0 |     54,884 |          0 |
    load    [$19 + 0], $19              # |    642,165 |  1,291,923 |    584,646 |          0 |     10,852 |          0 |
    load    [min_caml_objects + $20], $2# |    642,165 |    661,543 |      2,140 |          0 |      2,873 |          0 |
    store   $2, [$sp + 2]               # |    642,165 |  1,965,147 |  1,256,892 |     11,015 |          0 |          0 |
    load    [$2 + 1], $20               # |    642,165 |    665,043 |          0 |          0 |      3,813 |          0 |
    cmp     $20, 1                      # |    642,165 |  1,918,869 |  1,276,704 |          0 |          0 |          0 |
    bne     be_else.31506               # |    642,165 |    714,823 |          0 |          0 |          0 |     36,329 |
be_then.31506:
    store   $zero, [min_caml_nvector + 0]# |    114,993 |    114,993 |          0 |          0 |          0 |          0 |
    store   $zero, [min_caml_nvector + 1]# |    114,993 |    114,993 |          0 |          0 |          0 |          0 |
    store   $zero, [min_caml_nvector + 2]# |    114,993 |    114,993 |          0 |          0 |          0 |          0 |
    load    [min_caml_intsec_rectside + 0], $20# |    114,993 |    261,795 |          0 |          0 |     24,467 |          0 |
    sub     $20, 1, $20                 # |    114,993 |    336,855 |    171,384 |      8,413 |          0 |          0 |
    load    [$19 + $20], $19            # |    114,993 |    247,890 |    114,993 |          0 |      2,984 |          0 |
    fcmp    $19, $zero                  # |    114,993 |    339,011 |    224,018 |          0 |          0 |          0 |
    bne     be_else.31507               # |    114,993 |    116,699 |          0 |          0 |          0 |        853 |
be_then.31507:
    store   $zero, [min_caml_nvector + $20]
    b       be_cont.31506
be_else.31507:
    fcmp    $19, $zero                  # |    114,993 |    114,993 |          0 |          0 |          0 |          0 |
    bg      ble_else.31508              # |    114,993 |    121,325 |          0 |          0 |          0 |      3,166 |
ble_then.31508:
    store   $36, [min_caml_nvector + $20]# |     90,204 |    104,844 |          0 |      2,440 |          0 |          0 |
    b       be_cont.31506               # |     90,204 |     90,212 |          0 |          0 |          0 |          4 |
ble_else.31508:
    store   $40, [min_caml_nvector + $20]# |     24,789 |     30,267 |          0 |        913 |          0 |          0 |
    b       be_cont.31506               # |     24,789 |     24,793 |          0 |          0 |          0 |          2 |
be_else.31506:
    cmp     $20, 2                      # |    527,172 |    573,342 |          0 |      7,695 |          0 |          0 |
    bne     be_else.31509               # |    527,172 |    676,584 |          0 |          0 |          0 |     74,706 |
be_then.31509:
    load    [$2 + 4], $19               # |    391,509 |    391,515 |          0 |          0 |          1 |          0 |
    load    [$19 + 0], $19              # |    391,509 |  1,218,859 |    783,016 |          0 |      7,389 |          0 |
    fneg    $19, $19                    # |    391,509 |  1,203,417 |    746,442 |     10,911 |          0 |          0 |
    store   $19, [min_caml_nvector + 0] # |    391,509 |    783,018 |    391,509 |          0 |          0 |          0 |
    load    [$2 + 4], $19               # |    391,509 |    391,509 |          0 |          0 |          0 |          0 |
    load    [$19 + 1], $19              # |    391,509 |  1,191,537 |    783,018 |          0 |      2,835 |          0 |
    fneg    $19, $19                    # |    391,509 |  1,168,857 |    777,348 |          0 |          0 |          0 |
    store   $19, [min_caml_nvector + 1] # |    391,509 |    783,018 |    391,509 |          0 |          0 |          0 |
    load    [$2 + 4], $19               # |    391,509 |    391,509 |          0 |          0 |          0 |          0 |
    load    [$19 + 2], $19              # |    391,509 |  1,192,509 |    783,018 |          0 |      2,997 |          0 |
    fneg    $19, $19                    # |    391,509 |  1,197,381 |    762,600 |      7,212 |          0 |          0 |
    store   $19, [min_caml_nvector + 2] # |    391,509 |    783,018 |    391,509 |          0 |          0 |          0 |
    b       be_cont.31509               # |    391,509 |    391,519 |          0 |          0 |          0 |          5 |
be_else.31509:
    load    [$2 + 3], $19               # |    135,663 |    161,133 |          0 |      3,792 |        453 |          0 |
    load    [$2 + 4], $20               # |    135,663 |    137,739 |          0 |          0 |        346 |          0 |
    load    [min_caml_intersection_point + 0], $21# |    135,663 |    192,891 |          0 |          0 |      9,538 |          0 |
    load    [$2 + 5], $22               # |    135,663 |    150,579 |          0 |          0 |      2,486 |          0 |
    load    [$20 + 0], $20              # |    135,663 |    154,359 |          0 |          0 |      3,116 |          0 |
    load    [min_caml_intersection_point + 1], $23# |    135,663 |    201,027 |          0 |      8,911 |      1,983 |          0 |
    load    [$22 + 0], $22              # |    135,663 |    142,983 |          0 |          0 |      1,220 |          0 |
    load    [$2 + 5], $24               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $25# |    135,663 |    136,197 |          0 |          0 |         89 |          0 |
    fsub    $21, $22, $21               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    load    [$2 + 4], $22               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    load    [$24 + 1], $24              # |    135,663 |    148,257 |          0 |          0 |      2,099 |          0 |
    load    [$2 + 5], $26               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    load    [$22 + 1], $22              # |    135,663 |    192,321 |          0 |      8,911 |        532 |          0 |
    fmul    $21, $20, $20               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    fsub    $23, $24, $23               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    load    [$2 + 4], $24               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    load    [$26 + 2], $26              # |    135,663 |    138,861 |          0 |          0 |        533 |          0 |
    cmp     $19, 0                      # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    load    [$24 + 2], $24              # |    135,663 |    137,481 |          0 |          0 |        303 |          0 |
    fmul    $23, $22, $22               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    fsub    $25, $26, $25               # |    135,663 |    189,129 |          0 |      8,911 |          0 |          0 |
    fmul    $25, $24, $24               # |    135,663 |    678,315 |    542,652 |          0 |          0 |          0 |
    bne     be_else.31510               # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
be_then.31510:
    store   $20, [min_caml_nvector + 0] # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    store   $22, [min_caml_nvector + 1] # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    store   $24, [min_caml_nvector + 2] # |    135,663 |    271,326 |    135,663 |          0 |          0 |          0 |
    b       be_cont.31510               # |    135,663 |    164,127 |          0 |          0 |          0 |     14,232 |
be_else.31510:
    load    [$2 + 9], $19
    load    [$2 + 9], $26
    load    [$19 + 2], $19
    load    [$26 + 1], $26
    fmul    $23, $19, $19
    fmul    $25, $26, $26
    fadd    $19, $26, $19
    fmul    $19, $39, $19
    fadd    $20, $19, $19
    store   $19, [min_caml_nvector + 0]
    load    [$2 + 9], $19
    load    [$2 + 9], $20
    load    [$19 + 2], $19
    load    [$20 + 0], $20
    fmul    $21, $19, $19
    fmul    $25, $20, $20
    fadd    $19, $20, $19
    fmul    $19, $39, $19
    fadd    $22, $19, $19
    store   $19, [min_caml_nvector + 1]
    load    [$2 + 9], $19
    load    [$2 + 9], $20
    load    [$19 + 1], $19
    load    [$20 + 0], $20
    fmul    $21, $19, $19
    fmul    $23, $20, $20
    fadd    $19, $20, $19
    fmul    $19, $39, $19
    fadd    $24, $19, $19
    store   $19, [min_caml_nvector + 2]
be_cont.31510:
    load    [min_caml_nvector + 0], $19 # |    135,663 |    197,127 |          0 |      8,911 |      1,333 |          0 |
    load    [$2 + 6], $20               # |    135,663 |    252,987 |          0 |          0 |     19,554 |          0 |
    load    [min_caml_nvector + 1], $22 # |    135,663 |    144,789 |          0 |          0 |      1,521 |          0 |
    fmul    $19, $19, $21               # |    135,663 |    135,669 |          0 |          1 |          0 |          0 |
    fmul    $22, $22, $22               # |    135,663 |    269,804 |    134,141 |          0 |          0 |          0 |
    fadd    $21, $22, $21               # |    135,663 |    678,315 |    542,652 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $22 # |    135,663 |    137,001 |          0 |          0 |        223 |          0 |
    fmul    $22, $22, $22               # |    135,663 |    406,543 |    270,880 |          0 |          0 |          0 |
    fadd    $21, $22, $21               # |    135,663 |    678,315 |    542,652 |          0 |          0 |          0 |
    fsqrt   $21, $21                    # |    135,663 |    678,315 |    542,652 |          0 |          0 |          0 |
    fcmp    $21, $zero                  # |    135,663 |    678,315 |    542,652 |          0 |          0 |          0 |
    bne     be_else.31511               # |    135,663 |    189,135 |          0 |      8,911 |          0 |          3 |
be_then.31511:
    mov     $36, $20
    b       be_cont.31511
be_else.31511:
    cmp     $20, 0                      # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    finv    $21, $20                    # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    be      bne_cont.31512              # |    135,663 |    160,319 |          0 |          0 |          0 |     12,328 |
bne_then.31512:
    fneg    $20, $20                    # |     31,877 |    115,184 |     83,307 |          0 |          0 |          0 |
bne_cont.31512:
be_cont.31511:
    fmul    $19, $20, $19               # |    135,663 |    466,566 |    330,903 |          0 |          0 |          0 |
    store   $19, [min_caml_nvector + 0] # |    135,663 |    684,349 |    530,584 |      3,017 |          0 |          0 |
    load    [min_caml_nvector + 1], $19 # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    fmul    $19, $20, $19               # |    135,663 |    406,989 |    271,326 |          0 |          0 |          0 |
    store   $19, [min_caml_nvector + 1] # |    135,663 |    678,315 |    542,652 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $19 # |    135,663 |    135,663 |          0 |          0 |          0 |          0 |
    fmul    $19, $20, $19               # |    135,663 |    406,989 |    271,326 |          0 |          0 |          0 |
    store   $19, [min_caml_nvector + 2] # |    135,663 |    678,315 |    542,652 |          0 |          0 |          0 |
be_cont.31509:
be_cont.31506:
    call    utexture.2908               # |    642,165 |    690,351 |          0 |      8,031 |          0 |          0 |
    load    [$59 + 0], $15              # |    642,165 |    718,071 |          0 |     11,048 |      1,603 |          0 |
    load    [$15 + 0], $2               # |    642,165 |  2,024,119 |  1,281,124 |          0 |     16,805 |          0 |
    cmp     $2, -1                      # |    642,165 |  1,892,885 |  1,250,720 |          0 |          0 |          0 |
    bne     be_else.31513               # |    642,165 |    642,773 |          0 |          0 |          0 |        304 |
be_then.31513:
    li      0, $1
    b       be_cont.31513
be_else.31513:
    store   $15, [$sp + 3]              # |    642,165 |    642,165 |          0 |          0 |          0 |          0 |
    cmp     $2, 99                      # |    642,165 |    642,165 |          0 |          0 |          0 |          0 |
    bne     be_else.31514               # |    642,165 |    751,755 |          0 |     18,204 |          0 |        183 |
be_then.31514:
    li      1, $30
    b       be_cont.31514
be_else.31514:
    call    solver_fast.2796            # |    642,165 |    642,165 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $30                     # |    642,165 |    642,165 |          0 |          0 |          0 |          0 |
    cmp     $30, 0                      # |    642,165 |    642,165 |          0 |          0 |          0 |          0 |
    bne     be_else.31515               # |    642,165 |    662,655 |          0 |          0 |          0 |     10,245 |
be_then.31515:
    li      0, $30                      # |    441,283 |    441,283 |          0 |          0 |          0 |          0 |
    b       be_cont.31515               # |    441,283 |    516,211 |          0 |     11,681 |          0 |      2,421 |
be_else.31515:
    fcmp    $18, $42                    # |    200,882 |    240,020 |          0 |      6,523 |          0 |          0 |
    bg      ble_else.31516              # |    200,882 |    215,668 |          0 |          0 |          0 |      7,393 |
ble_then.31516:
    li      0, $30                      # |      6,953 |      6,953 |          0 |          0 |          0 |          0 |
    b       ble_cont.31516              # |      6,953 |      7,743 |          0 |          0 |          0 |        395 |
ble_else.31516:
    load    [$15 + 1], $30              # |    193,929 |    214,689 |          0 |          0 |      3,460 |          0 |
    cmp     $30, -1                     # |    193,929 |    574,867 |    380,938 |          0 |          0 |          0 |
    bne     be_else.31517               # |    193,929 |    193,941 |          0 |          0 |          0 |          6 |
be_then.31517:
    li      0, $30
    b       be_cont.31517
be_else.31517:
    li      0, $2                       # |    193,929 |    289,275 |          0 |     15,891 |          0 |          0 |
    load    [min_caml_and_net + $30], $3# |    193,929 |    244,173 |          0 |          0 |      8,374 |          0 |
    call    shadow_check_and_group.2862 # |    193,929 |    193,929 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $30                     # |    193,929 |    193,929 |          0 |          0 |          0 |          0 |
    cmp     $30, 0                      # |    193,929 |    193,929 |          0 |          0 |          0 |          0 |
    bne     be_else.31518               # |    193,929 |    228,783 |          0 |          0 |          0 |     17,427 |
be_then.31518:
    load    [$sp + 3], $30              # |    153,646 |    277,450 |          0 |     15,232 |      5,402 |          0 |
    load    [$30 + 2], $31              # |    153,646 |    456,566 |    296,488 |          0 |      1,072 |          0 |
    cmp     $31, -1                     # |    153,646 |    458,794 |    305,148 |          0 |          0 |          0 |
    bne     be_else.31519               # |    153,646 |    171,104 |          0 |          0 |          0 |      8,729 |
be_then.31519:
    li      0, $30
    b       be_cont.31518
be_else.31519:
    li      0, $2                       # |    153,646 |    153,646 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $31], $3# |    153,646 |    154,396 |          0 |          0 |        125 |          0 |
    call    shadow_check_and_group.2862 # |    153,646 |    245,038 |          0 |     15,232 |          0 |          0 |
.count move_ret
    mov     $1, $33                     # |    153,646 |    153,646 |          0 |          0 |          0 |          0 |
    cmp     $33, 0                      # |    153,646 |    153,646 |          0 |          0 |          0 |          0 |
    bne     be_else.31520               # |    153,646 |    155,184 |          0 |          0 |          0 |        769 |
be_then.31520:
    li      3, $2                       # |    143,513 |    143,513 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $30, $3                     # |    143,513 |    143,513 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_group.2865# |    143,513 |    143,513 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $30                     # |    143,513 |    143,513 |          0 |          0 |          0 |          0 |
    cmp     $30, 0                      # |    143,513 |    224,057 |          0 |     13,424 |          0 |          0 |
    bne     be_else.31521               # |    143,513 |    143,521 |          0 |          0 |          0 |          4 |
be_then.31521:
    li      0, $30                      # |     78,657 |     78,657 |          0 |          0 |          0 |          0 |
    b       be_cont.31518               # |     78,657 |     78,665 |          0 |          0 |          0 |          4 |
be_else.31521:
    li      1, $30                      # |     64,856 |     64,856 |          0 |          0 |          0 |          0 |
    b       be_cont.31518               # |     64,856 |     64,864 |          0 |          0 |          0 |          4 |
be_else.31520:
    li      1, $30                      # |     10,133 |     20,981 |          0 |      1,808 |          0 |          0 |
    b       be_cont.31518               # |     10,133 |     10,133 |          0 |          0 |          0 |          0 |
be_else.31518:
    li      1, $30                      # |     40,283 |     51,197 |          0 |      1,819 |          0 |          0 |
be_cont.31518:
be_cont.31517:
ble_cont.31516:
be_cont.31515:
be_cont.31514:
    cmp     $30, 0                      # |    642,165 |    780,758 |     40,283 |     16,385 |          0 |          0 |
    bne     be_else.31522               # |    642,165 |    667,035 |          0 |          0 |          0 |     12,435 |
be_then.31522:
    li      1, $2                       # |    526,893 |    526,893 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $59, $3                     # |    526,893 |    526,893 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_matrix.2868# |    526,893 |    526,893 |          0 |          0 |          0 |          0 |
    b       be_cont.31522               # |    526,893 |    531,635 |          0 |          0 |          0 |      2,371 |
be_else.31522:
    load    [$sp + 3], $30              # |    115,272 |    123,030 |          0 |          0 |      1,293 |          0 |
    load    [$30 + 1], $31              # |    115,272 |    391,338 |    204,666 |     11,900 |          0 |          0 |
    cmp     $31, -1                     # |    115,272 |    345,816 |    230,544 |          0 |          0 |          0 |
    bne     be_else.31523               # |    115,272 |    115,284 |          0 |          0 |          0 |          6 |
be_then.31523:
    li      1, $2
.count move_args
    mov     $59, $3
    call    shadow_check_one_or_matrix.2868
    b       be_cont.31523
be_else.31523:
    li      0, $2                       # |    115,272 |    115,272 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $31], $3# |    115,272 |    163,614 |          0 |      8,057 |          0 |          0 |
    call    shadow_check_and_group.2862 # |    115,272 |    115,272 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $31                     # |    115,272 |    115,272 |          0 |          0 |          0 |          0 |
    cmp     $31, 0                      # |    115,272 |    115,272 |          0 |          0 |          0 |          0 |
    bne     be_else.31524               # |    115,272 |    115,304 |          0 |          0 |          0 |         16 |
be_then.31524:
    load    [$30 + 2], $31              # |     74,989 |     74,989 |          0 |          0 |          0 |          0 |
    cmp     $31, -1                     # |     74,989 |    224,967 |    149,978 |          0 |          0 |          0 |
    bne     be_else.31525               # |     74,989 |     91,441 |          0 |          0 |          0 |      8,226 |
be_then.31525:
    li      1, $2
.count move_args
    mov     $59, $3
    call    shadow_check_one_or_matrix.2868
    b       be_cont.31524
be_else.31525:
    li      0, $2                       # |     74,989 |    135,799 |          0 |     10,135 |          0 |          0 |
    load    [min_caml_and_net + $31], $3# |     74,989 |     74,989 |          0 |          0 |          0 |          0 |
    call    shadow_check_and_group.2862 # |     74,989 |     74,989 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $33                     # |     74,989 |     74,989 |          0 |          0 |          0 |          0 |
    cmp     $33, 0                      # |     74,989 |    135,799 |          0 |     10,135 |          0 |          0 |
    bne     be_else.31526               # |     74,989 |     75,989 |          0 |          0 |          0 |        500 |
be_then.31526:
    li      3, $2                       # |     64,856 |     64,856 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $30, $3                     # |     64,856 |     64,856 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_group.2865# |     64,856 |     64,856 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |     64,856 |     64,856 |          0 |          0 |          0 |          0 |
    bne     be_else.31527               # |     64,856 |     64,864 |          0 |          0 |          0 |          4 |
be_then.31527:
    li      1, $2
.count move_args
    mov     $59, $3
    call    shadow_check_one_or_matrix.2868
    b       be_cont.31524
be_else.31527:
    li      1, $1                       # |     64,856 |    453,992 |          0 |     64,856 |          0 |          0 |
    b       be_cont.31524               # |     64,856 |     65,268 |          0 |          0 |          0 |        206 |
be_else.31526:
    li      1, $1                       # |     10,133 |     70,931 |          0 |     10,133 |          0 |          0 |
    b       be_cont.31524               # |     10,133 |     10,137 |          0 |          0 |          0 |          2 |
be_else.31524:
    li      1, $1                       # |     40,283 |    281,981 |          0 |     40,283 |          0 |          0 |
be_cont.31524:
be_cont.31523:
be_cont.31522:
be_cont.31513:
.count stack_move
    add     $sp, 4, $sp                 # |    642,165 |  4,495,155 |          0 |    642,165 |          0 |          0 |
    cmp     $1, 0                       # |    642,165 |    642,165 |          0 |          0 |          0 |          0 |
    bne     be_else.31528               # |    642,165 |    654,763 |          0 |          0 |          0 |      6,299 |
be_then.31528:
    load    [$sp - 2], $1               # |    523,116 |    592,566 |          0 |          0 |     11,575 |          0 |
    load    [min_caml_texture_color + 0], $2# |    523,116 |    747,504 |          0 |          0 |     37,398 |          0 |
    load    [min_caml_nvector + 0], $3  # |    523,116 |    547,266 |          0 |          0 |      4,025 |          0 |
    load    [$1 + 7], $1                # |    523,116 |    751,434 |          0 |          0 |     38,053 |          0 |
    load    [min_caml_nvector + 1], $4  # |    523,116 |    542,292 |          0 |          0 |      3,196 |          0 |
    fmul    $3, $55, $3                 # |    523,116 |  3,661,812 |          0 |    523,116 |          0 |          0 |
    fmul    $4, $56, $4                 # |    523,116 |    523,116 |          0 |          0 |          0 |          0 |
    fadd    $3, $4, $3                  # |    523,116 |  2,615,580 |  2,092,464 |          0 |          0 |          0 |
    load    [min_caml_nvector + 2], $4  # |    523,116 |    537,180 |          0 |          0 |      2,344 |          0 |
    fmul    $4, $57, $4                 # |    523,116 |  1,564,660 |  1,041,544 |          0 |          0 |          0 |
    fadd    $3, $4, $3                  # |    523,116 |  2,615,580 |  2,092,464 |          0 |          0 |          0 |
    fneg    $3, $3                      # |    523,116 |  2,615,580 |  2,092,464 |          0 |          0 |          0 |
    fcmp    $3, $zero                   # |    523,116 |  1,046,232 |    523,116 |          0 |          0 |          0 |
    bg      ble_cont.31529              # |    523,116 |  1,842,826 |          0 |    219,509 |          0 |      1,328 |
ble_then.31529:
    mov     $zero, $3                   # |        709 |        709 |          0 |          0 |          0 |          0 |
ble_cont.31529:
    load    [$sp - 4], $4               # |    523,116 |    590,202 |          0 |          0 |     11,181 |          0 |
    load    [$1 + 0], $1                # |    523,116 |    634,500 |          0 |          0 |     18,564 |          0 |
    fmul    $4, $3, $3                  # |    523,116 |  1,016,904 |    493,788 |          0 |          0 |          0 |
    fmul    $3, $1, $1                  # |    523,116 |  2,615,580 |  2,092,464 |          0 |          0 |          0 |
    fmul    $1, $2, $2                  # |    523,116 |  2,615,580 |  2,092,464 |          0 |          0 |          0 |
    fadd    $43, $2, $2                 # |    523,116 |  2,615,580 |  2,092,464 |          0 |          0 |          0 |
.count move_float
    mov     $2, $43                     # |    523,116 |  2,999,812 |  1,324,000 |    192,116 |          0 |          0 |
    fmul    $1, $54, $2                 # |    523,116 |    523,116 |          0 |          0 |          0 |          0 |
    fmul    $1, $58, $1                 # |    523,116 |    523,116 |          0 |          0 |          0 |          0 |
    fadd    $44, $2, $2                 # |    523,116 |  2,092,464 |  1,569,348 |          0 |          0 |          0 |
    fadd    $45, $1, $1                 # |    523,116 |    523,116 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $2, $44                     # |    523,116 |  2,092,464 |  1,569,348 |          0 |          0 |          0 |
.count move_float
    mov     $1, $45                     # |    523,116 |    523,116 |          0 |          0 |          0 |          0 |
    ret                                 # |    523,116 |    523,116 |          0 |          0 |          0 |          0 |
be_else.31528:
    ret                                 # |    119,049 |    792,945 |          0 |    112,316 |          0 |          0 |
.end trace_diffuse_ray

######################################################################
.begin iter_trace_diffuse_rays
iter_trace_diffuse_rays.2929:
    cmp     $4, 0                       # |    558,060 |  1,539,660 |          0 |    163,600 |          0 |          0 |
    bl      bge_else.31530              # |    558,060 |    861,624 |          0 |          0 |          0 |    151,782 |
bge_then.31530:
.count stack_move
    sub     $sp, 4, $sp                 # |    558,060 |    558,060 |          0 |          0 |          0 |          0 |
    load    [$2 + $4], $1               # |    558,060 |  3,887,442 |          0 |          0 |    554,897 |          0 |
    load    [$3 + 0], $6                # |    558,060 |  1,003,014 |          0 |          0 |     74,159 |          0 |
    load    [$3 + 1], $7                # |    558,060 |    686,040 |          0 |          0 |     21,330 |          0 |
    load    [$1 + 0], $1                # |    558,060 |  3,904,938 |          0 |          0 |    557,813 |          0 |
    load    [$1 + 0], $5                # |    558,060 |  6,340,782 |        114 |    405,814 |    557,954 |          0 |
    fmul    $5, $6, $5                  # |    558,060 |    558,272 |        212 |          0 |          0 |          0 |
    load    [$1 + 1], $6                # |    558,060 |    558,318 |          0 |          0 |         43 |          0 |
    load    [$1 + 2], $1                # |    558,060 |    558,144 |          0 |          0 |         14 |          0 |
    fmul    $6, $7, $6                  # |    558,060 |  1,116,063 |    558,003 |          0 |          0 |          0 |
    fadd    $5, $6, $5                  # |    558,060 |  2,790,300 |  2,232,240 |          0 |          0 |          0 |
    load    [$3 + 2], $6                # |    558,060 |    647,286 |          0 |          0 |     14,871 |          0 |
    store   $3, [$sp + 0]               # |    558,060 |    558,060 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 1]               # |    558,060 |  2,488,548 |          0 |    321,748 |          0 |          0 |
    fmul    $1, $6, $1                  # |    558,060 |    558,060 |          0 |          0 |          0 |          0 |
    store   $4, [$sp + 2]               # |    558,060 |    558,060 |          0 |          0 |          0 |          0 |
    fadd    $5, $1, $1                  # |    558,060 |  2,232,240 |  1,674,180 |          0 |          0 |          0 |
    fcmp    $zero, $1                   # |    558,060 |  2,790,300 |  2,232,240 |          0 |          0 |          0 |
    bg      ble_else.31531              # |    558,060 |    799,420 |          0 |          0 |          0 |    120,680 |
ble_then.31531:
    fmul    $1, $37, $3                 # |    381,307 |    381,307 |          0 |          0 |          0 |          0 |
    load    [$2 + $4], $2               # |    381,307 |    383,905 |          0 |          0 |        433 |          0 |
    call    trace_diffuse_ray.2926      # |    381,307 |  1,429,075 |          0 |    174,628 |          0 |          0 |
    load    [$sp + 2], $1               # |    381,307 |  1,691,425 |          0 |    200,233 |     18,120 |          0 |
    sub     $1, 2, $1                   # |    381,307 |  1,107,681 |    726,374 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    381,307 |    762,614 |    381,307 |          0 |          0 |          0 |
    bl      bge_else.31532              # |    381,307 |    454,621 |          0 |          0 |          0 |     36,657 |
bge_then.31532:
    load    [$sp + 1], $2               # |    365,736 |    452,214 |          0 |          0 |     14,413 |          0 |
    load    [$sp + 0], $5               # |    365,736 |    410,436 |          0 |          0 |      7,450 |          0 |
    load    [$2 + $1], $3               # |    365,736 |  2,901,601 |    351,061 |          0 |    364,134 |          0 |
    load    [$5 + 0], $6                # |    365,736 |  2,190,517 |          1 |    256,425 |     47,705 |          0 |
    load    [$5 + 1], $7                # |    365,736 |    450,012 |          0 |          0 |     14,046 |          0 |
    load    [$3 + 0], $3                # |    365,736 |  2,546,802 |          0 |          0 |    363,511 |          0 |
    load    [$3 + 0], $4                # |    365,736 |  2,554,312 |      4,450 |          0 |    364,021 |          0 |
    fmul    $4, $6, $4                  # |    365,736 |    369,166 |      3,430 |          0 |          0 |          0 |
    load    [$3 + 1], $6                # |    365,736 |    369,432 |          0 |          0 |        616 |          0 |
    load    [$3 + 2], $3                # |    365,736 |    366,216 |          0 |          0 |         80 |          0 |
    fmul    $6, $7, $6                  # |    365,736 |    730,776 |    365,040 |          0 |          0 |          0 |
    fadd    $4, $6, $4                  # |    365,736 |  2,031,294 |  1,057,716 |    101,307 |          0 |          0 |
    load    [$5 + 2], $6                # |    365,736 |    422,718 |          0 |          0 |      9,497 |          0 |
    store   $1, [$sp + 3]               # |    365,736 |    365,736 |          0 |          0 |          0 |          0 |
    fmul    $3, $6, $3                  # |    365,736 |    721,975 |    356,239 |          0 |          0 |          0 |
    fadd    $4, $3, $3                  # |    365,736 |  1,828,680 |  1,462,944 |          0 |          0 |          0 |
    fcmp    $zero, $3                   # |    365,736 |  1,828,680 |  1,462,944 |          0 |          0 |          0 |
    bg      ble_else.31533              # |    365,736 |    575,254 |          0 |          0 |          0 |    104,759 |
ble_then.31533:
    fmul    $3, $37, $3                 # |    191,017 |    191,017 |          0 |          0 |          0 |          0 |
    load    [$2 + $1], $2               # |    191,017 |    430,087 |          0 |     38,444 |      1,401 |          0 |
    call    trace_diffuse_ray.2926      # |    191,017 |    191,017 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 4, $sp                 # |    191,017 |    417,187 |          0 |     37,695 |          0 |          0 |
    load    [$sp - 1], $1               # |    191,017 |    412,790 |    191,017 |          0 |      5,126 |          0 |
    load    [$sp - 3], $2               # |    191,017 |    208,441 |          0 |          0 |      2,904 |          0 |
    load    [$sp - 4], $3               # |    191,017 |    203,803 |          0 |          0 |      2,131 |          0 |
    sub     $1, 2, $4                   # |    191,017 |    191,017 |          0 |          0 |          0 |          0 |
    b       iter_trace_diffuse_rays.2929# |    191,017 |    191,049 |          0 |          0 |          0 |         16 |
ble_else.31533:
    fmul    $3, $38, $3                 # |    174,719 |    477,473 |          0 |     50,459 |          0 |          0 |
    add     $1, 1, $1                   # |    174,719 |    174,719 |          0 |          0 |          0 |          0 |
    load    [$2 + $1], $2               # |    174,719 |    374,836 |    174,719 |          0 |      4,233 |          0 |
    call    trace_diffuse_ray.2926      # |    174,719 |    174,719 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 4, $sp                 # |    174,719 |    281,831 |          0 |     17,852 |          0 |          0 |
    load    [$sp - 1], $1               # |    174,719 |    403,930 |    174,719 |          0 |      9,082 |          0 |
    load    [$sp - 3], $2               # |    174,719 |    205,553 |          0 |          0 |      5,139 |          0 |
    load    [$sp - 4], $3               # |    174,719 |    189,983 |          0 |          0 |      2,544 |          0 |
    sub     $1, 2, $4                   # |    174,719 |    218,345 |          0 |      7,271 |          0 |          0 |
    b       iter_trace_diffuse_rays.2929# |    174,719 |    174,747 |          0 |          0 |          0 |         14 |
bge_else.31532:
.count stack_move
    add     $sp, 4, $sp                 # |     15,571 |     15,571 |          0 |          0 |          0 |          0 |
    ret                                 # |     15,571 |     15,571 |          0 |          0 |          0 |          0 |
ble_else.31531:
    fmul    $1, $38, $3                 # |    176,753 |    200,339 |          0 |      3,931 |          0 |          0 |
    add     $4, 1, $1                   # |    176,753 |    176,753 |          0 |          0 |          0 |          0 |
    load    [$2 + $1], $2               # |    176,753 |    356,434 |    176,753 |          0 |        488 |          0 |
    call    trace_diffuse_ray.2926      # |    176,753 |    176,753 |          0 |          0 |          0 |          0 |
    load    [$sp + 2], $1               # |    176,753 |    577,349 |          0 |     56,972 |      9,794 |          0 |
    sub     $1, 2, $1                   # |    176,753 |    510,671 |    333,918 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    176,753 |    353,506 |    176,753 |          0 |          0 |          0 |
    bl      bge_else.31534              # |    176,753 |    208,061 |          0 |          0 |          0 |     15,654 |
bge_then.31534:
    load    [$sp + 1], $2               # |    173,722 |    209,776 |          0 |          0 |      6,009 |          0 |
    load    [$sp + 0], $5               # |    173,722 |    191,128 |          0 |          0 |      2,901 |          0 |
    load    [$2 + $1], $3               # |    173,722 |  1,381,250 |    167,650 |          0 |    173,313 |          0 |
    load    [$5 + 0], $6                # |    173,722 |    329,455 |          3 |          0 |     25,955 |          0 |
    load    [$5 + 1], $7                # |    173,722 |    548,830 |          0 |     56,273 |      6,245 |          0 |
    load    [$3 + 0], $3                # |    173,722 |  1,212,754 |          0 |          0 |    173,172 |          0 |
    load    [$3 + 0], $4                # |    173,722 |  1,214,334 |      1,100 |          0 |    173,252 |          0 |
    fmul    $4, $6, $4                  # |    173,722 |    174,662 |        940 |          0 |          0 |          0 |
    load    [$3 + 1], $6                # |    173,722 |    174,220 |          0 |          0 |         83 |          0 |
    load    [$3 + 2], $3                # |    173,722 |    173,836 |          0 |          0 |         19 |          0 |
    fmul    $6, $7, $6                  # |    173,722 |    347,342 |    173,620 |          0 |          0 |          0 |
    fadd    $4, $6, $4                  # |    173,722 |    868,610 |    694,888 |          0 |          0 |          0 |
    load    [$5 + 2], $6                # |    173,722 |    949,246 |          0 |    124,413 |      4,841 |          0 |
    store   $1, [$sp + 3]               # |    173,722 |    173,722 |          0 |          0 |          0 |          0 |
    fmul    $3, $6, $3                  # |    173,722 |    342,603 |    168,881 |          0 |          0 |          0 |
    fadd    $4, $3, $3                  # |    173,722 |    868,610 |    694,888 |          0 |          0 |          0 |
    fcmp    $zero, $3                   # |    173,722 |    868,610 |    694,888 |          0 |          0 |          0 |
    bg      ble_else.31535              # |    173,722 |    238,474 |          0 |          0 |          0 |     32,376 |
ble_then.31535:
    fmul    $3, $37, $3                 # |     20,153 |     20,153 |          0 |          0 |          0 |          0 |
    load    [$2 + $1], $2               # |     20,153 |     21,017 |          0 |          0 |        144 |          0 |
    call    trace_diffuse_ray.2926      # |     20,153 |     90,917 |          0 |     11,794 |          0 |          0 |
.count stack_move
    add     $sp, 4, $sp                 # |     20,153 |    125,507 |          0 |     17,559 |          0 |          0 |
    load    [$sp - 1], $1               # |     20,153 |     45,826 |     20,153 |          0 |        920 |          0 |
    load    [$sp - 3], $2               # |     20,153 |     23,111 |          0 |          0 |        493 |          0 |
    load    [$sp - 4], $3               # |     20,153 |     21,419 |          0 |          0 |        211 |          0 |
    sub     $1, 2, $4                   # |     20,153 |     20,153 |          0 |          0 |          0 |          0 |
    b       iter_trace_diffuse_rays.2929# |     20,153 |     20,591 |          0 |          0 |          0 |        219 |
ble_else.31535:
    fmul    $3, $38, $3                 # |    153,569 |    734,243 |          0 |     96,779 |          0 |          0 |
    add     $1, 1, $1                   # |    153,569 |    459,569 |          0 |     51,000 |          0 |          0 |
    load    [$2 + $1], $2               # |    153,569 |    390,730 |    153,569 |          0 |     13,932 |          0 |
    call    trace_diffuse_ray.2926      # |    153,569 |    153,569 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 4, $sp                 # |    153,569 |    268,691 |          0 |     19,187 |          0 |          0 |
    load    [$sp - 1], $1               # |    153,569 |    382,798 |    153,569 |          0 |     12,610 |          0 |
    load    [$sp - 3], $2               # |    153,569 |    201,833 |          0 |          0 |      8,044 |          0 |
    load    [$sp - 4], $3               # |    153,569 |    186,701 |          0 |          0 |      5,522 |          0 |
    sub     $1, 2, $4                   # |    153,569 |    153,569 |          0 |          0 |          0 |          0 |
    b       iter_trace_diffuse_rays.2929# |    153,569 |    220,201 |          0 |     11,079 |          0 |         79 |
bge_else.31534:
.count stack_move
    add     $sp, 4, $sp                 # |      3,031 |      3,031 |          0 |          0 |          0 |          0 |
    ret                                 # |      3,031 |      3,031 |          0 |          0 |          0 |          0 |
bge_else.31530:
    ret
.end iter_trace_diffuse_rays

######################################################################
.begin calc_diffuse_using_1point
calc_diffuse_using_1point.2942:
.count stack_move
    sub     $sp, 10, $sp                # |      1,737 |      2,193 |          0 |         76 |          0 |          0 |
    store   $3, [$sp + 0]               # |      1,737 |      3,474 |      1,737 |          0 |          0 |          0 |
    store   $2, [$sp + 1]               # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $14               # |      1,737 |      8,709 |          0 |          0 |      1,162 |          0 |
    load    [$2 + 6], $16               # |      1,737 |      5,877 |          0 |        117 |        573 |          0 |
    load    [$14 + $3], $14             # |      1,737 |      9,287 |          2 |          0 |      1,258 |          0 |
    load    [$14 + 0], $15              # |      1,737 |     10,225 |        958 |          0 |      1,255 |          0 |
.count move_float
    mov     $15, $43                    # |      1,737 |      2,701 |        964 |          0 |          0 |          0 |
    load    [$14 + 1], $15              # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    load    [$14 + 2], $14              # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $15, $44                    # |      1,737 |      3,474 |      1,737 |          0 |          0 |          0 |
.count move_float
    mov     $14, $45                    # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    load    [$2 + 7], $14               # |      1,737 |      1,755 |          0 |          1 |          2 |          0 |
    load    [$2 + 1], $15               # |      1,737 |      1,779 |          0 |          0 |          7 |          0 |
    load    [$14 + $3], $14             # |      1,737 |     13,889 |      1,730 |          0 |      1,737 |          0 |
    store   $14, [$sp + 2]              # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    load    [$15 + $3], $2              # |      1,737 |     12,159 |          0 |          0 |      1,737 |          0 |
    store   $2, [$sp + 3]               # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    load    [$16 + 0], $15              # |      1,737 |     12,159 |          0 |          0 |      1,737 |          0 |
    store   $15, [$sp + 4]              # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    cmp     $15, 0                      # |      1,737 |      1,743 |          0 |          1 |          0 |          0 |
    be      bne_cont.31536              # |      1,737 |      3,381 |          0 |          0 |          0 |        822 |
bne_then.31536:
    load    [min_caml_dirvecs + 0], $15 # |      1,389 |      9,459 |          0 |          0 |      1,345 |          0 |
    load    [$2 + 0], $16               # |      1,389 |      3,093 |          0 |          0 |        284 |          0 |
    sub     $41, 1, $3                  # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $16, $51                    # |      1,389 |      2,494 |      1,105 |          0 |          0 |          0 |
    load    [$2 + 1], $16               # |      1,389 |      7,983 |          0 |          0 |      1,099 |          0 |
.count move_float
    mov     $16, $52                    # |      1,389 |      1,969 |        580 |          0 |          0 |          0 |
    load    [$2 + 2], $16               # |      1,389 |      7,959 |          0 |      1,094 |          1 |          0 |
.count move_float
    mov     $16, $53                    # |      1,389 |      4,165 |      2,776 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    load    [$15 + 118], $16            # |      1,389 |      9,723 |          0 |          0 |      1,389 |          0 |
    load    [$14 + 0], $18              # |      1,389 |      4,173 |          0 |          0 |        464 |          0 |
    load    [$14 + 1], $19              # |      1,389 |      1,587 |          0 |          0 |         33 |          0 |
    load    [$16 + 0], $16              # |      1,389 |      9,723 |          0 |          0 |      1,389 |          0 |
    load    [$16 + 0], $17              # |      1,389 |      1,413 |          0 |          0 |          4 |          0 |
    fmul    $17, $18, $17               # |      1,389 |      5,651 |      2,024 |        373 |          0 |          0 |
    load    [$16 + 1], $18              # |      1,389 |      1,479 |          0 |          0 |         15 |          0 |
    load    [$16 + 2], $16              # |      1,389 |      9,525 |          0 |          0 |      1,356 |          0 |
    fmul    $18, $19, $18               # |      1,389 |      1,407 |         18 |          0 |          0 |          0 |
    fadd    $17, $18, $17               # |      1,389 |      6,945 |      5,556 |          0 |          0 |          0 |
    load    [$14 + 2], $18              # |      1,389 |      1,593 |          0 |          0 |         34 |          0 |
    store   $15, [$sp + 5]              # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    fmul    $16, $18, $16               # |      1,389 |      2,744 |      1,355 |          0 |          0 |          0 |
    fadd    $17, $16, $16               # |      1,389 |      7,691 |      4,064 |        373 |          0 |          0 |
    fcmp    $zero, $16                  # |      1,389 |      6,945 |      5,556 |          0 |          0 |          0 |
    bg      ble_else.31537              # |      1,389 |      1,597 |          0 |          0 |          0 |        104 |
ble_then.31537:
    load    [$15 + 118], $2             # |         89 |         95 |          0 |          0 |          1 |          0 |
.count load_float
    load    [f.27111], $14              # |         89 |        623 |          0 |          0 |         89 |          0 |
    fmul    $16, $37, $3                # |         89 |         89 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |         89 |         89 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |         89 |         89 |          0 |          0 |          0 |          0 |
    load    [$sp + 5], $2               # |         89 |      1,001 |          0 |         79 |         73 |          0 |
    load    [$sp + 2], $3               # |         89 |        479 |          0 |          0 |         65 |          0 |
    call    iter_trace_diffuse_rays.2929# |         89 |         89 |          0 |          0 |          0 |          0 |
    b       ble_cont.31537              # |         89 |        583 |          0 |         80 |          0 |          7 |
ble_else.31537:
    load    [$15 + 119], $2             # |      1,300 |      7,450 |          0 |      1,021 |          4 |          0 |
.count load_float
    load    [f.27110], $14              # |      1,300 |      9,100 |          0 |          0 |      1,300 |          0 |
    fmul    $16, $38, $3                # |      1,300 |      1,300 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |      1,300 |      1,300 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |      1,300 |      7,228 |          0 |        988 |          0 |          0 |
    load    [$sp + 5], $2               # |      1,300 |      7,450 |          0 |          0 |      1,025 |          0 |
    load    [$sp + 2], $3               # |      1,300 |      7,492 |          0 |          0 |      1,032 |          0 |
    call    iter_trace_diffuse_rays.2929# |      1,300 |      1,300 |          0 |          0 |          0 |          0 |
ble_cont.31537:
bne_cont.31536:
    load    [$sp + 4], $14              # |      1,737 |     19,299 |          0 |      1,274 |      1,653 |          0 |
    cmp     $14, 1                      # |      1,737 |      1,905 |        168 |          0 |          0 |          0 |
    be      bne_cont.31538              # |      1,737 |      2,943 |          0 |          0 |          0 |        603 |
bne_then.31538:
    load    [min_caml_dirvecs + 1], $14 # |      1,389 |      8,841 |          0 |          0 |      1,242 |          0 |
    load    [$sp + 3], $2               # |      1,389 |     16,233 |          0 |      1,197 |      1,277 |          0 |
    sub     $41, 1, $3                  # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $15               # |      1,389 |      7,729 |        112 |          0 |      1,038 |          0 |
.count move_float
    mov     $15, $51                    # |      1,389 |      2,091 |        702 |          0 |          0 |          0 |
    load    [$2 + 1], $15               # |      1,389 |      3,081 |          0 |          0 |        282 |          0 |
.count move_float
    mov     $15, $52                    # |      1,389 |      3,603 |      2,214 |          0 |          0 |          0 |
    load    [$2 + 2], $15               # |      1,389 |      1,473 |          0 |          0 |         14 |          0 |
.count move_float
    mov     $15, $53                    # |      1,389 |      4,139 |      2,750 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |      1,389 |      8,571 |          0 |      1,197 |          0 |          0 |
    load    [$14 + 118], $15            # |      1,389 |      9,723 |          0 |          0 |      1,389 |          0 |
    load    [$sp + 2], $3               # |      1,389 |      8,733 |          0 |          0 |      1,224 |          0 |
    load    [$15 + 0], $15              # |      1,389 |      9,723 |          0 |          0 |      1,389 |          0 |
    load    [$3 + 0], $17               # |      1,389 |      3,471 |          0 |          0 |        347 |          0 |
    load    [$3 + 1], $18               # |      1,389 |      1,671 |          0 |          0 |         47 |          0 |
    load    [$15 + 0], $16              # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    fmul    $16, $17, $16               # |      1,389 |      4,167 |      2,778 |          0 |          0 |          0 |
    load    [$15 + 1], $17              # |      1,389 |      1,413 |          0 |          1 |          3 |          0 |
    load    [$15 + 2], $15              # |      1,389 |      9,639 |          0 |          0 |      1,375 |          0 |
    fmul    $17, $18, $17               # |      1,389 |      1,400 |         11 |          0 |          0 |          0 |
    fadd    $16, $17, $16               # |      1,389 |      6,945 |      5,556 |          0 |          0 |          0 |
    load    [$3 + 2], $17               # |      1,389 |      1,623 |          0 |          0 |         39 |          0 |
    store   $14, [$sp + 6]              # |      1,389 |      1,389 |          0 |          0 |          0 |          0 |
    fmul    $15, $17, $15               # |      1,389 |      2,739 |      1,350 |          0 |          0 |          0 |
    fadd    $16, $15, $15               # |      1,389 |      6,945 |      5,556 |          0 |          0 |          0 |
    fcmp    $zero, $15                  # |      1,389 |      9,339 |        768 |      1,197 |          0 |          0 |
    bg      ble_else.31539              # |      1,389 |      1,649 |          0 |          0 |          0 |        130 |
ble_then.31539:
    load    [$14 + 118], $2             # |         96 |         96 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27111], $14              # |         96 |        672 |          0 |          0 |         96 |          0 |
    fmul    $15, $37, $3                # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |         96 |        330 |          0 |         39 |          0 |          0 |
    load    [$sp + 6], $2               # |         96 |        114 |          0 |          0 |          3 |          0 |
    load    [$sp + 2], $3               # |         96 |        618 |          0 |         87 |          0 |          0 |
    call    iter_trace_diffuse_rays.2929# |         96 |         96 |          0 |          0 |          0 |          0 |
    b       ble_cont.31539              # |         96 |        566 |          0 |         76 |          0 |          7 |
ble_else.31539:
    load    [$14 + 119], $2             # |      1,293 |      7,965 |          0 |      1,112 |          0 |          0 |
.count load_float
    load    [f.27110], $14              # |      1,293 |      9,051 |          0 |          0 |      1,293 |          0 |
    fmul    $15, $38, $3                # |      1,293 |      1,293 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |      1,293 |      1,293 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |      1,293 |      1,863 |          0 |         95 |          0 |          0 |
    load    [$sp + 6], $2               # |      1,293 |     13,413 |          0 |      1,077 |        943 |          0 |
    load    [$sp + 2], $3               # |      1,293 |      6,309 |          0 |          0 |        836 |          0 |
    call    iter_trace_diffuse_rays.2929# |      1,293 |      1,293 |          0 |          0 |          0 |          0 |
ble_cont.31539:
bne_cont.31538:
    load    [$sp + 4], $14              # |      1,737 |     17,757 |          0 |      1,306 |      1,364 |          0 |
    cmp     $14, 2                      # |      1,737 |      2,483 |        746 |          0 |          0 |          0 |
    be      bne_cont.31540              # |      1,737 |      3,301 |          0 |          0 |          0 |        782 |
bne_then.31540:
    load    [min_caml_dirvecs + 2], $14 # |      1,400 |      9,710 |          0 |          0 |      1,385 |          0 |
    load    [$sp + 3], $2               # |      1,400 |      9,680 |          0 |          0 |      1,380 |          0 |
    sub     $41, 1, $3                  # |      1,400 |      9,800 |          0 |      1,400 |          0 |          0 |
    load    [$2 + 0], $15               # |      1,400 |      9,218 |          0 |          0 |      1,303 |          0 |
.count move_float
    mov     $15, $51                    # |      1,400 |      1,594 |        194 |          0 |          0 |          0 |
    load    [$2 + 1], $15               # |      1,400 |      1,472 |          0 |          0 |         12 |          0 |
.count move_float
    mov     $15, $52                    # |      1,400 |      4,176 |      2,776 |          0 |          0 |          0 |
    load    [$2 + 2], $15               # |      1,400 |      1,508 |          0 |          0 |         18 |          0 |
.count move_float
    mov     $15, $53                    # |      1,400 |      4,164 |      2,764 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |      1,400 |      1,400 |          0 |          0 |          0 |          0 |
    load    [$14 + 118], $15            # |      1,400 |     18,200 |          0 |      1,400 |      1,400 |          0 |
    load    [$sp + 2], $3               # |      1,400 |      7,034 |          0 |          0 |        939 |          0 |
    load    [$15 + 0], $15              # |      1,400 |      9,800 |          0 |          0 |      1,400 |          0 |
    load    [$3 + 0], $17               # |      1,400 |      3,344 |          0 |          0 |        324 |          0 |
    load    [$3 + 1], $18               # |      1,400 |      1,724 |          0 |          0 |         54 |          0 |
    load    [$15 + 0], $16              # |      1,400 |      1,442 |          0 |          0 |          7 |          0 |
    fmul    $16, $17, $16               # |      1,400 |      4,186 |      2,786 |          0 |          0 |          0 |
    load    [$15 + 1], $17              # |      1,400 |      1,400 |          0 |          0 |          0 |          0 |
    load    [$15 + 2], $15              # |      1,400 |     18,158 |          0 |      1,400 |      1,393 |          0 |
    fmul    $17, $18, $17               # |      1,400 |      1,400 |          0 |          0 |          0 |          0 |
    fadd    $16, $17, $16               # |      1,400 |      7,000 |      5,600 |          0 |          0 |          0 |
    load    [$3 + 2], $17               # |      1,400 |      1,718 |          0 |          0 |         53 |          0 |
    store   $14, [$sp + 7]              # |      1,400 |      1,400 |          0 |          0 |          0 |          0 |
    fmul    $15, $17, $15               # |      1,400 |      2,747 |      1,347 |          0 |          0 |          0 |
    fadd    $16, $15, $15               # |      1,400 |      7,000 |      5,600 |          0 |          0 |          0 |
    fcmp    $zero, $15                  # |      1,400 |      7,000 |      5,600 |          0 |          0 |          0 |
    bg      ble_else.31541              # |      1,400 |     10,156 |          0 |      1,400 |          0 |        178 |
ble_then.31541:
    load    [$14 + 118], $2             # |        125 |        125 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27111], $14              # |        125 |        875 |          0 |          0 |        125 |          0 |
    fmul    $15, $37, $3                # |        125 |        125 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |        125 |        125 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |        125 |        875 |          0 |        125 |          0 |          0 |
    load    [$sp + 7], $2               # |        125 |        131 |          0 |          0 |          1 |          0 |
    load    [$sp + 2], $3               # |        125 |        125 |          0 |          0 |          0 |          0 |
    call    iter_trace_diffuse_rays.2929# |        125 |        875 |          0 |        125 |          0 |          0 |
    b       ble_cont.31541              # |        125 |      1,031 |          0 |        125 |          0 |         78 |
ble_else.31541:
    load    [$14 + 119], $2             # |      1,275 |      8,967 |          0 |      1,275 |          7 |          0 |
.count load_float
    load    [f.27110], $14              # |      1,275 |      8,925 |          0 |          0 |      1,275 |          0 |
    fmul    $15, $38, $3                # |      1,275 |      1,275 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |      1,275 |      1,275 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |      1,275 |      8,925 |          0 |      1,275 |          0 |          0 |
    load    [$sp + 7], $2               # |      1,275 |      1,383 |          0 |          0 |         18 |          0 |
    load    [$sp + 2], $3               # |      1,275 |      8,949 |          0 |      1,275 |          4 |          0 |
    call    iter_trace_diffuse_rays.2929# |      1,275 |      1,275 |          0 |          0 |          0 |          0 |
ble_cont.31541:
bne_cont.31540:
    load    [$sp + 4], $14              # |      1,737 |     17,817 |          0 |      1,737 |        943 |          0 |
    cmp     $14, 3                      # |      1,737 |      3,325 |      1,588 |          0 |          0 |          0 |
    be      bne_cont.31542              # |      1,737 |      2,947 |          0 |          0 |          0 |        605 |
bne_then.31542:
    load    [min_caml_dirvecs + 3], $14 # |      1,385 |      6,677 |          0 |          0 |        882 |          0 |
    load    [$sp + 3], $2               # |      1,385 |      7,667 |          0 |          0 |      1,047 |          0 |
    sub     $41, 1, $3                  # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $15               # |      1,385 |     17,339 |          0 |      1,385 |      1,274 |          0 |
.count move_float
    mov     $15, $51                    # |      1,385 |      1,607 |        222 |          0 |          0 |          0 |
    load    [$2 + 1], $15               # |      1,385 |      1,493 |          0 |          0 |         18 |          0 |
.count move_float
    mov     $15, $52                    # |      1,385 |      4,119 |      2,734 |          0 |          0 |          0 |
    load    [$2 + 2], $15               # |      1,385 |      1,505 |          0 |          0 |         20 |          0 |
.count move_float
    mov     $15, $53                    # |      1,385 |      4,115 |      2,730 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$14 + 118], $15            # |      1,385 |      9,695 |          0 |          0 |      1,385 |          0 |
    load    [$sp + 2], $3               # |      1,385 |     12,905 |          0 |      1,385 |        535 |          0 |
    load    [$15 + 0], $15              # |      1,385 |      9,695 |          0 |          0 |      1,385 |          0 |
    load    [$3 + 0], $17               # |      1,385 |      3,347 |          0 |          0 |        327 |          0 |
    load    [$3 + 1], $18               # |      1,385 |      1,787 |          0 |          0 |         67 |          0 |
    load    [$15 + 0], $16              # |      1,385 |      1,421 |          0 |          0 |          6 |          0 |
    fmul    $16, $17, $16               # |      1,385 |      4,143 |      2,758 |          0 |          0 |          0 |
    load    [$15 + 1], $17              # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$15 + 2], $15              # |      1,385 |      9,659 |          0 |          0 |      1,379 |          0 |
    fmul    $17, $18, $17               # |      1,385 |      9,695 |          0 |      1,385 |          0 |          0 |
    fadd    $16, $17, $16               # |      1,385 |      6,925 |      5,540 |          0 |          0 |          0 |
    load    [$3 + 2], $17               # |      1,385 |      1,673 |          0 |          0 |         48 |          0 |
    store   $14, [$sp + 8]              # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    fmul    $15, $17, $15               # |      1,385 |      2,722 |      1,337 |          0 |          0 |          0 |
    fadd    $16, $15, $15               # |      1,385 |      6,925 |      5,540 |          0 |          0 |          0 |
    fcmp    $zero, $15                  # |      1,385 |      6,925 |      5,540 |          0 |          0 |          0 |
    bg      ble_else.31543              # |      1,385 |      1,609 |          0 |          0 |          0 |        112 |
ble_then.31543:
    load    [$14 + 118], $2             # |        114 |        804 |          0 |        114 |          1 |          0 |
.count load_float
    load    [f.27111], $14              # |        114 |        798 |          0 |          0 |        114 |          0 |
    fmul    $15, $37, $3                # |        114 |        114 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |        114 |        114 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |        114 |        636 |          0 |         87 |          0 |          0 |
    load    [$sp + 8], $2               # |        114 |        768 |          0 |          0 |        109 |          0 |
    load    [$sp + 2], $3               # |        114 |        114 |          0 |          0 |          0 |          0 |
    call    iter_trace_diffuse_rays.2929# |        114 |        114 |          0 |          0 |          0 |          0 |
    b       ble_cont.31543              # |        114 |        810 |          0 |        114 |          0 |          6 |
ble_else.31543:
    load    [$14 + 119], $2             # |      1,271 |      8,927 |          0 |      1,271 |          5 |          0 |
.count load_float
    load    [f.27110], $14              # |      1,271 |      8,897 |          0 |          0 |      1,271 |          0 |
    fmul    $15, $38, $3                # |      1,271 |      1,271 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |      1,271 |      1,271 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |      1,271 |      8,831 |          0 |      1,260 |          0 |          0 |
    load    [$sp + 8], $2               # |      1,271 |      8,723 |          0 |          0 |      1,242 |          0 |
    load    [$sp + 2], $3               # |      1,271 |      1,289 |          0 |          0 |          3 |          0 |
    call    iter_trace_diffuse_rays.2929# |      1,271 |      8,897 |          0 |      1,271 |          0 |          0 |
ble_cont.31543:
bne_cont.31542:
    load    [$sp + 4], $14              # |      1,737 |     20,469 |          0 |      1,737 |      1,385 |          0 |
    cmp     $14, 4                      # |      1,737 |      2,441 |        704 |          0 |          0 |          0 |
    be      bne_cont.31544              # |      1,737 |      3,019 |          0 |          0 |          0 |        641 |
bne_then.31544:
    load    [min_caml_dirvecs + 4], $14 # |      1,385 |      8,735 |          0 |          0 |      1,225 |          0 |
    load    [$sp + 3], $2               # |      1,385 |      8,999 |          0 |          0 |      1,269 |          0 |
    sub     $41, 1, $3                  # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $15               # |      1,385 |      9,223 |        116 |          0 |      1,287 |          0 |
.count move_float
    mov     $15, $51                    # |      1,385 |      9,695 |          0 |      1,385 |          0 |          0 |
    load    [$2 + 1], $15               # |      1,385 |      1,463 |          0 |          0 |         13 |          0 |
.count move_float
    mov     $15, $52                    # |      1,385 |      4,129 |      2,744 |          0 |          0 |          0 |
    load    [$2 + 2], $15               # |      1,385 |      1,481 |          0 |          0 |         16 |          0 |
.count move_float
    mov     $15, $53                    # |      1,385 |      4,123 |      2,738 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$14 + 118], $1             # |      1,385 |      9,695 |          0 |          0 |      1,385 |          0 |
    load    [$sp + 2], $3               # |      1,385 |      3,263 |          0 |          0 |        313 |          0 |
    load    [$1 + 0], $1                # |      1,385 |     18,005 |          0 |      1,385 |      1,385 |          0 |
    load    [$3 + 0], $4                # |      1,385 |      3,383 |          0 |          0 |        333 |          0 |
    load    [$3 + 1], $5                # |      1,385 |      1,757 |          0 |          0 |         62 |          0 |
    load    [$1 + 0], $2                # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    fmul    $2, $4, $2                  # |      1,385 |      4,155 |      2,770 |          0 |          0 |          0 |
    load    [$1 + 1], $4                # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |      1,385 |      9,689 |          0 |          0 |      1,384 |          0 |
    fmul    $4, $5, $4                  # |      1,385 |      1,386 |          1 |          0 |          0 |          0 |
    fadd    $2, $4, $2                  # |      1,385 |      9,695 |          0 |      1,385 |          0 |          0 |
    load    [$3 + 2], $4                # |      1,385 |      1,679 |          0 |          0 |         49 |          0 |
    store   $14, [$sp + 9]              # |      1,385 |      1,385 |          0 |          0 |          0 |          0 |
    fmul    $1, $4, $1                  # |      1,385 |      2,721 |      1,336 |          0 |          0 |          0 |
    fadd    $2, $1, $1                  # |      1,385 |      6,925 |      5,540 |          0 |          0 |          0 |
    fcmp    $zero, $1                   # |      1,385 |      6,925 |      5,540 |          0 |          0 |          0 |
    bg      ble_else.31545              # |      1,385 |      1,617 |          0 |          0 |          0 |        116 |
ble_then.31545:
    load    [$14 + 118], $2             # |         97 |         97 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27111], $3               # |         97 |      1,261 |          0 |         97 |         97 |          0 |
    fmul    $1, $37, $3                 # |         97 |         97 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |         97 |         97 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |         97 |        679 |          0 |         97 |          0 |          0 |
    load    [$sp + 9], $2               # |         97 |        679 |          0 |          0 |         97 |          0 |
    load    [$sp + 2], $3               # |         97 |         97 |          0 |          0 |          0 |          0 |
    call    iter_trace_diffuse_rays.2929# |         97 |         97 |          0 |          0 |          0 |          0 |
    b       ble_cont.31545              # |         97 |        687 |          0 |         97 |          0 |          4 |
ble_else.31545:
    load    [$14 + 119], $2             # |      1,288 |      9,016 |          0 |      1,288 |          0 |          0 |
.count load_float
    load    [f.27110], $3               # |      1,288 |      9,016 |          0 |          0 |      1,288 |          0 |
    fmul    $1, $38, $3                 # |      1,288 |      1,288 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |      1,288 |      1,288 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |      1,288 |      9,016 |          0 |      1,288 |          0 |          0 |
    load    [$sp + 9], $2               # |      1,288 |      8,968 |          0 |          0 |      1,280 |          0 |
    load    [$sp + 2], $3               # |      1,288 |      1,312 |          0 |          0 |          4 |          0 |
    call    iter_trace_diffuse_rays.2929# |      1,288 |      1,288 |          0 |          0 |          0 |          0 |
ble_cont.31545:
bne_cont.31544:
.count stack_move
    add     $sp, 10, $sp                # |      1,737 |     12,159 |          0 |      1,737 |          0 |          0 |
    load    [$sp - 9], $1               # |      1,737 |      4,758 |      1,737 |          0 |        214 |          0 |
    load    [$sp - 10], $2              # |      1,737 |      2,007 |          0 |          0 |         45 |          0 |
    load    [$1 + 4], $1                # |      1,737 |     13,670 |      1,523 |          0 |      1,735 |          0 |
    load    [$1 + $2], $1               # |      1,737 |     12,163 |          4 |          0 |      1,737 |          0 |
    load    [$1 + 0], $2                # |      1,737 |     12,159 |          0 |          0 |      1,737 |          0 |
    fmul    $2, $43, $2                 # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    fadd    $46, $2, $2                 # |      1,737 |      8,685 |      6,948 |          0 |          0 |          0 |
.count move_float
    mov     $2, $46                     # |      1,737 |     12,159 |          0 |      1,737 |          0 |          0 |
    load    [$1 + 1], $2                # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    fmul    $2, $44, $2                 # |      1,737 |      3,474 |      1,737 |          0 |          0 |          0 |
    fmul    $1, $45, $1                 # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
    fadd    $47, $2, $2                 # |      1,737 |      6,948 |      5,211 |          0 |          0 |          0 |
    fadd    $48, $1, $1                 # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $2, $47                     # |      1,737 |      6,948 |      5,211 |          0 |          0 |          0 |
.count move_float
    mov     $1, $48                     # |      1,737 |     12,159 |          0 |      1,737 |          0 |          0 |
    ret                                 # |      1,737 |      1,737 |          0 |          0 |          0 |          0 |
.end calc_diffuse_using_1point

######################################################################
.begin do_without_neighbors
do_without_neighbors.2951:
    cmp     $3, 4                       # |      2,430 |      3,618 |          0 |        198 |          0 |          0 |
    bg      ble_else.31546              # |      2,430 |      2,888 |          0 |          0 |          0 |        229 |
ble_then.31546:
    load    [$2 + 2], $14               # |      2,430 |     12,828 |          0 |          0 |      1,733 |          0 |
    load    [$14 + $3], $15             # |      2,430 |     14,234 |      1,394 |          0 |      1,735 |          0 |
    cmp     $15, 0                      # |      2,430 |      3,820 |      1,390 |          0 |          0 |          0 |
    bl      bge_else.31547              # |      2,430 |      2,744 |          0 |          0 |          0 |        157 |
bge_then.31547:
    load    [$2 + 3], $15               # |        143 |        983 |          0 |        140 |          0 |          0 |
    load    [$15 + $3], $16             # |        143 |        429 |        286 |          0 |          0 |          0 |
    cmp     $16, 0                      # |        143 |        429 |        286 |          0 |          0 |          0 |
    bne     be_else.31548               # |        143 |        257 |          0 |          0 |          0 |         57 |
be_then.31548:
    add     $3, 1, $3                   # |         11 |         11 |          0 |          0 |          0 |          0 |
    cmp     $3, 4                       # |         11 |         22 |         11 |          0 |          0 |          0 |
    bg      ble_else.31549              # |         11 |         13 |          0 |          0 |          0 |          1 |
ble_then.31549:
    load    [$14 + $3], $1              # |         11 |         11 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |         11 |         65 |          6 |          8 |          0 |          0 |
    bl      bge_else.31550              # |         11 |         19 |          0 |          0 |          0 |          4 |
bge_then.31550:
    load    [$15 + $3], $1              # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |          1 |          3 |          2 |          0 |          0 |          0 |
    bne     be_else.31551               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.31551:
    add     $3, 1, $3
    b       do_without_neighbors.2951
be_else.31551:
.count stack_move
    sub     $sp, 13, $sp                # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 0]               # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $3, [$sp + 1]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    calc_diffuse_using_1point.2942# |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 13, $sp                # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$sp - 12], $1              # |          1 |          8 |          1 |          0 |          1 |          0 |
    load    [$sp - 13], $2              # |          1 |          7 |          0 |          0 |          1 |          0 |
    add     $1, 1, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       do_without_neighbors.2951   # |          1 |          3 |          0 |          0 |          0 |          1 |
bge_else.31550:
    ret                                 # |         10 |         52 |          0 |          7 |          0 |          0 |
ble_else.31549:
    ret
be_else.31548:
.count stack_move
    sub     $sp, 13, $sp                # |        132 |        924 |          0 |        132 |          0 |          0 |
    store   $15, [$sp + 2]              # |        132 |        264 |        132 |          0 |          0 |          0 |
    store   $14, [$sp + 3]              # |        132 |        132 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 4]               # |        132 |        132 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 0]               # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $14               # |        132 |        774 |          0 |          0 |        107 |          0 |
    load    [$2 + 6], $16               # |        132 |      1,074 |          0 |        132 |         25 |          0 |
    load    [$14 + $3], $14             # |        132 |        768 |          0 |          0 |        106 |          0 |
    load    [$14 + 0], $15              # |        132 |        820 |         52 |          0 |        106 |          0 |
.count move_float
    mov     $15, $43                    # |        132 |        184 |         52 |          0 |          0 |          0 |
    load    [$14 + 1], $15              # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$14 + 2], $14              # |        132 |        132 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $15, $44                    # |        132 |        264 |        132 |          0 |          0 |          0 |
.count move_float
    mov     $14, $45                    # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$2 + 7], $14               # |        132 |        924 |          0 |        132 |          0 |          0 |
    load    [$2 + 1], $15               # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$14 + $3], $14             # |        132 |      1,056 |        132 |          0 |        132 |          0 |
    store   $14, [$sp + 5]              # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$15 + $3], $2              # |        132 |        924 |          0 |          0 |        132 |          0 |
    store   $2, [$sp + 6]               # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$16 + 0], $15              # |        132 |        924 |          0 |          0 |        132 |          0 |
    store   $15, [$sp + 7]              # |        132 |        132 |          0 |          0 |          0 |          0 |
    cmp     $15, 0                      # |        132 |        924 |          0 |        132 |          0 |          0 |
    be      bne_cont.31552              # |        132 |        214 |          0 |          0 |          0 |         41 |
bne_then.31552:
    load    [min_caml_dirvecs + 0], $15 # |        107 |        719 |          0 |          0 |        102 |          0 |
    load    [$2 + 0], $16               # |        107 |        749 |          0 |          0 |        107 |          0 |
    sub     $41, 1, $3                  # |        107 |        107 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $16, $51                    # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $16               # |        107 |        107 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $16, $52                    # |        107 |        321 |        214 |          0 |          0 |          0 |
    load    [$2 + 2], $16               # |        107 |        749 |          0 |        107 |          0 |          0 |
.count move_float
    mov     $16, $53                    # |        107 |        321 |        214 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$15 + 118], $16            # |        107 |        749 |          0 |          0 |        107 |          0 |
    load    [$14 + 0], $18              # |        107 |        749 |          0 |          0 |        107 |          0 |
    load    [$14 + 1], $19              # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$16 + 0], $16              # |        107 |        749 |          0 |          0 |        107 |          0 |
    load    [$16 + 0], $17              # |        107 |        107 |          0 |          0 |          0 |          0 |
    fmul    $17, $18, $17               # |        107 |        749 |          0 |        107 |          0 |          0 |
    load    [$16 + 1], $18              # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$16 + 2], $16              # |        107 |        749 |          0 |          0 |        107 |          0 |
    fmul    $18, $19, $18               # |        107 |        107 |          0 |          0 |          0 |          0 |
    fadd    $17, $18, $17               # |        107 |        535 |        428 |          0 |          0 |          0 |
    load    [$14 + 2], $18              # |        107 |        107 |          0 |          0 |          0 |          0 |
    store   $15, [$sp + 8]              # |        107 |        107 |          0 |          0 |          0 |          0 |
    fmul    $16, $18, $16               # |        107 |        214 |        107 |          0 |          0 |          0 |
    fadd    $17, $16, $16               # |        107 |        749 |          0 |        107 |          0 |          0 |
    fcmp    $zero, $16                  # |        107 |        535 |        428 |          0 |          0 |          0 |
    bg      ble_else.31553              # |        107 |        107 |          0 |          0 |          0 |          0 |
ble_then.31553:
    fmul    $16, $37, $3
    load    [$15 + 118], $2
    call    trace_diffuse_ray.2926
    li      116, $4
    load    [$sp + 8], $2
    load    [$sp + 5], $3
    call    iter_trace_diffuse_rays.2929
    b       ble_cont.31553
ble_else.31553:
    fmul    $16, $38, $3                # |        107 |        749 |          0 |        107 |          0 |          0 |
    load    [$15 + 119], $2             # |        107 |        107 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |        107 |        107 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |        107 |        293 |          0 |         31 |          0 |          0 |
    load    [$sp + 8], $2               # |        107 |        509 |          0 |          0 |         67 |          0 |
    load    [$sp + 5], $3               # |        107 |        911 |          0 |        107 |         27 |          0 |
    call    iter_trace_diffuse_rays.2929# |        107 |        107 |          0 |          0 |          0 |          0 |
ble_cont.31553:
bne_cont.31552:
    load    [$sp + 7], $14              # |        132 |      1,620 |          0 |        132 |        116 |          0 |
    cmp     $14, 1                      # |        132 |        164 |         32 |          0 |          0 |          0 |
    be      bne_cont.31554              # |        132 |        286 |          0 |          0 |          0 |         77 |
bne_then.31554:
    load    [min_caml_dirvecs + 1], $14 # |        104 |        704 |          0 |          0 |        100 |          0 |
    load    [$sp + 6], $2               # |        104 |        638 |          0 |          0 |         89 |          0 |
    sub     $41, 1, $3                  # |        104 |        104 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $15               # |        104 |      1,304 |          0 |        104 |         96 |          0 |
.count move_float
    mov     $15, $51                    # |        104 |        120 |         16 |          0 |          0 |          0 |
    load    [$2 + 1], $15               # |        104 |        110 |          0 |          0 |          1 |          0 |
.count move_float
    mov     $15, $52                    # |        104 |        310 |        206 |          0 |          0 |          0 |
    load    [$2 + 2], $15               # |        104 |        104 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $15, $53                    # |        104 |        312 |        208 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |        104 |        104 |          0 |          0 |          0 |          0 |
    load    [$14 + 118], $15            # |        104 |        728 |          0 |          0 |        104 |          0 |
    load    [$sp + 5], $3               # |        104 |      1,244 |          0 |        104 |         86 |          0 |
    load    [$15 + 0], $15              # |        104 |        728 |          0 |          0 |        104 |          0 |
    load    [$3 + 0], $17               # |        104 |        344 |          0 |          0 |         40 |          0 |
    load    [$3 + 1], $18               # |        104 |        158 |          0 |          0 |          9 |          0 |
    load    [$15 + 0], $16              # |        104 |        104 |          0 |          0 |          0 |          0 |
    fmul    $16, $17, $16               # |        104 |        312 |        208 |          0 |          0 |          0 |
    load    [$15 + 1], $17              # |        104 |        104 |          0 |          0 |          0 |          0 |
    load    [$15 + 2], $15              # |        104 |        728 |          0 |          0 |        104 |          0 |
    fmul    $17, $18, $17               # |        104 |        728 |          0 |        104 |          0 |          0 |
    fadd    $16, $17, $16               # |        104 |        520 |        416 |          0 |          0 |          0 |
    load    [$3 + 2], $17               # |        104 |        116 |          0 |          0 |          2 |          0 |
    store   $14, [$sp + 9]              # |        104 |        104 |          0 |          0 |          0 |          0 |
    fmul    $15, $17, $15               # |        104 |        206 |        102 |          0 |          0 |          0 |
    fadd    $16, $15, $15               # |        104 |        520 |        416 |          0 |          0 |          0 |
    fcmp    $zero, $15                  # |        104 |        520 |        416 |          0 |          0 |          0 |
    bg      ble_else.31555              # |        104 |        106 |          0 |          0 |          0 |          1 |
ble_then.31555:
    fmul    $15, $37, $3
    load    [$14 + 118], $2
    call    trace_diffuse_ray.2926
    li      116, $4
    load    [$sp + 9], $2
    load    [$sp + 5], $3
    call    iter_trace_diffuse_rays.2929
    b       ble_cont.31555
ble_else.31555:
    fmul    $15, $38, $3                # |        104 |        728 |          0 |        104 |          0 |          0 |
    load    [$14 + 119], $2             # |        104 |        104 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |        104 |        104 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |        104 |        284 |          0 |         30 |          0 |          0 |
    load    [$sp + 9], $2               # |        104 |        332 |          0 |          0 |         38 |          0 |
    load    [$sp + 5], $3               # |        104 |        266 |          0 |          0 |         27 |          0 |
    call    iter_trace_diffuse_rays.2929# |        104 |        104 |          0 |          0 |          0 |          0 |
ble_cont.31555:
bne_cont.31554:
    load    [$sp + 7], $14              # |        132 |      1,500 |          0 |        132 |         96 |          0 |
    cmp     $14, 2                      # |        132 |        924 |          0 |        132 |          0 |          0 |
    be      bne_cont.31556              # |        132 |        226 |          0 |          0 |          0 |         47 |
bne_then.31556:
    load    [min_caml_dirvecs + 2], $14 # |        107 |        749 |          0 |          0 |        107 |          0 |
    load    [$sp + 6], $2               # |        107 |        713 |          0 |          0 |        101 |          0 |
    sub     $41, 1, $3                  # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $15               # |        107 |        635 |          6 |          0 |         87 |          0 |
.count move_float
    mov     $15, $51                    # |        107 |        147 |         40 |          0 |          0 |          0 |
    load    [$2 + 1], $15               # |        107 |        131 |          0 |          0 |          4 |          0 |
.count move_float
    mov     $15, $52                    # |        107 |        749 |          0 |        107 |          0 |          0 |
    load    [$2 + 2], $15               # |        107 |        113 |          0 |          0 |          1 |          0 |
.count move_float
    mov     $15, $53                    # |        107 |        319 |        212 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$14 + 118], $15            # |        107 |        749 |          0 |          0 |        107 |          0 |
    load    [$sp + 5], $3               # |        107 |        707 |          0 |          0 |        100 |          0 |
    load    [$15 + 0], $15              # |        107 |        749 |          0 |          0 |        107 |          0 |
    load    [$3 + 0], $17               # |        107 |        275 |          0 |          0 |         28 |          0 |
    load    [$3 + 1], $18               # |        107 |        779 |          0 |        107 |          5 |          0 |
    load    [$15 + 0], $16              # |        107 |        119 |          0 |          0 |          2 |          0 |
    fmul    $16, $17, $16               # |        107 |        317 |        210 |          0 |          0 |          0 |
    load    [$15 + 1], $17              # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$15 + 2], $15              # |        107 |        737 |          0 |          0 |        105 |          0 |
    fmul    $17, $18, $17               # |        107 |        109 |          2 |          0 |          0 |          0 |
    fadd    $16, $17, $16               # |        107 |        535 |        428 |          0 |          0 |          0 |
    load    [$3 + 2], $17               # |        107 |        143 |          0 |          0 |          6 |          0 |
    store   $14, [$sp + 10]             # |        107 |        749 |          0 |        107 |          0 |          0 |
    fmul    $15, $17, $15               # |        107 |        107 |          0 |          0 |          0 |          0 |
    fadd    $16, $15, $15               # |        107 |        535 |        428 |          0 |          0 |          0 |
    fcmp    $zero, $15                  # |        107 |        535 |        428 |          0 |          0 |          0 |
    bg      ble_else.31557              # |        107 |        111 |          0 |          0 |          0 |          2 |
ble_then.31557:
    fmul    $15, $37, $3
    load    [$14 + 118], $2
    call    trace_diffuse_ray.2926
    li      116, $4
    load    [$sp + 10], $2
    load    [$sp + 5], $3
    call    iter_trace_diffuse_rays.2929
    b       ble_cont.31557
ble_else.31557:
    fmul    $15, $38, $3                # |        107 |        749 |          0 |        107 |          0 |          0 |
    load    [$14 + 119], $2             # |        107 |        119 |          0 |          0 |          2 |          0 |
    call    trace_diffuse_ray.2926      # |        107 |        107 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |        107 |        749 |          0 |        107 |          0 |          0 |
    load    [$sp + 10], $2              # |        107 |        149 |          0 |          0 |          7 |          0 |
    load    [$sp + 5], $3               # |        107 |        113 |          0 |          0 |          1 |          0 |
    call    iter_trace_diffuse_rays.2929# |        107 |        107 |          0 |          0 |          0 |          0 |
ble_cont.31557:
bne_cont.31556:
    load    [$sp + 7], $14              # |        132 |      1,098 |          0 |        132 |         29 |          0 |
    cmp     $14, 3                      # |        132 |        338 |        206 |          0 |          0 |          0 |
    be      bne_cont.31558              # |        132 |        230 |          0 |          0 |          0 |         49 |
bne_then.31558:
    load    [min_caml_dirvecs + 3], $14 # |        103 |        259 |          0 |          0 |         26 |          0 |
    load    [$sp + 6], $2               # |        103 |        979 |          0 |        103 |         43 |          0 |
    sub     $41, 1, $3                  # |        103 |        103 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $15               # |        103 |        679 |         60 |          0 |         86 |          0 |
.count move_float
    mov     $15, $51                    # |        103 |        137 |         34 |          0 |          0 |          0 |
    load    [$2 + 1], $15               # |        103 |        109 |          0 |          0 |          1 |          0 |
.count move_float
    mov     $15, $52                    # |        103 |        307 |        204 |          0 |          0 |          0 |
    load    [$2 + 2], $15               # |        103 |        127 |          0 |          0 |          4 |          0 |
.count move_float
    mov     $15, $53                    # |        103 |        301 |        198 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |        103 |        721 |          0 |        103 |          0 |          0 |
    load    [$14 + 118], $15            # |        103 |        721 |          0 |          0 |        103 |          0 |
    load    [$sp + 5], $3               # |        103 |        367 |          0 |          0 |         44 |          0 |
    load    [$15 + 0], $15              # |        103 |        721 |          0 |          0 |        103 |          0 |
    load    [$3 + 0], $17               # |        103 |        241 |          0 |          0 |         23 |          0 |
    load    [$3 + 1], $18               # |        103 |        133 |          0 |          0 |          5 |          0 |
    load    [$15 + 0], $16              # |        103 |        109 |          0 |          0 |          1 |          0 |
    fmul    $16, $17, $16               # |        103 |        307 |        204 |          0 |          0 |          0 |
    load    [$15 + 1], $17              # |        103 |        721 |          0 |        103 |          0 |          0 |
    load    [$15 + 2], $15              # |        103 |        715 |          0 |          0 |        102 |          0 |
    fmul    $17, $18, $17               # |        103 |        104 |          1 |          0 |          0 |          0 |
    fadd    $16, $17, $16               # |        103 |        515 |        412 |          0 |          0 |          0 |
    load    [$3 + 2], $17               # |        103 |        133 |          0 |          0 |          5 |          0 |
    store   $14, [$sp + 11]             # |        103 |        103 |          0 |          0 |          0 |          0 |
    fmul    $15, $17, $15               # |        103 |        201 |         98 |          0 |          0 |          0 |
    fadd    $16, $15, $15               # |        103 |        515 |        412 |          0 |          0 |          0 |
    fcmp    $zero, $15                  # |        103 |        721 |          0 |        103 |          0 |          0 |
    bg      ble_else.31559              # |        103 |        107 |          0 |          0 |          0 |          2 |
ble_then.31559:
    fmul    $15, $37, $3
    load    [$14 + 118], $2
    call    trace_diffuse_ray.2926
    li      116, $4
    load    [$sp + 11], $2
    load    [$sp + 5], $3
    call    iter_trace_diffuse_rays.2929
    b       ble_cont.31559
ble_else.31559:
    fmul    $15, $38, $3                # |        103 |        721 |          0 |        103 |          0 |          0 |
    load    [$14 + 119], $2             # |        103 |        109 |          0 |          0 |          1 |          0 |
    call    trace_diffuse_ray.2926      # |        103 |        103 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |        103 |        721 |          0 |        103 |          0 |          0 |
    load    [$sp + 11], $2              # |        103 |        667 |          0 |          0 |         94 |          0 |
    load    [$sp + 5], $3               # |        103 |        103 |          0 |          0 |          0 |          0 |
    call    iter_trace_diffuse_rays.2929# |        103 |        721 |          0 |        103 |          0 |          0 |
ble_cont.31559:
bne_cont.31558:
    load    [$sp + 7], $14              # |        132 |      1,542 |          0 |        132 |        103 |          0 |
    cmp     $14, 4                      # |        132 |        190 |         58 |          0 |          0 |          0 |
    be      bne_cont.31560              # |        132 |        216 |          0 |          0 |          0 |         42 |
bne_then.31560:
    load    [min_caml_dirvecs + 4], $14 # |        107 |        599 |          0 |          0 |         82 |          0 |
    load    [$sp + 6], $2               # |        107 |        629 |          0 |          0 |         87 |          0 |
    sub     $41, 1, $3                  # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $15               # |        107 |        661 |         20 |          0 |         89 |          0 |
.count move_float
    mov     $15, $51                    # |        107 |        749 |          0 |        107 |          0 |          0 |
    load    [$2 + 1], $15               # |        107 |        119 |          0 |          0 |          2 |          0 |
.count move_float
    mov     $15, $52                    # |        107 |        317 |        210 |          0 |          0 |          0 |
    load    [$2 + 2], $15               # |        107 |        125 |          0 |          0 |          3 |          0 |
.count move_float
    mov     $15, $53                    # |        107 |        315 |        208 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$14 + 118], $1             # |        107 |        749 |          0 |          0 |        107 |          0 |
    load    [$sp + 5], $3               # |        107 |        629 |          0 |          0 |         87 |          0 |
    load    [$1 + 0], $1                # |        107 |      1,391 |          0 |        107 |        107 |          0 |
    load    [$3 + 0], $4                # |        107 |        251 |          0 |          0 |         24 |          0 |
    load    [$3 + 1], $5                # |        107 |        149 |          0 |          0 |          7 |          0 |
    load    [$1 + 0], $2                # |        107 |        107 |          0 |          0 |          0 |          0 |
    fmul    $2, $4, $2                  # |        107 |        321 |        214 |          0 |          0 |          0 |
    load    [$1 + 1], $4                # |        107 |        107 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |        107 |        749 |          0 |          0 |        107 |          0 |
    fmul    $4, $5, $4                  # |        107 |        107 |          0 |          0 |          0 |          0 |
    fadd    $2, $4, $2                  # |        107 |        749 |          0 |        107 |          0 |          0 |
    load    [$3 + 2], $4                # |        107 |        131 |          0 |          0 |          4 |          0 |
    store   $14, [$sp + 12]             # |        107 |        107 |          0 |          0 |          0 |          0 |
    fmul    $1, $4, $1                  # |        107 |        210 |        103 |          0 |          0 |          0 |
    fadd    $2, $1, $1                  # |        107 |        535 |        428 |          0 |          0 |          0 |
    fcmp    $zero, $1                   # |        107 |        535 |        428 |          0 |          0 |          0 |
    bg      ble_else.31561              # |        107 |        111 |          0 |          0 |          0 |          2 |
ble_then.31561:
    fmul    $1, $37, $3
    load    [$14 + 118], $2
    call    trace_diffuse_ray.2926
    li      116, $4
    load    [$sp + 12], $2
    load    [$sp + 5], $3
    call    iter_trace_diffuse_rays.2929
    b       ble_cont.31561
ble_else.31561:
    fmul    $1, $38, $3                 # |        107 |        749 |          0 |        107 |          0 |          0 |
    load    [$14 + 119], $2             # |        107 |        749 |          0 |        107 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |        107 |        107 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |        107 |        125 |          0 |          3 |          0 |          0 |
    load    [$sp + 12], $2              # |        107 |        731 |          0 |          0 |        104 |          0 |
    load    [$sp + 5], $3               # |        107 |        107 |          0 |          0 |          0 |          0 |
    call    iter_trace_diffuse_rays.2929# |        107 |        107 |          0 |          0 |          0 |          0 |
ble_cont.31561:
bne_cont.31560:
    load    [$sp + 0], $2               # |        132 |      1,476 |          0 |        132 |         92 |          0 |
    load    [$sp + 4], $3               # |        132 |        924 |          0 |          0 |        132 |          0 |
    load    [$2 + 4], $1                # |        132 |      1,716 |          0 |        132 |        132 |          0 |
    load    [$1 + $3], $1               # |        132 |        924 |          0 |          0 |        132 |          0 |
    add     $3, 1, $3                   # |        132 |        132 |          0 |          0 |          0 |          0 |
    load    [$1 + 0], $4                # |        132 |        924 |          0 |          0 |        132 |          0 |
    cmp     $3, 4                       # |        132 |        132 |          0 |          0 |          0 |          0 |
    fmul    $4, $43, $4                 # |        132 |        132 |          0 |          0 |          0 |          0 |
    fadd    $46, $4, $4                 # |        132 |        660 |        528 |          0 |          0 |          0 |
.count move_float
    mov     $4, $46                     # |        132 |        660 |        528 |          0 |          0 |          0 |
    load    [$1 + 1], $4                # |        132 |        924 |          0 |        132 |          0 |          0 |
    load    [$1 + 2], $1                # |        132 |        132 |          0 |          0 |          0 |          0 |
    fmul    $4, $44, $4                 # |        132 |        264 |        132 |          0 |          0 |          0 |
    fmul    $1, $45, $1                 # |        132 |        132 |          0 |          0 |          0 |          0 |
    fadd    $47, $4, $4                 # |        132 |        528 |        396 |          0 |          0 |          0 |
    fadd    $48, $1, $1                 # |        132 |        132 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $4, $47                     # |        132 |        528 |        396 |          0 |          0 |          0 |
.count move_float
    mov     $1, $48                     # |        132 |        132 |          0 |          0 |          0 |          0 |
    bg      ble_else.31562              # |        132 |        384 |          0 |         38 |          0 |         12 |
ble_then.31562:
    load    [$sp + 3], $1               # |        132 |        372 |          0 |          0 |         40 |          0 |
    load    [$1 + $3], $1               # |        132 |      1,102 |        184 |          0 |        131 |          0 |
    cmp     $1, 0                       # |        132 |        134 |          2 |          0 |          0 |          0 |
    bl      bge_else.31563              # |        132 |        136 |          0 |          0 |          0 |          2 |
bge_then.31563:
    load    [$sp + 2], $1
    load    [$1 + $3], $1
    cmp     $1, 0
    bne     be_else.31564
be_then.31564:
.count stack_move
    add     $sp, 13, $sp
    add     $3, 1, $3
    b       do_without_neighbors.2951
be_else.31564:
    store   $3, [$sp + 1]
    call    calc_diffuse_using_1point.2942
.count stack_move
    add     $sp, 13, $sp
    load    [$sp - 12], $1
    load    [$sp - 13], $2
    add     $1, 1, $3
    b       do_without_neighbors.2951
bge_else.31563:
.count stack_move
    add     $sp, 13, $sp                # |        132 |        924 |          0 |        132 |          0 |          0 |
    ret                                 # |        132 |        132 |          0 |          0 |          0 |          0 |
ble_else.31562:
.count stack_move
    add     $sp, 13, $sp
    ret
bge_else.31547:
    ret                                 # |      2,287 |     12,859 |          0 |      1,762 |          0 |          0 |
ble_else.31546:
    ret
.end do_without_neighbors

######################################################################
.begin try_exploit_neighbors
try_exploit_neighbors.2967:
    cmp     $6, 4                       # |     23,861 |     30,953 |          0 |      1,182 |          0 |          0 |
    bg      ble_else.31565              # |     23,861 |     24,837 |          0 |          0 |          0 |        488 |
ble_then.31565:
    load    [$4 + $2], $1               # |     23,861 |     25,637 |          0 |          0 |        296 |          0 |
    load    [$1 + 2], $7                # |     23,861 |     71,813 |     47,130 |          0 |        137 |          0 |
    load    [$7 + $6], $7               # |     23,861 |     77,777 |     47,448 |          0 |      1,078 |          0 |
    cmp     $7, 0                       # |     23,861 |     69,427 |     45,566 |          0 |          0 |          0 |
    bl      bge_else.31566              # |     23,861 |     24,869 |          0 |          0 |          0 |        504 |
bge_then.31566:
    load    [$3 + $2], $8               # |      9,906 |     34,878 |          0 |      1,350 |      2,812 |          0 |
    load    [$8 + 2], $9                # |      9,906 |     71,410 |     14,188 |          0 |      7,886 |          0 |
    load    [$9 + $6], $9               # |      9,906 |     61,448 |      4,040 |          0 |      7,917 |          0 |
    cmp     $9, $7                      # |      9,906 |     13,884 |      3,978 |          0 |          0 |          0 |
    bne     be_else.31567               # |      9,906 |     11,670 |          0 |          0 |          0 |        882 |
be_then.31567:
    load    [$5 + $2], $9               # |      9,429 |     23,601 |          0 |          0 |      2,362 |          0 |
    load    [$9 + 2], $9                # |      9,429 |     67,033 |     14,134 |          0 |      7,245 |          0 |
    load    [$9 + $6], $9               # |      9,429 |     57,831 |      4,368 |          0 |      7,339 |          0 |
    cmp     $9, $7                      # |      9,429 |     19,973 |      3,770 |      1,129 |          0 |          0 |
    bne     be_else.31568               # |      9,429 |     10,767 |          0 |          0 |          0 |        669 |
be_then.31568:
    sub     $2, 1, $9                   # |      9,028 |      9,028 |          0 |          0 |          0 |          0 |
    load    [$4 + $9], $9               # |      9,028 |     22,148 |      9,028 |          0 |        682 |          0 |
    load    [$9 + 2], $9                # |      9,028 |     26,212 |     16,692 |          0 |         82 |          0 |
    load    [$9 + $6], $9               # |      9,028 |     30,262 |     17,892 |          0 |        557 |          0 |
    cmp     $9, $7                      # |      9,028 |     25,970 |     16,942 |          0 |          0 |          0 |
    bne     be_else.31569               # |      9,028 |      9,732 |          0 |          0 |          0 |        352 |
be_then.31569:
    add     $2, 1, $9                   # |      8,880 |     13,818 |          0 |        823 |          0 |          0 |
    load    [$4 + $9], $9               # |      8,880 |     27,714 |      8,880 |          0 |      1,659 |          0 |
    load    [$9 + 2], $9                # |      8,880 |     66,798 |     14,442 |          0 |      7,246 |          0 |
    load    [$9 + $6], $9               # |      8,880 |     55,624 |      3,268 |          0 |      7,246 |          0 |
    cmp     $9, $7                      # |      8,880 |     12,148 |      3,268 |          0 |          0 |          0 |
    bne     be_else.31570               # |      8,880 |      9,414 |          0 |          0 |          0 |        267 |
be_then.31570:
    li      1, $7                       # |      8,752 |      8,752 |          0 |          0 |          0 |          0 |
    b       be_cont.31567               # |      8,752 |      8,830 |          0 |          0 |          0 |         39 |
be_else.31570:
    li      0, $7                       # |        128 |        242 |          0 |         19 |          0 |          0 |
    b       be_cont.31567               # |        128 |        184 |          0 |          0 |          0 |         28 |
be_else.31569:
    li      0, $7                       # |        148 |        670 |          0 |         87 |          0 |          0 |
    b       be_cont.31567               # |        148 |        160 |          0 |          0 |          0 |          6 |
be_else.31568:
    li      0, $7                       # |        401 |      1,871 |          0 |        245 |          0 |          0 |
    b       be_cont.31567               # |        401 |        461 |          0 |          0 |          0 |         30 |
be_else.31567:
    li      0, $7                       # |        477 |      1,881 |          0 |        234 |          0 |          0 |
be_cont.31567:
    cmp     $7, 0                       # |      9,906 |     14,973 |        477 |        765 |          0 |          0 |
    bne     be_else.31571               # |      9,906 |     18,014 |          0 |      1,350 |          0 |          4 |
be_then.31571:
    cmp     $6, 4                       # |      1,154 |      1,154 |          0 |          0 |          0 |          0 |
    bg      ble_else.31572              # |      1,154 |      1,946 |          0 |          0 |          0 |        396 |
ble_then.31572:
    load    [$4 + $2], $2               # |      1,154 |      1,172 |          0 |          0 |          3 |          0 |
    load    [$2 + 2], $1                # |      1,154 |      3,498 |      2,302 |          0 |          7 |          0 |
    load    [$1 + $6], $1               # |      1,154 |      3,454 |      2,294 |          0 |          1 |          0 |
    cmp     $1, 0                       # |      1,154 |      3,460 |      2,306 |          0 |          0 |          0 |
    bl      bge_else.31573              # |      1,154 |      1,268 |          0 |          0 |          0 |         57 |
bge_then.31573:
    load    [$2 + 3], $1                # |      1,154 |      7,184 |          0 |      1,005 |          0 |          0 |
    load    [$1 + $6], $1               # |      1,154 |      8,232 |      2,308 |          0 |        795 |          0 |
    cmp     $1, 0                       # |      1,154 |      1,872 |        718 |          0 |          0 |          0 |
    bne     be_else.31574               # |      1,154 |      1,742 |          0 |          0 |          0 |        294 |
be_then.31574:
    add     $6, 1, $3                   # |        178 |        178 |          0 |          0 |          0 |          0 |
    b       do_without_neighbors.2951   # |        178 |        188 |          0 |          0 |          0 |          5 |
be_else.31574:
.count stack_move
    sub     $sp, 2, $sp                 # |        976 |        976 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $6, $3                      # |        976 |        976 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 0]               # |        976 |      4,090 |          0 |        519 |          0 |          0 |
    store   $6, [$sp + 1]               # |        976 |        976 |          0 |          0 |          0 |          0 |
    call    calc_diffuse_using_1point.2942# |        976 |        976 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |        976 |      6,046 |          0 |        845 |          0 |          0 |
    load    [$sp - 1], $1               # |        976 |      6,872 |        976 |          0 |        820 |          0 |
    load    [$sp - 2], $2               # |        976 |      5,698 |          0 |          0 |        787 |          0 |
    add     $1, 1, $3                   # |        976 |      1,090 |        114 |          0 |          0 |          0 |
    b       do_without_neighbors.2951   # |        976 |      2,036 |          0 |          0 |          0 |        530 |
bge_else.31573:
    ret
ble_else.31572:
    ret
be_else.31571:
    load    [$1 + 3], $1                # |      8,752 |     13,498 |          0 |        735 |         56 |          0 |
    load    [$1 + $6], $1               # |      8,752 |     69,140 |     17,392 |          0 |      7,166 |          0 |
    cmp     $1, 0                       # |      8,752 |     11,924 |      3,172 |          0 |          0 |          0 |
    bne     be_else.31575               # |      8,752 |      9,908 |          0 |          0 |          0 |        578 |
be_then.31575:
    add     $6, 1, $6                   # |      3,348 |      3,348 |          0 |          0 |          0 |          0 |
    b       try_exploit_neighbors.2967  # |      3,348 |      3,350 |          0 |          0 |          0 |          1 |
be_else.31575:
    load    [$8 + 5], $1                # |      5,404 |      8,554 |          0 |        497 |         28 |          0 |
    load    [$1 + $6], $1               # |      5,404 |     48,580 |     10,752 |          0 |      5,404 |          0 |
    load    [$1 + 0], $7                # |      5,404 |     37,828 |          0 |          0 |      5,404 |          0 |
.count move_float
    mov     $7, $43                     # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$1 + 1], $7                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $7, $44                     # |      5,404 |     10,808 |      5,404 |          0 |          0 |          0 |
.count move_float
    mov     $1, $45                     # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    sub     $2, 1, $1                   # |      5,404 |      8,386 |          0 |        497 |          0 |          0 |
    load    [$4 + $1], $1               # |      5,404 |     11,048 |      5,404 |          0 |         40 |          0 |
    load    [$1 + 5], $1                # |      5,404 |     16,294 |     10,728 |          0 |         27 |          0 |
    load    [$1 + $6], $1               # |      5,404 |     18,450 |     10,754 |          0 |        382 |          0 |
    load    [$1 + 0], $7                # |      5,404 |     17,860 |     10,044 |          0 |        402 |          0 |
    fadd    $43, $7, $7                 # |      5,404 |     15,408 |     10,004 |          0 |          0 |          0 |
.count move_float
    mov     $7, $43                     # |      5,404 |     27,020 |     21,616 |          0 |          0 |          0 |
    load    [$1 + 1], $7                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |      5,404 |      8,266 |          0 |        476 |          1 |          0 |
    fadd    $44, $7, $7                 # |      5,404 |     10,332 |      4,928 |          0 |          0 |          0 |
    fadd    $45, $1, $1                 # |      5,404 |      5,879 |        475 |          0 |          0 |          0 |
.count move_float
    mov     $7, $44                     # |      5,404 |     21,141 |     15,737 |          0 |          0 |          0 |
.count move_float
    mov     $1, $45                     # |      5,404 |      5,879 |        475 |          0 |          0 |          0 |
    load    [$4 + $2], $1               # |      5,404 |      5,902 |          0 |          0 |         83 |          0 |
    load    [$1 + 5], $1                # |      5,404 |     18,044 |     10,642 |          0 |        333 |          0 |
    load    [$1 + $6], $1               # |      5,404 |     17,910 |     10,142 |          0 |        394 |          0 |
    load    [$1 + 0], $7                # |      5,404 |     20,418 |      9,656 |        497 |        396 |          0 |
    fadd    $43, $7, $7                 # |      5,404 |     15,420 |     10,016 |          0 |          0 |          0 |
.count move_float
    mov     $7, $43                     # |      5,404 |     27,020 |     21,616 |          0 |          0 |          0 |
    load    [$1 + 1], $7                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    fadd    $44, $7, $7                 # |      5,404 |     10,808 |      5,404 |          0 |          0 |          0 |
    fadd    $45, $1, $1                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $7, $44                     # |      5,404 |     21,616 |     16,212 |          0 |          0 |          0 |
.count move_float
    mov     $1, $45                     # |      5,404 |      6,100 |          0 |        116 |          0 |          0 |
    add     $2, 1, $1                   # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$4 + $1], $1               # |      5,404 |     11,018 |      5,404 |          0 |         35 |          0 |
    load    [$1 + 5], $1                # |      5,404 |     16,142 |     10,738 |          0 |          0 |          0 |
    load    [$1 + $6], $1               # |      5,404 |     48,636 |     10,808 |          0 |      5,404 |          0 |
    load    [$1 + 0], $7                # |      5,404 |     37,828 |          0 |          0 |      5,404 |          0 |
    fadd    $43, $7, $7                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $7, $43                     # |      5,404 |     27,020 |     21,616 |          0 |          0 |          0 |
    load    [$1 + 1], $7                # |      5,404 |      6,100 |          0 |        116 |          0 |          0 |
    load    [$1 + 2], $1                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    fadd    $44, $7, $7                 # |      5,404 |     10,808 |      5,404 |          0 |          0 |          0 |
    fadd    $45, $1, $1                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $7, $44                     # |      5,404 |     21,616 |     16,212 |          0 |          0 |          0 |
.count move_float
    mov     $1, $45                     # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$5 + $2], $1               # |      5,404 |      5,974 |          0 |          0 |         95 |          0 |
    load    [$1 + 5], $1                # |      5,404 |     16,190 |     10,618 |          0 |         28 |          0 |
    load    [$1 + $6], $1               # |      5,404 |     49,924 |     10,062 |        346 |      5,397 |          0 |
    load    [$1 + 0], $7                # |      5,404 |     37,842 |         14 |          0 |      5,404 |          0 |
    fadd    $43, $7, $7                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $7, $43                     # |      5,404 |     27,020 |     21,616 |          0 |          0 |          0 |
    load    [$1 + 1], $7                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    fadd    $44, $7, $7                 # |      5,404 |     10,808 |      5,404 |          0 |          0 |          0 |
    fadd    $45, $1, $1                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $7, $44                     # |      5,404 |     23,107 |     14,721 |        497 |          0 |          0 |
.count move_float
    mov     $1, $45                     # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$4 + $2], $1               # |      5,404 |      5,854 |          0 |          0 |         75 |          0 |
    load    [$1 + 4], $1                # |      5,404 |     18,060 |     10,658 |          0 |        333 |          0 |
    load    [$1 + $6], $1               # |      5,404 |     47,970 |     10,142 |          0 |      5,404 |          0 |
    add     $6, 1, $6                   # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$1 + 0], $7                # |      5,404 |     37,828 |          0 |          0 |      5,404 |          0 |
    fmul    $7, $43, $7                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    fadd    $46, $7, $7                 # |      5,404 |     28,014 |     19,628 |        497 |          0 |          0 |
.count move_float
    mov     $7, $46                     # |      5,404 |     27,020 |     21,616 |          0 |          0 |          0 |
    load    [$1 + 1], $7                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    fmul    $7, $44, $7                 # |      5,404 |     10,808 |      5,404 |          0 |          0 |          0 |
    fmul    $1, $45, $1                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    fadd    $47, $7, $7                 # |      5,404 |     21,616 |     16,212 |          0 |          0 |          0 |
    fadd    $48, $1, $1                 # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $7, $47                     # |      5,404 |     21,616 |     16,212 |          0 |          0 |          0 |
.count move_float
    mov     $1, $48                     # |      5,404 |      5,404 |          0 |          0 |          0 |          0 |
    b       try_exploit_neighbors.2967  # |      5,404 |      5,408 |          0 |          0 |          0 |          2 |
bge_else.31566:
    ret                                 # |     13,955 |     13,955 |          0 |          0 |          0 |          0 |
ble_else.31565:
    ret
.end try_exploit_neighbors

######################################################################
.begin pretrace_diffuse_rays
pretrace_diffuse_rays.2980:
    cmp     $3, 4                       # |     16,395 |     16,401 |          0 |          1 |          0 |          0 |
    bg      ble_else.31576              # |     16,395 |     16,597 |          0 |          0 |          0 |        101 |
ble_then.31576:
    load    [$2 + 2], $14               # |     16,395 |     65,847 |          0 |          0 |      8,242 |          0 |
    load    [$14 + $3], $15             # |     16,395 |    103,359 |     13,908 |      3,642 |      8,534 |          0 |
    cmp     $15, 0                      # |     16,395 |     32,117 |     15,722 |          0 |          0 |          0 |
    bl      bge_else.31577              # |     16,395 |     19,231 |          0 |          0 |          0 |      1,418 |
bge_then.31577:
    load    [$2 + 3], $15               # |      2,101 |      2,101 |          0 |          0 |          0 |          0 |
    load    [$15 + $3], $16             # |      2,101 |      6,303 |      4,202 |          0 |          0 |          0 |
    cmp     $16, 0                      # |      2,101 |      6,303 |      4,202 |          0 |          0 |          0 |
    bne     be_else.31578               # |      2,101 |      2,137 |          0 |          0 |          0 |         18 |
be_then.31578:
    add     $3, 1, $16                  # |         67 |         67 |          0 |          0 |          0 |          0 |
    cmp     $16, 4                      # |         67 |        264 |         41 |         26 |          0 |          0 |
    bg      ble_else.31579              # |         67 |         67 |          0 |          0 |          0 |          0 |
ble_then.31579:
    load    [$14 + $16], $14            # |         67 |         67 |          0 |          0 |          0 |          0 |
    cmp     $14, 0                      # |         67 |        201 |        134 |          0 |          0 |          0 |
    bl      bge_else.31580              # |         67 |         83 |          0 |          0 |          0 |          8 |
bge_then.31580:
    load    [$15 + $16], $14            # |         11 |         11 |          0 |          0 |          0 |          0 |
    cmp     $14, 0                      # |         11 |         33 |         22 |          0 |          0 |          0 |
    bne     be_else.31581               # |         11 |         15 |          0 |          0 |          0 |          2 |
be_then.31581:
    add     $16, 1, $3                  # |          2 |         14 |          0 |          2 |          0 |          0 |
    b       pretrace_diffuse_rays.2980  # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.31581:
.count stack_move
    sub     $sp, 14, $sp                # |          9 |         63 |          0 |          9 |          0 |          0 |
.count move_float
    mov     $zero, $43                  # |          9 |          9 |          0 |          0 |          0 |          0 |
    store   $16, [$sp + 0]              # |          9 |          9 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 1]               # |          9 |          9 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $44                  # |          9 |          9 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $45                  # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$2 + 6], $14               # |          9 |         63 |          0 |          9 |          0 |          0 |
    load    [$2 + 7], $15               # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $17               # |          9 |          9 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $3                  # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$17 + $16], $2             # |          9 |         18 |          9 |          0 |          0 |          0 |
    load    [$2 + 0], $17               # |          9 |         81 |         18 |          0 |          9 |          0 |
.count move_float
    mov     $17, $51                    # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $17               # |          9 |          9 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $17, $52                    # |          9 |         63 |          0 |          9 |          0 |          0 |
    load    [$2 + 2], $17               # |          9 |          9 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $17, $53                    # |          9 |         27 |         18 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$14 + 0], $1               # |          9 |         63 |          0 |          0 |          9 |          0 |
    load    [$15 + $16], $3             # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + $1], $2 # |          9 |         45 |          0 |          0 |          6 |          0 |
    load    [$3 + 0], $5                # |          9 |         66 |          3 |          0 |          9 |          0 |
    load    [$3 + 1], $6                # |          9 |         63 |          0 |          9 |          0 |          0 |
    load    [$2 + 118], $1              # |          9 |         63 |          0 |          0 |          9 |          0 |
    load    [$1 + 0], $1                # |          9 |         63 |          0 |          0 |          9 |          0 |
    load    [$1 + 0], $4                # |          9 |          9 |          0 |          0 |          0 |          0 |
    fmul    $4, $5, $4                  # |          9 |         27 |         18 |          0 |          0 |          0 |
    load    [$1 + 1], $5                # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$1 + 2], $1                # |          9 |         63 |          0 |          0 |          9 |          0 |
    fmul    $5, $6, $5                  # |          9 |          9 |          0 |          0 |          0 |          0 |
    fadd    $4, $5, $4                  # |          9 |         63 |          0 |          9 |          0 |          0 |
    load    [$3 + 2], $5                # |          9 |          9 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 2]               # |          9 |          9 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 3]               # |          9 |          9 |          0 |          0 |          0 |          0 |
    fmul    $1, $5, $1                  # |          9 |          9 |          0 |          0 |          0 |          0 |
    fadd    $4, $1, $1                  # |          9 |         45 |         36 |          0 |          0 |          0 |
    fcmp    $zero, $1                   # |          9 |         45 |         36 |          0 |          0 |          0 |
    bg      ble_else.31582              # |          9 |          9 |          0 |          0 |          0 |          0 |
ble_then.31582:
    fmul    $1, $37, $3
    load    [$2 + 118], $2
    call    trace_diffuse_ray.2926
    li      116, $4
    load    [$sp + 3], $2
    load    [$sp + 2], $3
    call    iter_trace_diffuse_rays.2929
    b       ble_cont.31582
ble_else.31582:
    fmul    $1, $38, $3                 # |          9 |         63 |          0 |          9 |          0 |          0 |
    load    [$2 + 119], $2              # |          9 |          9 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |          9 |          9 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |          9 |          9 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $2               # |          9 |         27 |          0 |          0 |          3 |          0 |
    load    [$sp + 2], $3               # |          9 |         27 |          0 |          0 |          3 |          0 |
    call    iter_trace_diffuse_rays.2929# |          9 |          9 |          0 |          0 |          0 |          0 |
ble_cont.31582:
.count stack_move
    add     $sp, 14, $sp                # |          9 |         63 |          0 |          9 |          0 |          0 |
    load    [$sp - 13], $2              # |          9 |         75 |          0 |          9 |          2 |          0 |
    load    [$sp - 14], $3              # |          9 |         21 |          0 |          0 |          2 |          0 |
    load    [$2 + 5], $1                # |          9 |         58 |          7 |          0 |          7 |          0 |
    load    [$1 + $3], $1               # |          9 |         67 |          4 |          0 |          9 |          0 |
    add     $3, 1, $3                   # |          9 |          9 |          0 |          0 |          0 |          0 |
    store   $43, [$1 + 0]               # |          9 |          9 |          0 |          0 |          0 |          0 |
    store   $44, [$1 + 1]               # |          9 |          9 |          0 |          0 |          0 |          0 |
    store   $45, [$1 + 2]               # |          9 |          9 |          0 |          0 |          0 |          0 |
    b       pretrace_diffuse_rays.2980  # |          9 |         67 |          0 |          9 |          0 |          2 |
bge_else.31580:
    ret                                 # |         56 |        392 |          0 |         56 |          0 |          0 |
ble_else.31579:
    ret
be_else.31578:
.count stack_move
    sub     $sp, 14, $sp                # |      2,034 |     14,238 |          0 |      2,034 |          0 |          0 |
.count move_float
    mov     $zero, $43                  # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    store   $15, [$sp + 4]              # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    store   $14, [$sp + 5]              # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 1]               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 6]               # |      2,034 |     14,238 |          0 |      2,034 |          0 |          0 |
.count move_float
    mov     $zero, $44                  # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $45                  # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [$2 + 6], $14               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [$2 + 7], $15               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    store   $15, [$sp + 7]              # |      2,034 |      6,102 |      4,068 |          0 |          0 |          0 |
    load    [$2 + 1], $16               # |      2,034 |      2,082 |          0 |          0 |          8 |          0 |
    store   $16, [$sp + 8]              # |      2,034 |      6,086 |      4,052 |          0 |          0 |          0 |
    load    [$16 + $3], $2              # |      2,034 |     13,170 |          0 |      1,465 |        391 |          0 |
    sub     $41, 1, $3                  # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $16               # |      2,034 |     15,881 |      1,643 |          0 |      2,034 |          0 |
.count move_float
    mov     $16, $51                    # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $16               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $16, $52                    # |      2,034 |      6,102 |      4,068 |          0 |          0 |          0 |
    load    [$2 + 2], $16               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $16, $53                    # |      2,034 |      6,102 |      4,068 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |      2,034 |      2,040 |          0 |          1 |          0 |          0 |
    load    [$14 + 0], $14              # |      2,034 |     14,238 |          0 |          0 |      2,034 |          0 |
    load    [min_caml_dirvecs + $14], $2# |      2,034 |     10,416 |          0 |          0 |      1,397 |          0 |
    store   $2, [$sp + 9]               # |      2,034 |      3,308 |      1,274 |          0 |          0 |          0 |
    load    [$2 + 118], $14             # |      2,034 |     14,238 |          0 |          0 |      2,034 |          0 |
    load    [$sp + 6], $17              # |      2,034 |      2,436 |          0 |          0 |         67 |          0 |
    load    [$14 + 0], $14              # |      2,034 |     14,238 |          0 |          0 |      2,034 |          0 |
    load    [$15 + $17], $3             # |      2,034 |      4,908 |          0 |          0 |        479 |          0 |
    load    [$14 + 0], $16              # |      2,034 |      2,052 |          0 |          1 |          2 |          0 |
    store   $3, [$sp + 10]              # |      2,034 |      3,588 |      1,554 |          0 |          0 |          0 |
    load    [$3 + 0], $15               # |      2,034 |     14,238 |          0 |          0 |      2,034 |          0 |
    load    [$3 + 1], $17               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    fmul    $16, $15, $15               # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [$14 + 1], $16              # |      2,034 |      2,046 |          0 |          0 |          2 |          0 |
    load    [$14 + 2], $14              # |      2,034 |     14,190 |          0 |          0 |      2,026 |          0 |
    fmul    $16, $17, $16               # |      2,034 |      2,040 |          6 |          0 |          0 |          0 |
    fadd    $15, $16, $15               # |      2,034 |     10,172 |      8,132 |          1 |          0 |          0 |
    load    [$3 + 2], $16               # |      2,034 |      2,046 |          0 |          0 |          2 |          0 |
    fmul    $14, $16, $14               # |      2,034 |      6,098 |      4,064 |          0 |          0 |          0 |
    fadd    $15, $14, $14               # |      2,034 |     10,170 |      8,136 |          0 |          0 |          0 |
    fcmp    $zero, $14                  # |      2,034 |     10,170 |      8,136 |          0 |          0 |          0 |
    bg      ble_else.31583              # |      2,034 |      2,462 |          0 |          0 |          0 |        214 |
ble_then.31583:
    load    [$2 + 118], $2              # |        292 |        304 |          0 |          0 |          2 |          0 |
.count load_float
    load    [f.27111], $15              # |        292 |      2,044 |          0 |          0 |        292 |          0 |
    fmul    $14, $37, $3                # |        292 |        298 |          0 |          1 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |        292 |        292 |          0 |          0 |          0 |          0 |
    b       ble_cont.31583              # |        292 |        302 |          0 |          0 |          0 |          5 |
ble_else.31583:
    load    [$2 + 119], $2              # |      1,742 |      1,760 |          0 |          0 |          3 |          0 |
.count load_float
    load    [f.27110], $15              # |      1,742 |     12,194 |          0 |          0 |      1,742 |          0 |
    fmul    $14, $38, $3                # |      1,742 |      1,742 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |      1,742 |      1,742 |          0 |          0 |          0 |          0 |
ble_cont.31583:
    li      116, $4                     # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [$sp + 9], $2               # |      2,034 |     15,516 |          0 |      2,034 |        213 |          0 |
    load    [$sp + 10], $3              # |      2,034 |      2,070 |          0 |          0 |          6 |          0 |
    call    iter_trace_diffuse_rays.2929# |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    load    [$sp + 1], $2               # |      2,034 |     16,320 |          0 |      2,034 |        347 |          0 |
    load    [$sp + 6], $15              # |      2,034 |     13,122 |          0 |          0 |      1,848 |          0 |
    load    [$2 + 5], $14               # |      2,034 |     12,960 |        186 |          0 |      1,790 |          0 |
    load    [$14 + $15], $16            # |      2,034 |     14,726 |        488 |          0 |      2,034 |          0 |
    add     $15, 1, $15                 # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    store   $43, [$16 + 0]              # |      2,034 |     14,238 |          0 |      2,034 |          0 |          0 |
    store   $44, [$16 + 1]              # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    store   $45, [$16 + 2]              # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    cmp     $15, 4                      # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
    bg      ble_else.31584              # |      2,034 |      2,050 |          0 |          0 |          0 |          8 |
ble_then.31584:
    load    [$sp + 5], $16              # |      2,034 |     13,140 |          0 |          0 |      1,851 |          0 |
    load    [$16 + $15], $16            # |      2,034 |     13,104 |        366 |          0 |      1,784 |          0 |
    cmp     $16, 0                      # |      2,034 |      2,534 |        500 |          0 |          0 |          0 |
    bl      bge_else.31585              # |      2,034 |     14,270 |          0 |      2,034 |          0 |         16 |
bge_then.31585:
    load    [$sp + 4], $16
    load    [$16 + $15], $16
    cmp     $16, 0
    bne     be_else.31586
be_then.31586:
.count stack_move
    add     $sp, 14, $sp
    add     $15, 1, $3
    b       pretrace_diffuse_rays.2980
be_else.31586:
    store   $15, [$sp + 0]
    store   $14, [$sp + 11]
.count move_float
    mov     $zero, $43
.count move_float
    mov     $zero, $44
.count move_float
    mov     $zero, $45
    load    [$2 + 6], $14
    load    [$sp + 8], $16
    sub     $41, 1, $3
    load    [$16 + $15], $2
    load    [$2 + 0], $16
.count move_float
    mov     $16, $51
    load    [$2 + 1], $16
.count move_float
    mov     $16, $52
    load    [$2 + 2], $16
.count move_float
    mov     $16, $53
    call    setup_startp_constants.2831
    load    [$14 + 0], $1
    load    [$sp + 7], $3
    load    [min_caml_dirvecs + $1], $2
    load    [$3 + $15], $3
    load    [$2 + 118], $1
    load    [$3 + 0], $5
    load    [$3 + 1], $6
    load    [$1 + 0], $1
    load    [$1 + 0], $4
    fmul    $4, $5, $4
    load    [$1 + 1], $5
    load    [$1 + 2], $1
    fmul    $5, $6, $5
    fadd    $4, $5, $4
    load    [$3 + 2], $5
    store   $3, [$sp + 12]
    store   $2, [$sp + 13]
    fmul    $1, $5, $1
    fadd    $4, $1, $1
    fcmp    $zero, $1
    bg      ble_else.31587
ble_then.31587:
    fmul    $1, $37, $3
    load    [$2 + 118], $2
    call    trace_diffuse_ray.2926
    li      116, $4
    load    [$sp + 13], $2
    load    [$sp + 12], $3
    call    iter_trace_diffuse_rays.2929
    b       ble_cont.31587
ble_else.31587:
    fmul    $1, $38, $3
    load    [$2 + 119], $2
    call    trace_diffuse_ray.2926
    li      116, $4
    load    [$sp + 13], $2
    load    [$sp + 12], $3
    call    iter_trace_diffuse_rays.2929
ble_cont.31587:
.count stack_move
    add     $sp, 14, $sp
    load    [$sp - 14], $1
    load    [$sp - 3], $2
    add     $1, 1, $3
    load    [$2 + $1], $2
    store   $43, [$2 + 0]
    store   $44, [$2 + 1]
    store   $45, [$2 + 2]
    load    [$sp - 13], $2
    b       pretrace_diffuse_rays.2980
bge_else.31585:
.count stack_move
    add     $sp, 14, $sp                # |      2,034 |     14,238 |          0 |      2,034 |          0 |          0 |
    ret                                 # |      2,034 |      2,034 |          0 |          0 |          0 |          0 |
ble_else.31584:
.count stack_move
    add     $sp, 14, $sp
    ret
bge_else.31577:
    ret                                 # |     14,294 |    100,040 |          0 |     14,291 |          0 |          0 |
ble_else.31576:
    ret
.end pretrace_diffuse_rays

######################################################################
.begin pretrace_pixels
pretrace_pixels.2983:
    cmp     $3, 0                       # |     16,512 |     29,814 |          0 |      2,217 |          0 |          0 |
    bl      bge_else.31588              # |     16,512 |     16,924 |          0 |          0 |          0 |        206 |
bge_then.31588:
.count stack_move
    sub     $sp, 9, $sp                 # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    store   $4, [$sp + 0]               # |     16,384 |     32,768 |     16,384 |          0 |          0 |          0 |
    store   $3, [$sp + 1]               # |     16,384 |     83,638 |          0 |     11,209 |          0 |          0 |
    store   $2, [$sp + 2]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    store   $7, [$sp + 3]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    store   $6, [$sp + 4]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    store   $5, [$sp + 5]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [min_caml_screenx_dir + 0], $10# |     16,384 |     77,752 |          0 |          0 |     10,228 |          0 |
    load    [min_caml_scan_pitch + 0], $11# |     16,384 |     76,102 |          0 |          0 |      9,953 |          0 |
    load    [min_caml_image_center + 0], $12# |     16,384 |     82,534 |          0 |          0 |     11,025 |          0 |
    sub     $3, $12, $2                 # |     16,384 |     93,146 |     10,018 |     11,124 |          0 |          0 |
    call    min_caml_float_of_int       # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |     16,384 |     40,960 |     24,576 |          0 |          0 |          0 |
    fmul    $11, $14, $14               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [$sp + 5], $16              # |     16,384 |     16,738 |          0 |          0 |         59 |          0 |
    fmul    $14, $10, $15               # |     16,384 |     65,359 |     48,975 |          0 |          0 |          0 |
    fadd    $15, $16, $15               # |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    store   $15, [min_caml_ptrace_dirvec + 0]# |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    load    [min_caml_screenx_dir + 1], $15# |     16,384 |     82,162 |          0 |     10,962 |          1 |          0 |
    load    [$sp + 4], $16              # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    fmul    $14, $15, $15               # |     16,384 |     32,767 |     16,383 |          0 |          0 |          0 |
    fadd    $15, $16, $15               # |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    store   $15, [min_caml_ptrace_dirvec + 1]# |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    load    [min_caml_screenx_dir + 2], $15# |     16,384 |     16,558 |          0 |          0 |         29 |          0 |
    fmul    $14, $15, $14               # |     16,384 |     49,094 |     32,710 |          0 |          0 |          0 |
    load    [$sp + 3], $15              # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    fadd    $14, $15, $14               # |     16,384 |     72,151 |     42,537 |      2,205 |          0 |          0 |
    store   $14, [min_caml_ptrace_dirvec + 2]# |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    load    [min_caml_ptrace_dirvec + 0], $14# |     16,384 |     64,834 |          0 |          0 |      8,075 |          0 |
    load    [min_caml_ptrace_dirvec + 1], $16# |     16,384 |     16,678 |          0 |          0 |         49 |          0 |
    fmul    $14, $14, $15               # |     16,384 |     24,644 |      8,260 |          0 |          0 |          0 |
    fmul    $16, $16, $16               # |     16,384 |     24,459 |      8,075 |          0 |          0 |          0 |
    fadd    $15, $16, $15               # |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    load    [min_caml_ptrace_dirvec + 2], $16# |     16,384 |     17,188 |          0 |          0 |        134 |          0 |
    fmul    $16, $16, $16               # |     16,384 |    114,688 |          0 |     16,384 |          0 |          0 |
    fadd    $15, $16, $15               # |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    fsqrt   $15, $15                    # |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    fcmp    $15, $zero                  # |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    bne     be_else.31589               # |     16,384 |     16,548 |          0 |          0 |          0 |         82 |
be_then.31589:
    mov     $36, $15
    b       be_cont.31589
be_else.31589:
    finv    $15, $15                    # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
be_cont.31589:
    fmul    $14, $15, $14               # |     16,384 |    114,688 |          0 |     16,384 |          0 |          0 |
.count move_float
    mov     $zero, $46                  # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $47                  # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $48                  # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    li      min_caml_ptrace_dirvec, $4  # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    store   $14, [min_caml_ptrace_dirvec + 0]# |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [min_caml_ptrace_dirvec + 1], $14# |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $6                   # |     16,384 |    114,688 |          0 |     16,384 |          0 |          0 |
    fmul    $14, $15, $14               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $36, $3                     # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    store   $14, [min_caml_ptrace_dirvec + 1]# |     16,384 |     65,536 |     49,152 |          0 |          0 |          0 |
    load    [min_caml_ptrace_dirvec + 2], $14# |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    fmul    $14, $15, $14               # |     16,384 |     49,152 |     32,768 |          0 |          0 |          0 |
    store   $14, [min_caml_ptrace_dirvec + 2]# |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    load    [min_caml_viewpoint + 0], $14# |     16,384 |     72,868 |          0 |          0 |      9,414 |          0 |
    store   $14, [min_caml_startp + 0]  # |     16,384 |     30,330 |     13,940 |          1 |          0 |          0 |
    load    [min_caml_viewpoint + 1], $14# |     16,384 |     16,630 |          0 |          0 |         41 |          0 |
    store   $14, [min_caml_startp + 1]  # |     16,384 |     49,070 |     32,686 |          0 |          0 |          0 |
    load    [min_caml_viewpoint + 2], $14# |     16,384 |     16,660 |          0 |          0 |         46 |          0 |
    store   $14, [min_caml_startp + 2]  # |     16,384 |     49,060 |     32,676 |          0 |          0 |          0 |
    load    [$sp + 1], $14              # |     16,384 |     16,522 |          0 |          0 |         23 |          0 |
    load    [$sp + 2], $15              # |     16,384 |     16,402 |          0 |          0 |          3 |          0 |
    load    [$15 + $14], $5             # |     16,384 |    143,700 |     32,762 |          0 |     15,759 |          0 |
    call    trace_ray.2920              # |     16,384 |     16,390 |          0 |          1 |          0 |          0 |
    load    [$sp + 1], $14              # |     16,384 |     17,452 |          0 |          0 |        178 |          0 |
    load    [$sp + 2], $15              # |     16,384 |     16,798 |          0 |          0 |         69 |          0 |
    load    [$15 + $14], $16            # |     16,384 |     75,222 |     32,630 |          0 |      4,368 |          0 |
    load    [$16 + 0], $16              # |     16,384 |    138,390 |     24,032 |          0 |     16,329 |          0 |
    store   $46, [$16 + 0]              # |     16,384 |     16,494 |        110 |          0 |          0 |          0 |
    store   $47, [$16 + 1]              # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    store   $48, [$16 + 2]              # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [$15 + $14], $16            # |     16,384 |     16,390 |          0 |          1 |          0 |          0 |
    load    [$sp + 0], $17              # |     16,384 |     17,800 |          0 |          0 |        236 |          0 |
    load    [$16 + 6], $16              # |     16,384 |    130,770 |     16,148 |          0 |     16,373 |          0 |
    store   $17, [$16 + 0]              # |     16,384 |     16,406 |         22 |          0 |          0 |          0 |
    load    [$15 + $14], $2             # |     16,384 |     16,642 |          0 |          0 |         43 |          0 |
    load    [$2 + 2], $14               # |     16,384 |     49,324 |     32,682 |          0 |         43 |          0 |
    load    [$14 + 0], $14              # |     16,384 |    141,364 |     32,682 |          0 |     15,383 |          0 |
    cmp     $14, 0                      # |     16,384 |     18,386 |      2,002 |          0 |          0 |          0 |
    bl      bge_cont.31590              # |     16,384 |     16,464 |          0 |          1 |          0 |         37 |
bge_then.31590:
    load    [$2 + 3], $14               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [$14 + 0], $14              # |     16,384 |    147,456 |     32,768 |          0 |     16,384 |          0 |
    cmp     $14, 0                      # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    bne     be_else.31591               # |     16,384 |     16,864 |          0 |          0 |          0 |        240 |
be_then.31591:
    li      1, $3                       # |      7,301 |      7,301 |          0 |          0 |          0 |          0 |
    call    pretrace_diffuse_rays.2980  # |      7,301 |      7,301 |          0 |          0 |          0 |          0 |
    b       be_cont.31591               # |      7,301 |      7,895 |          0 |          0 |          0 |        297 |
be_else.31591:
    store   $2, [$sp + 6]               # |      9,083 |      9,089 |          0 |          1 |          0 |          0 |
    load    [$2 + 6], $14               # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $43                  # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $zero, $44                  # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    load    [$14 + 0], $14              # |      9,083 |     63,581 |          0 |          0 |      9,083 |          0 |
.count move_float
    mov     $zero, $45                  # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    load    [$2 + 7], $15               # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $16               # |      9,083 |      9,233 |          0 |          0 |         25 |          0 |
    load    [min_caml_dirvecs + $14], $14# |      9,083 |     45,407 |          0 |          1 |      6,053 |          0 |
    load    [$15 + 0], $15              # |      9,083 |     21,197 |          0 |          0 |      2,019 |          0 |
    load    [$16 + 0], $2               # |      9,083 |     20,087 |          0 |          0 |      1,834 |          0 |
    sub     $41, 1, $3                  # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $16               # |      9,083 |     70,830 |      7,249 |          0 |      9,083 |          0 |
.count move_float
    mov     $16, $51                    # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    load    [$2 + 1], $16               # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $16, $52                    # |      9,083 |     27,249 |     18,166 |          0 |          0 |          0 |
    load    [$2 + 2], $16               # |      9,083 |     63,581 |          0 |      9,083 |          0 |          0 |
.count move_float
    mov     $16, $53                    # |      9,083 |     27,249 |     18,166 |          0 |          0 |          0 |
    call    setup_startp_constants.2831 # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    load    [$14 + 118], $1             # |      9,083 |     63,581 |          0 |          0 |      9,083 |          0 |
    load    [$15 + 0], $3               # |      9,083 |     16,829 |          0 |          0 |      1,291 |          0 |
    load    [$15 + 1], $4               # |      9,083 |     11,231 |          0 |          0 |        358 |          0 |
    load    [$1 + 0], $1                # |      9,083 |     63,581 |          0 |          0 |      9,083 |          0 |
    load    [$1 + 0], $2                # |      9,083 |      9,185 |          0 |          0 |         17 |          0 |
    fmul    $2, $3, $2                  # |      9,083 |     63,581 |          0 |      9,083 |          0 |          0 |
    load    [$1 + 1], $3                # |      9,083 |      9,137 |          0 |          0 |          9 |          0 |
    load    [$1 + 2], $1                # |      9,083 |     63,425 |          0 |          0 |      9,057 |          0 |
    fmul    $3, $4, $3                  # |      9,083 |      9,100 |         17 |          0 |          0 |          0 |
    fadd    $2, $3, $2                  # |      9,083 |     45,415 |     36,332 |          0 |          0 |          0 |
    load    [$15 + 2], $3               # |      9,083 |     10,961 |          0 |          0 |        313 |          0 |
    store   $15, [$sp + 7]              # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    store   $14, [$sp + 8]              # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    fmul    $1, $3, $1                  # |      9,083 |     63,581 |          0 |      9,083 |          0 |          0 |
    fadd    $2, $1, $1                  # |      9,083 |     45,415 |     36,332 |          0 |          0 |          0 |
    fcmp    $zero, $1                   # |      9,083 |     45,415 |     36,332 |          0 |          0 |          0 |
    bg      ble_else.31592              # |      9,083 |      9,139 |          0 |          0 |          0 |         28 |
ble_then.31592:
    fmul    $1, $37, $3                 # |         14 |         14 |          0 |          0 |          0 |          0 |
    load    [$14 + 118], $2             # |         14 |         14 |          0 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |         14 |         14 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |         14 |         98 |          0 |         14 |          0 |          0 |
    load    [$sp + 8], $2               # |         14 |         98 |          0 |         14 |          0 |          0 |
    load    [$sp + 7], $3               # |         14 |         14 |          0 |          0 |          0 |          0 |
    call    iter_trace_diffuse_rays.2929# |         14 |         14 |          0 |          0 |          0 |          0 |
    b       ble_cont.31592              # |         14 |        110 |          0 |         14 |          0 |          6 |
ble_else.31592:
    fmul    $1, $38, $3                 # |      9,069 |     63,483 |          0 |      9,069 |          0 |          0 |
    load    [$14 + 119], $2             # |      9,069 |      9,171 |          0 |          0 |         17 |          0 |
    call    trace_diffuse_ray.2926      # |      9,069 |      9,069 |          0 |          0 |          0 |          0 |
    li      116, $4                     # |      9,069 |     63,483 |          0 |      9,069 |          0 |          0 |
    load    [$sp + 8], $2               # |      9,069 |     71,757 |          0 |      9,069 |      1,379 |          0 |
    load    [$sp + 7], $3               # |      9,069 |     17,103 |          0 |          0 |      1,339 |          0 |
    call    iter_trace_diffuse_rays.2929# |      9,069 |      9,069 |          0 |          0 |          0 |          0 |
ble_cont.31592:
    load    [$sp + 6], $2               # |      9,083 |    117,713 |          0 |      9,083 |      9,022 |          0 |
    li      1, $3                       # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    load    [$2 + 5], $1                # |      9,083 |     58,146 |         61 |          0 |      8,167 |          0 |
    load    [$1 + 0], $1                # |      9,083 |     65,413 |      1,832 |          0 |      9,083 |          0 |
    store   $43, [$1 + 0]               # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    store   $44, [$1 + 1]               # |      9,083 |     63,581 |          0 |      9,083 |          0 |          0 |
    store   $45, [$1 + 2]               # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
    call    pretrace_diffuse_rays.2980  # |      9,083 |      9,083 |          0 |          0 |          0 |          0 |
be_cont.31591:
bge_cont.31590:
.count stack_move
    add     $sp, 9, $sp                 # |     16,384 |     60,190 |          0 |      7,301 |          0 |          0 |
    load    [$sp - 8], $1               # |     16,384 |     46,046 |     16,384 |          0 |      2,213 |          0 |
    load    [$sp - 6], $7               # |     16,384 |     55,858 |          0 |          0 |      6,579 |          0 |
    load    [$sp - 5], $6               # |     16,384 |     30,748 |          0 |          0 |      2,394 |          0 |
    sub     $1, 1, $3                   # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [$sp - 9], $1               # |     16,384 |    124,030 |          0 |     16,384 |      1,557 |          0 |
    load    [$sp - 4], $5               # |     16,384 |     29,692 |          0 |          0 |      2,218 |          0 |
    load    [$sp - 7], $2               # |     16,384 |     28,744 |          0 |          0 |      2,060 |          0 |
    add     $1, 1, $4                   # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    cmp     $4, 5                       # |     16,384 |     32,768 |     16,384 |          0 |          0 |          0 |
    bl      pretrace_pixels.2983        # |     16,384 |     29,260 |          0 |          0 |          0 |      6,438 |
    sub     $4, 5, $4                   # |      3,277 |      3,277 |          0 |          0 |          0 |          0 |
    b       pretrace_pixels.2983        # |      3,277 |      3,335 |          0 |          0 |          0 |         29 |
bge_else.31588:
    ret                                 # |        128 |        896 |          0 |        128 |          0 |          0 |
.end pretrace_pixels

######################################################################
.begin scan_pixel
scan_pixel.2994:
    cmp     $50, $2                     # |      8,256 |     15,828 |          0 |      1,262 |          0 |          0 |
    bg      ble_else.31594              # |      8,256 |      8,442 |          0 |          0 |          0 |         93 |
ble_then.31594:
    ret                                 # |         64 |         64 |          0 |          0 |          0 |          0 |
ble_else.31594:
.count stack_move
    sub     $sp, 10, $sp                # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    store   $6, [$sp + 0]               # |      8,192 |     16,384 |      8,192 |          0 |          0 |          0 |
    store   $4, [$sp + 1]               # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 2]               # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    store   $5, [$sp + 3]               # |      8,192 |     16,226 |          0 |      1,339 |          0 |          0 |
    store   $2, [$sp + 4]               # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    load    [$5 + $2], $10              # |      8,192 |     15,530 |          0 |          0 |      1,223 |          0 |
    load    [$10 + 0], $10              # |      8,192 |     71,282 |     13,938 |          0 |      8,192 |          0 |
    load    [$10 + 0], $11              # |      8,192 |     57,074 |          0 |          0 |      8,147 |          0 |
.count move_float
    mov     $11, $46                    # |      8,192 |      8,282 |         90 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |      8,192 |      8,246 |          0 |          0 |          9 |          0 |
    load    [$10 + 2], $10              # |      8,192 |      8,408 |          0 |          0 |         36 |          0 |
.count move_float
    mov     $11, $47                    # |      8,192 |     23,040 |      6,814 |      1,339 |          0 |          0 |
.count move_float
    mov     $10, $48                    # |      8,192 |      8,201 |          9 |          0 |          0 |          0 |
    add     $3, 1, $10                  # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    store   $10, [$sp + 5]              # |      8,192 |     16,384 |      8,192 |          0 |          0 |          0 |
    cmp     $60, $10                    # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    bg      ble_else.31595              # |      8,192 |      8,916 |          0 |          0 |          0 |        362 |
ble_then.31595:
    li      0, $10                      # |         64 |         64 |          0 |          0 |          0 |          0 |
    b       ble_cont.31595              # |         64 |         68 |          0 |          0 |          0 |          2 |
ble_else.31595:
    cmp     $3, 0                       # |      8,128 |     15,940 |          0 |      1,302 |          0 |          0 |
    bg      ble_else.31596              # |      8,128 |      8,408 |          0 |          0 |          0 |        140 |
ble_then.31596:
    li      0, $10                      # |         64 |         64 |          0 |          0 |          0 |          0 |
    b       ble_cont.31596              # |         64 |         70 |          0 |          0 |          0 |          3 |
ble_else.31596:
    add     $2, 1, $10                  # |      8,064 |      8,064 |          0 |          0 |          0 |          0 |
    cmp     $50, $10                    # |      8,064 |     16,128 |      8,064 |          0 |          0 |          0 |
    bg      ble_else.31597              # |      8,064 |      8,358 |          0 |          0 |          0 |        147 |
ble_then.31597:
    li      0, $10                      # |         63 |         63 |          0 |          0 |          0 |          0 |
    b       ble_cont.31597              # |         63 |        113 |          0 |          7 |          0 |          4 |
ble_else.31597:
    cmp     $2, 0                       # |      8,001 |     15,765 |          0 |      1,294 |          0 |          0 |
    bg      ble_else.31598              # |      8,001 |      8,025 |          0 |          0 |          0 |         12 |
ble_then.31598:
    li      0, $10                      # |         63 |         63 |          0 |          0 |          0 |          0 |
    b       ble_cont.31598              # |         63 |         77 |          0 |          0 |          0 |          7 |
ble_else.31598:
    li      1, $10                      # |      7,938 |      7,938 |          0 |          0 |          0 |          0 |
ble_cont.31598:
ble_cont.31597:
ble_cont.31596:
ble_cont.31595:
    cmp     $10, 0                      # |      8,192 |     16,382 |      7,938 |         42 |          0 |          0 |
    li      0, $3                       # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    bne     be_else.31599               # |      8,192 |     16,694 |          0 |      1,342 |          0 |        225 |
be_then.31599:
    load    [$5 + $2], $2               # |        254 |        254 |          0 |          0 |          0 |          0 |
    load    [$2 + 2], $10               # |        254 |        762 |        508 |          0 |          0 |          0 |
    load    [$10 + 0], $10              # |        254 |      1,944 |        508 |          0 |        197 |          0 |
    cmp     $10, 0                      # |        254 |        368 |        114 |          0 |          0 |          0 |
    bl      be_cont.31599               # |        254 |        278 |          0 |          0 |          0 |         12 |
bge_then.31600:
    load    [$2 + 3], $10               # |        254 |        254 |          0 |          0 |          0 |          0 |
    load    [$10 + 0], $10              # |        254 |      2,166 |        508 |          0 |        234 |          0 |
    cmp     $10, 0                      # |        254 |      1,302 |         40 |        168 |          0 |          0 |
    bne     be_else.31601               # |        254 |        384 |          0 |          0 |          0 |         65 |
be_then.31601:
    li      1, $3                       # |        180 |        180 |          0 |          0 |          0 |          0 |
    call    do_without_neighbors.2951   # |        180 |        180 |          0 |          0 |          0 |          0 |
    b       be_cont.31599               # |        180 |        270 |          0 |         14 |          0 |          3 |
be_else.31601:
    store   $2, [$sp + 6]               # |         74 |         74 |          0 |          0 |          0 |          0 |
    call    calc_diffuse_using_1point.2942# |         74 |         74 |          0 |          0 |          0 |          0 |
    li      1, $3                       # |         74 |        518 |          0 |         74 |          0 |          0 |
    load    [$sp + 6], $2               # |         74 |        962 |          0 |         74 |         74 |          0 |
    call    do_without_neighbors.2951   # |         74 |         74 |          0 |          0 |          0 |          0 |
    b       be_cont.31599               # |         74 |        104 |          0 |          0 |          0 |         15 |
be_else.31599:
    load    [$5 + $2], $10              # |      7,938 |     15,492 |          0 |      1,259 |          0 |          0 |
    load    [$10 + 2], $11              # |      7,938 |     23,814 |     15,876 |          0 |          0 |          0 |
    load    [$11 + 0], $11              # |      7,938 |     30,084 |     15,876 |          0 |      1,045 |          0 |
    cmp     $11, 0                      # |      7,938 |     21,724 |     13,786 |          0 |          0 |          0 |
    bl      bge_cont.31602              # |      7,938 |      7,938 |          0 |          0 |          0 |          0 |
bge_then.31602:
    load    [$4 + $2], $12              # |      7,938 |     25,236 |          0 |         93 |      2,790 |          0 |
    load    [$12 + 2], $13              # |      7,938 |     65,562 |     10,296 |          0 |      7,888 |          0 |
    load    [$13 + 0], $13              # |      7,938 |     55,444 |        100 |          0 |      7,901 |          0 |
    cmp     $13, $11                    # |      7,938 |      8,012 |         74 |          0 |          0 |          0 |
    bne     be_else.31603               # |      7,938 |      9,016 |          0 |          0 |          0 |        539 |
be_then.31603:
    load    [$6 + $2], $13              # |      7,620 |     21,894 |          0 |          0 |      2,379 |          0 |
    load    [$13 + 2], $13              # |      7,620 |     61,458 |     10,482 |          0 |      7,226 |          0 |
    load    [$13 + 0], $13              # |      7,620 |     52,358 |        788 |          0 |      7,325 |          0 |
    cmp     $13, $11                    # |      7,620 |      8,672 |        494 |         93 |          0 |          0 |
    bne     be_else.31604               # |      7,620 |      8,548 |          0 |          0 |          0 |        464 |
be_then.31604:
    sub     $2, 1, $13                  # |      7,330 |      7,330 |          0 |          0 |          0 |          0 |
    load    [$5 + $13], $13             # |      7,330 |     18,236 |      7,330 |          0 |        596 |          0 |
    load    [$13 + 2], $13              # |      7,330 |     21,578 |     13,468 |          0 |        130 |          0 |
    load    [$13 + 0], $13              # |      7,330 |     25,042 |     14,400 |          0 |        552 |          0 |
    cmp     $13, $11                    # |      7,330 |     20,886 |     13,556 |          0 |          0 |          0 |
    bne     be_else.31605               # |      7,330 |      7,614 |          0 |          0 |          0 |        142 |
be_then.31605:
    add     $2, 1, $13                  # |      7,251 |      7,809 |          0 |         93 |          0 |          0 |
    load    [$5 + $13], $13             # |      7,251 |     24,570 |      7,251 |          0 |      1,678 |          0 |
    load    [$13 + 2], $13              # |      7,251 |     61,903 |     11,146 |          0 |      7,251 |          0 |
    load    [$13 + 0], $13              # |      7,251 |     50,757 |          0 |          0 |      7,251 |          0 |
    cmp     $13, $11                    # |      7,251 |      7,251 |          0 |          0 |          0 |          0 |
    bne     be_else.31606               # |      7,251 |      7,535 |          0 |          0 |          0 |        142 |
be_then.31606:
    li      1, $11                      # |      7,171 |      7,171 |          0 |          0 |          0 |          0 |
    b       be_cont.31603               # |      7,171 |      9,527 |          0 |          0 |          0 |      1,178 |
be_else.31606:
    li      0, $11                      # |         80 |         80 |          0 |          0 |          0 |          0 |
    b       be_cont.31603               # |         80 |         84 |          0 |          0 |          0 |          2 |
be_else.31605:
    li      0, $11                      # |         79 |         79 |          0 |          0 |          0 |          0 |
    b       be_cont.31603               # |         79 |         83 |          0 |          0 |          0 |          2 |
be_else.31604:
    li      0, $11                      # |        290 |        290 |          0 |          0 |          0 |          0 |
    b       be_cont.31603               # |        290 |        294 |          0 |          0 |          0 |          2 |
be_else.31603:
    li      0, $11                      # |        318 |        318 |          0 |          0 |          0 |          0 |
be_cont.31603:
    cmp     $11, 0                      # |      7,938 |      8,262 |        318 |          1 |          0 |          0 |
    bne     be_else.31607               # |      7,938 |      8,656 |          0 |        119 |          0 |          2 |
be_then.31607:
    load    [$5 + $2], $2               # |        767 |        803 |          0 |          0 |          6 |          0 |
    load    [$2 + 2], $10               # |        767 |      2,307 |      1,522 |          0 |          3 |          0 |
    load    [$10 + 0], $10              # |        767 |      2,307 |      1,528 |          0 |          2 |          0 |
    cmp     $10, 0                      # |        767 |      2,297 |      1,530 |          0 |          0 |          0 |
    bl      be_cont.31607               # |        767 |      1,403 |          0 |          0 |          0 |        318 |
bge_then.31608:
    load    [$2 + 3], $10               # |        767 |        767 |          0 |          0 |          0 |          0 |
    load    [$10 + 0], $10              # |        767 |      6,903 |      1,534 |          0 |        767 |          0 |
    cmp     $10, 0                      # |        767 |      1,439 |          0 |        112 |          0 |          0 |
    bne     be_else.31609               # |        767 |      1,303 |          0 |          0 |          0 |        268 |
be_then.31609:
    li      1, $3                       # |        155 |        155 |          0 |          0 |          0 |          0 |
    call    do_without_neighbors.2951   # |        155 |        155 |          0 |          0 |          0 |          0 |
    b       be_cont.31607               # |        155 |        245 |          0 |          0 |          0 |         45 |
be_else.31609:
    store   $2, [$sp + 7]               # |        612 |        612 |          0 |          0 |          0 |          0 |
    call    calc_diffuse_using_1point.2942# |        612 |        612 |          0 |          0 |          0 |          0 |
    li      1, $3                       # |        612 |        612 |          0 |          0 |          0 |          0 |
    load    [$sp + 7], $2               # |        612 |      4,326 |          0 |          7 |        612 |          0 |
    call    do_without_neighbors.2951   # |        612 |        612 |          0 |          0 |          0 |          0 |
    b       be_cont.31607               # |        612 |      1,308 |          0 |          0 |          0 |        348 |
be_else.31607:
    load    [$10 + 3], $10              # |      7,171 |      8,203 |          0 |        112 |         60 |          0 |
.count move_args
    mov     $4, $3                      # |      7,171 |      7,171 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $5, $4                      # |      7,171 |      7,171 |          0 |          0 |          0 |          0 |
    load    [$10 + 0], $10              # |      7,171 |     50,095 |          0 |          0 |      7,154 |          0 |
    cmp     $10, 0                      # |      7,171 |      7,205 |         34 |          0 |          0 |          0 |
    bne     be_else.31610               # |      7,171 |      8,733 |          0 |        119 |          0 |        424 |
be_then.31610:
    li      1, $10                      # |      3,318 |      3,318 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $6, $5                      # |      3,318 |      3,318 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $6                     # |      3,318 |      3,318 |          0 |          0 |          0 |          0 |
    call    try_exploit_neighbors.2967  # |      3,318 |      3,318 |          0 |          0 |          0 |          0 |
    b       be_cont.31610               # |      3,318 |      3,374 |          0 |          0 |          0 |         28 |
be_else.31610:
    load    [$12 + 5], $10              # |      3,853 |      4,015 |          0 |          0 |         27 |          0 |
    load    [$10 + 0], $10              # |      3,853 |     34,623 |      7,652 |          0 |      3,853 |          0 |
    load    [$10 + 0], $11              # |      3,853 |     27,619 |          0 |        108 |      3,853 |          0 |
.count move_float
    mov     $11, $43                    # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$10 + 2], $10              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $44                    # |      3,853 |      7,706 |      3,853 |          0 |          0 |          0 |
.count move_float
    mov     $10, $45                    # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    sub     $2, 1, $10                  # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$5 + $10], $10             # |      3,853 |      7,940 |      3,853 |          0 |         39 |          0 |
    load    [$10 + 5], $10              # |      3,853 |     12,081 |      7,418 |        108 |         27 |          0 |
    load    [$10 + 0], $10              # |      3,853 |     13,101 |      7,652 |          0 |        266 |          0 |
    load    [$10 + 0], $11              # |      3,853 |     12,461 |      7,174 |          0 |        239 |          0 |
    fadd    $43, $11, $11               # |      3,853 |     11,081 |      7,228 |          0 |          0 |          0 |
.count move_float
    mov     $11, $43                    # |      3,853 |     19,265 |     15,412 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |      3,853 |      3,859 |          0 |          0 |          1 |          0 |
    load    [$10 + 2], $10              # |      3,853 |      3,859 |          0 |          0 |          1 |          0 |
    fadd    $44, $11, $11               # |      3,853 |      7,704 |      3,851 |          0 |          0 |          0 |
    fadd    $45, $10, $10               # |      3,853 |      4,501 |          0 |        108 |          0 |          0 |
.count move_float
    mov     $11, $44                    # |      3,853 |     15,088 |     11,235 |          0 |          0 |          0 |
.count move_float
    mov     $10, $45                    # |      3,853 |      4,177 |        324 |          0 |          0 |          0 |
    load    [$5 + $2], $10              # |      3,853 |      4,219 |          0 |          0 |         61 |          0 |
    load    [$10 + 5], $10              # |      3,853 |     12,763 |      7,584 |          0 |        221 |          0 |
    load    [$10 + 0], $10              # |      3,853 |     12,695 |      7,264 |          0 |        263 |          0 |
    load    [$10 + 0], $11              # |      3,853 |     12,479 |      7,180 |          0 |        241 |          0 |
    fadd    $43, $11, $11               # |      3,853 |     11,077 |      7,224 |          0 |          0 |          0 |
.count move_float
    mov     $11, $43                    # |      3,853 |     20,059 |     13,824 |        397 |          0 |          0 |
    load    [$10 + 1], $11              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$10 + 2], $10              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    fadd    $44, $11, $11               # |      3,853 |      7,706 |      3,853 |          0 |          0 |          0 |
    fadd    $45, $10, $10               # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $44                    # |      3,853 |     15,412 |     11,559 |          0 |          0 |          0 |
.count move_float
    mov     $10, $45                    # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    add     $2, 1, $10                  # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$5 + $10], $10             # |      3,853 |      9,901 |      3,456 |        397 |         35 |          0 |
    load    [$10 + 5], $10              # |      3,853 |     11,489 |      7,636 |          0 |          0 |          0 |
    load    [$10 + 0], $10              # |      3,853 |     34,677 |      7,706 |          0 |      3,853 |          0 |
    load    [$10 + 0], $11              # |      3,853 |     26,971 |          0 |          0 |      3,853 |          0 |
    fadd    $43, $11, $11               # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $43                    # |      3,853 |     19,265 |     15,412 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$10 + 2], $10              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    fadd    $44, $11, $11               # |      3,853 |      9,691 |      3,456 |        397 |          0 |          0 |
    fadd    $45, $10, $10               # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $44                    # |      3,853 |     15,412 |     11,559 |          0 |          0 |          0 |
.count move_float
    mov     $10, $45                    # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$6 + $2], $10              # |      3,853 |      4,249 |          0 |          0 |         66 |          0 |
    load    [$10 + 5], $10              # |      3,853 |     11,583 |      7,574 |          0 |         26 |          0 |
    load    [$10 + 0], $10              # |      3,853 |     34,607 |      7,654 |          0 |      3,850 |          0 |
    load    [$10 + 0], $11              # |      3,853 |     26,977 |          6 |          0 |      3,853 |          0 |
    fadd    $43, $11, $11               # |      3,853 |      6,235 |          0 |        397 |          0 |          0 |
.count move_float
    mov     $11, $43                    # |      3,853 |     19,265 |     15,412 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$10 + 2], $10              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    fadd    $44, $11, $11               # |      3,853 |      7,706 |      3,853 |          0 |          0 |          0 |
    fadd    $45, $10, $10               # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $44                    # |      3,853 |     15,412 |     11,559 |          0 |          0 |          0 |
.count move_float
    mov     $10, $45                    # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$5 + $2], $10              # |      3,853 |      6,445 |          0 |        397 |         35 |          0 |
.count move_args
    mov     $6, $5                      # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    load    [$10 + 4], $10              # |      3,853 |      8,997 |      3,818 |          0 |        221 |          0 |
    load    [$10 + 0], $10              # |      3,853 |     34,235 |      7,264 |          0 |      3,853 |          0 |
    load    [$10 + 0], $11              # |      3,853 |     26,971 |          0 |          0 |      3,853 |          0 |
    fmul    $11, $43, $11               # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    fadd    $46, $11, $11               # |      3,853 |     19,265 |     15,412 |          0 |          0 |          0 |
.count move_float
    mov     $11, $46                    # |      3,853 |     19,265 |     15,412 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |      3,853 |      6,235 |          0 |        397 |          0 |          0 |
    load    [$10 + 2], $10              # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    fmul    $11, $44, $11               # |      3,853 |      7,706 |      3,853 |          0 |          0 |          0 |
    fmul    $10, $45, $10               # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    fadd    $47, $11, $11               # |      3,853 |     15,412 |     11,559 |          0 |          0 |          0 |
    fadd    $48, $10, $10               # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $47                    # |      3,853 |     15,412 |     11,559 |          0 |          0 |          0 |
.count move_float
    mov     $10, $48                    # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
    li      1, $10                      # |      3,853 |      5,011 |          0 |        193 |          0 |          0 |
.count move_args
    mov     $10, $6                     # |      3,853 |      7,706 |      3,853 |          0 |          0 |          0 |
    call    try_exploit_neighbors.2967  # |      3,853 |      3,853 |          0 |          0 |          0 |          0 |
be_cont.31610:
be_cont.31607:
bge_cont.31602:
be_cont.31599:
.count move_args
    mov     $46, $2                     # |      8,192 |     14,792 |          0 |      1,100 |          0 |          0 |
    call    min_caml_int_of_float       # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    mov     $1, $2                      # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    cmp     $2, 255                     # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    bg      ble_else.31611              # |      8,192 |      9,884 |          0 |          0 |          0 |        846 |
ble_then.31611:
    cmp     $2, 0                       # |      5,132 |      5,690 |          0 |         93 |          0 |          0 |
    bl      bge_else.31612              # |      5,132 |      5,838 |          0 |          0 |          0 |        353 |
bge_then.31612:
    call    min_caml_write              # |      5,132 |      5,132 |          0 |          0 |          0 |          0 |
    b       ble_cont.31611              # |      5,132 |      5,202 |          0 |          0 |          0 |         35 |
bge_else.31612:
    li      0, $2
    call    min_caml_write
    b       ble_cont.31611
ble_else.31611:
    li      255, $2                     # |      3,060 |      3,264 |          0 |         34 |          0 |          0 |
    call    min_caml_write              # |      3,060 |      3,264 |          0 |         34 |          0 |          0 |
ble_cont.31611:
.count move_args
    mov     $47, $2                     # |      8,192 |      8,750 |          0 |         93 |          0 |          0 |
    call    min_caml_int_of_float       # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    mov     $1, $2                      # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    cmp     $2, 255                     # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    bg      ble_else.31613              # |      8,192 |     11,916 |          0 |          0 |          0 |      1,862 |
ble_then.31613:
    cmp     $2, 0                       # |      6,128 |      6,128 |          0 |          0 |          0 |          0 |
    bl      bge_else.31614              # |      6,128 |      6,544 |          0 |          0 |          0 |        208 |
bge_then.31614:
    call    min_caml_write              # |      6,128 |      6,776 |          0 |        108 |          0 |          0 |
    b       ble_cont.31613              # |      6,128 |      6,136 |          0 |          0 |          0 |          4 |
bge_else.31614:
    li      0, $2
    call    min_caml_write
    b       ble_cont.31613
ble_else.31613:
    li      255, $2                     # |      2,064 |      2,178 |          0 |         19 |          0 |          0 |
    call    min_caml_write              # |      2,064 |      2,064 |          0 |          0 |          0 |          0 |
ble_cont.31613:
.count move_args
    mov     $48, $2                     # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    call    min_caml_int_of_float       # |      8,192 |      8,954 |          0 |        127 |          0 |          0 |
    mov     $1, $2                      # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    cmp     $2, 255                     # |      8,192 |      8,192 |          0 |          0 |          0 |          0 |
    bg      ble_else.31615              # |      8,192 |      8,730 |          0 |          0 |          0 |        269 |
ble_then.31615:
    cmp     $2, 0                       # |      5,450 |      5,450 |          0 |          0 |          0 |          0 |
    bl      bge_else.31616              # |      5,450 |      5,454 |          0 |          0 |          0 |          2 |
bge_then.31616:
    call    min_caml_write              # |      5,450 |      5,450 |          0 |          0 |          0 |          0 |
    b       ble_cont.31615              # |      5,450 |      5,962 |          0 |          0 |          0 |        256 |
bge_else.31616:
    li      0, $2
    call    min_caml_write
    b       ble_cont.31615
ble_else.31615:
    li      255, $2                     # |      2,742 |      3,198 |          0 |         76 |          0 |          0 |
    call    min_caml_write              # |      2,742 |      2,742 |          0 |          0 |          0 |          0 |
ble_cont.31615:
    load    [$sp + 4], $10              # |      8,192 |     18,254 |          0 |        223 |      1,454 |          0 |
    add     $10, 1, $2                  # |      8,192 |     21,668 |     13,476 |          0 |          0 |          0 |
    cmp     $50, $2                     # |      8,192 |     16,384 |      8,192 |          0 |          0 |          0 |
    bg      ble_else.31617              # |      8,192 |     17,378 |          0 |      1,293 |          0 |        714 |
ble_then.31617:
.count stack_move
    add     $sp, 10, $sp                # |         64 |         64 |          0 |          0 |          0 |          0 |
    ret                                 # |         64 |         64 |          0 |          0 |          0 |          0 |
ble_else.31617:
    store   $2, [$sp + 8]               # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $4               # |      8,128 |     16,960 |          0 |          0 |      1,472 |          0 |
    load    [$4 + $2], $10              # |      8,128 |     27,722 |     13,312 |          0 |      1,047 |          0 |
    load    [$10 + 0], $10              # |      8,128 |     71,058 |     14,162 |          0 |      8,128 |          0 |
    load    [$10 + 0], $11              # |      8,128 |     56,632 |          0 |          0 |      8,084 |          0 |
.count move_float
    mov     $11, $46                    # |      8,128 |     15,828 |         80 |      1,270 |          0 |          0 |
    load    [$10 + 1], $11              # |      8,128 |      8,200 |          0 |          0 |         12 |          0 |
    load    [$10 + 2], $10              # |      8,128 |      8,320 |          0 |          0 |         32 |          0 |
.count move_float
    mov     $11, $47                    # |      8,128 |     16,212 |      8,084 |          0 |          0 |          0 |
.count move_float
    mov     $10, $48                    # |      8,128 |      8,140 |         12 |          0 |          0 |          0 |
    load    [$sp + 5], $10              # |      8,128 |      9,790 |          0 |          0 |        277 |          0 |
    cmp     $60, $10                    # |      8,128 |     23,830 |     15,702 |          0 |          0 |          0 |
    bg      ble_else.31618              # |      8,128 |      8,152 |          0 |          0 |          0 |         12 |
ble_then.31618:
    li      0, $10                      # |         64 |         64 |          0 |          0 |          0 |          0 |
    b       ble_cont.31618              # |         64 |         68 |          0 |          0 |          0 |          2 |
ble_else.31618:
    load    [$sp + 2], $10              # |      8,064 |     15,666 |          0 |         99 |      1,168 |          0 |
    cmp     $10, 0                      # |      8,064 |     21,856 |     13,792 |          0 |          0 |          0 |
    bg      ble_else.31619              # |      8,064 |      8,746 |          0 |          0 |          0 |        341 |
ble_then.31619:
    li      0, $10                      # |         63 |         63 |          0 |          0 |          0 |          0 |
    b       ble_cont.31619              # |         63 |         67 |          0 |          0 |          0 |          2 |
ble_else.31619:
    add     $2, 1, $10                  # |      8,001 |      8,001 |          0 |          0 |          0 |          0 |
    cmp     $50, $10                    # |      8,001 |     16,497 |      7,902 |         99 |          0 |          0 |
    bg      ble_else.31620              # |      8,001 |      8,257 |          0 |          0 |          0 |        128 |
ble_then.31620:
    li      0, $10                      # |         63 |         63 |          0 |          0 |          0 |          0 |
    b       ble_cont.31620              # |         63 |         73 |          0 |          0 |          0 |          5 |
ble_else.31620:
    cmp     $2, 0                       # |      7,938 |      7,938 |          0 |          0 |          0 |          0 |
    bg      ble_else.31621              # |      7,938 |      7,950 |          0 |          0 |          0 |          6 |
ble_then.31621:
    li      0, $10
    b       ble_cont.31621
ble_else.31621:
    li      1, $10                      # |      7,938 |      8,694 |          0 |        126 |          0 |          0 |
ble_cont.31621:
ble_cont.31620:
ble_cont.31619:
ble_cont.31618:
    cmp     $10, 0                      # |      8,128 |     16,072 |      7,938 |          1 |          0 |          0 |
    bne     be_else.31622               # |      8,128 |      8,268 |          0 |          0 |          0 |         70 |
be_then.31622:
    load    [$4 + $2], $2               # |        190 |        202 |          0 |          0 |          2 |          0 |
    li      0, $3                       # |        190 |        190 |          0 |          0 |          0 |          0 |
    load    [$2 + 2], $10               # |        190 |        384 |        188 |          0 |          1 |          0 |
    load    [$10 + 0], $10              # |        190 |      1,366 |        378 |          0 |        133 |          0 |
    cmp     $10, 0                      # |        190 |        304 |        114 |          0 |          0 |          0 |
    bl      be_cont.31622               # |        190 |        608 |          0 |         65 |          0 |         14 |
bge_then.31623:
    load    [$2 + 3], $10               # |        190 |        190 |          0 |          0 |          0 |          0 |
    load    [$10 + 0], $10              # |        190 |      1,596 |        380 |          0 |        171 |          0 |
    cmp     $10, 0                      # |        190 |        228 |         38 |          0 |          0 |          0 |
    bne     be_else.31624               # |        190 |        212 |          0 |          0 |          0 |         11 |
be_then.31624:
    li      1, $3                       # |        123 |        123 |          0 |          0 |          0 |          0 |
    call    do_without_neighbors.2951   # |        123 |        123 |          0 |          0 |          0 |          0 |
    b       be_cont.31622               # |        123 |        123 |          0 |          0 |          0 |          0 |
be_else.31624:
    store   $2, [$sp + 9]               # |         67 |         67 |          0 |          0 |          0 |          0 |
    call    calc_diffuse_using_1point.2942# |         67 |         67 |          0 |          0 |          0 |          0 |
    li      1, $3                       # |         67 |         67 |          0 |          0 |          0 |          0 |
    load    [$sp + 9], $2               # |         67 |        469 |          0 |          0 |         67 |          0 |
    call    do_without_neighbors.2951   # |         67 |         67 |          0 |          0 |          0 |          0 |
    b       be_cont.31622               # |         67 |         99 |          0 |          0 |          0 |         16 |
be_else.31622:
    li      0, $6                       # |      7,938 |      8,364 |          0 |         71 |          0 |          0 |
    load    [$sp + 1], $3               # |      7,938 |     13,998 |          0 |          0 |      1,010 |          0 |
    load    [$sp + 0], $5               # |      7,938 |     13,386 |          0 |         70 |        838 |          0 |
    call    try_exploit_neighbors.2967  # |      7,938 |      7,938 |          0 |          0 |          0 |          0 |
be_cont.31622:
.count move_args
    mov     $46, $2                     # |      8,128 |      8,134 |          0 |          1 |          0 |          0 |
    call    min_caml_int_of_float       # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    cmp     $1, 255                     # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    bg      ble_else.31625              # |      8,128 |      9,732 |          0 |          0 |          0 |        802 |
ble_then.31625:
    cmp     $1, 0                       # |      5,076 |      5,076 |          0 |          0 |          0 |          0 |
    bge     ble_cont.31625              # |      5,076 |      5,362 |          0 |          0 |          0 |        143 |
bl_then.31626:
    li      0, $1
    b       ble_cont.31625
ble_else.31625:
    li      255, $1                     # |      3,052 |      3,154 |          0 |         17 |          0 |          0 |
ble_cont.31625:
    mov     $1, $2                      # |      8,128 |     11,450 |      3,052 |         45 |          0 |          0 |
    call    min_caml_write              # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $47, $2                     # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    call    min_caml_int_of_float       # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    cmp     $1, 255                     # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    bg      ble_else.31627              # |      8,128 |     12,160 |          0 |         62 |          0 |      1,830 |
ble_then.31627:
    cmp     $1, 0                       # |      6,031 |      6,031 |          0 |          0 |          0 |          0 |
    bge     ble_cont.31627              # |      6,031 |      6,039 |          0 |          0 |          0 |          4 |
bl_then.31628:
    li      0, $1
    b       ble_cont.31627
ble_else.31627:
    li      255, $1                     # |      2,097 |      2,097 |          0 |          0 |          0 |          0 |
ble_cont.31627:
    mov     $1, $2                      # |      8,128 |     10,225 |      2,097 |          0 |          0 |          0 |
    call    min_caml_write              # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $48, $2                     # |      8,128 |      8,500 |          0 |         62 |          0 |          0 |
    call    min_caml_int_of_float       # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    cmp     $1, 255                     # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    bg      ble_else.31629              # |      8,128 |      9,044 |          0 |          0 |          0 |        458 |
ble_then.31629:
    cmp     $1, 0                       # |      5,384 |      5,384 |          0 |          0 |          0 |          0 |
    bge     ble_cont.31629              # |      5,384 |      5,934 |          0 |          0 |          0 |        275 |
bl_then.31630:
    li      0, $1
    b       ble_cont.31629
ble_else.31629:
    li      255, $1                     # |      2,744 |      2,816 |          0 |         12 |          0 |          0 |
ble_cont.31629:
    mov     $1, $2                      # |      8,128 |     11,562 |      2,744 |        115 |          0 |          0 |
    call    min_caml_write              # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 10, $sp                # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    load    [$sp - 2], $1               # |      8,128 |     26,084 |      8,128 |          0 |      1,638 |          0 |
    load    [$sp - 8], $3               # |      8,128 |     12,412 |          0 |          0 |        714 |          0 |
    load    [$sp - 9], $4               # |      8,128 |     11,374 |          0 |          0 |        541 |          0 |
    add     $1, 1, $2                   # |      8,128 |      8,128 |          0 |          0 |          0 |          0 |
    load    [$sp - 7], $5               # |      8,128 |     13,444 |          0 |        127 |        759 |          0 |
    load    [$sp - 10], $6              # |      8,128 |      9,940 |          0 |          0 |        302 |          0 |
    b       scan_pixel.2994             # |      8,128 |      8,138 |          0 |          0 |          0 |          5 |
.end scan_pixel

######################################################################
.begin scan_line
scan_line.3000:
    cmp     $60, $2                     # |         65 |         71 |          0 |          1 |          0 |          0 |
    bg      ble_else.31631              # |         65 |        115 |          0 |          0 |          0 |         25 |
ble_then.31631:
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
ble_else.31631:
.count stack_move
    sub     $sp, 8, $sp                 # |         64 |         64 |          0 |          0 |          0 |          0 |
    sub     $60, 1, $10                 # |         64 |         64 |          0 |          0 |          0 |          0 |
    store   $6, [$sp + 0]               # |         64 |        448 |          0 |         64 |          0 |          0 |
    store   $5, [$sp + 1]               # |         64 |         64 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 2]               # |         64 |         64 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 3]               # |         64 |         64 |          0 |          0 |          0 |          0 |
    store   $4, [$sp + 4]               # |         64 |         64 |          0 |          0 |          0 |          0 |
    cmp     $10, $2                     # |         64 |         64 |          0 |          0 |          0 |          0 |
    ble     bg_cont.31632               # |         64 |        100 |          0 |          0 |          0 |         18 |
bg_then.31632:
    add     $2, 1, $10                  # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [min_caml_scan_pitch + 0], $11# |         64 |        826 |          0 |         64 |         63 |          0 |
    load    [min_caml_image_center + 1], $12# |         64 |        442 |          0 |          0 |         63 |          0 |
    sub     $10, $12, $2                # |         64 |         66 |          2 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |         64 |         64 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |         64 |        160 |         96 |          0 |          0 |          0 |
    fmul    $11, $10, $10               # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 0], $11# |         64 |        442 |          0 |          0 |         63 |          0 |
    load    [min_caml_screenz_dir + 0], $12# |         64 |         70 |          0 |          0 |          1 |          0 |
    sub     $50, 1, $3                  # |         64 |        448 |          0 |         64 |          0 |          0 |
    load    [$sp + 1], $2               # |         64 |         64 |          0 |          0 |          0 |          0 |
    fmul    $10, $11, $11               # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$sp + 0], $4               # |         64 |         64 |          0 |          0 |          0 |          0 |
    fadd    $11, $12, $5                # |         64 |        256 |        192 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 1], $11# |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 1], $12# |         64 |        442 |          0 |          0 |         63 |          0 |
    fmul    $10, $11, $11               # |         64 |         65 |          1 |          0 |          0 |          0 |
    fadd    $11, $12, $6                # |         64 |        448 |          0 |         64 |          0 |          0 |
    load    [min_caml_screeny_dir + 2], $11# |         64 |         70 |          0 |          0 |          1 |          0 |
    fmul    $10, $11, $10               # |         64 |        190 |        126 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 2], $11# |         64 |         64 |          0 |          0 |          0 |          0 |
    fadd    $10, $11, $7                # |         64 |        256 |        192 |          0 |          0 |          0 |
    call    pretrace_pixels.2983        # |         64 |         64 |          0 |          0 |          0 |          0 |
bg_cont.31632:
    li      0, $2                       # |         64 |        448 |          0 |         64 |          0 |          0 |
    cmp     $50, 0                      # |         64 |         64 |          0 |          0 |          0 |          0 |
    ble     bg_cont.31633               # |         64 |        448 |          0 |         64 |          0 |          0 |
bg_then.31633:
    load    [$sp + 4], $4               # |         64 |        448 |          0 |          0 |         64 |          0 |
    load    [$4 + 0], $10               # |         64 |        448 |          0 |          0 |         64 |          0 |
    load    [$10 + 0], $10              # |         64 |        448 |          0 |          0 |         64 |          0 |
    load    [$10 + 0], $11              # |         64 |        448 |          0 |          0 |         64 |          0 |
.count move_float
    mov     $11, $46                    # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $11              # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$10 + 2], $10              # |         64 |         64 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $47                    # |         64 |        448 |          0 |         64 |          0 |          0 |
.count move_float
    mov     $10, $48                    # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $10              # |         64 |        436 |          0 |          0 |         62 |          0 |
    add     $10, 1, $11                 # |         64 |         68 |          4 |          0 |          0 |          0 |
    cmp     $60, $11                    # |         64 |        128 |         64 |          0 |          0 |          0 |
    bg      ble_else.31634              # |         64 |         94 |          0 |          0 |          0 |         15 |
ble_then.31634:
    li      0, $10
    b       ble_cont.31634
ble_else.31634:
    cmp     $10, 0                      # |         64 |        448 |          0 |         64 |          0 |          0 |
    li      0, $10                      # |         64 |         64 |          0 |          0 |          0 |          0 |
    ble     bg_cont.31635               # |         64 |         66 |          0 |          0 |          0 |          1 |
bg_then.31635:
    cmp     $50, 1                      # |         63 |         63 |          0 |          0 |          0 |          0 |
bg_cont.31635:
ble_cont.31634:
    cmp     $10, 0                      # |         64 |         64 |          0 |          0 |          0 |          0 |
    bne     be_else.31636               # |         64 |         74 |          0 |          0 |          0 |          5 |
be_then.31636:
    load    [$4 + 0], $2                # |         64 |         64 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$2 + 2], $10               # |         64 |        448 |          0 |         64 |          0 |          0 |
    load    [$10 + 0], $10              # |         64 |        576 |        128 |          0 |         64 |          0 |
    cmp     $10, 0                      # |         64 |         64 |          0 |          0 |          0 |          0 |
    bl      be_cont.31636               # |         64 |         64 |          0 |          0 |          0 |          0 |
bge_then.31637:
    load    [$2 + 3], $10               # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$10 + 0], $10              # |         64 |        576 |        128 |          0 |         64 |          0 |
    cmp     $10, 0                      # |         64 |         64 |          0 |          0 |          0 |          0 |
    bne     be_else.31638               # |         64 |         72 |          0 |          0 |          0 |          4 |
be_then.31638:
    li      1, $3                       # |         57 |        399 |          0 |         57 |          0 |          0 |
    call    do_without_neighbors.2951   # |         57 |         57 |          0 |          0 |          0 |          0 |
    b       be_cont.31636               # |         57 |         67 |          0 |          0 |          0 |          5 |
be_else.31638:
    store   $2, [$sp + 5]               # |          7 |         49 |          0 |          7 |          0 |          0 |
    call    calc_diffuse_using_1point.2942# |          7 |          7 |          0 |          0 |          0 |          0 |
    li      1, $3                       # |          7 |          7 |          0 |          0 |          0 |          0 |
    load    [$sp + 5], $2               # |          7 |         49 |          0 |          0 |          7 |          0 |
    call    do_without_neighbors.2951   # |          7 |          7 |          0 |          0 |          0 |          0 |
    b       be_cont.31636               # |          7 |         59 |          0 |          7 |          0 |          5 |
be_else.31636:
    li      0, $6
    load    [$sp + 2], $3
    load    [$sp + 1], $5
    call    try_exploit_neighbors.2967
be_cont.31636:
.count move_args
    mov     $46, $2                     # |         64 |        406 |          0 |         57 |          0 |          0 |
    call    min_caml_int_of_float       # |         64 |         64 |          0 |          0 |          0 |          0 |
    cmp     $1, 255                     # |         64 |         64 |          0 |          0 |          0 |          0 |
    bg      ble_else.31639              # |         64 |        458 |          0 |         64 |          0 |          5 |
ble_then.31639:
    cmp     $1, 0                       # |         47 |         47 |          0 |          0 |          0 |          0 |
    bge     ble_cont.31639              # |         47 |         53 |          0 |          0 |          0 |          3 |
bl_then.31640:
    li      0, $1
    b       ble_cont.31639
ble_else.31639:
    li      255, $1                     # |         17 |         17 |          0 |          0 |          0 |          0 |
ble_cont.31639:
    mov     $1, $2                      # |         64 |         81 |         17 |          0 |          0 |          0 |
    call    min_caml_write              # |         64 |         64 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $47, $2                     # |         64 |        448 |          0 |         64 |          0 |          0 |
    call    min_caml_int_of_float       # |         64 |         64 |          0 |          0 |          0 |          0 |
    cmp     $1, 255                     # |         64 |         64 |          0 |          0 |          0 |          0 |
    bg      ble_else.31641              # |         64 |         86 |          0 |          0 |          0 |         11 |
ble_then.31641:
    cmp     $1, 0                       # |         56 |         56 |          0 |          0 |          0 |          0 |
    bge     ble_cont.31641              # |         56 |         64 |          0 |          0 |          0 |          4 |
bl_then.31642:
    li      0, $1
    b       ble_cont.31641
ble_else.31641:
    li      255, $1                     # |          8 |         56 |          0 |          8 |          0 |          0 |
ble_cont.31641:
    mov     $1, $2                      # |         64 |        408 |          8 |         56 |          0 |          0 |
    call    min_caml_write              # |         64 |         64 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $48, $2                     # |         64 |         64 |          0 |          0 |          0 |          0 |
    call    min_caml_int_of_float       # |         64 |         64 |          0 |          0 |          0 |          0 |
    cmp     $1, 255                     # |         64 |         64 |          0 |          0 |          0 |          0 |
    bg      ble_else.31643              # |         64 |         76 |          0 |          0 |          0 |          6 |
ble_then.31643:
    cmp     $1, 0                       # |         59 |         59 |          0 |          0 |          0 |          0 |
    bge     ble_cont.31643              # |         59 |        445 |          0 |         59 |          0 |         16 |
bl_then.31644:
    li      0, $1
    b       ble_cont.31643
ble_else.31643:
    li      255, $1                     # |          5 |         35 |          0 |          5 |          0 |          0 |
ble_cont.31643:
    mov     $1, $2                      # |         64 |         69 |          5 |          0 |          0 |          0 |
    call    min_caml_write              # |         64 |         64 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $3               # |         64 |        184 |          0 |          0 |         20 |          0 |
    load    [$sp + 2], $4               # |         64 |        826 |          0 |         64 |         63 |          0 |
    load    [$sp + 4], $5               # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$sp + 1], $6               # |         64 |        442 |          0 |          0 |         63 |          0 |
    call    scan_pixel.2994             # |         64 |         64 |          0 |          0 |          0 |          0 |
bg_cont.31633:
    load    [$sp + 3], $10              # |         64 |        442 |          0 |          0 |         63 |          0 |
    add     $10, 1, $10                 # |         64 |         66 |          2 |          0 |          0 |          0 |
    cmp     $60, $10                    # |         64 |        128 |         64 |          0 |          0 |          0 |
    bg      ble_else.31645              # |         64 |         70 |          0 |          0 |          0 |          3 |
ble_then.31645:
.count stack_move
    add     $sp, 8, $sp
    ret
ble_else.31645:
    store   $10, [$sp + 6]              # |         64 |        448 |          0 |         64 |          0 |          0 |
    sub     $60, 1, $11                 # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$sp + 0], $12              # |         64 |        298 |          0 |          0 |         39 |          0 |
    add     $12, 2, $12                 # |         64 |        114 |         50 |          0 |          0 |          0 |
    cmp     $12, 5                      # |         64 |        128 |         64 |          0 |          0 |          0 |
    bl      bge_cont.31646              # |         64 |        162 |          0 |          0 |          0 |         49 |
bge_then.31646:
    sub     $12, 5, $12                 # |         25 |        175 |          0 |         25 |          0 |          0 |
bge_cont.31646:
    store   $12, [$sp + 7]              # |         64 |        323 |         25 |         39 |          0 |          0 |
    cmp     $11, $10                    # |         64 |         64 |          0 |          0 |          0 |          0 |
    ble     bg_cont.31647               # |         64 |        162 |          0 |          0 |          0 |         49 |
bg_then.31647:
    add     $10, 1, $10                 # |         63 |         63 |          0 |          0 |          0 |          0 |
    sub     $50, 1, $11                 # |         63 |         63 |          0 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 0], $13# |         63 |        441 |          0 |          0 |         63 |          0 |
    load    [min_caml_scan_pitch + 0], $14# |         63 |        441 |          0 |          0 |         63 |          0 |
    load    [min_caml_image_center + 1], $15# |         63 |        819 |          0 |         63 |         63 |          0 |
    sub     $10, $15, $2                # |         63 |         63 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |         63 |         63 |          0 |          0 |          0 |          0 |
    fmul    $14, $1, $1                 # |         63 |        159 |         96 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 0], $3# |         63 |         63 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $12, $4                     # |         63 |         63 |          0 |          0 |          0 |          0 |
    fmul    $1, $13, $2                 # |         63 |        189 |        126 |          0 |          0 |          0 |
    fadd    $2, $3, $5                  # |         63 |        315 |        252 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 1], $2# |         63 |        441 |          0 |         63 |          0 |          0 |
    load    [min_caml_screenz_dir + 1], $3# |         63 |        441 |          0 |          0 |         63 |          0 |
    fmul    $1, $2, $2                  # |         63 |         63 |          0 |          0 |          0 |          0 |
    fadd    $2, $3, $6                  # |         63 |        315 |        252 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 2], $2# |         63 |         63 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $3                     # |         63 |         63 |          0 |          0 |          0 |          0 |
    fmul    $1, $2, $1                  # |         63 |        126 |         63 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 2], $2# |         63 |         63 |          0 |          0 |          0 |          0 |
    fadd    $1, $2, $7                  # |         63 |        441 |          0 |         63 |          0 |          0 |
    load    [$sp + 2], $2               # |         63 |        201 |          0 |          0 |         23 |          0 |
    call    pretrace_pixels.2983        # |         63 |         63 |          0 |          0 |          0 |          0 |
bg_cont.31647:
    li      0, $2                       # |         64 |        448 |          0 |         64 |          0 |          0 |
    load    [$sp + 6], $3               # |         64 |        442 |          0 |          0 |         63 |          0 |
    load    [$sp + 4], $4               # |         64 |        442 |          0 |          0 |         63 |          0 |
    load    [$sp + 1], $5               # |         64 |        442 |          0 |          0 |         63 |          0 |
    load    [$sp + 2], $6               # |         64 |         70 |          0 |          0 |          1 |          0 |
    call    scan_pixel.2994             # |         64 |        448 |          0 |         64 |          0 |          0 |
.count stack_move
    add     $sp, 8, $sp                 # |         64 |        418 |          0 |         59 |          0 |          0 |
    load    [$sp - 2], $1               # |         64 |        512 |         64 |          0 |         64 |          0 |
    load    [$sp - 4], $5               # |         64 |        436 |          0 |          0 |         62 |          0 |
    load    [$sp - 6], $4               # |         64 |        292 |          0 |          0 |         38 |          0 |
    add     $1, 1, $2                   # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$sp - 1], $1               # |         64 |         64 |          0 |          0 |          0 |          0 |
    load    [$sp - 7], $3               # |         64 |         64 |          0 |          0 |          0 |          0 |
    add     $1, 2, $6                   # |         64 |        448 |          0 |         64 |          0 |          0 |
    cmp     $6, 5                       # |         64 |        128 |         64 |          0 |          0 |          0 |
    bl      scan_line.3000              # |         64 |        154 |          0 |          0 |          0 |         45 |
    sub     $6, 5, $6                   # |         26 |         26 |          0 |          0 |          0 |          0 |
    b       scan_line.3000              # |         26 |         34 |          0 |          0 |          0 |          4 |
.end scan_line

######################################################################
.begin create_pixel
create_pixel.3008:
    li      3, $2                       # |        192 |        198 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |        192 |        198 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        198 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 1]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |        192 |        198 |          0 |          1 |          0 |          0 |
    store   $12, [$11 + 2]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 3]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        198 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 4]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |        192 |        198 |          0 |          1 |          0 |          0 |
    li      0, $3                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |        192 |        198 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 1]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        198 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 2]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |        192 |        198 |          0 |          1 |          0 |          0 |
    store   $15, [$14 + 3]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 4]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        198 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        198 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 1]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 2]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        198 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 3]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |        192 |        198 |          0 |          1 |          0 |          0 |
    store   $16, [$15 + 4]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        198 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |        192 |        198 |          0 |          1 |          0 |          0 |
    store   $18, [$17 + 1]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 2]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        198 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 3]              # |        192 |        192 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |        192 |        192 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        192 |        192 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $1, [$17 + 4]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    mov     $hp, $1                     # |        192 |        198 |          0 |          1 |          0 |          0 |
    add     $hp, 8, $hp                 # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $17, [$1 + 7]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $16, [$1 + 6]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $15, [$1 + 5]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $14, [$1 + 4]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $13, [$1 + 3]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $12, [$1 + 2]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    store   $11, [$1 + 1]               # |        192 |        198 |          0 |          1 |          0 |          0 |
    store   $10, [$1 + 0]               # |        192 |        192 |          0 |          0 |          0 |          0 |
    ret                                 # |        192 |        192 |          0 |          0 |          0 |          0 |
.end create_pixel

######################################################################
.begin init_line_elements
init_line_elements.3010:
    cmp     $3, 0                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    bl      bge_else.31649              # |         96 |         96 |          0 |          0 |          0 |          0 |
bge_then.31649:
.count stack_move
    sub     $sp, 2, $sp                 # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 0]               # |         96 |        192 |         96 |          0 |          0 |          0 |
    store   $2, [$sp + 1]               # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |        102 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    mov     $11, $3                     # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      5, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 1]              # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 2]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |        102 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 3]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 4]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      0, $3                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |        102 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    mov     $14, $3                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |        102 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 1]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         96 |        102 |          0 |          1 |          0 |          0 |
    store   $15, [$14 + 2]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 3]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |        102 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 4]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    mov     $15, $3                     # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      5, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 1]              # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 2]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |        102 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 3]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 4]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      0, $3                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    mov     $17, $3                     # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      5, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 1]              # |         96 |        102 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 2]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |        102 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 3]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         96 |         96 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $19, [$17 + 4]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    mov     $hp, $19                    # |         96 |        102 |          0 |          1 |          0 |          0 |
    add     $hp, 8, $hp                 # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $17, [$19 + 7]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $16, [$19 + 6]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $15, [$19 + 5]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $14, [$19 + 4]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $13, [$19 + 3]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $12, [$19 + 2]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $11, [$19 + 1]              # |         96 |        102 |          0 |          1 |          0 |          0 |
    store   $10, [$19 + 0]              # |         96 |         96 |          0 |          0 |          0 |          0 |
    load    [$sp + 0], $20              # |         96 |        102 |          0 |          0 |          1 |          0 |
    load    [$sp + 1], $21              # |         96 |         96 |          0 |          0 |          0 |          0 |
.count storer
    add     $21, $20, $tmp              # |         96 |        288 |        192 |          0 |          0 |          0 |
    store   $19, [$tmp + 0]             # |         96 |        192 |         96 |          0 |          0 |          0 |
    sub     $20, 1, $19                 # |         96 |         96 |          0 |          0 |          0 |          0 |
    cmp     $19, 0                      # |         96 |        192 |         96 |          0 |          0 |          0 |
    bl      bge_else.31650              # |         96 |        102 |          0 |          1 |          0 |          0 |
bge_then.31650:
    call    create_pixel.3008           # |         96 |         96 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |         96 |         96 |          0 |          0 |          0 |          0 |
.count storer
    add     $21, $19, $tmp              # |         96 |         96 |          0 |          0 |          0 |          0 |
    store   $10, [$tmp + 0]             # |         96 |        192 |         96 |          0 |          0 |          0 |
    sub     $19, 1, $10                 # |         96 |         96 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |         96 |        192 |         96 |          0 |          0 |          0 |
    bl      bge_else.31651              # |         96 |        106 |          0 |          0 |          0 |          5 |
bge_then.31651:
    li      3, $2                       # |         93 |         99 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         93 |         99 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $13, [$12 + 1]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         99 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $13, [$12 + 2]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |         93 |         99 |          0 |          1 |          0 |          0 |
    store   $13, [$12 + 3]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $13, [$12 + 4]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |         93 |         99 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         99 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         99 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 1]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 2]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         99 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 3]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         93 |         99 |          0 |          1 |          0 |          0 |
    store   $16, [$15 + 4]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         93 |         99 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $17, [$16 + 1]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         99 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $17, [$16 + 2]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $17, [$16 + 3]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         99 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $17, [$16 + 4]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         93 |         99 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         99 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $19, [$18 + 1]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         93 |         99 |          0 |          1 |          0 |          0 |
    store   $19, [$18 + 2]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         93 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $19, [$18 + 3]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         93 |         99 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $19, [$18 + 4]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    mov     $hp, $19                    # |         93 |         93 |          0 |          0 |          0 |          0 |
    add     $hp, 8, $hp                 # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $18, [$19 + 7]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $17, [$19 + 6]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $16, [$19 + 5]              # |         93 |         99 |          0 |          1 |          0 |          0 |
    store   $15, [$19 + 4]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $14, [$19 + 3]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $13, [$19 + 2]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $12, [$19 + 1]              # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $11, [$19 + 0]              # |         93 |         93 |          0 |          0 |          0 |          0 |
.count storer
    add     $21, $10, $tmp              # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $19, [$tmp + 0]             # |         93 |        186 |         93 |          0 |          0 |          0 |
    sub     $10, 1, $19                 # |         93 |         99 |          0 |          1 |          0 |          0 |
    cmp     $19, 0                      # |         93 |        186 |         93 |          0 |          0 |          0 |
    bl      bge_else.31652              # |         93 |         93 |          0 |          0 |          0 |          0 |
bge_then.31652:
    call    create_pixel.3008           # |         93 |         93 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |         93 |         93 |          0 |          0 |          0 |          0 |
.count storer
    add     $21, $19, $tmp              # |         93 |         93 |          0 |          0 |          0 |          0 |
    sub     $19, 1, $3                  # |         93 |         93 |          0 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |         93 |         93 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $21, $2                     # |         93 |         99 |          0 |          1 |          0 |          0 |
    b       init_line_elements.3010     # |         93 |         97 |          0 |          0 |          0 |          2 |
bge_else.31652:
.count stack_move
    add     $sp, 2, $sp
    mov     $21, $1
    ret
bge_else.31651:
.count stack_move
    add     $sp, 2, $sp                 # |          3 |          3 |          0 |          0 |          0 |          0 |
    mov     $21, $1                     # |          3 |          3 |          0 |          0 |          0 |          0 |
    ret                                 # |          3 |          3 |          0 |          0 |          0 |          0 |
bge_else.31650:
.count stack_move
    add     $sp, 2, $sp
    mov     $21, $1
    ret
bge_else.31649:
    mov     $2, $1
    ret
.end init_line_elements

######################################################################
.begin calc_dirvec
calc_dirvec.3020:
    cmp     $2, 5                       # |        600 |        606 |          0 |          1 |          0 |          0 |
    bl      bge_else.31653              # |        600 |      1,012 |          0 |          0 |          0 |        206 |
bge_then.31653:
    load    [min_caml_dirvecs + $7], $1 # |        100 |        124 |          0 |          0 |          4 |          0 |
    fmul    $3, $3, $5                  # |        100 |        106 |          0 |          1 |          0 |          0 |
    fmul    $4, $4, $6                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$1 + $8], $2               # |        100 |        346 |          0 |          0 |         41 |          0 |
    load    [$2 + 0], $2                # |        100 |        818 |        118 |          0 |        100 |          0 |
    fadd    $5, $6, $5                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    fadd    $5, $36, $5                 # |        100 |        500 |        400 |          0 |          0 |          0 |
    fsqrt   $5, $5                      # |        100 |        500 |        400 |          0 |          0 |          0 |
    finv    $5, $5                      # |        100 |        500 |        400 |          0 |          0 |          0 |
    fmul    $3, $5, $3                  # |        100 |        502 |        396 |          1 |          0 |          0 |
    fmul    $4, $5, $4                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $3, [$2 + 0]                # |        100 |        400 |        300 |          0 |          0 |          0 |
    store   $4, [$2 + 1]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $5, [$2 + 2]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    add     $8, 40, $2                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    fneg    $4, $6                      # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$1 + $2], $2               # |        100 |        400 |          0 |          0 |         50 |          0 |
    fneg    $3, $7                      # |        100 |        106 |          0 |          1 |          0 |          0 |
    load    [$2 + 0], $2                # |        100 |        750 |         50 |          0 |        100 |          0 |
    store   $3, [$2 + 0]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $5, [$2 + 1]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $6, [$2 + 2]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    add     $8, 80, $2                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$1 + $2], $2               # |        100 |        518 |        100 |          0 |         53 |          0 |
    load    [$2 + 0], $2                # |        100 |        794 |         94 |          0 |        100 |          0 |
    store   $5, [$2 + 0]                # |        100 |        106 |          0 |          1 |          0 |          0 |
    store   $7, [$2 + 1]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $6, [$2 + 2]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    add     $8, 1, $2                   # |        100 |        100 |          0 |          0 |          0 |          0 |
    fneg    $5, $5                      # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$1 + $2], $2               # |        100 |        190 |          0 |          0 |         15 |          0 |
    load    [$2 + 0], $2                # |        100 |        870 |        170 |          0 |        100 |          0 |
    store   $7, [$2 + 0]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $6, [$2 + 1]                # |        100 |        106 |          0 |          1 |          0 |          0 |
    store   $5, [$2 + 2]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    add     $8, 41, $2                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$1 + $2], $2               # |        100 |        200 |        100 |          0 |          0 |          0 |
    load    [$2 + 0], $2                # |        100 |        900 |        200 |          0 |        100 |          0 |
    store   $7, [$2 + 0]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $5, [$2 + 1]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $4, [$2 + 2]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    add     $8, 81, $2                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$1 + $2], $1               # |        100 |        206 |        100 |          0 |          1 |          0 |
    load    [$1 + 0], $1                # |        100 |        898 |        198 |          0 |        100 |          0 |
    store   $5, [$1 + 0]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $3, [$1 + 1]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    store   $4, [$1 + 2]                # |        100 |        100 |          0 |          0 |          0 |          0 |
    ret                                 # |        100 |        100 |          0 |          0 |          0 |          0 |
bge_else.31653:
.count stack_move
    sub     $sp, 7, $sp                 # |        500 |        506 |          0 |          1 |          0 |          0 |
    fmul    $4, $4, $11                 # |        500 |        506 |          0 |          1 |          0 |          0 |
    store   $8, [$sp + 0]               # |        500 |        500 |          0 |          0 |          0 |          0 |
    store   $7, [$sp + 1]               # |        500 |        500 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 2]               # |        500 |        500 |          0 |          0 |          0 |          0 |
    store   $6, [$sp + 3]               # |        500 |        500 |          0 |          0 |          0 |          0 |
    store   $5, [$sp + 4]               # |        500 |        500 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27098], $12              # |        500 |        518 |          0 |          0 |          3 |          0 |
    fadd    $11, $12, $11               # |        500 |      1,494 |        994 |          0 |          0 |          0 |
    fsqrt   $11, $11                    # |        500 |      2,502 |      1,996 |          1 |          0 |          0 |
    finv    $11, $2                     # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    call    min_caml_atan               # |        500 |        500 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    load    [$sp + 4], $14              # |        500 |        536 |          0 |          0 |          6 |          0 |
    fmul    $13, $14, $2                # |        500 |      1,488 |        988 |          0 |          0 |          0 |
    store   $2, [$sp + 5]               # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    call    min_caml_sin                # |        500 |        500 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |        500 |        506 |          0 |          1 |          0 |          0 |
    load    [$sp + 5], $2               # |        500 |        500 |          0 |          0 |          0 |          0 |
    call    min_caml_cos                # |        500 |        500 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    finv    $15, $15                    # |        500 |        500 |          0 |          0 |          0 |          0 |
    fmul    $13, $15, $13               # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    fmul    $13, $11, $11               # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    fmul    $11, $11, $13               # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    fadd    $13, $12, $12               # |        500 |      2,502 |      1,996 |          1 |          0 |          0 |
    fsqrt   $12, $12                    # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    finv    $12, $2                     # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    call    min_caml_atan               # |        500 |        500 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $15              # |        500 |        524 |          0 |          0 |          4 |          0 |
    fmul    $13, $15, $2                # |        500 |      1,492 |        992 |          0 |          0 |          0 |
    store   $2, [$sp + 6]               # |        500 |      2,500 |      2,000 |          0 |          0 |          0 |
    call    min_caml_sin                # |        500 |        506 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    load    [$sp + 6], $2               # |        500 |        512 |          0 |          0 |          2 |          0 |
    call    min_caml_cos                # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 7, $sp                 # |        500 |        500 |          0 |          0 |          0 |          0 |
    finv    $1, $1                      # |        500 |        500 |          0 |          0 |          0 |          0 |
    load    [$sp - 6], $7               # |        500 |        536 |          0 |          0 |          6 |          0 |
    load    [$sp - 7], $8               # |        500 |        536 |          0 |          0 |          6 |          0 |
.count move_args
    mov     $15, $6                     # |        500 |        506 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $14, $5                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    fmul    $13, $1, $1                 # |        500 |        500 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $3                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    fmul    $1, $12, $4                 # |        500 |      2,000 |      1,500 |          0 |          0 |          0 |
    load    [$sp - 5], $1               # |        500 |        506 |          0 |          0 |          1 |          0 |
    add     $1, 1, $2                   # |        500 |      1,498 |        998 |          0 |          0 |          0 |
    b       calc_dirvec.3020            # |        500 |        540 |          0 |          0 |          0 |         20 |
.end calc_dirvec

######################################################################
.begin calc_dirvecs
calc_dirvecs.3028:
    cmp     $2, 0                       # |         11 |         17 |          0 |          1 |          0 |          0 |
    bl      bge_else.31654              # |         11 |         11 |          0 |          0 |          0 |          0 |
bge_then.31654:
.count stack_move
    sub     $sp, 11, $sp                # |         11 |         11 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |         11 |         11 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 0]               # |         11 |         11 |          0 |          0 |          0 |          0 |
    store   $5, [$sp + 1]               # |         11 |         11 |          0 |          0 |          0 |          0 |
    store   $4, [$sp + 2]               # |         11 |         11 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 3]               # |         11 |         11 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |         11 |         17 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         11 |         44 |         33 |          0 |          0 |          0 |
.count load_float
    load    [f.27139], $17              # |         11 |         17 |          0 |          0 |          1 |          0 |
.count load_float
    load    [f.27140], $18              # |         11 |         17 |          0 |          0 |          1 |          0 |
    load    [$sp + 3], $6               # |         11 |         35 |          0 |          0 |          4 |          0 |
    fmul    $16, $17, $16               # |         11 |         11 |          0 |          0 |          0 |          0 |
    load    [$sp + 2], $7               # |         11 |         35 |          0 |          0 |          4 |          0 |
    load    [$sp + 1], $8               # |         11 |         23 |          0 |          0 |          2 |          0 |
.count move_args
    mov     $zero, $4                   # |         11 |         17 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         11 |         11 |          0 |          0 |          0 |          0 |
    fsub    $16, $18, $5                # |         11 |         11 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |         11 |         11 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |         11 |         11 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |         11 |         11 |          0 |          0 |          0 |          0 |
    load    [$sp + 1], $19              # |         11 |         11 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27098], $20              # |         11 |         11 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |         11 |         17 |          0 |          1 |          0 |          0 |
    add     $19, 2, $8                  # |         11 |         11 |          0 |          0 |          0 |          0 |
    fadd    $16, $20, $5                # |         11 |         11 |          0 |          0 |          0 |          0 |
    store   $8, [$sp + 4]               # |         11 |         11 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $6               # |         11 |         11 |          0 |          0 |          0 |          0 |
    load    [$sp + 2], $7               # |         11 |         11 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         11 |         11 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |         11 |         11 |          0 |          0 |          0 |          0 |
    load    [$sp + 0], $10              # |         11 |         23 |          0 |          1 |          1 |          0 |
    sub     $10, 1, $2                  # |         11 |         31 |         20 |          0 |          0 |          0 |
    cmp     $2, 0                       # |         11 |         22 |         11 |          0 |          0 |          0 |
    bl      bge_else.31655              # |         11 |         15 |          0 |          0 |          0 |          2 |
bge_then.31655:
    store   $2, [$sp + 5]               # |         10 |         10 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |         10 |         10 |          0 |          0 |          0 |          0 |
    load    [$sp + 2], $11              # |         10 |         10 |          0 |          0 |          0 |          0 |
    add     $11, 1, $11                 # |         10 |         30 |         20 |          0 |          0 |          0 |
    cmp     $11, 5                      # |         10 |         25 |          9 |          1 |          0 |          0 |
    bl      bge_cont.31656              # |         10 |         20 |          0 |          0 |          0 |          5 |
bge_then.31656:
    sub     $11, 5, $11                 # |          2 |          2 |          0 |          0 |          0 |          0 |
bge_cont.31656:
    store   $11, [$sp + 6]              # |         10 |         12 |          2 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |         10 |         10 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         10 |         40 |         30 |          0 |          0 |          0 |
    fmul    $16, $17, $16               # |         10 |         10 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $6               # |         10 |         10 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $19, $8                     # |         10 |         16 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $11, $7                     # |         10 |         10 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |         10 |         10 |          0 |          0 |          0 |          0 |
    fsub    $16, $18, $5                # |         10 |         10 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         10 |         10 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |         10 |         10 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |         10 |         10 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |         10 |         10 |          0 |          0 |          0 |          0 |
    fadd    $16, $20, $5                # |         10 |         16 |          0 |          1 |          0 |          0 |
    load    [$sp + 3], $6               # |         10 |         10 |          0 |          0 |          0 |          0 |
    load    [$sp + 6], $7               # |         10 |         16 |          0 |          0 |          1 |          0 |
    load    [$sp + 4], $8               # |         10 |         10 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |         10 |         10 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         10 |         10 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |         10 |         10 |          0 |          0 |          0 |          0 |
    load    [$sp + 5], $10              # |         10 |         10 |          0 |          0 |          0 |          0 |
    sub     $10, 1, $2                  # |         10 |         34 |         18 |          1 |          0 |          0 |
    cmp     $2, 0                       # |         10 |         20 |         10 |          0 |          0 |          0 |
    bl      bge_else.31657              # |         10 |         20 |          0 |          0 |          0 |          5 |
bge_then.31657:
    store   $2, [$sp + 7]               # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 6], $11              # |          5 |          5 |          0 |          0 |          0 |          0 |
    add     $11, 1, $11                 # |          5 |         15 |         10 |          0 |          0 |          0 |
    cmp     $11, 5                      # |          5 |         10 |          5 |          0 |          0 |          0 |
    bl      bge_cont.31658              # |          5 |         21 |          0 |          1 |          0 |          5 |
bge_then.31658:
    sub     $11, 5, $11                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_cont.31658:
    store   $11, [$sp + 8]              # |          5 |          6 |          1 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          5 |         20 |         15 |          0 |          0 |          0 |
    fmul    $16, $17, $16               # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $6               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $19, $8                     # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $7                     # |          5 |         11 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |          5 |          0 |          0 |          0 |          0 |
    fsub    $16, $18, $5                # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    fadd    $16, $20, $5                # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $6               # |          5 |         17 |          0 |          1 |          1 |          0 |
    load    [$sp + 8], $7               # |          5 |         11 |          0 |          0 |          1 |          0 |
    load    [$sp + 4], $8               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 7], $10              # |          5 |         11 |          0 |          0 |          1 |          0 |
    sub     $10, 1, $2                  # |          5 |         13 |          8 |          0 |          0 |          0 |
    cmp     $2, 0                       # |          5 |         15 |          4 |          1 |          0 |          0 |
    bl      bge_else.31659              # |          5 |         11 |          0 |          0 |          0 |          3 |
bge_then.31659:
    store   $2, [$sp + 9]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 8], $11              # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $11, 1, $11                 # |          1 |          3 |          2 |          0 |          0 |          0 |
    cmp     $11, 5                      # |          1 |          2 |          1 |          0 |          0 |          0 |
    bl      bge_cont.31660              # |          1 |          3 |          0 |          0 |          0 |          1 |
bge_then.31660:
    sub     $11, 5, $11
bge_cont.31660:
    store   $11, [$sp + 10]             # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_float_of_int       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          4 |          3 |          0 |          0 |          0 |
    fmul    $16, $17, $16               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $6               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $19, $8                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $7                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    fsub    $16, $18, $5                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $16, $20, $5                # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $6               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 10], $7              # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$sp + 4], $8               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 11, $sp                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $19, $5                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp - 2], $1               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp - 8], $3               # |          1 |          7 |          0 |          1 |          0 |          0 |
    sub     $1, 1, $2                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp - 1], $1               # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $1, 1, $4                   # |          1 |          3 |          2 |          0 |          0 |          0 |
    cmp     $4, 5                       # |          1 |          2 |          1 |          0 |          0 |          0 |
    bl      calc_dirvecs.3028           # |          1 |          3 |          0 |          0 |          0 |          1 |
    sub     $4, 5, $4
    b       calc_dirvecs.3028
bge_else.31659:
.count stack_move
    add     $sp, 11, $sp                # |          4 |          4 |          0 |          0 |          0 |          0 |
    ret                                 # |          4 |          4 |          0 |          0 |          0 |          0 |
bge_else.31657:
.count stack_move
    add     $sp, 11, $sp                # |          5 |          5 |          0 |          0 |          0 |          0 |
    ret                                 # |          5 |          5 |          0 |          0 |          0 |          0 |
bge_else.31655:
.count stack_move
    add     $sp, 11, $sp                # |          1 |          7 |          0 |          1 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_else.31654:
    ret
.end calc_dirvecs

######################################################################
.begin calc_dirvec_rows
calc_dirvec_rows.3033:
    cmp     $2, 0                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    bl      bge_else.31662              # |          5 |         11 |          0 |          1 |          0 |          0 |
bge_then.31662:
.count stack_move
    sub     $sp, 20, $sp                # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |          5 |          5 |          0 |          0 |          0 |          0 |
    store   $4, [$sp + 0]               # |          5 |          5 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 1]               # |          5 |          5 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 2]               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27140], $11              # |          5 |          5 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27139], $12              # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      4, $2                       # |          5 |         11 |          0 |          1 |          0 |          0 |
    store   $11, [$sp + 3]              # |          5 |          5 |          0 |          0 |          0 |          0 |
    store   $12, [$sp + 4]              # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          5 |         20 |         15 |          0 |          0 |          0 |
    fmul    $13, $12, $13               # |          5 |          5 |          0 |          0 |          0 |          0 |
    store   $13, [$sp + 5]              # |          5 |         25 |         20 |          0 |          0 |          0 |
    fsub    $13, $11, $13               # |          5 |          5 |          0 |          0 |          0 |          0 |
    store   $13, [$sp + 6]              # |          5 |         27 |         16 |          1 |          0 |          0 |
    load    [$sp + 2], $2               # |          5 |         17 |          0 |          0 |          2 |          0 |
    call    min_caml_float_of_int       # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          5 |         20 |         15 |          0 |          0 |          0 |
    fmul    $16, $12, $16               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $13, $5                     # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          5 |         11 |          0 |          1 |          0 |          0 |
    fsub    $16, $11, $6                # |          5 |          5 |          0 |          0 |          0 |          0 |
    store   $6, [$sp + 7]               # |          5 |         25 |         20 |          0 |          0 |          0 |
    load    [$sp + 1], $7               # |          5 |         17 |          0 |          0 |          2 |          0 |
    load    [$sp + 0], $8               # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 0], $16              # |          5 |          5 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27098], $17              # |          5 |         11 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |          5 |          0 |          0 |          0 |          0 |
    add     $16, 2, $8                  # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
    store   $8, [$sp + 8]               # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 5], $18              # |          5 |          5 |          0 |          0 |          0 |          0 |
    fadd    $18, $17, $5                # |          5 |         15 |         10 |          0 |          0 |          0 |
    store   $5, [$sp + 9]               # |          5 |         25 |         20 |          0 |          0 |          0 |
    load    [$sp + 7], $6               # |          5 |         23 |          0 |          1 |          2 |          0 |
    load    [$sp + 1], $7               # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 1], $11              # |          5 |          5 |          0 |          0 |          0 |          0 |
    add     $11, 1, $11                 # |          5 |         15 |         10 |          0 |          0 |          0 |
    cmp     $11, 5                      # |          5 |         10 |          5 |          0 |          0 |          0 |
    bl      bge_cont.31663              # |          5 |         11 |          0 |          0 |          0 |          3 |
bge_then.31663:
    sub     $11, 5, $11                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_cont.31663:
    store   $11, [$sp + 10]             # |          5 |         12 |          1 |          1 |          0 |          0 |
    li      3, $2                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          5 |         20 |         15 |          0 |          0 |          0 |
    load    [$sp + 4], $19              # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $20              # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $16, $8                     # |          5 |          5 |          0 |          0 |          0 |          0 |
    fmul    $18, $19, $18               # |          5 |         11 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $11, $7                     # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          5 |          5 |          0 |          0 |          0 |          0 |
    fsub    $18, $20, $5                # |          5 |          5 |          0 |          0 |          0 |          0 |
    store   $5, [$sp + 11]              # |          5 |         25 |         20 |          0 |          0 |          0 |
    load    [$sp + 7], $6               # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |         11 |          0 |          1 |          0 |          0 |
    li      0, $2                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    fadd    $18, $17, $5                # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
    store   $5, [$sp + 12]              # |          5 |         15 |         10 |          0 |          0 |          0 |
    load    [$sp + 7], $6               # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 10], $7              # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 8], $8               # |          5 |         11 |          0 |          1 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 10], $11             # |          5 |          5 |          0 |          0 |          0 |          0 |
    add     $11, 1, $11                 # |          5 |         15 |         10 |          0 |          0 |          0 |
    cmp     $11, 5                      # |          5 |         10 |          5 |          0 |          0 |          0 |
    bl      bge_cont.31664              # |          5 |         15 |          0 |          0 |          0 |          5 |
bge_then.31664:
    sub     $11, 5, $11                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_cont.31664:
    store   $11, [$sp + 13]             # |          5 |         12 |          1 |          1 |          0 |          0 |
    li      2, $2                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          5 |         20 |         15 |          0 |          0 |          0 |
    fmul    $18, $19, $18               # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 7], $6               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $16, $8                     # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $7                     # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |         11 |          0 |          1 |          0 |          0 |
    fsub    $18, $20, $5                # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    fadd    $18, $17, $5                # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 7], $6               # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 13], $7              # |          5 |         23 |          0 |          1 |          2 |          0 |
    load    [$sp + 8], $8               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 13], $21             # |          5 |         11 |          0 |          0 |          1 |          0 |
    add     $21, 1, $21                 # |          5 |         13 |          8 |          0 |          0 |          0 |
    cmp     $21, 5                      # |          5 |         15 |          4 |          1 |          0 |          0 |
    bl      bge_cont.31665              # |          5 |         13 |          0 |          0 |          0 |          4 |
bge_then.31665:
    sub     $21, 5, $21                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_cont.31665:
    mov     $21, $4                     # |          5 |          6 |          1 |          0 |          0 |          0 |
    load    [$sp + 7], $3               # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $16, $5                     # |          5 |          5 |          0 |          0 |          0 |          0 |
    call    calc_dirvecs.3028           # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [$sp + 2], $10              # |          5 |          5 |          0 |          0 |          0 |          0 |
    sub     $10, 1, $2                  # |          5 |         19 |          8 |          1 |          0 |          0 |
    cmp     $2, 0                       # |          5 |         10 |          5 |          0 |          0 |          0 |
    bl      bge_else.31666              # |          5 |          7 |          0 |          0 |          0 |          1 |
bge_then.31666:
    store   $2, [$sp + 14]              # |          4 |          4 |          0 |          0 |          0 |          0 |
    load    [$sp + 1], $10              # |          4 |          4 |          0 |          0 |          0 |          0 |
    add     $10, 2, $10                 # |          4 |         12 |          8 |          0 |          0 |          0 |
    cmp     $10, 5                      # |          4 |          8 |          4 |          0 |          0 |          0 |
    bl      bge_cont.31667              # |          4 |         12 |          0 |          0 |          0 |          4 |
bge_then.31667:
    sub     $10, 5, $10                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_cont.31667:
    store   $10, [$sp + 15]             # |          4 |         11 |          1 |          1 |          0 |          0 |
    load    [$sp + 0], $11              # |          4 |         10 |          0 |          0 |          1 |          0 |
    li      0, $12                      # |          4 |          4 |          0 |          0 |          0 |          0 |
    add     $11, 4, $11                 # |          4 |          7 |          3 |          0 |          0 |          0 |
    store   $11, [$sp + 16]             # |          4 |          8 |          4 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          4 |         16 |         12 |          0 |          0 |          0 |
    load    [$sp + 4], $17              # |          4 |         22 |          0 |          1 |          2 |          0 |
.count move_args
    mov     $11, $8                     # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $7                     # |          4 |          4 |          0 |          0 |          0 |          0 |
    fmul    $16, $17, $16               # |          4 |          4 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $17              # |          4 |         10 |          0 |          0 |          1 |          0 |
.count move_args
    mov     $zero, $4                   # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $12, $2                     # |          4 |          4 |          0 |          0 |          0 |          0 |
    fsub    $16, $17, $6                # |          4 |         10 |          0 |          1 |          0 |          0 |
    store   $6, [$sp + 17]              # |          4 |         20 |         16 |          0 |          0 |          0 |
    load    [$sp + 6], $5               # |          4 |          4 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          4 |          4 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          4 |          4 |          0 |          0 |          0 |          0 |
    load    [$sp + 16], $16             # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          4 |          4 |          0 |          0 |          0 |          0 |
    add     $16, 2, $8                  # |          4 |         10 |          0 |          1 |          0 |          0 |
    store   $8, [$sp + 18]              # |          4 |          8 |          4 |          0 |          0 |          0 |
    load    [$sp + 9], $5               # |          4 |          4 |          0 |          0 |          0 |          0 |
    load    [$sp + 17], $6              # |          4 |          4 |          0 |          0 |          0 |          0 |
    load    [$sp + 15], $7              # |          4 |          4 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          4 |          4 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          4 |          4 |          0 |          0 |          0 |          0 |
    load    [$sp + 15], $17             # |          4 |          4 |          0 |          0 |          0 |          0 |
    add     $17, 1, $17                 # |          4 |         16 |          6 |          1 |          0 |          0 |
    cmp     $17, 5                      # |          4 |          8 |          4 |          0 |          0 |          0 |
    bl      bge_cont.31668              # |          4 |          8 |          0 |          0 |          0 |          2 |
bge_then.31668:
    sub     $17, 5, $17                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_cont.31668:
    mov     $17, $7                     # |          4 |          5 |          1 |          0 |          0 |          0 |
    store   $7, [$sp + 19]              # |          4 |          4 |          0 |          0 |          0 |          0 |
    load    [$sp + 11], $5              # |          4 |         16 |          0 |          0 |          2 |          0 |
    load    [$sp + 17], $6              # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $16, $8                     # |          4 |         10 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          4 |          4 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          4 |          4 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          4 |          4 |          0 |          0 |          0 |          0 |
    load    [$sp + 12], $5              # |          4 |          4 |          0 |          0 |          0 |          0 |
    load    [$sp + 17], $6              # |          4 |          4 |          0 |          0 |          0 |          0 |
    load    [$sp + 19], $7              # |          4 |         10 |          0 |          0 |          1 |          0 |
    load    [$sp + 18], $8              # |          4 |         10 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          4 |          4 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |          4 |          4 |          0 |          0 |          0 |          0 |
    li      2, $2                       # |          4 |          4 |          0 |          0 |          0 |          0 |
    load    [$sp + 19], $21             # |          4 |         10 |          0 |          0 |          1 |          0 |
    add     $21, 1, $21                 # |          4 |         10 |          6 |          0 |          0 |          0 |
    cmp     $21, 5                      # |          4 |          8 |          4 |          0 |          0 |          0 |
    bl      bge_cont.31669              # |          4 |         16 |          0 |          1 |          0 |          3 |
bge_then.31669:
    sub     $21, 5, $21                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_cont.31669:
    mov     $21, $4                     # |          4 |          5 |          1 |          0 |          0 |          0 |
    load    [$sp + 17], $3              # |          4 |          4 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $16, $5                     # |          4 |          4 |          0 |          0 |          0 |          0 |
    call    calc_dirvecs.3028           # |          4 |          4 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 20, $sp                # |          4 |          4 |          0 |          0 |          0 |          0 |
    load    [$sp - 6], $1               # |          4 |         14 |          4 |          0 |          1 |          0 |
    sub     $1, 1, $2                   # |          4 |         16 |          6 |          1 |          0 |          0 |
    load    [$sp - 5], $1               # |          4 |         16 |          0 |          0 |          2 |          0 |
    add     $1, 2, $3                   # |          4 |          8 |          4 |          0 |          0 |          0 |
    load    [$sp - 4], $1               # |          4 |          4 |          0 |          0 |          0 |          0 |
    cmp     $3, 5                       # |          4 |          4 |          0 |          0 |          0 |          0 |
    add     $1, 4, $4                   # |          4 |          8 |          4 |          0 |          0 |          0 |
    bl      calc_dirvec_rows.3033       # |          4 |          8 |          0 |          0 |          0 |          2 |
    sub     $3, 5, $3                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    b       calc_dirvec_rows.3033       # |          2 |          6 |          0 |          0 |          0 |          2 |
bge_else.31666:
.count stack_move
    add     $sp, 20, $sp                # |          1 |          1 |          0 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_else.31662:
    ret
.end calc_dirvec_rows

######################################################################
.begin create_dirvec_elements
create_dirvec_elements.3039:
    cmp     $3, 0                       # |        150 |        156 |          0 |          1 |          0 |          0 |
    bl      bge_else.31671              # |        150 |        158 |          0 |          0 |          0 |          4 |
bge_then.31671:
.count stack_move
    sub     $sp, 6, $sp                 # |        148 |        148 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 0]               # |        148 |        296 |        148 |          0 |          0 |          0 |
    store   $2, [$sp + 1]               # |        148 |        154 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |        148 |        148 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        148 |        148 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        148 |        148 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |        148 |        148 |          0 |          0 |          0 |          0 |
    mov     $10, $3                     # |        148 |        148 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 2]               # |        148 |        148 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |        148 |        148 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        148 |        154 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |        148 |        148 |          0 |          0 |          0 |          0 |
    mov     $hp, $11                    # |        148 |        148 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |        148 |        148 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 1]              # |        148 |        148 |          0 |          0 |          0 |          0 |
    load    [$sp + 2], $10              # |        148 |        148 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 0]              # |        148 |        444 |        296 |          0 |          0 |          0 |
    mov     $11, $10                    # |        148 |        148 |          0 |          0 |          0 |          0 |
    load    [$sp + 0], $11              # |        148 |        154 |          0 |          1 |          0 |          0 |
    load    [$sp + 1], $12              # |        148 |        148 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $11, $tmp              # |        148 |        444 |        296 |          0 |          0 |          0 |
    store   $10, [$tmp + 0]             # |        148 |        296 |        148 |          0 |          0 |          0 |
    sub     $11, 1, $10                 # |        148 |        148 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |        148 |        296 |        148 |          0 |          0 |          0 |
    bl      bge_else.31672              # |        148 |        154 |          0 |          0 |          0 |          3 |
bge_then.31672:
    li      3, $2                       # |        146 |        146 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        146 |        152 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |        146 |        146 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |        146 |        146 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 3]               # |        146 |        146 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |        146 |        146 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        146 |        146 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |        146 |        146 |          0 |          0 |          0 |          0 |
    mov     $hp, $13                    # |        146 |        146 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |        146 |        152 |          0 |          1 |          0 |          0 |
    store   $11, [$13 + 1]              # |        146 |        146 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $11              # |        146 |        146 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $10, $tmp              # |        146 |        146 |          0 |          0 |          0 |          0 |
    sub     $10, 1, $10                 # |        146 |        146 |          0 |          0 |          0 |          0 |
    store   $11, [$13 + 0]              # |        146 |        146 |          0 |          0 |          0 |          0 |
    mov     $13, $11                    # |        146 |        146 |          0 |          0 |          0 |          0 |
    store   $11, [$tmp + 0]             # |        146 |        146 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |        146 |        152 |          0 |          1 |          0 |          0 |
    bl      bge_else.31673              # |        146 |        146 |          0 |          0 |          0 |          0 |
bge_then.31673:
    li      3, $2                       # |        146 |        146 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        146 |        146 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        146 |        146 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |        146 |        146 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 4]               # |        146 |        146 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |        146 |        146 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        146 |        152 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |        146 |        146 |          0 |          0 |          0 |          0 |
    mov     $hp, $13                    # |        146 |        146 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |        146 |        146 |          0 |          0 |          0 |          0 |
    store   $11, [$13 + 1]              # |        146 |        146 |          0 |          0 |          0 |          0 |
    load    [$sp + 4], $11              # |        146 |        146 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $10, $tmp              # |        146 |        146 |          0 |          0 |          0 |          0 |
    sub     $10, 1, $10                 # |        146 |        146 |          0 |          0 |          0 |          0 |
    store   $11, [$13 + 0]              # |        146 |        152 |          0 |          1 |          0 |          0 |
    mov     $13, $11                    # |        146 |        146 |          0 |          0 |          0 |          0 |
    store   $11, [$tmp + 0]             # |        146 |        146 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |        146 |        146 |          0 |          0 |          0 |          0 |
    bl      bge_else.31674              # |        146 |        150 |          0 |          0 |          0 |          2 |
bge_then.31674:
    li      3, $2                       # |        145 |        145 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        145 |        145 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        145 |        145 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |        145 |        151 |          0 |          1 |          0 |          0 |
    store   $3, [$sp + 5]               # |        145 |        145 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |        145 |        145 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        145 |        145 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 6, $sp                 # |        145 |        145 |          0 |          0 |          0 |          0 |
    mov     $hp, $2                     # |        145 |        145 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |        145 |        145 |          0 |          0 |          0 |          0 |
    store   $1, [$2 + 1]                # |        145 |        145 |          0 |          0 |          0 |          0 |
    load    [$sp - 1], $1               # |        145 |        151 |          0 |          1 |          0 |          0 |
.count storer
    add     $12, $10, $tmp              # |        145 |        145 |          0 |          0 |          0 |          0 |
    sub     $10, 1, $3                  # |        145 |        145 |          0 |          0 |          0 |          0 |
    store   $1, [$2 + 0]                # |        145 |        145 |          0 |          0 |          0 |          0 |
    mov     $2, $1                      # |        145 |        145 |          0 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |        145 |        145 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $12, $2                     # |        145 |        145 |          0 |          0 |          0 |          0 |
    b       create_dirvec_elements.3039 # |        145 |        149 |          0 |          0 |          0 |          2 |
bge_else.31674:
.count stack_move
    add     $sp, 6, $sp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_else.31673:
.count stack_move
    add     $sp, 6, $sp
    ret
bge_else.31672:
.count stack_move
    add     $sp, 6, $sp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    ret                                 # |          2 |          2 |          0 |          0 |          0 |          0 |
bge_else.31671:
    ret                                 # |          2 |          2 |          0 |          0 |          0 |          0 |
.end create_dirvec_elements

######################################################################
.begin create_dirvecs
create_dirvecs.3042:
    cmp     $2, 0                       # |          3 |          3 |          0 |          0 |          0 |          0 |
    bl      bge_else.31675              # |          3 |         11 |          0 |          1 |          0 |          1 |
bge_then.31675:
.count stack_move
    sub     $sp, 9, $sp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 0]               # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $10, $3                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 1]               # |          2 |          8 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      120, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $hp, $11                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 1]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [$sp + 1], $10              # |          2 |          8 |          0 |          1 |          0 |          0 |
    mov     $11, $3                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 0]              # |          2 |          4 |          2 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [$sp + 0], $11              # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_dirvecs + $11]# |          2 |          8 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 2]               # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + $11], $11# |          2 |         14 |          0 |          0 |          2 |          0 |
    mov     $hp, $12                    # |          2 |          8 |          0 |          1 |          0 |          0 |
    add     $hp, 2, $hp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$12 + 1]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [$sp + 2], $10              # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$12 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $12, $10                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 118]            # |          2 |          8 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 3]               # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $hp, $12                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |          2 |          8 |          0 |          1 |          0 |          0 |
    store   $10, [$12 + 1]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $10              # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$12 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $12, $10                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 117]            # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          8 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 4]               # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $hp, $15                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $14, [$15 + 1]              # |          2 |          8 |          0 |          1 |          0 |          0 |
    load    [$sp + 4], $14              # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      115, $3                     # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $14, [$15 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $15, $14                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $14, [$11 + 116]            # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    create_dirvec_elements.3039 # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [$sp + 0], $10              # |          2 |          8 |          0 |          1 |          0 |          0 |
    sub     $10, 1, $10                 # |          2 |          6 |          4 |          0 |          0 |          0 |
    cmp     $10, 0                      # |          2 |          4 |          2 |          0 |          0 |          0 |
    bl      bge_else.31676              # |          2 |          2 |          0 |          0 |          0 |          0 |
bge_then.31676:
    store   $10, [$sp + 5]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          2 |          8 |          0 |          1 |          0 |          0 |
    store   $3, [$sp + 6]               # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      120, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $hp, $12                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $11, [$12 + 1]              # |          2 |          8 |          0 |          1 |          0 |          0 |
    load    [$sp + 6], $11              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $12, $3                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $11, [$12 + 0]              # |          2 |          4 |          2 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $11, [min_caml_dirvecs + $10]# |          2 |          2 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          2 |          8 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 7]               # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + $10], $10# |          2 |         14 |          0 |          0 |          2 |          0 |
    mov     $hp, $12                    # |          2 |          8 |          0 |          1 |          0 |          0 |
    add     $hp, 2, $hp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $11, [$12 + 1]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [$sp + 7], $11              # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $11, [$12 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $12, $11                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 118]            # |          2 |          8 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 8]               # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $hp, $15                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |          2 |          8 |          0 |          1 |          0 |          0 |
    store   $14, [$15 + 1]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [$sp + 8], $14              # |          2 |          2 |          0 |          0 |          0 |          0 |
    li      116, $3                     # |          2 |          2 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $14, [$15 + 0]              # |          2 |          2 |          0 |          0 |          0 |          0 |
    mov     $15, $14                    # |          2 |          2 |          0 |          0 |          0 |          0 |
    store   $14, [$10 + 117]            # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    create_dirvec_elements.3039 # |          2 |          8 |          0 |          1 |          0 |          0 |
.count stack_move
    add     $sp, 9, $sp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
    load    [$sp - 4], $1               # |          2 |          4 |          2 |          0 |          0 |          0 |
    sub     $1, 1, $2                   # |          2 |          6 |          4 |          0 |          0 |          0 |
    b       create_dirvecs.3042         # |          2 |          6 |          0 |          0 |          0 |          2 |
bge_else.31676:
.count stack_move
    add     $sp, 9, $sp
    ret
bge_else.31675:
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.end create_dirvecs

######################################################################
.begin init_dirvec_constants
init_dirvec_constants.3044:
    cmp     $3, 0                       # |        152 |        158 |          0 |          1 |          0 |          0 |
    bl      bge_else.31677              # |        152 |        158 |          0 |          0 |          0 |          3 |
bge_then.31677:
.count stack_move
    sub     $sp, 4, $sp                 # |        150 |        150 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $10                 # |        150 |        150 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 0]               # |        150 |        150 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 1]               # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$2 + $3], $11              # |        150 |        768 |          0 |          0 |        103 |          0 |
    cmp     $10, 0                      # |        150 |        150 |          0 |          0 |          0 |          0 |
    bl      bge_cont.31678              # |        150 |        156 |          0 |          1 |          0 |          0 |
bge_then.31678:
    load    [$11 + 1], $12              # |        150 |        912 |          0 |          0 |        127 |          0 |
    load    [min_caml_objects + $10], $13# |        150 |        162 |          0 |          0 |          2 |          0 |
    load    [$11 + 0], $15              # |        150 |        894 |          0 |          0 |        124 |          0 |
.count move_args
    mov     $zero, $3                   # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$13 + 1], $14              # |        150 |        162 |          0 |          0 |          2 |          0 |
    cmp     $14, 1                      # |        150 |        446 |        296 |          0 |          0 |          0 |
    bne     be_else.31679               # |        150 |        162 |          0 |          0 |          0 |          6 |
be_then.31679:
    li      6, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $16
    load    [$15 + 0], $17
    fcmp    $17, $zero
    bne     be_else.31680
be_then.31680:
    store   $zero, [$16 + 1]
    b       be_cont.31680
be_else.31680:
    load    [$13 + 6], $18
    fcmp    $zero, $17
    bg      ble_else.31681
ble_then.31681:
    li      0, $17
    b       ble_cont.31681
ble_else.31681:
    li      1, $17
ble_cont.31681:
    cmp     $18, 0
    be      bne_cont.31682
bne_then.31682:
    cmp     $17, 0
    bne     be_else.31683
be_then.31683:
    li      1, $17
    b       be_cont.31683
be_else.31683:
    li      0, $17
be_cont.31683:
bne_cont.31682:
    load    [$13 + 4], $18
    cmp     $17, 0
    load    [$18 + 0], $18
    bne     be_else.31684
be_then.31684:
    fneg    $18, $17
    store   $17, [$16 + 0]
    load    [$15 + 0], $17
    finv    $17, $17
    store   $17, [$16 + 1]
    b       be_cont.31684
be_else.31684:
    store   $18, [$16 + 0]
    load    [$15 + 0], $17
    finv    $17, $17
    store   $17, [$16 + 1]
be_cont.31684:
be_cont.31680:
    load    [$15 + 1], $17
    fcmp    $17, $zero
    bne     be_else.31685
be_then.31685:
    store   $zero, [$16 + 3]
    b       be_cont.31685
be_else.31685:
    load    [$13 + 6], $18
    fcmp    $zero, $17
    bg      ble_else.31686
ble_then.31686:
    li      0, $17
    b       ble_cont.31686
ble_else.31686:
    li      1, $17
ble_cont.31686:
    cmp     $18, 0
    be      bne_cont.31687
bne_then.31687:
    cmp     $17, 0
    bne     be_else.31688
be_then.31688:
    li      1, $17
    b       be_cont.31688
be_else.31688:
    li      0, $17
be_cont.31688:
bne_cont.31687:
    load    [$13 + 4], $18
    cmp     $17, 0
    load    [$18 + 1], $18
    bne     be_else.31689
be_then.31689:
    fneg    $18, $17
    store   $17, [$16 + 2]
    load    [$15 + 1], $17
    finv    $17, $17
    store   $17, [$16 + 3]
    b       be_cont.31689
be_else.31689:
    store   $18, [$16 + 2]
    load    [$15 + 1], $17
    finv    $17, $17
    store   $17, [$16 + 3]
be_cont.31689:
be_cont.31685:
    load    [$15 + 2], $17
    fcmp    $17, $zero
    bne     be_else.31690
be_then.31690:
    store   $zero, [$16 + 5]
.count storer
    add     $12, $10, $tmp
    sub     $10, 1, $3
    store   $16, [$tmp + 0]
.count move_args
    mov     $11, $2
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31679
be_else.31690:
    load    [$13 + 6], $18
    fcmp    $zero, $17
    bg      ble_else.31691
ble_then.31691:
    li      0, $17
    b       ble_cont.31691
ble_else.31691:
    li      1, $17
ble_cont.31691:
    cmp     $18, 0
    be      bne_cont.31692
bne_then.31692:
    cmp     $17, 0
    bne     be_else.31693
be_then.31693:
    li      1, $17
    b       be_cont.31693
be_else.31693:
    li      0, $17
be_cont.31693:
bne_cont.31692:
    load    [$13 + 4], $18
    cmp     $17, 0
    load    [$18 + 2], $18
    bne     be_else.31694
be_then.31694:
    fneg    $18, $17
    b       be_cont.31694
be_else.31694:
    mov     $18, $17
be_cont.31694:
    store   $17, [$16 + 4]
    load    [$15 + 2], $17
.count storer
    add     $12, $10, $tmp
    sub     $10, 1, $3
    finv    $17, $17
.count move_args
    mov     $11, $2
    store   $17, [$16 + 5]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31679
be_else.31679:
    cmp     $14, 2                      # |        150 |        156 |          0 |          1 |          0 |          0 |
    bne     be_else.31695               # |        150 |        150 |          0 |          0 |          0 |          0 |
be_then.31695:
    li      4, $2                       # |        150 |        150 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        150 |        150 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $17              # |        150 |        156 |          0 |          1 |          0 |          0 |
    load    [$13 + 4], $18              # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$15 + 0], $20              # |        150 |        222 |          0 |          0 |         12 |          0 |
    load    [$17 + 0], $17              # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$18 + 1], $18              # |        150 |        168 |          0 |          0 |          3 |          0 |
    load    [$19 + 2], $19              # |        150 |        150 |          0 |          0 |          0 |          0 |
    fmul    $20, $17, $17               # |        150 |        150 |          0 |          0 |          0 |          0 |
    load    [$15 + 1], $20              # |        150 |        168 |          0 |          1 |          2 |          0 |
.count move_args
    mov     $11, $2                     # |        150 |        150 |          0 |          0 |          0 |          0 |
    sub     $10, 1, $3                  # |        150 |        150 |          0 |          0 |          0 |          0 |
    fmul    $20, $18, $18               # |        150 |        150 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $10, $tmp              # |        150 |        150 |          0 |          0 |          0 |          0 |
    fadd    $17, $18, $17               # |        150 |        600 |        450 |          0 |          0 |          0 |
    load    [$15 + 2], $18              # |        150 |        270 |          0 |          0 |         20 |          0 |
    fmul    $18, $19, $18               # |        150 |        410 |        260 |          0 |          0 |          0 |
    fadd    $17, $18, $17               # |        150 |        752 |        596 |          1 |          0 |          0 |
    fcmp    $17, $zero                  # |        150 |        750 |        600 |          0 |          0 |          0 |
    bg      ble_else.31696              # |        150 |        246 |          0 |          0 |          0 |         48 |
ble_then.31696:
    store   $zero, [$16 + 0]            # |         80 |         80 |          0 |          0 |          0 |          0 |
    store   $16, [$tmp + 0]             # |         80 |         80 |          0 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |         80 |         80 |          0 |          0 |          0 |          0 |
    b       be_cont.31695               # |         80 |         88 |          0 |          0 |          0 |          4 |
ble_else.31696:
    finv    $17, $17                    # |         70 |         70 |          0 |          0 |          0 |          0 |
    fneg    $17, $18                    # |         70 |        352 |        276 |          1 |          0 |          0 |
    store   $18, [$16 + 0]              # |         70 |        140 |         70 |          0 |          0 |          0 |
    load    [$13 + 4], $18              # |         70 |         76 |          0 |          0 |          1 |          0 |
    load    [$18 + 0], $18              # |         70 |        208 |        138 |          0 |          0 |          0 |
    fmul    $18, $17, $18               # |         70 |        210 |        140 |          0 |          0 |          0 |
    fneg    $18, $18                    # |         70 |        350 |        280 |          0 |          0 |          0 |
    store   $18, [$16 + 1]              # |         70 |        140 |         70 |          0 |          0 |          0 |
    load    [$13 + 4], $18              # |         70 |         70 |          0 |          0 |          0 |          0 |
    load    [$18 + 1], $18              # |         70 |        214 |        138 |          1 |          0 |          0 |
    fmul    $18, $17, $18               # |         70 |        210 |        140 |          0 |          0 |          0 |
    fneg    $18, $18                    # |         70 |        350 |        280 |          0 |          0 |          0 |
    store   $18, [$16 + 2]              # |         70 |        140 |         70 |          0 |          0 |          0 |
    load    [$13 + 4], $18              # |         70 |         70 |          0 |          0 |          0 |          0 |
    load    [$18 + 2], $18              # |         70 |        210 |        140 |          0 |          0 |          0 |
    fmul    $18, $17, $17               # |         70 |        210 |        140 |          0 |          0 |          0 |
    fneg    $17, $17                    # |         70 |        350 |        280 |          0 |          0 |          0 |
    store   $17, [$16 + 3]              # |         70 |        145 |         69 |          1 |          0 |          0 |
    store   $16, [$tmp + 0]             # |         70 |         70 |          0 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |         70 |         70 |          0 |          0 |          0 |          0 |
    b       be_cont.31695               # |         70 |         78 |          0 |          0 |          0 |          4 |
be_else.31695:
    li      5, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $16
    load    [$13 + 3], $17
    load    [$13 + 4], $18
    load    [$13 + 4], $19
    load    [$13 + 4], $20
    load    [$15 + 0], $21
    load    [$15 + 1], $22
    load    [$15 + 2], $23
    fmul    $21, $21, $24
    load    [$18 + 0], $18
    load    [$19 + 1], $19
    load    [$20 + 2], $20
    cmp     $17, 0
    fmul    $24, $18, $18
    fmul    $22, $22, $24
    fmul    $24, $19, $19
    fadd    $18, $19, $18
    fmul    $23, $23, $19
    fmul    $19, $20, $19
    fadd    $18, $19, $18
    be      bne_cont.31697
bne_then.31697:
    fmul    $22, $23, $19
    load    [$13 + 9], $20
    load    [$20 + 0], $20
    fmul    $19, $20, $19
    load    [$13 + 9], $20
    load    [$20 + 1], $20
    fadd    $18, $19, $18
    fmul    $23, $21, $19
    fmul    $19, $20, $19
    load    [$13 + 9], $20
    load    [$20 + 2], $20
    fadd    $18, $19, $18
    fmul    $21, $22, $19
    fmul    $19, $20, $19
    fadd    $18, $19, $18
bne_cont.31697:
    store   $18, [$16 + 0]
    load    [$13 + 4], $19
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$15 + 0], $22
    load    [$19 + 0], $19
    load    [$20 + 1], $20
    load    [$15 + 2], $23
    fmul    $22, $19, $19
    load    [$15 + 1], $22
    load    [$21 + 2], $21
    cmp     $17, 0
    fmul    $22, $20, $20
    fmul    $23, $21, $21
    fneg    $19, $19
.count storer
    add     $12, $10, $tmp
    sub     $10, 1, $3
    fneg    $20, $20
    fneg    $21, $21
.count move_args
    mov     $11, $2
    bne     be_else.31698
be_then.31698:
    store   $19, [$16 + 1]
    store   $20, [$16 + 2]
    store   $21, [$16 + 3]
    fcmp    $18, $zero
    bne     be_else.31699
be_then.31699:
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31698
be_else.31699:
    finv    $18, $17
    store   $17, [$16 + 4]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31698
be_else.31698:
    load    [$13 + 9], $17
    load    [$13 + 9], $24
    fcmp    $18, $zero
    load    [$17 + 1], $17
    load    [$24 + 2], $24
    fmul    $23, $17, $23
    fmul    $22, $24, $22
    fadd    $23, $22, $22
    fmul    $22, $39, $22
    fsub    $19, $22, $19
    store   $19, [$16 + 1]
    load    [$13 + 9], $19
    load    [$15 + 2], $22
    load    [$15 + 0], $23
    load    [$19 + 0], $19
    fmul    $23, $24, $23
    fmul    $22, $19, $22
    fadd    $22, $23, $22
    fmul    $22, $39, $22
    fsub    $20, $22, $20
    store   $20, [$16 + 2]
    load    [$15 + 1], $20
    fmul    $20, $19, $19
    load    [$15 + 0], $20
    fmul    $20, $17, $17
    fadd    $19, $17, $17
    fmul    $17, $39, $17
    fsub    $21, $17, $17
    store   $17, [$16 + 3]
    bne     be_else.31700
be_then.31700:
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31700
be_else.31700:
    finv    $18, $17
    store   $17, [$16 + 4]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
be_cont.31700:
be_cont.31698:
be_cont.31695:
be_cont.31679:
bge_cont.31678:
    load    [$sp + 1], $10              # |        150 |        162 |          0 |          1 |          1 |          0 |
    sub     $10, 1, $10                 # |        150 |        448 |        298 |          0 |          0 |          0 |
    cmp     $10, 0                      # |        150 |        300 |        150 |          0 |          0 |          0 |
    bl      bge_else.31701              # |        150 |        154 |          0 |          0 |          0 |          2 |
bge_then.31701:
    store   $10, [$sp + 2]              # |        149 |        149 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $11                 # |        149 |        149 |          0 |          0 |          0 |          0 |
    load    [$sp + 0], $12              # |        149 |        155 |          0 |          0 |          1 |          0 |
    cmp     $11, 0                      # |        149 |      1,043 |          0 |        149 |          0 |          0 |
    load    [$12 + $10], $10            # |        149 |        797 |          0 |          0 |        108 |          0 |
    bl      bge_cont.31702              # |        149 |        149 |          0 |          0 |          0 |          0 |
bge_then.31702:
    load    [min_caml_objects + $11], $13# |        149 |        149 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $12              # |        149 |        875 |          0 |          0 |        121 |          0 |
    load    [$10 + 0], $15              # |        149 |        875 |          0 |          0 |        121 |          0 |
    load    [$13 + 1], $14              # |        149 |        155 |          0 |          0 |          1 |          0 |
.count move_args
    mov     $zero, $3                   # |        149 |        149 |          0 |          0 |          0 |          0 |
    cmp     $14, 1                      # |        149 |      1,043 |          0 |        149 |          0 |          0 |
    bne     be_else.31703               # |        149 |        157 |          0 |          0 |          0 |          4 |
be_then.31703:
    li      6, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $16
    load    [$15 + 0], $17
    fcmp    $17, $zero
    bne     be_else.31704
be_then.31704:
    store   $zero, [$16 + 1]
    b       be_cont.31704
be_else.31704:
    load    [$13 + 6], $18
    fcmp    $zero, $17
    bg      ble_else.31705
ble_then.31705:
    li      0, $17
    b       ble_cont.31705
ble_else.31705:
    li      1, $17
ble_cont.31705:
    cmp     $18, 0
    be      bne_cont.31706
bne_then.31706:
    cmp     $17, 0
    bne     be_else.31707
be_then.31707:
    li      1, $17
    b       be_cont.31707
be_else.31707:
    li      0, $17
be_cont.31707:
bne_cont.31706:
    load    [$13 + 4], $18
    cmp     $17, 0
    load    [$18 + 0], $18
    bne     be_else.31708
be_then.31708:
    fneg    $18, $17
    store   $17, [$16 + 0]
    load    [$15 + 0], $17
    finv    $17, $17
    store   $17, [$16 + 1]
    b       be_cont.31708
be_else.31708:
    store   $18, [$16 + 0]
    load    [$15 + 0], $17
    finv    $17, $17
    store   $17, [$16 + 1]
be_cont.31708:
be_cont.31704:
    load    [$15 + 1], $17
    fcmp    $17, $zero
    bne     be_else.31709
be_then.31709:
    store   $zero, [$16 + 3]
    b       be_cont.31709
be_else.31709:
    load    [$13 + 6], $18
    fcmp    $zero, $17
    bg      ble_else.31710
ble_then.31710:
    li      0, $17
    b       ble_cont.31710
ble_else.31710:
    li      1, $17
ble_cont.31710:
    cmp     $18, 0
    be      bne_cont.31711
bne_then.31711:
    cmp     $17, 0
    bne     be_else.31712
be_then.31712:
    li      1, $17
    b       be_cont.31712
be_else.31712:
    li      0, $17
be_cont.31712:
bne_cont.31711:
    load    [$13 + 4], $18
    cmp     $17, 0
    load    [$18 + 1], $18
    bne     be_else.31713
be_then.31713:
    fneg    $18, $17
    store   $17, [$16 + 2]
    load    [$15 + 1], $17
    finv    $17, $17
    store   $17, [$16 + 3]
    b       be_cont.31713
be_else.31713:
    store   $18, [$16 + 2]
    load    [$15 + 1], $17
    finv    $17, $17
    store   $17, [$16 + 3]
be_cont.31713:
be_cont.31709:
    load    [$15 + 2], $17
    fcmp    $17, $zero
    bne     be_else.31714
be_then.31714:
    store   $zero, [$16 + 5]
.count storer
    add     $12, $11, $tmp
    sub     $11, 1, $3
    store   $16, [$tmp + 0]
.count move_args
    mov     $10, $2
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31703
be_else.31714:
    load    [$13 + 6], $18
    load    [$13 + 4], $19
    fcmp    $zero, $17
    bg      ble_else.31715
ble_then.31715:
    li      0, $17
    b       ble_cont.31715
ble_else.31715:
    li      1, $17
ble_cont.31715:
    cmp     $18, 0
    be      bne_cont.31716
bne_then.31716:
    cmp     $17, 0
    bne     be_else.31717
be_then.31717:
    li      1, $17
    b       be_cont.31717
be_else.31717:
    li      0, $17
be_cont.31717:
bne_cont.31716:
    load    [$19 + 2], $18
    cmp     $17, 0
.count move_args
    mov     $10, $2
    sub     $11, 1, $3
.count storer
    add     $12, $11, $tmp
    bne     be_else.31718
be_then.31718:
    fneg    $18, $17
    store   $17, [$16 + 4]
    load    [$15 + 2], $17
    finv    $17, $17
    store   $17, [$16 + 5]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31703
be_else.31718:
    store   $18, [$16 + 4]
    load    [$15 + 2], $17
    finv    $17, $17
    store   $17, [$16 + 5]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31703
be_else.31703:
    cmp     $14, 2                      # |        149 |        155 |          0 |          1 |          0 |          0 |
    bne     be_else.31719               # |        149 |        149 |          0 |          0 |          0 |          0 |
be_then.31719:
    li      4, $2                       # |        149 |        149 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        149 |        149 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |        149 |        149 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $17              # |        149 |        149 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $18              # |        149 |        155 |          0 |          1 |          0 |          0 |
    load    [$13 + 4], $19              # |        149 |        149 |          0 |          0 |          0 |          0 |
    load    [$15 + 0], $20              # |        149 |        191 |          0 |          0 |          7 |          0 |
    load    [$17 + 0], $17              # |        149 |        149 |          0 |          0 |          0 |          0 |
    load    [$18 + 1], $18              # |        149 |        155 |          0 |          0 |          1 |          0 |
    load    [$19 + 2], $19              # |        149 |        149 |          0 |          0 |          0 |          0 |
    fmul    $20, $17, $17               # |        149 |        149 |          0 |          0 |          0 |          0 |
    load    [$15 + 1], $20              # |        149 |        167 |          0 |          0 |          3 |          0 |
.count move_args
    mov     $10, $2                     # |        149 |        155 |          0 |          1 |          0 |          0 |
    sub     $11, 1, $3                  # |        149 |        149 |          0 |          0 |          0 |          0 |
    fmul    $20, $18, $18               # |        149 |        149 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $11, $tmp              # |        149 |        149 |          0 |          0 |          0 |          0 |
    fadd    $17, $18, $17               # |        149 |        596 |        447 |          0 |          0 |          0 |
    load    [$15 + 2], $18              # |        149 |        275 |          0 |          0 |         21 |          0 |
    fmul    $18, $19, $18               # |        149 |        405 |        256 |          0 |          0 |          0 |
    fadd    $17, $18, $17               # |        149 |        745 |        596 |          0 |          0 |          0 |
    fcmp    $17, $zero                  # |        149 |        747 |        592 |          1 |          0 |          0 |
    bg      ble_else.31720              # |        149 |        249 |          0 |          0 |          0 |         50 |
ble_then.31720:
    store   $zero, [$16 + 0]            # |         69 |         69 |          0 |          0 |          0 |          0 |
    store   $16, [$tmp + 0]             # |         69 |         69 |          0 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |         69 |         69 |          0 |          0 |          0 |          0 |
    b       be_cont.31719               # |         69 |         83 |          0 |          0 |          0 |          7 |
ble_else.31720:
    finv    $17, $17                    # |         80 |         80 |          0 |          0 |          0 |          0 |
    fneg    $17, $18                    # |         80 |        400 |        320 |          0 |          0 |          0 |
    store   $18, [$16 + 0]              # |         80 |        165 |         79 |          1 |          0 |          0 |
    load    [$13 + 4], $18              # |         80 |         86 |          0 |          0 |          1 |          0 |
    load    [$18 + 0], $18              # |         80 |        238 |        158 |          0 |          0 |          0 |
    fmul    $18, $17, $18               # |         80 |        240 |        160 |          0 |          0 |          0 |
    fneg    $18, $18                    # |         80 |        400 |        320 |          0 |          0 |          0 |
    store   $18, [$16 + 1]              # |         80 |        160 |         80 |          0 |          0 |          0 |
    load    [$13 + 4], $18              # |         80 |         80 |          0 |          0 |          0 |          0 |
    load    [$18 + 1], $18              # |         80 |        240 |        160 |          0 |          0 |          0 |
    fmul    $18, $17, $18               # |         80 |        244 |        158 |          1 |          0 |          0 |
    fneg    $18, $18                    # |         80 |        400 |        320 |          0 |          0 |          0 |
    store   $18, [$16 + 2]              # |         80 |        160 |         80 |          0 |          0 |          0 |
    load    [$13 + 4], $18              # |         80 |         80 |          0 |          0 |          0 |          0 |
    load    [$18 + 2], $18              # |         80 |        240 |        160 |          0 |          0 |          0 |
    fmul    $18, $17, $17               # |         80 |        240 |        160 |          0 |          0 |          0 |
    fneg    $17, $17                    # |         80 |        400 |        320 |          0 |          0 |          0 |
    store   $17, [$16 + 3]              # |         80 |        160 |         80 |          0 |          0 |          0 |
    store   $16, [$tmp + 0]             # |         80 |         86 |          0 |          1 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |         80 |         80 |          0 |          0 |          0 |          0 |
    b       be_cont.31719               # |         80 |         84 |          0 |          0 |          0 |          2 |
be_else.31719:
    li      5, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $16
    load    [$13 + 3], $17
    load    [$13 + 4], $18
    load    [$13 + 4], $19
    load    [$13 + 4], $20
    load    [$15 + 0], $21
    load    [$15 + 1], $22
    load    [$15 + 2], $23
    fmul    $21, $21, $24
    load    [$18 + 0], $18
    load    [$19 + 1], $19
    load    [$20 + 2], $20
    cmp     $17, 0
    fmul    $24, $18, $18
    fmul    $22, $22, $24
    fmul    $24, $19, $19
    fadd    $18, $19, $18
    fmul    $23, $23, $19
    fmul    $19, $20, $19
    fadd    $18, $19, $18
    be      bne_cont.31721
bne_then.31721:
    fmul    $22, $23, $19
    load    [$13 + 9], $20
    load    [$20 + 0], $20
    fmul    $19, $20, $19
    load    [$13 + 9], $20
    load    [$20 + 1], $20
    fadd    $18, $19, $18
    fmul    $23, $21, $19
    fmul    $19, $20, $19
    load    [$13 + 9], $20
    load    [$20 + 2], $20
    fadd    $18, $19, $18
    fmul    $21, $22, $19
    fmul    $19, $20, $19
    fadd    $18, $19, $18
bne_cont.31721:
    store   $18, [$16 + 0]
    load    [$13 + 4], $19
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$15 + 0], $22
    load    [$19 + 0], $19
    load    [$20 + 1], $20
    load    [$15 + 2], $23
    fmul    $22, $19, $19
    load    [$15 + 1], $22
    load    [$21 + 2], $21
    cmp     $17, 0
    fmul    $22, $20, $20
    fmul    $23, $21, $21
    fneg    $19, $19
.count storer
    add     $12, $11, $tmp
    sub     $11, 1, $3
    fneg    $20, $20
    fneg    $21, $21
.count move_args
    mov     $10, $2
    bne     be_else.31722
be_then.31722:
    store   $19, [$16 + 1]
    store   $20, [$16 + 2]
    store   $21, [$16 + 3]
    fcmp    $18, $zero
    bne     be_else.31723
be_then.31723:
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31722
be_else.31723:
    finv    $18, $17
    store   $17, [$16 + 4]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31722
be_else.31722:
    load    [$13 + 9], $17
    load    [$13 + 9], $24
    fcmp    $18, $zero
    load    [$17 + 1], $17
    load    [$24 + 2], $24
    fmul    $23, $17, $23
    fmul    $22, $24, $22
    fadd    $23, $22, $22
    fmul    $22, $39, $22
    fsub    $19, $22, $19
    store   $19, [$16 + 1]
    load    [$13 + 9], $19
    load    [$15 + 2], $22
    load    [$15 + 0], $23
    load    [$19 + 0], $19
    fmul    $23, $24, $23
    fmul    $22, $19, $22
    fadd    $22, $23, $22
    fmul    $22, $39, $22
    fsub    $20, $22, $20
    store   $20, [$16 + 2]
    load    [$15 + 1], $20
    fmul    $20, $19, $19
    load    [$15 + 0], $20
    fmul    $20, $17, $17
    fadd    $19, $17, $17
    fmul    $17, $39, $17
    fsub    $21, $17, $17
    store   $17, [$16 + 3]
    bne     be_else.31724
be_then.31724:
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31724
be_else.31724:
    finv    $18, $17
    store   $17, [$16 + 4]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
be_cont.31724:
be_cont.31722:
be_cont.31719:
be_cont.31703:
bge_cont.31702:
    load    [$sp + 2], $16              # |        149 |      1,055 |          0 |        149 |          2 |          0 |
    sub     $16, 1, $16                 # |        149 |        443 |        294 |          0 |          0 |          0 |
    cmp     $16, 0                      # |        149 |        298 |        149 |          0 |          0 |          0 |
    bl      bge_else.31725              # |        149 |        153 |          0 |          0 |          0 |          2 |
bge_then.31725:
    sub     $41, 1, $3                  # |        148 |        148 |          0 |          0 |          0 |          0 |
    load    [$sp + 0], $17              # |        148 |        148 |          0 |          0 |          0 |          0 |
    load    [$17 + $16], $2             # |        148 |      1,050 |        296 |          0 |        101 |          0 |
    call    iter_setup_dirvec_constants.2826# |        148 |        148 |          0 |          0 |          0 |          0 |
    sub     $16, 1, $10                 # |        148 |      1,036 |          0 |        148 |          0 |          0 |
    cmp     $10, 0                      # |        148 |        296 |        148 |          0 |          0 |          0 |
    bl      bge_else.31726              # |        148 |        152 |          0 |          0 |          0 |          2 |
bge_then.31726:
    sub     $41, 1, $11                 # |        147 |        147 |          0 |          0 |          0 |          0 |
    cmp     $11, 0                      # |        147 |        294 |        147 |          0 |          0 |          0 |
    bl      bge_else.31727              # |        147 |        161 |          0 |          0 |          0 |          7 |
bge_then.31727:
    load    [$17 + $10], $12            # |        147 |        747 |          0 |          0 |        100 |          0 |
    load    [min_caml_objects + $11], $14# |        147 |        159 |          0 |          0 |          2 |          0 |
.count move_args
    mov     $zero, $3                   # |        147 |      1,029 |          0 |        147 |          0 |          0 |
    load    [$12 + 1], $13              # |        147 |        885 |          0 |          0 |        123 |          0 |
    load    [$14 + 1], $15              # |        147 |        153 |          0 |          0 |          1 |          0 |
    load    [$12 + 0], $16              # |        147 |        897 |          0 |          0 |        125 |          0 |
    store   $10, [$sp + 3]              # |        147 |        147 |          0 |          0 |          0 |          0 |
    cmp     $15, 1                      # |        147 |        147 |          0 |          0 |          0 |          0 |
    bne     be_else.31728               # |        147 |        159 |          0 |          0 |          0 |          6 |
be_then.31728:
    li      6, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $18
    load    [$16 + 0], $19
    fcmp    $19, $zero
    bne     be_else.31729
be_then.31729:
    store   $zero, [$18 + 1]
    b       be_cont.31729
be_else.31729:
    load    [$14 + 6], $20
    fcmp    $zero, $19
    bg      ble_else.31730
ble_then.31730:
    li      0, $19
    b       ble_cont.31730
ble_else.31730:
    li      1, $19
ble_cont.31730:
    cmp     $20, 0
    be      bne_cont.31731
bne_then.31731:
    cmp     $19, 0
    bne     be_else.31732
be_then.31732:
    li      1, $19
    b       be_cont.31732
be_else.31732:
    li      0, $19
be_cont.31732:
bne_cont.31731:
    load    [$14 + 4], $20
    cmp     $19, 0
    load    [$20 + 0], $20
    bne     be_else.31733
be_then.31733:
    fneg    $20, $19
    store   $19, [$18 + 0]
    load    [$16 + 0], $19
    finv    $19, $19
    store   $19, [$18 + 1]
    b       be_cont.31733
be_else.31733:
    store   $20, [$18 + 0]
    load    [$16 + 0], $19
    finv    $19, $19
    store   $19, [$18 + 1]
be_cont.31733:
be_cont.31729:
    load    [$16 + 1], $19
    fcmp    $19, $zero
    bne     be_else.31734
be_then.31734:
    store   $zero, [$18 + 3]
    b       be_cont.31734
be_else.31734:
    load    [$14 + 6], $20
    fcmp    $zero, $19
    bg      ble_else.31735
ble_then.31735:
    li      0, $19
    b       ble_cont.31735
ble_else.31735:
    li      1, $19
ble_cont.31735:
    cmp     $20, 0
    be      bne_cont.31736
bne_then.31736:
    cmp     $19, 0
    bne     be_else.31737
be_then.31737:
    li      1, $19
    b       be_cont.31737
be_else.31737:
    li      0, $19
be_cont.31737:
bne_cont.31736:
    load    [$14 + 4], $20
    cmp     $19, 0
    load    [$20 + 1], $20
    bne     be_else.31738
be_then.31738:
    fneg    $20, $19
    store   $19, [$18 + 2]
    load    [$16 + 1], $19
    finv    $19, $19
    store   $19, [$18 + 3]
    b       be_cont.31738
be_else.31738:
    store   $20, [$18 + 2]
    load    [$16 + 1], $19
    finv    $19, $19
    store   $19, [$18 + 3]
be_cont.31738:
be_cont.31734:
    load    [$16 + 2], $19
    fcmp    $19, $zero
    bne     be_else.31739
be_then.31739:
    store   $zero, [$18 + 5]
    mov     $18, $16
    b       be_cont.31739
be_else.31739:
    load    [$14 + 6], $20
    load    [$14 + 4], $21
    fcmp    $zero, $19
    bg      ble_else.31740
ble_then.31740:
    li      0, $19
    b       ble_cont.31740
ble_else.31740:
    li      1, $19
ble_cont.31740:
    cmp     $20, 0
    be      bne_cont.31741
bne_then.31741:
    cmp     $19, 0
    bne     be_else.31742
be_then.31742:
    li      1, $19
    b       be_cont.31742
be_else.31742:
    li      0, $19
be_cont.31742:
bne_cont.31741:
    load    [$21 + 2], $20
    cmp     $19, 0
    bne     be_else.31743
be_then.31743:
    fneg    $20, $19
    store   $19, [$18 + 4]
    load    [$16 + 2], $16
    finv    $16, $16
    store   $16, [$18 + 5]
    mov     $18, $16
    b       be_cont.31743
be_else.31743:
    store   $20, [$18 + 4]
    load    [$16 + 2], $16
    finv    $16, $16
    store   $16, [$18 + 5]
    mov     $18, $16
be_cont.31743:
be_cont.31739:
.count storer
    add     $13, $11, $tmp
    sub     $11, 1, $3
    store   $16, [$tmp + 0]
.count move_args
    mov     $12, $2
    call    iter_setup_dirvec_constants.2826
.count stack_move
    add     $sp, 4, $sp
.count move_args
    mov     $17, $2
    load    [$sp - 1], $1
    sub     $1, 1, $3
    b       init_dirvec_constants.3044
be_else.31728:
    cmp     $15, 2                      # |        147 |      1,029 |          0 |        147 |          0 |          0 |
    bne     be_else.31744               # |        147 |      1,029 |          0 |        147 |          0 |          0 |
be_then.31744:
    li      4, $2                       # |        147 |        147 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        147 |        147 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |        147 |        147 |          0 |          0 |          0 |          0 |
    load    [$14 + 4], $19              # |        147 |        147 |          0 |          0 |          0 |          0 |
    load    [$14 + 4], $20              # |        147 |        147 |          0 |          0 |          0 |          0 |
    load    [$14 + 4], $21              # |        147 |        147 |          0 |          0 |          0 |          0 |
    load    [$16 + 0], $22              # |        147 |        195 |          0 |          0 |          8 |          0 |
    load    [$19 + 0], $19              # |        147 |      1,029 |          0 |        147 |          0 |          0 |
    load    [$20 + 1], $20              # |        147 |        153 |          0 |          0 |          1 |          0 |
.count storer
    add     $13, $11, $tmp              # |        147 |        147 |          0 |          0 |          0 |          0 |
    fmul    $22, $19, $19               # |        147 |        147 |          0 |          0 |          0 |          0 |
    load    [$16 + 1], $22              # |        147 |        153 |          0 |          0 |          1 |          0 |
    load    [$16 + 2], $16              # |        147 |        261 |          0 |          0 |         19 |          0 |
    fmul    $22, $20, $20               # |        147 |        274 |        127 |          0 |          0 |          0 |
    fadd    $19, $20, $19               # |        147 |        735 |        588 |          0 |          0 |          0 |
    load    [$21 + 2], $20              # |        147 |      1,029 |          0 |        147 |          0 |          0 |
    fmul    $16, $20, $16               # |        147 |        441 |        294 |          0 |          0 |          0 |
    fadd    $19, $16, $16               # |        147 |        735 |        588 |          0 |          0 |          0 |
    fcmp    $16, $zero                  # |        147 |        735 |        588 |          0 |          0 |          0 |
    bg      ble_else.31745              # |        147 |        247 |          0 |          0 |          0 |         50 |
ble_then.31745:
    store   $zero, [$18 + 0]            # |         68 |         68 |          0 |          0 |          0 |          0 |
    store   $18, [$tmp + 0]             # |         68 |         68 |          0 |          0 |          0 |          0 |
    b       be_cont.31744               # |         68 |         72 |          0 |          0 |          0 |          2 |
ble_else.31745:
    finv    $16, $16                    # |         79 |        553 |          0 |         79 |          0 |          0 |
    fneg    $16, $19                    # |         79 |        395 |        316 |          0 |          0 |          0 |
    store   $19, [$18 + 0]              # |         79 |        158 |         79 |          0 |          0 |          0 |
    load    [$14 + 4], $19              # |         79 |         79 |          0 |          0 |          0 |          0 |
    load    [$19 + 0], $19              # |         79 |        237 |        158 |          0 |          0 |          0 |
    fmul    $19, $16, $19               # |         79 |        237 |        158 |          0 |          0 |          0 |
    fneg    $19, $19                    # |         79 |        395 |        316 |          0 |          0 |          0 |
    store   $19, [$18 + 1]              # |         79 |        158 |         79 |          0 |          0 |          0 |
    load    [$14 + 4], $19              # |         79 |        553 |          0 |         79 |          0 |          0 |
    load    [$19 + 1], $19              # |         79 |        237 |        158 |          0 |          0 |          0 |
    fmul    $19, $16, $19               # |         79 |        237 |        158 |          0 |          0 |          0 |
    fneg    $19, $19                    # |         79 |        395 |        316 |          0 |          0 |          0 |
    store   $19, [$18 + 2]              # |         79 |        158 |         79 |          0 |          0 |          0 |
    load    [$14 + 4], $19              # |         79 |         79 |          0 |          0 |          0 |          0 |
    load    [$19 + 2], $19              # |         79 |        237 |        158 |          0 |          0 |          0 |
    fmul    $19, $16, $16               # |         79 |        237 |        158 |          0 |          0 |          0 |
    fneg    $16, $16                    # |         79 |        553 |          0 |         79 |          0 |          0 |
    store   $16, [$18 + 3]              # |         79 |        158 |         79 |          0 |          0 |          0 |
    store   $18, [$tmp + 0]             # |         79 |         79 |          0 |          0 |          0 |          0 |
    b       be_cont.31744               # |         79 |         83 |          0 |          0 |          0 |          2 |
be_else.31744:
    li      5, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $18
    load    [$14 + 3], $19
    load    [$14 + 4], $20
    load    [$14 + 4], $21
    load    [$14 + 4], $22
    load    [$16 + 0], $23
    load    [$16 + 1], $24
    load    [$16 + 2], $25
    fmul    $23, $23, $26
    load    [$20 + 0], $20
    load    [$21 + 1], $21
    load    [$22 + 2], $22
    cmp     $19, 0
    fmul    $26, $20, $20
    fmul    $24, $24, $26
    fmul    $26, $21, $21
    fadd    $20, $21, $20
    fmul    $25, $25, $21
    fmul    $21, $22, $21
    fadd    $20, $21, $20
    be      bne_cont.31746
bne_then.31746:
    fmul    $24, $25, $21
    load    [$14 + 9], $22
    load    [$22 + 0], $22
    fmul    $21, $22, $21
    load    [$14 + 9], $22
    load    [$22 + 1], $22
    fadd    $20, $21, $20
    fmul    $25, $23, $21
    fmul    $21, $22, $21
    load    [$14 + 9], $22
    load    [$22 + 2], $22
    fadd    $20, $21, $20
    fmul    $23, $24, $21
    fmul    $21, $22, $21
    fadd    $20, $21, $20
bne_cont.31746:
    store   $20, [$18 + 0]
    load    [$14 + 4], $21
    load    [$14 + 4], $22
    load    [$14 + 4], $23
    load    [$16 + 0], $24
    load    [$21 + 0], $21
    load    [$22 + 1], $22
    load    [$16 + 2], $25
    fmul    $24, $21, $21
    load    [$16 + 1], $24
    load    [$23 + 2], $23
    cmp     $19, 0
    fmul    $24, $22, $22
    fmul    $25, $23, $23
    fneg    $21, $21
.count storer
    add     $13, $11, $tmp
    fneg    $22, $22
    fneg    $23, $23
    bne     be_else.31747
be_then.31747:
    store   $21, [$18 + 1]
    store   $22, [$18 + 2]
    store   $23, [$18 + 3]
    fcmp    $20, $zero
    bne     be_else.31748
be_then.31748:
    store   $18, [$tmp + 0]
    b       be_cont.31747
be_else.31748:
    finv    $20, $16
    store   $16, [$18 + 4]
    store   $18, [$tmp + 0]
    b       be_cont.31747
be_else.31747:
    load    [$14 + 9], $19
    load    [$14 + 9], $26
    fcmp    $20, $zero
    load    [$19 + 1], $19
    load    [$26 + 2], $26
    fmul    $25, $19, $25
    fmul    $24, $26, $24
    fadd    $25, $24, $24
    fmul    $24, $39, $24
    fsub    $21, $24, $21
    store   $21, [$18 + 1]
    load    [$14 + 9], $21
    load    [$16 + 2], $24
    load    [$16 + 0], $25
    load    [$21 + 0], $21
    fmul    $25, $26, $25
    fmul    $24, $21, $24
    fadd    $24, $25, $24
    fmul    $24, $39, $24
    fsub    $22, $24, $22
    store   $22, [$18 + 2]
    load    [$16 + 1], $22
    load    [$16 + 0], $16
    fmul    $22, $21, $21
    fmul    $16, $19, $16
    fadd    $21, $16, $16
    fmul    $16, $39, $16
    fsub    $23, $16, $16
    store   $16, [$18 + 3]
    bne     be_else.31749
be_then.31749:
    store   $18, [$tmp + 0]
    b       be_cont.31749
be_else.31749:
    finv    $20, $16
    store   $16, [$18 + 4]
    store   $18, [$tmp + 0]
be_cont.31749:
be_cont.31747:
be_cont.31744:
    sub     $11, 1, $3                  # |        147 |      1,029 |          0 |        147 |          0 |          0 |
.count move_args
    mov     $12, $2                     # |        147 |        147 |          0 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |        147 |        147 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 4, $sp                 # |        147 |      1,029 |          0 |        147 |          0 |          0 |
.count move_args
    mov     $17, $2                     # |        147 |        147 |          0 |          0 |          0 |          0 |
    load    [$sp - 1], $1               # |        147 |      1,053 |          0 |        147 |          4 |          0 |
    sub     $1, 1, $3                   # |        147 |        433 |        286 |          0 |          0 |          0 |
    b       init_dirvec_constants.3044  # |        147 |        155 |          0 |          0 |          0 |          4 |
bge_else.31727:
.count stack_move
    add     $sp, 4, $sp
    sub     $10, 1, $3
.count move_args
    mov     $17, $2
    b       init_dirvec_constants.3044
bge_else.31726:
.count stack_move
    add     $sp, 4, $sp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    ret                                 # |          1 |          7 |          0 |          1 |          0 |          0 |
bge_else.31725:
.count stack_move
    add     $sp, 4, $sp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_else.31701:
.count stack_move
    add     $sp, 4, $sp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_else.31677:
    ret                                 # |          2 |         14 |          0 |          2 |          0 |          0 |
.end init_dirvec_constants

######################################################################
.begin init_vecset_constants
init_vecset_constants.3047:
    cmp     $2, 0                       # |          2 |          2 |          0 |          0 |          0 |          0 |
    bl      bge_else.31750              # |          2 |          4 |          0 |          0 |          0 |          1 |
bge_then.31750:
.count stack_move
    sub     $sp, 5, $sp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    sub     $41, 1, $10                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 0]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + $2], $11# |          1 |          7 |          0 |          0 |          1 |          0 |
    cmp     $10, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$sp + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$11 + 119], $11            # |          1 |          7 |          0 |          0 |          1 |          0 |
    bl      bge_cont.31751              # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_then.31751:
    load    [min_caml_objects + $10], $13# |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$11 + 1], $12              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$11 + 0], $15              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 1], $14              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $14, 1                      # |          1 |          2 |          1 |          0 |          0 |          0 |
    bne     be_else.31752               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.31752:
    li      6, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $16
    load    [$15 + 0], $17
    fcmp    $17, $zero
    bne     be_else.31753
be_then.31753:
    store   $zero, [$16 + 1]
    b       be_cont.31753
be_else.31753:
    load    [$13 + 6], $18
    fcmp    $zero, $17
    bg      ble_else.31754
ble_then.31754:
    li      0, $17
    b       ble_cont.31754
ble_else.31754:
    li      1, $17
ble_cont.31754:
    cmp     $18, 0
    be      bne_cont.31755
bne_then.31755:
    cmp     $17, 0
    bne     be_else.31756
be_then.31756:
    li      1, $17
    b       be_cont.31756
be_else.31756:
    li      0, $17
be_cont.31756:
bne_cont.31755:
    load    [$13 + 4], $18
    cmp     $17, 0
    load    [$18 + 0], $18
    bne     be_else.31757
be_then.31757:
    fneg    $18, $17
    store   $17, [$16 + 0]
    load    [$15 + 0], $17
    finv    $17, $17
    store   $17, [$16 + 1]
    b       be_cont.31757
be_else.31757:
    store   $18, [$16 + 0]
    load    [$15 + 0], $17
    finv    $17, $17
    store   $17, [$16 + 1]
be_cont.31757:
be_cont.31753:
    load    [$15 + 1], $17
    fcmp    $17, $zero
    bne     be_else.31758
be_then.31758:
    store   $zero, [$16 + 3]
    b       be_cont.31758
be_else.31758:
    load    [$13 + 6], $18
    fcmp    $zero, $17
    bg      ble_else.31759
ble_then.31759:
    li      0, $17
    b       ble_cont.31759
ble_else.31759:
    li      1, $17
ble_cont.31759:
    cmp     $18, 0
    be      bne_cont.31760
bne_then.31760:
    cmp     $17, 0
    bne     be_else.31761
be_then.31761:
    li      1, $17
    b       be_cont.31761
be_else.31761:
    li      0, $17
be_cont.31761:
bne_cont.31760:
    load    [$13 + 4], $18
    cmp     $17, 0
    load    [$18 + 1], $18
    bne     be_else.31762
be_then.31762:
    fneg    $18, $17
    store   $17, [$16 + 2]
    load    [$15 + 1], $17
    finv    $17, $17
    store   $17, [$16 + 3]
    b       be_cont.31762
be_else.31762:
    store   $18, [$16 + 2]
    load    [$15 + 1], $17
    finv    $17, $17
    store   $17, [$16 + 3]
be_cont.31762:
be_cont.31758:
    load    [$15 + 2], $17
    fcmp    $17, $zero
    bne     be_else.31763
be_then.31763:
    store   $zero, [$16 + 5]
.count storer
    add     $12, $10, $tmp
    sub     $10, 1, $3
    store   $16, [$tmp + 0]
.count move_args
    mov     $11, $2
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31752
be_else.31763:
    load    [$13 + 6], $18
    load    [$13 + 4], $19
    fcmp    $zero, $17
    bg      ble_else.31764
ble_then.31764:
    li      0, $17
    b       ble_cont.31764
ble_else.31764:
    li      1, $17
ble_cont.31764:
    cmp     $18, 0
    be      bne_cont.31765
bne_then.31765:
    cmp     $17, 0
    bne     be_else.31766
be_then.31766:
    li      1, $17
    b       be_cont.31766
be_else.31766:
    li      0, $17
be_cont.31766:
bne_cont.31765:
    load    [$19 + 2], $18
    cmp     $17, 0
.count move_args
    mov     $11, $2
    sub     $10, 1, $3
.count storer
    add     $12, $10, $tmp
    bne     be_else.31767
be_then.31767:
    fneg    $18, $17
    store   $17, [$16 + 4]
    load    [$15 + 2], $17
    finv    $17, $17
    store   $17, [$16 + 5]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31752
be_else.31767:
    store   $18, [$16 + 4]
    load    [$15 + 2], $17
    finv    $17, $17
    store   $17, [$16 + 5]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31752
be_else.31752:
    cmp     $14, 2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.31768               # |          1 |          7 |          0 |          1 |          0 |          0 |
be_then.31768:
    li      4, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $17              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$15 + 0], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$17 + 0], $17              # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$18 + 1], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$19 + 2], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $20, $17, $17               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$15 + 1], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $10, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $20, $18, $18               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $10, $tmp              # |          1 |          7 |          0 |          1 |          0 |          0 |
    fadd    $17, $18, $17               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$15 + 2], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $18, $19, $18               # |          1 |          3 |          2 |          0 |          0 |          0 |
    fadd    $17, $18, $17               # |          1 |          5 |          4 |          0 |          0 |          0 |
    fcmp    $17, $zero                  # |          1 |          5 |          4 |          0 |          0 |          0 |
    bg      ble_else.31769              # |          1 |          1 |          0 |          0 |          0 |          0 |
ble_then.31769:
    store   $zero, [$16 + 0]            # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$tmp + 0]             # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          1 |          0 |          0 |          0 |          0 |
    b       be_cont.31768               # |          1 |          9 |          0 |          1 |          0 |          1 |
ble_else.31769:
    finv    $17, $17
    fneg    $17, $18
    store   $18, [$16 + 0]
    load    [$13 + 4], $18
    load    [$18 + 0], $18
    fmul    $18, $17, $18
    fneg    $18, $18
    store   $18, [$16 + 1]
    load    [$13 + 4], $18
    load    [$18 + 1], $18
    fmul    $18, $17, $18
    fneg    $18, $18
    store   $18, [$16 + 2]
    load    [$13 + 4], $18
    load    [$18 + 2], $18
    fmul    $18, $17, $17
    fneg    $17, $17
    store   $17, [$16 + 3]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31768
be_else.31768:
    li      5, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $16
    load    [$13 + 3], $17
    load    [$13 + 4], $18
    load    [$13 + 4], $19
    load    [$13 + 4], $20
    load    [$15 + 0], $21
    load    [$15 + 1], $22
    load    [$15 + 2], $23
    fmul    $21, $21, $24
    load    [$18 + 0], $18
    load    [$19 + 1], $19
    load    [$20 + 2], $20
    cmp     $17, 0
    fmul    $24, $18, $18
    fmul    $22, $22, $24
    fmul    $24, $19, $19
    fadd    $18, $19, $18
    fmul    $23, $23, $19
    fmul    $19, $20, $19
    fadd    $18, $19, $18
    be      bne_cont.31770
bne_then.31770:
    fmul    $22, $23, $19
    load    [$13 + 9], $20
    load    [$20 + 0], $20
    fmul    $19, $20, $19
    load    [$13 + 9], $20
    load    [$20 + 1], $20
    fadd    $18, $19, $18
    fmul    $23, $21, $19
    fmul    $19, $20, $19
    load    [$13 + 9], $20
    load    [$20 + 2], $20
    fadd    $18, $19, $18
    fmul    $21, $22, $19
    fmul    $19, $20, $19
    fadd    $18, $19, $18
bne_cont.31770:
    store   $18, [$16 + 0]
    load    [$13 + 4], $19
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$15 + 0], $22
    load    [$19 + 0], $19
    load    [$20 + 1], $20
    load    [$15 + 2], $23
    fmul    $22, $19, $19
    load    [$15 + 1], $22
    load    [$21 + 2], $21
    cmp     $17, 0
    fmul    $22, $20, $20
    fmul    $23, $21, $21
    fneg    $19, $19
.count storer
    add     $12, $10, $tmp
    sub     $10, 1, $3
    fneg    $20, $20
    fneg    $21, $21
.count move_args
    mov     $11, $2
    bne     be_else.31771
be_then.31771:
    store   $19, [$16 + 1]
    store   $20, [$16 + 2]
    store   $21, [$16 + 3]
    fcmp    $18, $zero
    bne     be_else.31772
be_then.31772:
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31771
be_else.31772:
    finv    $18, $17
    store   $17, [$16 + 4]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31771
be_else.31771:
    load    [$13 + 9], $17
    load    [$13 + 9], $24
    fcmp    $18, $zero
    load    [$17 + 1], $17
    load    [$24 + 2], $24
    fmul    $23, $17, $23
    fmul    $22, $24, $22
    fadd    $23, $22, $22
    fmul    $22, $39, $22
    fsub    $19, $22, $19
    store   $19, [$16 + 1]
    load    [$13 + 9], $19
    load    [$15 + 2], $22
    load    [$15 + 0], $23
    load    [$19 + 0], $19
    fmul    $23, $24, $23
    fmul    $22, $19, $22
    fadd    $22, $23, $22
    fmul    $22, $39, $22
    fsub    $20, $22, $20
    store   $20, [$16 + 2]
    load    [$15 + 1], $20
    fmul    $20, $19, $19
    load    [$15 + 0], $20
    fmul    $20, $17, $17
    fadd    $19, $17, $17
    fmul    $17, $39, $17
    fsub    $21, $17, $17
    store   $17, [$16 + 3]
    bne     be_else.31773
be_then.31773:
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31773
be_else.31773:
    finv    $18, $17
    store   $17, [$16 + 4]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
be_cont.31773:
be_cont.31771:
be_cont.31768:
be_cont.31752:
bge_cont.31751:
    sub     $41, 1, $3                  # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$sp + 1], $16              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$16 + 118], $2             # |          1 |          9 |          2 |          0 |          1 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          7 |          0 |          1 |          0 |          0 |
    sub     $41, 1, $10                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$16 + 117], $11            # |          1 |          7 |          0 |          0 |          1 |          0 |
    cmp     $10, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bl      bge_cont.31774              # |          1 |          3 |          0 |          0 |          0 |          1 |
bge_then.31774:
    load    [$11 + 1], $12              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_objects + $10], $13# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$11 + 0], $15              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$13 + 1], $14              # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $14, 1                      # |          1 |          3 |          2 |          0 |          0 |          0 |
    bne     be_else.31775               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.31775:
    li      6, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $17
    load    [$15 + 0], $18
    fcmp    $18, $zero
    bne     be_else.31776
be_then.31776:
    store   $zero, [$17 + 1]
    b       be_cont.31776
be_else.31776:
    load    [$13 + 6], $19
    fcmp    $zero, $18
    bg      ble_else.31777
ble_then.31777:
    li      0, $18
    b       ble_cont.31777
ble_else.31777:
    li      1, $18
ble_cont.31777:
    cmp     $19, 0
    be      bne_cont.31778
bne_then.31778:
    cmp     $18, 0
    bne     be_else.31779
be_then.31779:
    li      1, $18
    b       be_cont.31779
be_else.31779:
    li      0, $18
be_cont.31779:
bne_cont.31778:
    load    [$13 + 4], $19
    cmp     $18, 0
    load    [$19 + 0], $19
    bne     be_else.31780
be_then.31780:
    fneg    $19, $18
    store   $18, [$17 + 0]
    load    [$15 + 0], $18
    finv    $18, $18
    store   $18, [$17 + 1]
    b       be_cont.31780
be_else.31780:
    store   $19, [$17 + 0]
    load    [$15 + 0], $18
    finv    $18, $18
    store   $18, [$17 + 1]
be_cont.31780:
be_cont.31776:
    load    [$15 + 1], $18
    fcmp    $18, $zero
    bne     be_else.31781
be_then.31781:
    store   $zero, [$17 + 3]
    b       be_cont.31781
be_else.31781:
    load    [$13 + 6], $19
    fcmp    $zero, $18
    bg      ble_else.31782
ble_then.31782:
    li      0, $18
    b       ble_cont.31782
ble_else.31782:
    li      1, $18
ble_cont.31782:
    cmp     $19, 0
    be      bne_cont.31783
bne_then.31783:
    cmp     $18, 0
    bne     be_else.31784
be_then.31784:
    li      1, $18
    b       be_cont.31784
be_else.31784:
    li      0, $18
be_cont.31784:
bne_cont.31783:
    load    [$13 + 4], $19
    cmp     $18, 0
    load    [$19 + 1], $19
    bne     be_else.31785
be_then.31785:
    fneg    $19, $18
    store   $18, [$17 + 2]
    load    [$15 + 1], $18
    finv    $18, $18
    store   $18, [$17 + 3]
    b       be_cont.31785
be_else.31785:
    store   $19, [$17 + 2]
    load    [$15 + 1], $18
    finv    $18, $18
    store   $18, [$17 + 3]
be_cont.31785:
be_cont.31781:
    load    [$15 + 2], $18
    fcmp    $18, $zero
    bne     be_else.31786
be_then.31786:
    store   $zero, [$17 + 5]
.count storer
    add     $12, $10, $tmp
    sub     $10, 1, $3
    store   $17, [$tmp + 0]
.count move_args
    mov     $11, $2
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31775
be_else.31786:
    load    [$13 + 6], $19
    load    [$13 + 4], $20
    fcmp    $zero, $18
    bg      ble_else.31787
ble_then.31787:
    li      0, $18
    b       ble_cont.31787
ble_else.31787:
    li      1, $18
ble_cont.31787:
    cmp     $19, 0
    be      bne_cont.31788
bne_then.31788:
    cmp     $18, 0
    bne     be_else.31789
be_then.31789:
    li      1, $18
    b       be_cont.31789
be_else.31789:
    li      0, $18
be_cont.31789:
bne_cont.31788:
    load    [$20 + 2], $19
    cmp     $18, 0
.count move_args
    mov     $11, $2
    sub     $10, 1, $3
.count storer
    add     $12, $10, $tmp
    bne     be_else.31790
be_then.31790:
    fneg    $19, $18
    store   $18, [$17 + 4]
    load    [$15 + 2], $18
    finv    $18, $18
    store   $18, [$17 + 5]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31775
be_else.31790:
    store   $19, [$17 + 4]
    load    [$15 + 2], $18
    finv    $18, $18
    store   $18, [$17 + 5]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31775
be_else.31775:
    cmp     $14, 2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.31791               # |          1 |          1 |          0 |          0 |          0 |          0 |
be_then.31791:
    li      4, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$13 + 4], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$15 + 0], $21              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$18 + 0], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$19 + 1], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$20 + 2], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $21, $18, $18               # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$15 + 1], $21              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $10, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $21, $19, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $10, $tmp              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |          1 |          4 |          3 |          0 |          0 |          0 |
    load    [$15 + 2], $19              # |          1 |          7 |          0 |          0 |          1 |          0 |
    fmul    $19, $20, $19               # |          1 |          7 |          0 |          1 |          0 |          0 |
    fadd    $18, $19, $18               # |          1 |          5 |          4 |          0 |          0 |          0 |
    fcmp    $18, $zero                  # |          1 |          5 |          4 |          0 |          0 |          0 |
    bg      ble_else.31792              # |          1 |          1 |          0 |          0 |          0 |          0 |
ble_then.31792:
    store   $zero, [$17 + 0]            # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $17, [$tmp + 0]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          1 |          0 |          0 |          0 |          0 |
    b       be_cont.31791               # |          1 |          3 |          0 |          0 |          0 |          1 |
ble_else.31792:
    finv    $18, $18
    fneg    $18, $19
    store   $19, [$17 + 0]
    load    [$13 + 4], $19
    load    [$19 + 0], $19
    fmul    $19, $18, $19
    fneg    $19, $19
    store   $19, [$17 + 1]
    load    [$13 + 4], $19
    load    [$19 + 1], $19
    fmul    $19, $18, $19
    fneg    $19, $19
    store   $19, [$17 + 2]
    load    [$13 + 4], $19
    load    [$19 + 2], $19
    fmul    $19, $18, $18
    fneg    $18, $18
    store   $18, [$17 + 3]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31791
be_else.31791:
    li      5, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $17
    load    [$13 + 3], $18
    load    [$13 + 4], $19
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$15 + 0], $22
    load    [$15 + 1], $23
    load    [$15 + 2], $24
    fmul    $22, $22, $25
    load    [$19 + 0], $19
    load    [$20 + 1], $20
    load    [$21 + 2], $21
    cmp     $18, 0
    fmul    $25, $19, $19
    fmul    $23, $23, $25
    fmul    $25, $20, $20
    fadd    $19, $20, $19
    fmul    $24, $24, $20
    fmul    $20, $21, $20
    fadd    $19, $20, $19
    be      bne_cont.31793
bne_then.31793:
    fmul    $23, $24, $20
    load    [$13 + 9], $21
    load    [$21 + 0], $21
    fmul    $20, $21, $20
    load    [$13 + 9], $21
    load    [$21 + 1], $21
    fadd    $19, $20, $19
    fmul    $24, $22, $20
    fmul    $20, $21, $20
    load    [$13 + 9], $21
    load    [$21 + 2], $21
    fadd    $19, $20, $19
    fmul    $22, $23, $20
    fmul    $20, $21, $20
    fadd    $19, $20, $19
bne_cont.31793:
    store   $19, [$17 + 0]
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$13 + 4], $22
    load    [$15 + 0], $23
    load    [$20 + 0], $20
    load    [$21 + 1], $21
    load    [$15 + 2], $24
    fmul    $23, $20, $20
    load    [$15 + 1], $23
    load    [$22 + 2], $22
    cmp     $18, 0
    fmul    $23, $21, $21
    fmul    $24, $22, $22
    fneg    $20, $20
.count storer
    add     $12, $10, $tmp
    sub     $10, 1, $3
    fneg    $21, $21
    fneg    $22, $22
.count move_args
    mov     $11, $2
    bne     be_else.31794
be_then.31794:
    store   $20, [$17 + 1]
    store   $21, [$17 + 2]
    store   $22, [$17 + 3]
    fcmp    $19, $zero
    bne     be_else.31795
be_then.31795:
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31794
be_else.31795:
    finv    $19, $18
    store   $18, [$17 + 4]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31794
be_else.31794:
    load    [$13 + 9], $18
    load    [$13 + 9], $25
    fcmp    $19, $zero
    load    [$18 + 1], $18
    load    [$25 + 2], $25
    fmul    $24, $18, $24
    fmul    $23, $25, $23
    fadd    $24, $23, $23
    fmul    $23, $39, $23
    fsub    $20, $23, $20
    store   $20, [$17 + 1]
    load    [$13 + 9], $20
    load    [$15 + 2], $23
    load    [$15 + 0], $24
    load    [$20 + 0], $20
    fmul    $24, $25, $24
    fmul    $23, $20, $23
    fadd    $23, $24, $23
    fmul    $23, $39, $23
    fsub    $21, $23, $21
    store   $21, [$17 + 2]
    load    [$15 + 1], $21
    fmul    $21, $20, $20
    load    [$15 + 0], $21
    fmul    $21, $18, $18
    fadd    $20, $18, $18
    fmul    $18, $39, $18
    fsub    $22, $18, $18
    store   $18, [$17 + 3]
    bne     be_else.31796
be_then.31796:
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31796
be_else.31796:
    finv    $19, $18
    store   $18, [$17 + 4]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
be_cont.31796:
be_cont.31794:
be_cont.31791:
be_cont.31775:
bge_cont.31774:
    li      116, $3                     # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $16, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    init_dirvec_constants.3044  # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 0], $16              # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $16, 1, $16                 # |          1 |          3 |          2 |          0 |          0 |          0 |
    cmp     $16, 0                      # |          1 |          2 |          1 |          0 |          0 |          0 |
    bl      bge_else.31797              # |          1 |          7 |          0 |          1 |          0 |          0 |
bge_then.31797:
    store   $16, [$sp + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + $16], $16# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [$16 + 119], $2             # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $10                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$16 + 118], $11            # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bl      bge_cont.31798              # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_then.31798:
    load    [$11 + 1], $12              # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_objects + $10], $13# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$11 + 0], $15              # |          1 |          7 |          0 |          0 |          1 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 1], $14              # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $14, 1                      # |          1 |          3 |          2 |          0 |          0 |          0 |
    bne     be_else.31799               # |          1 |          9 |          0 |          1 |          0 |          1 |
be_then.31799:
    li      6, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $17
    load    [$15 + 0], $18
    fcmp    $18, $zero
    bne     be_else.31800
be_then.31800:
    store   $zero, [$17 + 1]
    b       be_cont.31800
be_else.31800:
    load    [$13 + 6], $19
    fcmp    $zero, $18
    bg      ble_else.31801
ble_then.31801:
    li      0, $18
    b       ble_cont.31801
ble_else.31801:
    li      1, $18
ble_cont.31801:
    cmp     $19, 0
    be      bne_cont.31802
bne_then.31802:
    cmp     $18, 0
    bne     be_else.31803
be_then.31803:
    li      1, $18
    b       be_cont.31803
be_else.31803:
    li      0, $18
be_cont.31803:
bne_cont.31802:
    load    [$13 + 4], $19
    cmp     $18, 0
    load    [$19 + 0], $19
    bne     be_else.31804
be_then.31804:
    fneg    $19, $18
    store   $18, [$17 + 0]
    load    [$15 + 0], $18
    finv    $18, $18
    store   $18, [$17 + 1]
    b       be_cont.31804
be_else.31804:
    store   $19, [$17 + 0]
    load    [$15 + 0], $18
    finv    $18, $18
    store   $18, [$17 + 1]
be_cont.31804:
be_cont.31800:
    load    [$15 + 1], $18
    fcmp    $18, $zero
    bne     be_else.31805
be_then.31805:
    store   $zero, [$17 + 3]
    b       be_cont.31805
be_else.31805:
    load    [$13 + 6], $19
    fcmp    $zero, $18
    bg      ble_else.31806
ble_then.31806:
    li      0, $18
    b       ble_cont.31806
ble_else.31806:
    li      1, $18
ble_cont.31806:
    cmp     $19, 0
    be      bne_cont.31807
bne_then.31807:
    cmp     $18, 0
    bne     be_else.31808
be_then.31808:
    li      1, $18
    b       be_cont.31808
be_else.31808:
    li      0, $18
be_cont.31808:
bne_cont.31807:
    load    [$13 + 4], $19
    cmp     $18, 0
    load    [$19 + 1], $19
    bne     be_else.31809
be_then.31809:
    fneg    $19, $18
    store   $18, [$17 + 2]
    load    [$15 + 1], $18
    finv    $18, $18
    store   $18, [$17 + 3]
    b       be_cont.31809
be_else.31809:
    store   $19, [$17 + 2]
    load    [$15 + 1], $18
    finv    $18, $18
    store   $18, [$17 + 3]
be_cont.31809:
be_cont.31805:
    load    [$15 + 2], $18
    fcmp    $18, $zero
    bne     be_else.31810
be_then.31810:
    store   $zero, [$17 + 5]
.count storer
    add     $12, $10, $tmp
    sub     $10, 1, $3
    store   $17, [$tmp + 0]
.count move_args
    mov     $11, $2
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31799
be_else.31810:
    load    [$13 + 6], $19
    load    [$13 + 4], $20
    fcmp    $zero, $18
    bg      ble_else.31811
ble_then.31811:
    li      0, $18
    b       ble_cont.31811
ble_else.31811:
    li      1, $18
ble_cont.31811:
    cmp     $19, 0
    be      bne_cont.31812
bne_then.31812:
    cmp     $18, 0
    bne     be_else.31813
be_then.31813:
    li      1, $18
    b       be_cont.31813
be_else.31813:
    li      0, $18
be_cont.31813:
bne_cont.31812:
    load    [$20 + 2], $19
    cmp     $18, 0
.count move_args
    mov     $11, $2
    sub     $10, 1, $3
.count storer
    add     $12, $10, $tmp
    bne     be_else.31814
be_then.31814:
    fneg    $19, $18
    store   $18, [$17 + 4]
    load    [$15 + 2], $18
    finv    $18, $18
    store   $18, [$17 + 5]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31799
be_else.31814:
    store   $19, [$17 + 4]
    load    [$15 + 2], $18
    finv    $18, $18
    store   $18, [$17 + 5]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31799
be_else.31799:
    cmp     $14, 2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.31815               # |          1 |          1 |          0 |          0 |          0 |          0 |
be_then.31815:
    li      4, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $20              # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$15 + 0], $21              # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [$18 + 0], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$19 + 1], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$20 + 2], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $21, $18, $18               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$15 + 1], $21              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $10, 1, $3                  # |          1 |          7 |          0 |          1 |          0 |          0 |
    fmul    $21, $19, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $10, $tmp              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |          1 |          4 |          3 |          0 |          0 |          0 |
    load    [$15 + 2], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $19, $20, $19               # |          1 |          3 |          2 |          0 |          0 |          0 |
    fadd    $18, $19, $18               # |          1 |          5 |          4 |          0 |          0 |          0 |
    fcmp    $18, $zero                  # |          1 |          5 |          4 |          0 |          0 |          0 |
    bg      ble_else.31816              # |          1 |          9 |          0 |          1 |          0 |          1 |
ble_then.31816:
    store   $zero, [$17 + 0]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31815
ble_else.31816:
    finv    $18, $18                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    fneg    $18, $19                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $19, [$17 + 0]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$19 + 0], $19              # |          1 |          3 |          2 |          0 |          0 |          0 |
    fmul    $19, $18, $19               # |          1 |          3 |          2 |          0 |          0 |          0 |
    fneg    $19, $19                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $19, [$17 + 1]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$19 + 1], $19              # |          1 |          3 |          2 |          0 |          0 |          0 |
    fmul    $19, $18, $19               # |          1 |          3 |          2 |          0 |          0 |          0 |
    fneg    $19, $19                    # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $19, [$17 + 2]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$19 + 2], $19              # |          1 |          3 |          2 |          0 |          0 |          0 |
    fmul    $19, $18, $18               # |          1 |          3 |          2 |          0 |          0 |          0 |
    fneg    $18, $18                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $18, [$17 + 3]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    store   $17, [$tmp + 0]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          7 |          0 |          1 |          0 |          0 |
    b       be_cont.31815               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_else.31815:
    li      5, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $17
    load    [$13 + 3], $18
    load    [$13 + 4], $19
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$15 + 0], $22
    load    [$15 + 1], $23
    load    [$15 + 2], $24
    fmul    $22, $22, $25
    load    [$19 + 0], $19
    load    [$20 + 1], $20
    load    [$21 + 2], $21
    cmp     $18, 0
    fmul    $25, $19, $19
    fmul    $23, $23, $25
    fmul    $25, $20, $20
    fadd    $19, $20, $19
    fmul    $24, $24, $20
    fmul    $20, $21, $20
    fadd    $19, $20, $19
    be      bne_cont.31817
bne_then.31817:
    fmul    $23, $24, $20
    load    [$13 + 9], $21
    load    [$21 + 0], $21
    fmul    $20, $21, $20
    load    [$13 + 9], $21
    load    [$21 + 1], $21
    fadd    $19, $20, $19
    fmul    $24, $22, $20
    fmul    $20, $21, $20
    load    [$13 + 9], $21
    load    [$21 + 2], $21
    fadd    $19, $20, $19
    fmul    $22, $23, $20
    fmul    $20, $21, $20
    fadd    $19, $20, $19
bne_cont.31817:
    store   $19, [$17 + 0]
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$13 + 4], $22
    load    [$15 + 0], $23
    load    [$20 + 0], $20
    load    [$21 + 1], $21
    load    [$15 + 2], $24
    fmul    $23, $20, $20
    load    [$15 + 1], $23
    load    [$22 + 2], $22
    cmp     $18, 0
    fmul    $23, $21, $21
    fmul    $24, $22, $22
    fneg    $20, $20
.count storer
    add     $12, $10, $tmp
    sub     $10, 1, $3
    fneg    $21, $21
    fneg    $22, $22
.count move_args
    mov     $11, $2
    bne     be_else.31818
be_then.31818:
    store   $20, [$17 + 1]
    store   $21, [$17 + 2]
    store   $22, [$17 + 3]
    fcmp    $19, $zero
    bne     be_else.31819
be_then.31819:
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31818
be_else.31819:
    finv    $19, $18
    store   $18, [$17 + 4]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31818
be_else.31818:
    load    [$13 + 9], $18
    load    [$13 + 9], $25
    fcmp    $19, $zero
    load    [$18 + 1], $18
    load    [$25 + 2], $25
    fmul    $24, $18, $24
    fmul    $23, $25, $23
    fadd    $24, $23, $23
    fmul    $23, $39, $23
    fsub    $20, $23, $20
    store   $20, [$17 + 1]
    load    [$13 + 9], $20
    load    [$15 + 2], $23
    load    [$15 + 0], $24
    load    [$20 + 0], $20
    fmul    $24, $25, $24
    fmul    $23, $20, $23
    fadd    $23, $24, $23
    fmul    $23, $39, $23
    fsub    $21, $23, $21
    store   $21, [$17 + 2]
    load    [$15 + 1], $21
    fmul    $21, $20, $20
    load    [$15 + 0], $21
    fmul    $21, $18, $18
    fadd    $20, $18, $18
    fmul    $18, $39, $18
    fsub    $22, $18, $18
    store   $18, [$17 + 3]
    bne     be_else.31820
be_then.31820:
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31820
be_else.31820:
    finv    $19, $18
    store   $18, [$17 + 4]
    store   $17, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
be_cont.31820:
be_cont.31818:
be_cont.31815:
be_cont.31799:
bge_cont.31798:
    li      117, $3                     # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $16, $2                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    init_dirvec_constants.3044  # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 2], $10              # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $10, 1, $10                 # |          1 |          3 |          2 |          0 |          0 |          0 |
    cmp     $10, 0                      # |          1 |          2 |          1 |          0 |          0 |          0 |
    bl      bge_else.31821              # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_then.31821:
    store   $10, [$sp + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $11                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + $10], $10# |          1 |         13 |          0 |          1 |          1 |          0 |
    cmp     $11, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$sp + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 119], $10            # |          1 |          7 |          0 |          0 |          1 |          0 |
    bl      bge_cont.31822              # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_then.31822:
    load    [min_caml_objects + $11], $13# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $12              # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [$10 + 0], $15              # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [$13 + 1], $14              # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $14, 1                      # |          1 |          2 |          1 |          0 |          0 |          0 |
    bne     be_else.31823               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.31823:
    li      6, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $16
    load    [$15 + 0], $17
    fcmp    $17, $zero
    bne     be_else.31824
be_then.31824:
    store   $zero, [$16 + 1]
    b       be_cont.31824
be_else.31824:
    load    [$13 + 6], $18
    fcmp    $zero, $17
    bg      ble_else.31825
ble_then.31825:
    li      0, $17
    b       ble_cont.31825
ble_else.31825:
    li      1, $17
ble_cont.31825:
    cmp     $18, 0
    be      bne_cont.31826
bne_then.31826:
    cmp     $17, 0
    bne     be_else.31827
be_then.31827:
    li      1, $17
    b       be_cont.31827
be_else.31827:
    li      0, $17
be_cont.31827:
bne_cont.31826:
    load    [$13 + 4], $18
    cmp     $17, 0
    load    [$18 + 0], $18
    bne     be_else.31828
be_then.31828:
    fneg    $18, $17
    store   $17, [$16 + 0]
    load    [$15 + 0], $17
    finv    $17, $17
    store   $17, [$16 + 1]
    b       be_cont.31828
be_else.31828:
    store   $18, [$16 + 0]
    load    [$15 + 0], $17
    finv    $17, $17
    store   $17, [$16 + 1]
be_cont.31828:
be_cont.31824:
    load    [$15 + 1], $17
    fcmp    $17, $zero
    bne     be_else.31829
be_then.31829:
    store   $zero, [$16 + 3]
    b       be_cont.31829
be_else.31829:
    load    [$13 + 6], $18
    fcmp    $zero, $17
    bg      ble_else.31830
ble_then.31830:
    li      0, $17
    b       ble_cont.31830
ble_else.31830:
    li      1, $17
ble_cont.31830:
    cmp     $18, 0
    be      bne_cont.31831
bne_then.31831:
    cmp     $17, 0
    bne     be_else.31832
be_then.31832:
    li      1, $17
    b       be_cont.31832
be_else.31832:
    li      0, $17
be_cont.31832:
bne_cont.31831:
    load    [$13 + 4], $18
    cmp     $17, 0
    load    [$18 + 1], $18
    bne     be_else.31833
be_then.31833:
    fneg    $18, $17
    store   $17, [$16 + 2]
    load    [$15 + 1], $17
    finv    $17, $17
    store   $17, [$16 + 3]
    b       be_cont.31833
be_else.31833:
    store   $18, [$16 + 2]
    load    [$15 + 1], $17
    finv    $17, $17
    store   $17, [$16 + 3]
be_cont.31833:
be_cont.31829:
    load    [$15 + 2], $17
    fcmp    $17, $zero
    bne     be_else.31834
be_then.31834:
    store   $zero, [$16 + 5]
.count storer
    add     $12, $11, $tmp
    sub     $11, 1, $3
    store   $16, [$tmp + 0]
.count move_args
    mov     $10, $2
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31823
be_else.31834:
    load    [$13 + 6], $18
    load    [$13 + 4], $19
    fcmp    $zero, $17
    bg      ble_else.31835
ble_then.31835:
    li      0, $17
    b       ble_cont.31835
ble_else.31835:
    li      1, $17
ble_cont.31835:
    cmp     $18, 0
    be      bne_cont.31836
bne_then.31836:
    cmp     $17, 0
    bne     be_else.31837
be_then.31837:
    li      1, $17
    b       be_cont.31837
be_else.31837:
    li      0, $17
be_cont.31837:
bne_cont.31836:
    load    [$19 + 2], $18
    cmp     $17, 0
.count move_args
    mov     $10, $2
    sub     $11, 1, $3
.count storer
    add     $12, $11, $tmp
    bne     be_else.31838
be_then.31838:
    fneg    $18, $17
    store   $17, [$16 + 4]
    load    [$15 + 2], $17
    finv    $17, $17
    store   $17, [$16 + 5]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31823
be_else.31838:
    store   $18, [$16 + 4]
    load    [$15 + 2], $17
    finv    $17, $17
    store   $17, [$16 + 5]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31823
be_else.31823:
    cmp     $14, 2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.31839               # |          1 |          1 |          0 |          0 |          0 |          0 |
be_then.31839:
    li      4, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$13 + 4], $17              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$13 + 4], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$15 + 0], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$17 + 0], $17              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$18 + 1], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$19 + 2], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $20, $17, $17               # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$15 + 1], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $11, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $20, $18, $18               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $11, $tmp              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $17, $18, $17               # |          1 |          4 |          3 |          0 |          0 |          0 |
    load    [$15 + 2], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $18, $19, $18               # |          1 |          7 |          0 |          1 |          0 |          0 |
    fadd    $17, $18, $17               # |          1 |          5 |          4 |          0 |          0 |          0 |
    fcmp    $17, $zero                  # |          1 |          5 |          4 |          0 |          0 |          0 |
    bg      ble_else.31840              # |          1 |          1 |          0 |          0 |          0 |          0 |
ble_then.31840:
    store   $zero, [$16 + 0]            # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$tmp + 0]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          1 |          0 |          0 |          0 |          0 |
    b       be_cont.31839               # |          1 |          3 |          0 |          0 |          0 |          1 |
ble_else.31840:
    finv    $17, $17
    fneg    $17, $18
    store   $18, [$16 + 0]
    load    [$13 + 4], $18
    load    [$18 + 0], $18
    fmul    $18, $17, $18
    fneg    $18, $18
    store   $18, [$16 + 1]
    load    [$13 + 4], $18
    load    [$18 + 1], $18
    fmul    $18, $17, $18
    fneg    $18, $18
    store   $18, [$16 + 2]
    load    [$13 + 4], $18
    load    [$18 + 2], $18
    fmul    $18, $17, $17
    fneg    $17, $17
    store   $17, [$16 + 3]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31839
be_else.31839:
    li      5, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $16
    load    [$13 + 3], $17
    load    [$13 + 4], $18
    load    [$13 + 4], $19
    load    [$13 + 4], $20
    load    [$15 + 0], $21
    load    [$15 + 1], $22
    load    [$15 + 2], $23
    fmul    $21, $21, $24
    load    [$18 + 0], $18
    load    [$19 + 1], $19
    load    [$20 + 2], $20
    cmp     $17, 0
    fmul    $24, $18, $18
    fmul    $22, $22, $24
    fmul    $24, $19, $19
    fadd    $18, $19, $18
    fmul    $23, $23, $19
    fmul    $19, $20, $19
    fadd    $18, $19, $18
    be      bne_cont.31841
bne_then.31841:
    fmul    $22, $23, $19
    load    [$13 + 9], $20
    load    [$20 + 0], $20
    fmul    $19, $20, $19
    load    [$13 + 9], $20
    load    [$20 + 1], $20
    fadd    $18, $19, $18
    fmul    $23, $21, $19
    fmul    $19, $20, $19
    load    [$13 + 9], $20
    load    [$20 + 2], $20
    fadd    $18, $19, $18
    fmul    $21, $22, $19
    fmul    $19, $20, $19
    fadd    $18, $19, $18
bne_cont.31841:
    store   $18, [$16 + 0]
    load    [$13 + 4], $19
    load    [$13 + 4], $20
    load    [$13 + 4], $21
    load    [$15 + 0], $22
    load    [$19 + 0], $19
    load    [$20 + 1], $20
    load    [$15 + 2], $23
    fmul    $22, $19, $19
    load    [$15 + 1], $22
    load    [$21 + 2], $21
    cmp     $17, 0
    fmul    $22, $20, $20
    fmul    $23, $21, $21
    fneg    $19, $19
.count storer
    add     $12, $11, $tmp
    sub     $11, 1, $3
    fneg    $20, $20
    fneg    $21, $21
.count move_args
    mov     $10, $2
    bne     be_else.31842
be_then.31842:
    store   $19, [$16 + 1]
    store   $20, [$16 + 2]
    store   $21, [$16 + 3]
    fcmp    $18, $zero
    bne     be_else.31843
be_then.31843:
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31842
be_else.31843:
    finv    $18, $17
    store   $17, [$16 + 4]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31842
be_else.31842:
    load    [$13 + 9], $17
    load    [$13 + 9], $24
    fcmp    $18, $zero
    load    [$17 + 1], $17
    load    [$24 + 2], $24
    fmul    $23, $17, $23
    fmul    $22, $24, $22
    fadd    $23, $22, $22
    fmul    $22, $39, $22
    fsub    $19, $22, $19
    store   $19, [$16 + 1]
    load    [$13 + 9], $19
    load    [$15 + 2], $22
    load    [$15 + 0], $23
    load    [$19 + 0], $19
    fmul    $23, $24, $23
    fmul    $22, $19, $22
    fadd    $22, $23, $22
    fmul    $22, $39, $22
    fsub    $20, $22, $20
    store   $20, [$16 + 2]
    load    [$15 + 1], $20
    fmul    $20, $19, $19
    load    [$15 + 0], $20
    fmul    $20, $17, $17
    fadd    $19, $17, $17
    fmul    $17, $39, $17
    fsub    $21, $17, $17
    store   $17, [$16 + 3]
    bne     be_else.31844
be_then.31844:
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31844
be_else.31844:
    finv    $18, $17
    store   $17, [$16 + 4]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
be_cont.31844:
be_cont.31842:
be_cont.31839:
be_cont.31823:
bge_cont.31822:
    li      118, $3                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$sp + 4], $2               # |          1 |          7 |          0 |          0 |          1 |          0 |
    call    init_dirvec_constants.3044  # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $27              # |          1 |          7 |          0 |          0 |          1 |          0 |
    sub     $27, 1, $27                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $27, 0                      # |          1 |          2 |          1 |          0 |          0 |          0 |
    bl      bge_else.31845              # |          1 |          7 |          0 |          1 |          0 |          0 |
bge_then.31845:
    load    [min_caml_dirvecs + $27], $2# |          1 |          7 |          0 |          0 |          1 |          0 |
    li      119, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    init_dirvec_constants.3044  # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 5, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $27, 1, $2                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       init_vecset_constants.3047  # |          1 |          3 |          0 |          0 |          0 |          1 |
bge_else.31845:
.count stack_move
    add     $sp, 5, $sp
    ret
bge_else.31821:
.count stack_move
    add     $sp, 5, $sp
    ret
bge_else.31797:
.count stack_move
    add     $sp, 5, $sp
    ret
bge_else.31750:
    ret                                 # |          1 |          7 |          0 |          1 |          0 |          0 |
.end init_vecset_constants

######################################################################
.begin setup_reflections
setup_reflections.3064:
    cmp     $2, 0                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    bl      bge_else.31846              # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_then.31846:
    load    [min_caml_objects + $2], $10# |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$10 + 2], $11              # |          1 |          3 |          2 |          0 |          0 |          0 |
    cmp     $11, 2                      # |          1 |          3 |          2 |          0 |          0 |          0 |
    bne     be_else.31847               # |          1 |          1 |          0 |          0 |          0 |          0 |
be_then.31847:
    load    [$10 + 7], $11              # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [$11 + 0], $11              # |          1 |          7 |          0 |          0 |          1 |          0 |
    fcmp    $36, $11                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    bg      ble_else.31848              # |          1 |          3 |          0 |          0 |          0 |          1 |
ble_then.31848:
    ret
ble_else.31848:
    load    [$10 + 1], $12              # |          1 |          7 |          0 |          1 |          0 |          0 |
    cmp     $12, 1                      # |          1 |          3 |          2 |          0 |          0 |          0 |
    bne     be_else.31849               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.31849:
.count stack_move
    sub     $sp, 14, $sp
.count move_args
    mov     $zero, $3
    store   $2, [$sp + 0]
    load    [$10 + 7], $10
    li      3, $2
    store   $10, [$sp + 1]
    call    min_caml_create_array
.count move_ret
    mov     $1, $10
    mov     $10, $3
    store   $3, [$sp + 2]
.count move_args
    mov     $41, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $16
    load    [$sp + 2], $17
    fneg    $56, $18
    fneg    $57, $19
    store   $55, [$17 + 0]
    store   $18, [$17 + 1]
    store   $19, [$17 + 2]
    sub     $41, 1, $3
    mov     $hp, $20
    add     $hp, 2, $hp
    store   $16, [$20 + 1]
    store   $17, [$20 + 0]
    mov     $20, $2
    store   $2, [$sp + 3]
    call    iter_setup_dirvec_constants.2826
    load    [$sp + 0], $10
    mov     $hp, $12
    add     $hp, 3, $hp
    sll     $10, 2, $10
    li      3, $2
    store   $10, [$sp + 4]
    add     $10, 1, $10
    load    [$sp + 1], $11
.count move_args
    mov     $zero, $3
    load    [$11 + 0], $11
    fsub    $36, $11, $11
    store   $11, [$sp + 5]
    store   $11, [$12 + 2]
    load    [$sp + 3], $11
    store   $11, [$12 + 1]
    store   $10, [$12 + 0]
    mov     $12, $10
    load    [min_caml_n_reflections + 0], $11
    store   $11, [$sp + 6]
    store   $10, [min_caml_reflections + $11]
    call    min_caml_create_array
.count move_ret
    mov     $1, $3
    store   $3, [$sp + 7]
.count move_args
    mov     $41, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $16
    fneg    $55, $17
    load    [$sp + 7], $20
    sub     $41, 1, $3
    store   $17, [$20 + 0]
    store   $56, [$20 + 1]
    store   $19, [$20 + 2]
    mov     $hp, $19
    add     $hp, 2, $hp
    store   $16, [$19 + 1]
    store   $20, [$19 + 0]
    mov     $19, $2
    store   $2, [$sp + 8]
    call    iter_setup_dirvec_constants.2826
    load    [$sp + 6], $10
    load    [$sp + 4], $11
    mov     $hp, $12
    add     $10, 1, $10
    add     $11, 2, $11
    add     $hp, 3, $hp
    load    [$sp + 5], $13
    li      3, $2
.count move_args
    mov     $zero, $3
    store   $13, [$12 + 2]
    load    [$sp + 8], $13
    store   $13, [$12 + 1]
    store   $11, [$12 + 0]
    mov     $12, $11
    store   $11, [min_caml_reflections + $10]
    call    min_caml_create_array
.count move_ret
    mov     $1, $3
    store   $3, [$sp + 9]
.count move_args
    mov     $41, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $16
    load    [$sp + 9], $19
    sub     $41, 1, $3
    store   $17, [$19 + 0]
    store   $18, [$19 + 1]
    store   $57, [$19 + 2]
    mov     $hp, $17
    add     $hp, 2, $hp
    store   $16, [$17 + 1]
    store   $19, [$17 + 0]
    mov     $17, $2
    store   $2, [$sp + 10]
    call    iter_setup_dirvec_constants.2826
.count stack_move
    add     $sp, 14, $sp
    mov     $hp, $4
    load    [$sp - 8], $1
    load    [$sp - 10], $3
    add     $hp, 3, $hp
    add     $1, 2, $2
    add     $3, 3, $3
    load    [$sp - 9], $5
    add     $1, 3, $1
    store   $5, [$4 + 2]
    load    [$sp - 4], $5
    store   $5, [$4 + 1]
    store   $3, [$4 + 0]
    mov     $4, $3
    store   $3, [min_caml_reflections + $2]
    store   $1, [min_caml_n_reflections + 0]
    ret
be_else.31849:
    cmp     $12, 2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.31850               # |          1 |          1 |          0 |          0 |          0 |          0 |
be_then.31850:
.count stack_move
    sub     $sp, 14, $sp                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$sp + 11]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 0]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 4], $11              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 4], $10              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $12, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 12]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27083], $17              # |          1 |         13 |          0 |          1 |          1 |          0 |
    load    [$11 + 0], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $41, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $17, $18, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $55, $18, $18               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $56, $20, $21               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $18, $21, $18               # |          1 |          5 |          4 |          0 |          0 |          0 |
    load    [$10 + 2], $21              # |          1 |          7 |          0 |          1 |          0 |          0 |
    fmul    $57, $21, $22               # |          1 |          3 |          2 |          0 |          0 |          0 |
    fadd    $18, $22, $18               # |          1 |          5 |          4 |          0 |          0 |          0 |
    load    [$sp + 12], $22             # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $19, $18, $19               # |          1 |          4 |          3 |          0 |          0 |          0 |
    fsub    $19, $55, $19               # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $19, [$22 + 0]              # |          1 |          5 |          4 |          0 |          0 |          0 |
    fmul    $17, $20, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $17, $21, $17               # |          1 |          7 |          0 |          1 |          0 |          0 |
    fmul    $19, $18, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $17, $18, $17               # |          1 |          4 |          3 |          0 |          0 |          0 |
    fsub    $19, $56, $19               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fsub    $17, $57, $17               # |          1 |          4 |          3 |          0 |          0 |          0 |
    store   $19, [$22 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $17, [$22 + 2]              # |          1 |          4 |          3 |          0 |          0 |          0 |
    mov     $hp, $17                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $16, [$17 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $22, [$17 + 0]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $17, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 13]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 14, $sp                # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $hp, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp - 3], $1               # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$sp - 14], $2              # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $hp, 3, $hp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    fsub    $36, $1, $1                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    sll     $2, 2, $2                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $2, 1, $2                   # |          1 |          2 |          1 |          0 |          0 |          0 |
    store   $1, [$3 + 2]                # |          1 |          2 |          1 |          0 |          0 |          0 |
    load    [$sp - 1], $1               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $1, [$3 + 1]                # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $2, [$3 + 0]                # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $3, $1                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_n_reflections + 0], $2# |          1 |          7 |          0 |          0 |          1 |          0 |
    store   $1, [min_caml_reflections + $2]# |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $2, 1, $1                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $1, [min_caml_n_reflections + 0]# |          1 |          2 |          1 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
be_else.31850:
    ret
be_else.31847:
    ret
bge_else.31846:
    ret
.end setup_reflections

######################################################################
.begin main
min_caml_main:
.count stack_move
    sub     $sp, 18, $sp                # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [min_caml_n_objects + 0], $41# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_solver_dist + 0], $42# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_diffuse_ray + 0], $43# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_diffuse_ray + 1], $44# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_diffuse_ray + 2], $45# |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [min_caml_rgb + 0], $46     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_rgb + 1], $47     # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_rgb + 2], $48     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_tmin + 0], $49    # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_image_size + 0], $50# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp_fast + 0], $51# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_startp_fast + 1], $52# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp_fast + 2], $53# |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [min_caml_texture_color + 1], $54# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_light + 0], $55   # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_light + 1], $56   # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_light + 2], $57   # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_texture_color + 2], $58# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_or_net + 0], $59  # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_image_size + 1], $60# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [f.27085 + 0], $36          # |          1 |         13 |          0 |          1 |          1 |          0 |
    load    [f.27109 + 0], $37          # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [f.27108 + 0], $38          # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [f.27086 + 0], $39          # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [f.27084 + 0], $40          # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      128, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      128, $10                    # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $2, $50                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $10, $60                    # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      64, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_image_center + 0]# |          1 |          2 |          1 |          0 |          0 |          0 |
    li      64, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_image_center + 1]# |          1 |          2 |          1 |          0 |          0 |          0 |
.count load_float
    load    [f.27202], $10              # |          1 |          7 |          0 |          0 |          1 |          0 |
    call    min_caml_float_of_int       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          4 |          3 |          0 |          0 |          0 |
    finv    $11, $11                    # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $10, $11, $10               # |          1 |          3 |          2 |          0 |          0 |          0 |
    store   $10, [min_caml_scan_pitch + 0]# |          1 |          5 |          4 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $12, [$11 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $15, [$14 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $15, [$14 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $15, [$14 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 1]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $18, [$17 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $hp, $18                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $hp, 8, $hp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $17, [$18 + 7]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$18 + 6]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$18 + 5]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $14, [$18 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $13, [$18 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$18 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$18 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$18 + 0]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    mov     $18, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $50, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $50, 2, $20                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $20, 0                      # |          1 |          2 |          1 |          0 |          0 |          0 |
    bl      bge_else.31851              # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_then.31851:
    call    create_pixel.3008           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $22                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $19, $20, $tmp              # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $20, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $22, [$tmp + 0]             # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $19, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    init_line_elements.3010     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       bge_cont.31851              # |          1 |          9 |          0 |          1 |          0 |          1 |
bge_else.31851:
    mov     $19, $10
bge_cont.31851:
    store   $10, [$sp + 0]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $12, [$11 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 1]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $18, [$17 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $hp, $18                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $hp, 8, $hp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $17, [$18 + 7]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$18 + 6]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$18 + 5]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $14, [$18 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $13, [$18 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$18 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$18 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$18 + 0]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    mov     $18, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $50, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $50, 2, $20                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $20, 0                      # |          1 |          2 |          1 |          0 |          0 |          0 |
    bl      bge_else.31852              # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_then.31852:
    call    create_pixel.3008           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $22                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $19, $20, $tmp              # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $20, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $22, [$tmp + 0]             # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $19, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    init_line_elements.3010     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       bge_cont.31852              # |          1 |          9 |          0 |          1 |          0 |          1 |
bge_else.31852:
    mov     $19, $10
bge_cont.31852:
    store   $10, [$sp + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $11, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 2]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $14, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $15, [$14 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $15, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 2]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $17, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 2]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $hp, $18                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $hp, 8, $hp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $17, [$18 + 7]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $16, [$18 + 6]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $15, [$18 + 5]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $14, [$18 + 4]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $13, [$18 + 3]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $12, [$18 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$18 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$18 + 0]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $18, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $50, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    sub     $50, 2, $20                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $20, 0                      # |          1 |          2 |          1 |          0 |          0 |          0 |
    bl      bge_else.31853              # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_then.31853:
    call    create_pixel.3008           # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $22                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $19, $20, $tmp              # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $20, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $22, [$tmp + 0]             # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $19, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    init_line_elements.3010     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       bge_cont.31853              # |          1 |          3 |          0 |          0 |          0 |          1 |
bge_else.31853:
    mov     $19, $10
bge_cont.31853:
    store   $10, [$sp + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $10, [min_caml_screen + 0]  # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_screen + 1]  # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_screen + 2]  # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27070], $12              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $11, $12, $2                # |          1 |          3 |          2 |          0 |          0 |          0 |
    store   $2, [$sp + 3]               # |          1 |          5 |          4 |          0 |          0 |          0 |
    call    min_caml_cos                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 3], $2               # |          1 |          7 |          0 |          0 |          1 |          0 |
    call    min_caml_sin                # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$sp + 4]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $13, $12, $2                # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 5]               # |          1 |          5 |          4 |          0 |          0 |          0 |
    call    min_caml_cos                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$sp + 5], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_sin                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $11, $10, $14               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27230], $15              # |          1 |          7 |          0 |          0 |          1 |          0 |
    fmul    $14, $15, $14               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $14, [min_caml_screenz_dir + 0]# |          1 |          5 |          4 |          0 |          0 |          0 |
.count load_float
    load    [f.27231], $14              # |          1 |         13 |          0 |          1 |          1 |          0 |
    load    [$sp + 4], $16              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $16, $14, $14               # |          1 |          3 |          2 |          0 |          0 |          0 |
    store   $14, [min_caml_screenz_dir + 1]# |          1 |          5 |          4 |          0 |          0 |          0 |
    fmul    $11, $13, $14               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $14, $15, $14               # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $14, [min_caml_screenz_dir + 2]# |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $13, [min_caml_screenx_dir + 0]# |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $zero, [min_caml_screenx_dir + 1]# |          1 |          7 |          0 |          1 |          0 |          0 |
    fneg    $10, $14                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $14, [min_caml_screenx_dir + 2]# |          1 |          2 |          1 |          0 |          0 |          0 |
    fneg    $16, $14                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $14, $10, $10               # |          1 |          2 |          1 |          0 |          0 |          0 |
    store   $10, [min_caml_screeny_dir + 0]# |          1 |          5 |          4 |          0 |          0 |          0 |
    fneg    $11, $10                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_screeny_dir + 1]# |          1 |          2 |          1 |          0 |          0 |          0 |
    fmul    $14, $13, $10               # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $10, [min_caml_screeny_dir + 2]# |          1 |          5 |          4 |          0 |          0 |          0 |
    load    [min_caml_screen + 0], $10  # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_screenz_dir + 0], $11# |          1 |          7 |          0 |          0 |          1 |          0 |
    fsub    $10, $11, $10               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_viewpoint + 0]# |          1 |          5 |          4 |          0 |          0 |          0 |
    load    [min_caml_screen + 1], $10  # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 1], $11# |          1 |          1 |          0 |          0 |          0 |          0 |
    fsub    $10, $11, $10               # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $10, [min_caml_viewpoint + 1]# |          1 |          5 |          4 |          0 |          0 |          0 |
    load    [min_caml_screen + 2], $10  # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 2], $11# |          1 |          1 |          0 |          0 |          0 |          0 |
    fsub    $10, $11, $10               # |          1 |          3 |          2 |          0 |          0 |          0 |
    store   $10, [min_caml_viewpoint + 2]# |          1 |          5 |          4 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $11, $12, $2                # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 6]               # |          1 |          5 |          4 |          0 |          0 |          0 |
    call    min_caml_sin                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fneg    $10, $10                    # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $10, $56                    # |          1 |          2 |          1 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 6], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_cos                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $11, $12, $2                # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 7]               # |          1 |          5 |          4 |          0 |          0 |          0 |
    call    min_caml_sin                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    fmul    $13, $11, $11               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 7], $2               # |          1 |          7 |          0 |          0 |          1 |          0 |
.count move_float
    mov     $11, $55                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_cos                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $13, $10, $10               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $10, $57                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $23, [min_caml_beam + 0]    # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 8]               # |          1 |          2 |          1 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $23, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.31854               # |          1 |          9 |          0 |          1 |          0 |          1 |
be_then.31854:
    load    [$sp + 8], $10
.count move_float
    mov     $10, $41
    b       be_cont.31854
be_else.31854:
    li      1, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 9]               # |          1 |          2 |          1 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $23, 0                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.31855               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.31855:
    load    [$sp + 9], $10
.count move_float
    mov     $10, $41
    b       be_cont.31855
be_else.31855:
    li      2, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 10]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $23                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    cmp     $23, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.31856               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.31856:
    load    [$sp + 10], $10
.count move_float
    mov     $10, $41
    b       be_cont.31856
be_else.31856:
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$sp + 11]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $24                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $24, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.31857               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.31857:
    load    [$sp + 11], $10
.count move_float
    mov     $10, $41
    b       be_cont.31857
be_else.31857:
    li      4, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_object.2721            # |          1 |          7 |          0 |          1 |          0 |          0 |
be_cont.31857:
be_cont.31856:
be_cont.31855:
be_cont.31854:
    call    min_caml_read_int           # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.31858               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.31858:
    li      1, $2
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $18
    b       be_cont.31858
be_else.31858:
    call    min_caml_read_int           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $11, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      2, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.31859               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.31859:
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $18
    store   $10, [$18 + 0]
    b       be_cont.31859
be_else.31859:
    store   $10, [$sp + 12]             # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $11, [$sp + 13]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 13], $19             # |          1 |         13 |          0 |          1 |          1 |          0 |
    store   $19, [$18 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 12], $19             # |          1 |          7 |          0 |          0 |          1 |          0 |
    store   $19, [$18 + 0]              # |          1 |          1 |          0 |          0 |          0 |          0 |
be_cont.31859:
be_cont.31858:
    load    [$18 + 0], $19              # |          1 |          7 |          0 |          0 |          1 |          0 |
    cmp     $19, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    be      bne_cont.31860              # |          1 |          1 |          0 |          0 |          0 |          0 |
bne_then.31860:
    store   $18, [min_caml_and_net + 0] # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    read_and_network.2729       # |          1 |          1 |          0 |          0 |          0 |          0 |
bne_cont.31860:
    call    min_caml_read_int           # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.31861               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.31861:
    li      1, $2
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $10
    b       be_cont.31861
be_else.31861:
    call    min_caml_read_int           # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $11, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      2, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.31862               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.31862:
    add     $zero, -1, $3
    call    min_caml_create_array
.count move_ret
    mov     $1, $11
    store   $10, [$11 + 0]
    mov     $11, $10
    b       be_cont.31862
be_else.31862:
    store   $10, [$sp + 14]             # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $11, [$sp + 15]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 15], $11             # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 1]              # |          1 |          3 |          2 |          0 |          0 |          0 |
    load    [$sp + 14], $11             # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 0]              # |          1 |          3 |          2 |          0 |          0 |          0 |
be_cont.31862:
be_cont.31861:
    mov     $10, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $10               # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    cmp     $10, -1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.31863               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.31863:
    call    min_caml_create_array
    b       be_cont.31863
be_else.31863:
    store   $3, [$sp + 16]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_or_network.2727        # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 16], $10             # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$1 + 0]               # |          1 |          7 |          0 |          1 |          0 |          0 |
be_cont.31863:
.count move_float
    mov     $1, $59                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      80, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      54, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      10, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      49, $2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      50, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      56, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      32, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      49, $2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      50, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      56, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      32, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      50, $2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      53, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      53, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      10, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $10, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $3, [$sp + 17]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $41, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      120, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $hp, $11                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 17], $10             # |          1 |          7 |          0 |          0 |          1 |          0 |
    mov     $11, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [$11 + 0]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $14, [min_caml_dirvecs + 4] # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + 4], $2  # |          1 |          7 |          0 |          0 |          1 |          0 |
    li      118, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    create_dirvec_elements.3039 # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    create_dirvecs.3042         # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      0, $11                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      4, $12                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      9, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $21                     # |          1 |          4 |          3 |          0 |          0 |          0 |
.count load_float
    load    [f.27139], $22              # |          1 |          7 |          0 |          0 |          1 |          0 |
.count move_args
    mov     $11, $5                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $4                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    fmul    $21, $22, $21               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.27140], $22              # |          1 |          7 |          0 |          0 |          1 |          0 |
.count move_args
    mov     $12, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fsub    $21, $22, $3                # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    calc_dirvecs.3028           # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      8, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      2, $3                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      4, $4                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    calc_dirvec_rows.3033       # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + 4], $2  # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      119, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    init_dirvec_constants.3044  # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    init_vecset_constants.3047  # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      min_caml_light_dirvec, $10  # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [min_caml_light_dirvec + 0], $11# |          1 |          7 |          0 |          1 |          0 |          0 |
    sub     $41, 1, $12                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $55, [$11 + 0]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    store   $56, [$11 + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $57, [$11 + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    cmp     $12, 0                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bl      bge_cont.31864              # |          1 |          1 |          0 |          0 |          0 |          0 |
bge_then.31864:
    load    [min_caml_light_dirvec + 1], $13# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_objects + $12], $14# |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$14 + 1], $15              # |          1 |          2 |          1 |          0 |          0 |          0 |
    cmp     $15, 1                      # |          1 |          3 |          2 |          0 |          0 |          0 |
    bne     be_else.31865               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.31865:
    li      6, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $16
    load    [$11 + 0], $17
    fcmp    $17, $zero
    bne     be_else.31866
be_then.31866:
    store   $zero, [$16 + 1]
    b       be_cont.31866
be_else.31866:
    load    [$14 + 6], $18
    fcmp    $zero, $17
    bg      ble_else.31867
ble_then.31867:
    li      0, $17
    b       ble_cont.31867
ble_else.31867:
    li      1, $17
ble_cont.31867:
    cmp     $18, 0
    be      bne_cont.31868
bne_then.31868:
    cmp     $17, 0
    bne     be_else.31869
be_then.31869:
    li      1, $17
    b       be_cont.31869
be_else.31869:
    li      0, $17
be_cont.31869:
bne_cont.31868:
    load    [$14 + 4], $18
    cmp     $17, 0
    load    [$18 + 0], $18
    bne     be_else.31870
be_then.31870:
    fneg    $18, $17
    store   $17, [$16 + 0]
    load    [$11 + 0], $17
    finv    $17, $17
    store   $17, [$16 + 1]
    b       be_cont.31870
be_else.31870:
    store   $18, [$16 + 0]
    load    [$11 + 0], $17
    finv    $17, $17
    store   $17, [$16 + 1]
be_cont.31870:
be_cont.31866:
    load    [$11 + 1], $17
    fcmp    $17, $zero
    bne     be_else.31871
be_then.31871:
    store   $zero, [$16 + 3]
    b       be_cont.31871
be_else.31871:
    load    [$14 + 6], $18
    fcmp    $zero, $17
    bg      ble_else.31872
ble_then.31872:
    li      0, $17
    b       ble_cont.31872
ble_else.31872:
    li      1, $17
ble_cont.31872:
    cmp     $18, 0
    be      bne_cont.31873
bne_then.31873:
    cmp     $17, 0
    bne     be_else.31874
be_then.31874:
    li      1, $17
    b       be_cont.31874
be_else.31874:
    li      0, $17
be_cont.31874:
bne_cont.31873:
    load    [$14 + 4], $18
    cmp     $17, 0
    load    [$18 + 1], $18
    bne     be_else.31875
be_then.31875:
    fneg    $18, $17
    store   $17, [$16 + 2]
    load    [$11 + 1], $17
    finv    $17, $17
    store   $17, [$16 + 3]
    b       be_cont.31875
be_else.31875:
    store   $18, [$16 + 2]
    load    [$11 + 1], $17
    finv    $17, $17
    store   $17, [$16 + 3]
be_cont.31875:
be_cont.31871:
    load    [$11 + 2], $17
    fcmp    $17, $zero
    bne     be_else.31876
be_then.31876:
    store   $zero, [$16 + 5]
.count storer
    add     $13, $12, $tmp
    sub     $12, 1, $3
    store   $16, [$tmp + 0]
.count move_args
    mov     $10, $2
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31865
be_else.31876:
    load    [$14 + 6], $18
    load    [$14 + 4], $19
    fcmp    $zero, $17
    bg      ble_else.31877
ble_then.31877:
    li      0, $17
    b       ble_cont.31877
ble_else.31877:
    li      1, $17
ble_cont.31877:
    cmp     $18, 0
    be      bne_cont.31878
bne_then.31878:
    cmp     $17, 0
    bne     be_else.31879
be_then.31879:
    li      1, $17
    b       be_cont.31879
be_else.31879:
    li      0, $17
be_cont.31879:
bne_cont.31878:
    load    [$19 + 2], $18
    cmp     $17, 0
.count move_args
    mov     $10, $2
    sub     $12, 1, $3
.count storer
    add     $13, $12, $tmp
    bne     be_else.31880
be_then.31880:
    fneg    $18, $17
    store   $17, [$16 + 4]
    load    [$11 + 2], $17
    finv    $17, $17
    store   $17, [$16 + 5]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31865
be_else.31880:
    store   $18, [$16 + 4]
    load    [$11 + 2], $17
    finv    $17, $17
    store   $17, [$16 + 5]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31865
be_else.31865:
    cmp     $15, 2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    bne     be_else.31881               # |          1 |          1 |          0 |          0 |          0 |          0 |
be_then.31881:
    li      4, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$14 + 4], $17              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$14 + 4], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$14 + 4], $19              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$11 + 0], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$17 + 0], $17              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$18 + 1], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$19 + 2], $19              # |          1 |          7 |          0 |          1 |          0 |          0 |
    fmul    $20, $17, $17               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$11 + 1], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $12, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $20, $18, $18               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count storer
    add     $13, $12, $tmp              # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $17, $18, $17               # |          1 |          4 |          3 |          0 |          0 |          0 |
    load    [$11 + 2], $18              # |          1 |          7 |          0 |          1 |          0 |          0 |
    fmul    $18, $19, $18               # |          1 |          3 |          2 |          0 |          0 |          0 |
    fadd    $17, $18, $17               # |          1 |          5 |          4 |          0 |          0 |          0 |
    fcmp    $17, $zero                  # |          1 |          5 |          4 |          0 |          0 |          0 |
    bg      ble_else.31882              # |          1 |          3 |          0 |          0 |          0 |          1 |
ble_then.31882:
    store   $zero, [$16 + 0]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31881
ble_else.31882:
    finv    $17, $17                    # |          1 |          7 |          0 |          1 |          0 |          0 |
    fneg    $17, $18                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $18, [$16 + 0]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    load    [$14 + 4], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$18 + 0], $18              # |          1 |          3 |          2 |          0 |          0 |          0 |
    fmul    $18, $17, $18               # |          1 |          3 |          2 |          0 |          0 |          0 |
    fneg    $18, $18                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $18, [$16 + 1]              # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [$14 + 4], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$18 + 1], $18              # |          1 |          3 |          2 |          0 |          0 |          0 |
    fmul    $18, $17, $18               # |          1 |          3 |          2 |          0 |          0 |          0 |
    fneg    $18, $18                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $18, [$16 + 2]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    load    [$14 + 4], $18              # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$18 + 2], $18              # |          1 |          3 |          2 |          0 |          0 |          0 |
    fmul    $18, $17, $17               # |          1 |          7 |          0 |          1 |          0 |          0 |
    fneg    $17, $17                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    store   $17, [$16 + 3]              # |          1 |          2 |          1 |          0 |          0 |          0 |
    store   $16, [$tmp + 0]             # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    iter_setup_dirvec_constants.2826# |          1 |          1 |          0 |          0 |          0 |          0 |
    b       be_cont.31881               # |          1 |          3 |          0 |          0 |          0 |          1 |
be_else.31881:
    li      5, $2
    call    min_caml_create_array
.count move_ret
    mov     $1, $16
    load    [$14 + 3], $17
    load    [$14 + 4], $18
    load    [$14 + 4], $19
    load    [$14 + 4], $20
    load    [$11 + 0], $21
    load    [$11 + 1], $22
    load    [$11 + 2], $23
    fmul    $21, $21, $24
    load    [$18 + 0], $18
    load    [$19 + 1], $19
    load    [$20 + 2], $20
    cmp     $17, 0
    fmul    $24, $18, $18
    fmul    $22, $22, $24
    fmul    $24, $19, $19
    fadd    $18, $19, $18
    fmul    $23, $23, $19
    fmul    $19, $20, $19
    fadd    $18, $19, $18
    be      bne_cont.31883
bne_then.31883:
    fmul    $22, $23, $19
    load    [$14 + 9], $20
    load    [$20 + 0], $20
    fmul    $19, $20, $19
    load    [$14 + 9], $20
    load    [$20 + 1], $20
    fadd    $18, $19, $18
    fmul    $23, $21, $19
    fmul    $19, $20, $19
    load    [$14 + 9], $20
    load    [$20 + 2], $20
    fadd    $18, $19, $18
    fmul    $21, $22, $19
    fmul    $19, $20, $19
    fadd    $18, $19, $18
bne_cont.31883:
    store   $18, [$16 + 0]
    load    [$14 + 4], $19
    load    [$14 + 4], $20
    load    [$14 + 4], $21
    load    [$11 + 0], $22
    load    [$19 + 0], $19
    load    [$20 + 1], $20
    load    [$11 + 2], $23
    fmul    $22, $19, $19
    load    [$11 + 1], $22
    load    [$21 + 2], $21
    cmp     $17, 0
    fmul    $22, $20, $20
    fmul    $23, $21, $21
    fneg    $19, $19
.count storer
    add     $13, $12, $tmp
    sub     $12, 1, $3
    fneg    $20, $20
    fneg    $21, $21
.count move_args
    mov     $10, $2
    bne     be_else.31884
be_then.31884:
    store   $19, [$16 + 1]
    store   $20, [$16 + 2]
    store   $21, [$16 + 3]
    fcmp    $18, $zero
    bne     be_else.31885
be_then.31885:
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31884
be_else.31885:
    finv    $18, $17
    store   $17, [$16 + 4]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31884
be_else.31884:
    load    [$14 + 9], $17
    load    [$14 + 9], $24
    fcmp    $18, $zero
    load    [$17 + 1], $17
    load    [$24 + 2], $24
    fmul    $23, $17, $23
    fmul    $22, $24, $22
    fadd    $23, $22, $22
    fmul    $22, $39, $22
    fsub    $19, $22, $19
    store   $19, [$16 + 1]
    load    [$14 + 9], $19
    load    [$11 + 2], $22
    load    [$11 + 0], $23
    load    [$19 + 0], $19
    fmul    $23, $24, $23
    fmul    $22, $19, $22
    fadd    $22, $23, $22
    fmul    $22, $39, $22
    fsub    $20, $22, $20
    store   $20, [$16 + 2]
    load    [$11 + 1], $20
    fmul    $20, $19, $19
    load    [$11 + 0], $20
    fmul    $20, $17, $17
    fadd    $19, $17, $17
    fmul    $17, $39, $17
    fsub    $21, $17, $17
    store   $17, [$16 + 3]
    bne     be_else.31886
be_then.31886:
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
    b       be_cont.31886
be_else.31886:
    finv    $18, $17
    store   $17, [$16 + 4]
    store   $16, [$tmp + 0]
    call    iter_setup_dirvec_constants.2826
be_cont.31886:
be_cont.31884:
be_cont.31881:
be_cont.31865:
bge_cont.31864:
    sub     $41, 1, $2                  # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    setup_reflections.3064      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $50, 1, $11                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 0], $12# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_scan_pitch + 0], $13# |          1 |         13 |          0 |          1 |          1 |          0 |
    load    [min_caml_image_center + 1], $14# |          1 |          7 |          0 |          0 |          1 |          0 |
    neg     $14, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $13, $1, $1                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 0], $3# |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $4                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $1, $12, $2                 # |          1 |          3 |          2 |          0 |          0 |          0 |
    fadd    $2, $3, $5                  # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [min_caml_screeny_dir + 1], $2# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 1], $3# |          1 |          7 |          0 |          0 |          1 |          0 |
    fmul    $1, $2, $2                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    fadd    $2, $3, $6                  # |          1 |          5 |          4 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 2], $2# |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $3                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $1, $2, $1                  # |          1 |          2 |          1 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 2], $2# |          1 |          7 |          0 |          1 |          0 |          0 |
    fadd    $1, $2, $7                  # |          1 |          3 |          2 |          0 |          0 |          0 |
    load    [$sp + 1], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    pretrace_pixels.2983        # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      2, $6                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 0], $3               # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [$sp + 1], $4               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [$sp + 2], $5               # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    scan_line.3000              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 18, $sp                # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      0, $1                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.end main
                                        # | Instructions | Clocks     | Stall      | ICacheMiss | DCacheMiss | BranchMiss |