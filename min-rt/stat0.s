######################################################################
#
#       ↓　ここから macro.s
#
######################################################################

#レジスタ名置き換え
.define $zero $0
.define $sp $63
.define $hp $62
.define $tmp $61
.define $0 orz
.define $63 orz
.define $62 orz
.define $61 orz

#疑似命令
.define { neg %Reg %Reg } { sub $zero %1 %2 }
.define { b %Imm } { jmp 0 %1 }
.define { be %Imm } { jmp 5 %1 }
.define { bne %Imm } { jmp 2 %1 }
.define { bl %Imm } { jmp 6 %1 }
.define { ble %Imm } { jmp 4 %1 }
.define { bg %Imm } { jmp 3 %1 }
.define { bge %Imm } { jmp 1 %1 }

# 入力,出力の順にコンマで区切る形式
.define { li %Imm, %Reg } { li %2 %1 }
.define { add %Reg, %Reg, %Reg } { add %1 %2 %3 }
.define { add %Reg, %Imm, %Reg } { addi %1 %3 %2 }
.define { sub %Reg, %Reg, %Reg } { sub %1 %2 %3 }
.define { sub %Reg, %Imm, %Reg } { addi %1 %3 -%2 }
.define { sll %Reg, %Imm, %Reg } { sll %1 %3 %2 }
.define { cmp %Reg, %Reg } { cmp %1 %2 }
.define { cmp %Reg, %Imm } { cmpi %1 %2 }
.define { fadd %Reg, %Reg, %Reg } { fadd %1 %2 %3 }
.define { fsub %Reg, %Reg, %Reg } { fsub %1 %2 %3 }
.define { fmul %Reg, %Reg, %Reg } { fmul %1 %2 %3 }
.define { finv %Reg, %Reg } { finv %1 %2 }
.define { fsqrt %Reg, %Reg } { fsqrt %1 %2 }
.define { fcmp %Reg, %Reg } { fcmp %1 %2 }
.define { fabs %Reg, %Reg } { fabs %1 %2 }
.define { fneg %Reg, %Reg } { fneg %1 %2 }
.define { load [%Reg + %Imm], %Reg } { load %1 %3 %2 }
.define { load [%Reg - %Imm], %Reg } { load [%1 + -%2], %3}
.define { load [%Reg], %Reg } { load [%1 + 0], %2 }
.define { load [%Imm], %Reg } { load [$zero + %1], %2 }
.define { load [%Imm + %Reg], %Reg } { load [%2 + %1], %3 }
.define { load [%Imm + %Imm], %Reg } { load [%{ %1 + %2 }], %3 }
.define { load [%Imm - %Imm], %Reg } { load [%{ %1 - %2 }], %3 }
.define { load [%Reg + %Reg], %Reg } { loadr %1 %2 %3 }
.define { store %Reg, [%Reg + %Imm] } { store %2 %1 %3 }
.define { store %Reg, [%Reg - %Imm] } { store %1, [%2 + -%3] }
.define { store %Reg, [%Reg] } { store %1, [%2 + 0] }
.define { store %Reg, [%Imm] } { store %1, [$zero + %2] }
.define { store %Reg, [%Imm + %Reg] } { store %1, [%3 + %2] }
.define { store %Reg, [%Imm + %Imm] } { store %1, [%{ %2 + %3 }] }
.define { store %Reg, [%Imm - %Imm] } { store %1, [%{ %2 - %3 }] }
.define { mov %Reg, %Reg } { mov %1 %2 }
.define { neg %Reg, %Reg } { neg %1 %2 }
.define { write %Reg, %Reg } { write %1 %2 }

#スタックとヒープの初期化
    li      0, $zero                    # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      0x1000, $hp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    sll     $hp, 4, $hp                 # |          1 |          2 |          1 |          0 |          0 |          0 |
    sll     $hp, 3, $sp                 # |          1 |          2 |          1 |          0 |          0 |          0 |
    call     min_caml_main              # |          1 |          1 |          0 |          0 |          0 |          0 |
    halt

######################################################################
#
#       ↑　ここまで macro.s
#
######################################################################
######################################################################
#
#       ↓　ここから lib_asm.s
#
######################################################################

######################################################################
# * floor
######################################################################
.begin floor
min_caml_floor:
    mov $2, $1                          # |    189,006 |  1,039,533 |    283,509 |     94,503 |          0 |          0 |
    cmp $1, 0                           # |    189,006 |    189,006 |          0 |          0 |          0 |          0 |
    bge FLOOR_POSITIVE  # if ($f1 >= 0) FLOOR_POSITIVE# |    189,006 |    899,213 |     94,503 |     94,503 |          0 |     24,343 |
    fneg $1, $1                         # |    166,559 |    166,559 |          0 |          0 |          0 |          0 |
    call FLOOR_POSITIVE     # $f1 = FLOOR_POSITIVE(-$f1)# |    166,559 |    166,559 |          0 |          0 |          0 |          0 |
    load [FLOOR_MONE], $2               # |    166,559 |    297,803 |          0 |          0 |     21,874 |          0 |
    fsub $2, $1, $1     # $f1 = (-1) - $f1# |    166,559 |    455,929 |    289,370 |          0 |          0 |          0 |
    ret                                 # |    166,559 |    166,559 |          0 |          0 |          0 |          0 |
FLOOR_POSITIVE:
    load [FLOAT_MAGICF], $3             # |    189,006 |    262,734 |          0 |          0 |     12,288 |          0 |
    cmp $1, $3                          # |    189,006 |    542,442 |    353,436 |          0 |          0 |          0 |
    ble FLOOR_POSITIVE_MAIN             # |    189,006 |    858,915 |     94,503 |     94,503 |          0 |      4,194 |
    ret
FLOOR_POSITIVE_MAIN:
    mov $1, $2                          # |    189,006 |    189,006 |          0 |          0 |          0 |          0 |
    fadd $1, $3, $1     # $f1 += 0x4b000000# |    189,006 |    189,006 |          0 |          0 |          0 |          0 |
    fsub $1, $3, $1     # $f1 -= 0x4b000000# |    189,006 |    945,030 |    756,024 |          0 |          0 |          0 |
    cmp $1, $2                          # |    189,006 |    945,030 |    756,024 |          0 |          0 |          0 |
    ble FLOOR_RET                       # |    189,006 |    378,098 |    189,006 |          0 |          0 |         43 |
    load [FLOOR_ONE], $2
    fsub $1, $2, $1     # 返り値が元の値より大きければ1.0引く
FLOOR_RET:
    ret                                 # |    189,006 |    756,024 |          0 |     94,503 |          0 |          0 |
FLOOR_ONE:
    .float 1.0
FLOOR_MONE:
    .float -1.0
.end floor

######################################################################
# * float_of_int
######################################################################
.begin float_of_int
min_caml_float_of_int:
    mov $2, $1                          # |     16,573 |    113,269 |          0 |     16,116 |          0 |          0 |
    cmp $1, 0                           # |     16,573 |     16,573 |          0 |          0 |          0 |          0 |
    bge ITOF_MAIN       # if ($i1 >= 0) goto ITOF_MAIN# |     16,573 |     35,986 |     16,573 |          0 |          0 |      1,420 |
    neg $1, $1      # 正の値にしてitofした後に、マイナスにしてかえす# |      8,256 |      8,256 |          0 |          0 |          0 |          0 |
    call ITOF_MAIN  # $f1 = float_of_int(-$i1)# |      8,256 |     57,786 |          0 |      8,255 |          0 |          0 |
    fneg $1, $1                         # |      8,256 |     33,024 |     24,768 |          0 |          0 |          0 |
    ret                                 # |      8,256 |      8,256 |          0 |          0 |          0 |          0 |
ITOF_MAIN:
    load [FLOAT_MAGICI], $3     # $3 = 8388608# |     16,573 |    126,823 |          0 |      8,129 |     10,246 |          0 |
    load [FLOAT_MAGICF], $4         # $4 = 8388608.0# |     16,573 |     16,735 |          0 |          0 |         27 |          0 |
    load [FLOAT_MAGICFHX], $5       # $5 = 0x4b000000# |     16,573 |     16,699 |          0 |          0 |         21 |          0 |
    cmp $1, $3          # $cond = cmp($i1, 8388608)# |     16,573 |     16,573 |          0 |          0 |          0 |          0 |
    bge ITOF_BIG            # if ($i1 >= 8388608) goto ITOF_BIG# |     16,573 |     33,752 |     16,573 |          0 |          0 |        303 |
    add $1, $5, $1      # $i1 = $i1 + $5 (i.e. $i1 + 0x4b000000)# |     16,573 |    114,877 |          0 |     16,384 |          0 |          0 |
    fsub $1, $4, $1     # $f1 = $f1 - $4 (i.e. $f1 - 8388608.0)# |     16,573 |     33,146 |     16,573 |          0 |          0 |          0 |
    ret             # return            # |     16,573 |     16,573 |          0 |          0 |          0 |          0 |
ITOF_BIG:
    li 0, $6                # $i1 = $6 * 8388608 + $7 なる$6, $7を求める
    mov $1, $7
ITOF_LOOP:
    add $6, 1, $6           # $6 += 1
    sub $7, $3, $7          # $7 -= 8388608
    cmp $7, $3
    bge ITOF_LOOP       # if ($7 >= 8388608) continue
    li 0, $1
ITOF_LOOP2:
    fadd $1, $4, $1     # $f1 = $6 * $4
    add $6, -1, $6
    cmp $6, 0
    bg ITOF_LOOP2
    add $7, $5, $7          # $7 < 8388608 だからそのままitof
    fsub $7, $4, $7     # $tempf = itof($7)
    fadd $1, $7, $1     # $f1 = $f1 + $tempf (i.e. $f1 = itof($6 * $4) + itof($7) )
    ret
.end float_of_int

######################################################################
# * int_of_float
######################################################################
.begin int_of_float
min_caml_int_of_float:
    mov $2, $1                          # |     49,152 |     60,882 |          0 |      1,955 |          0 |          0 |
    cmp $1, 0                           # |     49,152 |     49,152 |          0 |          0 |          0 |          0 |
    bge FTOI_MAIN       # if ($f1 >= 0) goto FTOI_MAIN# |     49,152 |     98,386 |     49,152 |          0 |          0 |         41 |
    fneg $1, $1     # 正の値にしてftoiした後に、マイナスにしてかえす
    call FTOI_MAIN  # $i1 = float_of_int(-$f1)
    neg $1, $1
    ret         # return
FTOI_MAIN:
    load [FLOAT_MAGICI], $3     # $3 = 8388608# |     49,152 |     73,362 |          0 |      1,955 |      2,080 |          0 |
    load [FLOAT_MAGICF], $4         # $4 = 8388608.0# |     49,152 |     50,982 |          0 |          0 |        305 |          0 |
    load [FLOAT_MAGICFHX], $5       # $5 = 0x4b000000# |     49,152 |     50,550 |          0 |          0 |        233 |          0 |
    cmp $1, $4                          # |     49,152 |     97,766 |     48,614 |          0 |          0 |          0 |
    bge FTOI_BIG        # if ($f1 >= 8688608.0) goto FTOI_BIG# |     49,152 |     98,308 |     49,152 |          0 |          0 |          2 |
    fadd $1, $4, $1                     # |     49,152 |     49,152 |          0 |          0 |          0 |          0 |
    sub $1, $5, $1                      # |     49,152 |    245,760 |    196,608 |          0 |          0 |          0 |
    ret                                 # |     49,152 |    147,456 |          0 |     16,384 |          0 |          0 |
FTOI_BIG:
    li 0, $6                # $f1 = $6 * 8388608 + $8 なる$6, $8を求める
    mov $1, $8
FTOI_LOOP:
    add $6, 1, $6           # $6 += 1
    fsub $8, $4, $8     # $8 -= 8388608.0
    cmp $8, $4
    bge FTOI_LOOP       # if ($8 >= 8388608.0) continue
    li 0, $1
FTOI_LOOP2:
    add $1, $3, $1          # $i1 = $6 * $3
    add $6, -1, $6
    cmp $6, 0
    bg FTOI_LOOP2
    fadd $8, $4, $8     # $8 < 8388608.0 だからそのままftoi
    sub $8, $5, $8      # $temp = ftoi($8)
    add $1, $8, $1      # $i1 = $i1 + $temp (i.e. $i1 = ftoi($6 * $3) + ftoi($8) )
    ret

FLOAT_MAGICI:
    .int 8388608
FLOAT_MAGICF:
    .float 8388608.0
FLOAT_MAGICFHX:
    .int 1258291200         # 0x4b000000
.end int_of_float

######################################################################
# * read_int=read_float
# * wordバイナリ読み込み
######################################################################
.begin read
min_caml_read_int:
min_caml_read_float:
read_1:
    read $1                             # |        325 |        331 |          0 |          1 |          0 |          0 |
    cmp $1, 255                         # |        325 |        650 |        325 |          0 |          0 |          0 |
    bg read_1                           # |        325 |        650 |        325 |          0 |          0 |          0 |
    sll $1, 24, $1                      # |        325 |        325 |          0 |          0 |          0 |          0 |
read_2:
    read $2                             # |        325 |        325 |          0 |          0 |          0 |          0 |
    cmp $2, 255                         # |        325 |        655 |        324 |          1 |          0 |          0 |
    bg read_2                           # |        325 |        660 |        325 |          0 |          0 |          5 |
    sll $2, 16, $2                      # |        325 |        325 |          0 |          0 |          0 |          0 |
    add $1, $2, $1                      # |        325 |        650 |        325 |          0 |          0 |          0 |
read_3:
    read $2                             # |        325 |        325 |          0 |          0 |          0 |          0 |
    cmp $2, 255                         # |        325 |        650 |        325 |          0 |          0 |          0 |
    bg read_3                           # |        325 |        650 |        325 |          0 |          0 |          0 |
    sll $2, 8, $2                       # |        325 |        325 |          0 |          0 |          0 |          0 |
    add $1, $2, $1                      # |        325 |        655 |        324 |          1 |          0 |          0 |
read_4:
    read $2                             # |        325 |        325 |          0 |          0 |          0 |          0 |
    cmp $2, 255                         # |        325 |        650 |        325 |          0 |          0 |          0 |
    bg read_4                           # |        325 |        650 |        325 |          0 |          0 |          0 |
    add $1, $2, $1                      # |        325 |        325 |          0 |          0 |          0 |          0 |
    ret                                 # |        325 |        325 |          0 |          0 |          0 |          0 |
.end read

######################################################################
# * write
# * バイト出力
# * 失敗してたらループ
######################################################################
.begin write
min_caml_write:
    write $2, $tmp                      # |     49,167 |    147,471 |          0 |     16,384 |          0 |          0 |
    cmp $tmp, 0                         # |     49,167 |     98,334 |     49,167 |          0 |          0 |          0 |
    bg min_caml_write                   # |     49,167 |    180,466 |     32,783 |     16,384 |          0 |        106 |
    ret                                 # |     49,167 |     49,167 |          0 |          0 |          0 |          0 |
.end write

######################################################################
# * create_array
######################################################################
.begin create_array
min_caml_create_array:
    mov $2, $1                          # |     22,313 |     43,985 |          0 |      3,612 |          0 |          0 |
    mov $3, $2                          # |     22,313 |     22,313 |          0 |          0 |          0 |          0 |
    add $1, $hp, $3                     # |     22,313 |     22,313 |          0 |          0 |          0 |          0 |
    mov $hp, $1                         # |     22,313 |     22,313 |          0 |          0 |          0 |          0 |
CREATE_ARRAY_LOOP:
    cmp $hp, $3                         # |    125,343 |    125,343 |          0 |          0 |          0 |          0 |
    bge CREATE_ARRAY_END                # |    125,343 |    267,302 |    125,343 |          0 |          0 |      8,308 |
    store $2, [$hp]                     # |    103,030 |    124,702 |          0 |      3,612 |          0 |          0 |
    add $hp, 1, $hp                     # |    103,030 |    103,030 |          0 |          0 |          0 |          0 |
    b CREATE_ARRAY_LOOP                 # |    103,030 |    103,238 |          0 |          0 |          0 |        104 |
CREATE_ARRAY_END:
    ret                                 # |     22,313 |     22,313 |          0 |          0 |          0 |          0 |
.end create_array

######################################################################
# * ledout_in
# * ledout_float
# * バイトLED出力
######################################################################
.begin ledout
min_caml_ledout_int:
min_caml_ledout_float:
    ledout $2
    ret
.end ledout

######################################################################
# * 算術関数(atan, sin, cos)
######################################################################
min_caml_atan_table:
    .float 0.785398163397448279
    .float 0.463647609000806094
    .float 0.244978663126864143
    .float 0.124354994546761438
    .float 0.06241880999595735
    .float 0.0312398334302682774
    .float 0.0156237286204768313
    .float 0.00781234106010111114
    .float 0.00390623013196697176
    .float 0.00195312251647881876
    .float 0.000976562189559319459
    .float 0.00048828121119489829
    .float 0.000244140620149361771
    .float 0.000122070311893670208
    .float 6.10351561742087726e-05
    .float 3.05175781155260957e-05
    .float 1.52587890613157615e-05
    .float 7.62939453110197e-06
    .float 3.81469726560649614e-06
    .float 1.90734863281018696e-06
    .float 9.53674316405960844e-07
    .float 4.76837158203088842e-07
    .float 2.38418579101557974e-07
    .float 1.19209289550780681e-07
    .float 5.96046447753905522e-08
f._186: .float  6.2831853072E+00
f._185: .float  3.1415926536E+00
f._184: .float  1.5707963268E+00
f._183: .float  6.0725293501E-01
f._182: .float  1.0000000000E+00
f._181: .float  5.0000000000E-01

######################################################################
.begin atan
min_caml_atan:
    load    [f._182], $3                # |      1,000 |      1,006 |          0 |          1 |          0 |          0 |
    li      0, $10                      # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    mov     $3, $6                      # |      1,000 |      2,000 |      1,000 |          0 |          0 |          0 |
    mov     $zero, $5                   # |      1,000 |      1,006 |          0 |          1 |          0 |          0 |
    mov     $2, $4                      # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    mov     $10, $2                     # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    b       cordic_rec._146             # |      1,000 |      1,068 |          0 |          0 |          0 |         34 |

######################################################################
cordic_rec._146:
    cmp     $2, 25                      # |     26,000 |     26,000 |          0 |          0 |          0 |          0 |
    bne     be_else._192                # |     26,000 |     56,014 |     26,000 |          0 |          0 |      2,007 |
    mov     $5, $1                      # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    ret                                 # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
be_else._192:
    fcmp    $4, $zero                   # |     25,000 |     25,006 |          0 |          1 |          0 |          0 |
    bg      ble_else._193               # |     25,000 |     72,414 |     25,000 |          0 |          0 |     11,207 |
    fmul    $6, $4, $10                 # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    fmul    $6, $3, $9                  # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    load    [min_caml_atan_table + $2], $8# |     12,268 |     12,292 |          0 |          0 |          4 |          0 |
    load    [f._181], $7                # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    fsub    $3, $10, $3                 # |     12,268 |     24,532 |     12,264 |          0 |          0 |          0 |
    fadd    $4, $9, $4                  # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    fsub    $5, $8, $5                  # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    fmul    $6, $7, $6                  # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    add     $2, 1, $2                   # |     12,268 |     12,268 |          0 |          0 |          0 |          0 |
    b       cordic_rec._146             # |     12,268 |     12,284 |          0 |          0 |          0 |          8 |
ble_else._193:
    fmul    $6, $4, $10                 # |     12,732 |     12,738 |          0 |          1 |          0 |          0 |
    fmul    $6, $3, $9                  # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    load    [min_caml_atan_table + $2], $8# |     12,732 |     12,750 |          0 |          0 |          3 |          0 |
    load    [f._181], $7                # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    fadd    $3, $10, $3                 # |     12,732 |     25,461 |     12,729 |          0 |          0 |          0 |
    fsub    $4, $9, $4                  # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    fadd    $5, $8, $5                  # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    fmul    $6, $7, $6                  # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    add     $2, 1, $2                   # |     12,732 |     12,732 |          0 |          0 |          0 |          0 |
    b       cordic_rec._146             # |     12,732 |     12,792 |          0 |          0 |          0 |         30 |
.end atan

######################################################################
.begin sin
min_caml_sin:
    fcmp    $zero, $2                   # |      9,153 |     32,068 |     22,903 |          2 |          0 |          0 |
    bg      ble_else._196               # |      9,153 |     18,896 |      9,153 |          0 |          0 |        295 |
    load    [f._184], $10               # |      8,653 |     22,471 |          0 |          2 |      2,301 |          0 |
    fcmp    $10, $2                     # |      8,653 |     21,357 |     12,704 |          0 |          0 |          0 |
    bg      ble_else._197               # |      8,653 |     20,248 |      8,653 |          0 |          0 |      1,471 |
    load    [f._185], $10               # |      5,304 |     17,454 |          0 |          0 |      2,025 |          0 |
    fcmp    $10, $2                     # |      5,304 |     11,862 |      6,558 |          0 |          0 |          0 |
    bg      ble_else._198               # |      5,304 |     11,686 |      5,304 |          0 |          0 |        539 |
    load    [f._186], $10               # |      3,759 |     15,915 |          0 |          0 |      2,026 |          0 |
    fcmp    $10, $2                     # |      3,759 |      7,225 |      3,466 |          0 |          0 |          0 |
    bg      ble_else._199               # |      3,759 |     11,791 |      3,758 |          1 |          0 |      2,134 |
    fsub    $2, $10, $2                 # |      2,416 |      2,416 |          0 |          0 |          0 |          0 |
    b       min_caml_sin                # |      2,416 |      2,424 |          0 |          0 |          0 |          4 |
ble_else._199:
    fsub    $10, $2, $2                 # |      1,343 |      1,343 |          0 |          0 |          0 |          0 |
    call     min_caml_sin               # |      1,343 |      1,343 |          0 |          0 |          0 |          0 |
    mov     $1, $10                     # |      1,343 |      1,343 |          0 |          0 |          0 |          0 |
    fneg    $10, $1                     # |      1,343 |      1,343 |          0 |          0 |          0 |          0 |
    ret                                 # |      1,343 |      1,343 |          0 |          0 |          0 |          0 |
ble_else._198:
    fsub    $10, $2, $2                 # |      1,545 |      1,551 |          0 |          1 |          0 |          0 |
    b       cordic_sin._82              # |      1,545 |      1,565 |          0 |          0 |          0 |         10 |
ble_else._197:
    b       cordic_sin._82              # |      3,349 |      3,403 |          0 |          1 |          0 |         24 |
ble_else._196:
    fneg    $2, $2                      # |        500 |        500 |          0 |          0 |          0 |          0 |
    call     min_caml_sin               # |        500 |        500 |          0 |          0 |          0 |          0 |
    mov     $1, $10                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    fneg    $10, $1                     # |        500 |        500 |          0 |          0 |          0 |          0 |
    ret                                 # |        500 |        500 |          0 |          0 |          0 |          0 |

######################################################################
cordic_rec._111:
    cmp     $3, 25                      # |    127,244 |    127,256 |          0 |          2 |          0 |          0 |
    bne     be_else._194                # |    127,244 |    275,254 |    127,244 |          0 |          0 |     10,383 |
    mov     $5, $1                      # |      4,894 |      4,894 |          0 |          0 |          0 |          0 |
    ret                                 # |      4,894 |      4,894 |          0 |          0 |          0 |          0 |
be_else._194:
    fcmp    $2, $6                      # |    122,350 |    122,350 |          0 |          0 |          0 |          0 |
    bg      ble_else._195               # |    122,350 |    359,030 |    122,350 |          0 |          0 |     57,165 |
    fmul    $7, $5, $10                 # |     59,280 |     59,280 |          0 |          0 |          0 |          0 |
    fmul    $7, $4, $9                  # |     59,280 |     59,280 |          0 |          0 |          0 |          0 |
    load    [min_caml_atan_table + $3], $8# |     59,280 |     99,936 |          0 |          2 |      6,774 |          0 |
    load    [f._181], $1                # |     59,280 |     59,280 |          0 |          0 |          0 |          0 |
    fadd    $4, $10, $4                 # |     59,280 |    111,784 |     52,504 |          0 |          0 |          0 |
    fsub    $5, $9, $5                  # |     59,280 |     59,280 |          0 |          0 |          0 |          0 |
    fsub    $6, $8, $6                  # |     59,280 |     59,280 |          0 |          0 |          0 |          0 |
    fmul    $7, $1, $7                  # |     59,280 |     59,280 |          0 |          0 |          0 |          0 |
    add     $3, 1, $3                   # |     59,280 |     59,280 |          0 |          0 |          0 |          0 |
    b       cordic_rec._111             # |     59,280 |     59,300 |          0 |          0 |          0 |         10 |
ble_else._195:
    fmul    $7, $5, $10                 # |     63,070 |     63,082 |          0 |          2 |          0 |          0 |
    fmul    $7, $4, $9                  # |     63,070 |     63,070 |          0 |          0 |          0 |          0 |
    load    [min_caml_atan_table + $3], $8# |     63,070 |    114,868 |          0 |          0 |      8,633 |          0 |
    load    [f._181], $1                # |     63,070 |     63,106 |          0 |          0 |          6 |          0 |
    fsub    $4, $10, $4                 # |     63,070 |    117,504 |     54,434 |          0 |          0 |          0 |
    fadd    $5, $9, $5                  # |     63,070 |     63,070 |          0 |          0 |          0 |          0 |
    fadd    $6, $8, $6                  # |     63,070 |     63,070 |          0 |          0 |          0 |          0 |
    fmul    $7, $1, $7                  # |     63,070 |     63,070 |          0 |          0 |          0 |          0 |
    add     $3, 1, $3                   # |     63,070 |     63,070 |          0 |          0 |          0 |          0 |
    b       cordic_rec._111             # |     63,070 |     63,116 |          0 |          0 |          0 |         23 |

######################################################################
cordic_sin._82:
    load    [f._183], $4                # |      4,894 |      4,918 |          0 |          2 |          2 |          0 |
    load    [f._182], $7                # |      4,894 |      5,074 |          0 |          0 |         30 |          0 |
    li      0, $3                       # |      4,894 |      4,894 |          0 |          0 |          0 |          0 |
    mov     $zero, $6                   # |      4,894 |      4,894 |          0 |          0 |          0 |          0 |
    mov     $zero, $5                   # |      4,894 |      4,894 |          0 |          0 |          0 |          0 |
    b       cordic_rec._111             # |      4,894 |      4,940 |          0 |          0 |          0 |         23 |
.end sin

######################################################################
.begin cos
min_caml_cos:
    load    [f._184], $10               # |      1,004 |      7,016 |          0 |      1,001 |          1 |          0 |
    fsub    $10, $2, $2                 # |      1,004 |      3,010 |      2,006 |          0 |          0 |          0 |
    b       min_caml_sin                # |      1,004 |      1,038 |          0 |          0 |          0 |         17 |
.end cos

######################################################################
#
#       ↑　ここまで lib_asm.s
#
######################################################################
min_caml_n_objects:
    .skip   1
min_caml_objects:
    .skip   60
min_caml_screen:
    .skip   3
min_caml_viewpoint:
    .skip   3
min_caml_light:
    .skip   3
min_caml_beam:
    .skip   1
min_caml_and_net:
    .skip   50
min_caml_or_net:
    .skip   1
min_caml_solver_dist:
    .skip   1
min_caml_intsec_rectside:
    .skip   1
min_caml_tmin:
    .skip   1
min_caml_intersection_point:
    .skip   3
min_caml_intersected_object_id:
    .skip   1
min_caml_nvector:
    .skip   3
min_caml_texture_color:
    .skip   3
min_caml_diffuse_ray:
    .skip   3
min_caml_rgb:
    .skip   3
min_caml_image_size:
    .skip   2
min_caml_image_center:
    .skip   2
min_caml_scan_pitch:
    .skip   1
min_caml_startp:
    .skip   3
min_caml_startp_fast:
    .skip   3
min_caml_screenx_dir:
    .skip   3
min_caml_screeny_dir:
    .skip   3
min_caml_screenz_dir:
    .skip   3
min_caml_ptrace_dirvec:
    .skip   3
min_caml_dirvecs:
    .skip   5
min_caml_light_dirvec:
    .int    light_dirvec_v3
    .int    light_dirvec_consts
light_dirvec_v3:
    .skip   3
light_dirvec_consts:
    .skip   60
min_caml_reflections:
    .skip   180
min_caml_n_reflections:
    .skip   1
f.6312: .float  1.2800000000E+02
f.6304: .float  9.0000000000E-01
f.6303: .float  2.0000000000E-01
f.6293: .float  6.6666666667E-03
f.6292: .float  1.5000000000E+02
f.6291: .float  -6.6666666667E-03
f.6290: .float  -1.5000000000E+02
f.6289: .float  -2.0000000000E+00
f.6288: .float  3.9062500000E-03
f.6287: .float  2.5600000000E+02
f.6286: .float  2.0000000000E+01
f.6285: .float  5.0000000000E-02
f.6284: .float  1.0000000000E+01
f.6283: .float  2.5000000000E-01
f.6282: .float  1.0000000000E-01
f.6281: .float  3.3333333333E+00
f.6280: .float  1.5000000000E-01
f.6279: .float  2.5500000000E+02
f.6278: .float  3.1830988148E-01
f.6277: .float  3.1415927000E+00
f.6276: .float  3.0000000000E+01
f.6275: .float  1.5000000000E+01
f.6274: .float  1.0000000000E-04
f.6273: .float  1.0000000000E+08
f.6272: .float  1.0000000000E+09
f.6271: .float  -1.0000000000E-01
f.6270: .float  1.0000000000E-02
f.6269: .float  -2.0000000000E-01
f.6256: .float  2.0000000000E+00
f.6255: .float  -2.0000000000E+02
f.6254: .float  2.0000000000E+02
f.6253: .float  1.7453293000E-02
f.6252: .float  -1.0000000000E+00
f.6251: .float  1.0000000000E+00
f.6249: .float  5.0000000000E-01

######################################################################
.begin fhalf
fhalf.2576:
.count load_float
    load    [f.6249], $1
    fmul    $2, $1, $1
    ret
.end fhalf

######################################################################
.begin fsqr
fsqr.2578:
    fmul    $2, $2, $1                  # | 17,959,203 | 18,783,369 |    291,144 |     88,837 |          0 |          0 |
    ret                                 # | 17,959,203 | 17,959,203 |          0 |          0 |          0 |          0 |
.end fsqr

######################################################################
.begin fneg
fneg.2580:
    fneg    $2, $1                      # |  2,043,670 |  2,337,284 |     68,296 |     37,553 |          0 |          0 |
    ret                                 # |  2,043,670 |  2,043,670 |          0 |          0 |          0 |          0 |
.end fneg

######################################################################
.begin xor
xor.2582:
    cmp     $2, 0                       # |  2,083,458 |  3,807,063 |  1,338,501 |     64,184 |          0 |          0 |
    bne     be_else.7544                # |  2,083,458 |  4,931,748 |  2,083,458 |          0 |          0 |    382,416 |
be_then.7544:
    mov     $3, $1                      # |  1,096,493 |  1,096,493 |          0 |          0 |          0 |          0 |
    ret                                 # |  1,096,493 |  1,096,493 |          0 |          0 |          0 |          0 |
be_else.7544:
    cmp     $3, 0                       # |    986,965 |  1,116,283 |          0 |     21,553 |          0 |          0 |
    bne     be_else.7545                # |    986,965 |  2,169,996 |    986,965 |          0 |          0 |     98,033 |
be_then.7545:
    li      1, $1                       # |    851,984 |    851,984 |          0 |          0 |          0 |          0 |
    ret                                 # |    851,984 |    851,984 |          0 |          0 |          0 |          0 |
be_else.7545:
    li      0, $1                       # |    134,981 |    134,981 |          0 |          0 |          0 |          0 |
    ret                                 # |    134,981 |    134,981 |          0 |          0 |          0 |          0 |
.end xor

######################################################################
.begin sgn
sgn.2585:
    fcmp    $2, $zero                   # |    122,836 |    282,874 |    112,428 |      7,935 |          0 |          0 |
    bne     be_else.7546                # |    122,836 |    247,598 |    122,836 |          0 |          0 |        963 |
be_then.7546:
    mov     $zero, $1
    ret
be_else.7546:
    fcmp    $2, $zero                   # |    122,836 |    187,150 |          0 |     10,719 |          0 |          0 |
    bg      ble_else.7547               # |    122,836 |    270,368 |    122,836 |          0 |          0 |     12,348 |
ble_then.7547:
.count load_float
    load    [f.6252], $1                # |     96,792 |    250,362 |          0 |          0 |     25,595 |          0 |
    ret                                 # |     96,792 |     96,792 |          0 |          0 |          0 |          0 |
ble_else.7547:
    mov     $36, $1                     # |     26,044 |     26,044 |          0 |          0 |          0 |          0 |
    ret                                 # |     26,044 |     26,044 |          0 |          0 |          0 |          0 |
.end sgn

######################################################################
.begin fneg_cond
fneg_cond.2587:
    cmp     $2, 0                       # |    206,092 |    362,734 |          0 |     26,107 |          0 |          0 |
    bne     be_else.7548                # |    206,092 |    413,630 |    206,092 |          0 |          0 |        723 |
be_then.7548:
.count move_args
    mov     $3, $2                      # |    116,531 |    116,531 |          0 |          0 |          0 |          0 |
    b       fneg.2580                   # |    116,531 |    116,559 |          0 |          0 |          0 |         14 |
be_else.7548:
    mov     $3, $1                      # |     89,561 |     89,561 |          0 |          0 |          0 |          0 |
    ret                                 # |     89,561 |     89,561 |          0 |          0 |          0 |          0 |
.end fneg_cond

######################################################################
.begin add_mod5
add_mod5.2590:
    add     $2, $3, $1                  # |     16,572 |     73,020 |          0 |      9,408 |          0 |          0 |
    cmp     $1, 5                       # |     16,572 |     33,144 |     16,572 |          0 |          0 |          0 |
    bl      bge_else.7549               # |     16,572 |     47,079 |     16,383 |        189 |          0 |      6,495 |
bge_then.7549:
    sub     $1, 5, $1                   # |      3,342 |      3,342 |          0 |          0 |          0 |          0 |
    ret                                 # |      3,342 |      3,342 |          0 |          0 |          0 |          0 |
bge_else.7549:
    ret                                 # |     13,230 |     13,230 |          0 |          0 |          0 |          0 |
.end add_mod5

######################################################################
.begin vecset
vecset.2593:
    store   $3, [$2 + 0]                # |    782,309 |    942,203 |          0 |     26,649 |          0 |          0 |
    store   $4, [$2 + 1]                # |    782,309 |    782,309 |          0 |          0 |          0 |          0 |
    store   $5, [$2 + 2]                # |    782,309 |    782,309 |          0 |          0 |          0 |          0 |
    ret                                 # |    782,309 |    782,309 |          0 |          0 |          0 |          0 |
.end vecset

######################################################################
.begin vecfill
vecfill.2598:
    store   $zero, [$2 + 0]             # |    150,321 |    150,321 |          0 |          0 |          0 |          0 |
    store   $zero, [$2 + 1]             # |    150,321 |    150,321 |          0 |          0 |          0 |          0 |
    store   $zero, [$2 + 2]             # |    150,321 |    150,321 |          0 |          0 |          0 |          0 |
    ret                                 # |    150,321 |    150,321 |          0 |          0 |          0 |          0 |
.end vecfill

######################################################################
.begin vecbzero
vecbzero.2601:
    b       vecfill.2598                # |    150,321 |    207,903 |          0 |      7,910 |          0 |      5,061 |
.end vecbzero

######################################################################
.begin veccpy
veccpy.2603:
    load    [$3 + 0], $1                # |    167,747 |    564,887 |          0 |     10,776 |     55,414 |          0 |
    store   $1, [$2 + 0]                # |    167,747 |    392,413 |    224,666 |          0 |          0 |          0 |
    load    [$3 + 1], $1                # |    167,747 |    181,943 |          0 |          0 |      2,366 |          0 |
    store   $1, [$2 + 1]                # |    167,747 |    559,811 |    300,114 |     15,325 |          0 |          0 |
    load    [$3 + 2], $1                # |    167,747 |    170,651 |          0 |          0 |        484 |          0 |
    store   $1, [$2 + 2]                # |    167,747 |    502,273 |    334,526 |          0 |          0 |          0 |
    ret                                 # |    167,747 |    167,747 |          0 |          0 |          0 |          0 |
.end veccpy

######################################################################
.begin vecunit_sgn
vecunit_sgn.2611:
.count stack_move
    sub     $sp, 2, $sp                 # |    155,546 |    175,712 |          0 |      3,361 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |    155,546 |    311,092 |    155,546 |          0 |          0 |          0 |
    load    [$2 + 0], $2                # |    155,546 |    261,140 |          0 |          0 |     17,599 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |    155,546 |    431,440 |    275,894 |          0 |          0 |          0 |
    call    fsqr.2578                   # |    155,546 |    254,744 |          0 |     16,533 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $11              # |    155,546 |    157,100 |          0 |          0 |        259 |          0 |
.count move_ret
    mov     $1, $10                     # |    155,546 |    466,120 |    310,574 |          0 |          0 |          0 |
    load    [$11 + 1], $2               # |    155,546 |    171,440 |          0 |          0 |      2,649 |          0 |
    call    fsqr.2578                   # |    155,546 |    155,546 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |    155,546 |    622,184 |    466,638 |          0 |          0 |          0 |
    fadd    $10, $12, $10               # |    155,546 |    155,546 |          0 |          0 |          0 |          0 |
    load    [$11 + 2], $2               # |    155,546 |    160,520 |          0 |          0 |        829 |          0 |
    call    fsqr.2578                   # |    155,546 |    254,744 |          0 |     16,533 |          0 |          0 |
    fadd    $10, $1, $1                 # |    155,546 |    622,184 |    466,638 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |    155,546 |    155,546 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.6252], $2                # |    155,546 |    825,740 |          0 |          0 |    111,699 |          0 |
    fsqrt   $1, $1                      # |    155,546 |    243,240 |     87,694 |          0 |          0 |          0 |
    fcmp    $1, $zero                   # |    155,546 |    777,730 |    622,184 |          0 |          0 |          0 |
    bne     be_else.7550                # |    155,546 |    319,950 |    155,546 |          0 |          0 |      4,429 |
be_then.7550:
    mov     $36, $1
.count b_cont
    b       be_cont.7550
be_else.7550:
    cmp     $3, 0                       # |    155,546 |    254,744 |          0 |     16,533 |          0 |          0 |
    finv    $1, $1                      # |    155,546 |    155,546 |          0 |          0 |          0 |          0 |
    be      bne_cont.7551               # |    155,546 |    181,900 |          0 |          0 |          0 |     13,177 |
bne_then.7551:
    fneg    $1, $1                      # |     32,190 |    115,596 |     83,406 |          0 |          0 |          0 |
bne_cont.7551:
be_cont.7550:
.count stack_load
    load    [$sp - 1], $2               # |    155,546 |    157,466 |          0 |          0 |        320 |          0 |
    fmul    $2, $1, $2                  # |    155,546 |    465,998 |    310,452 |          0 |          0 |          0 |
    store   $2, [$11 + 0]               # |    155,546 |    777,730 |    622,184 |          0 |          0 |          0 |
    load    [$11 + 1], $2               # |    155,546 |    175,712 |          0 |      3,361 |          0 |          0 |
    fmul    $2, $1, $2                  # |    155,546 |    466,638 |    311,092 |          0 |          0 |          0 |
    store   $2, [$11 + 1]               # |    155,546 |    777,730 |    622,184 |          0 |          0 |          0 |
    load    [$11 + 2], $2               # |    155,546 |    155,546 |          0 |          0 |          0 |          0 |
    fmul    $2, $1, $1                  # |    155,546 |    466,638 |    311,092 |          0 |          0 |          0 |
    store   $1, [$11 + 2]               # |    155,546 |    777,730 |    622,184 |          0 |          0 |          0 |
    ret                                 # |    155,546 |    155,546 |          0 |          0 |          0 |          0 |
.end vecunit_sgn

######################################################################
.begin veciprod
veciprod.2614:
    load    [$2 + 0], $1                # |  1,743,373 |  8,842,244 |     20,869 |     45,087 |  1,134,580 |          0 |
    load    [$3 + 0], $4                # |  1,743,373 |  2,975,881 |          0 |     24,694 |    180,724 |          0 |
    load    [$2 + 1], $5                # |  1,743,373 |  1,776,679 |          0 |          0 |      5,551 |          0 |
    load    [$3 + 1], $6                # |  1,743,373 |  2,031,523 |          0 |          0 |     48,025 |          0 |
    fmul    $1, $4, $1                  # |  1,743,373 |  1,743,373 |          0 |          0 |          0 |          0 |
    load    [$2 + 2], $2                # |  1,743,373 |  1,880,803 |          0 |          0 |     22,905 |          0 |
    fmul    $5, $6, $4                  # |  1,743,373 |  1,743,373 |          0 |          0 |          0 |          0 |
    load    [$3 + 2], $3                # |  1,743,373 |  1,920,757 |          0 |          0 |     29,564 |          0 |
    fmul    $2, $3, $2                  # |  1,743,373 |  5,170,991 |  3,427,618 |          0 |          0 |          0 |
    fadd    $1, $4, $1                  # |  1,743,373 |  2,031,673 |          0 |     48,050 |          0 |          0 |
    fadd    $1, $2, $1                  # |  1,743,373 |  8,716,865 |  6,973,492 |          0 |          0 |          0 |
    ret                                 # |  1,743,373 |  1,743,373 |          0 |          0 |          0 |          0 |
.end veciprod

######################################################################
.begin veciprod2
veciprod2.2617:
    load    [$2 + 0], $1                # |    630,219 |    806,391 |          0 |        398 |     28,964 |          0 |
    load    [$2 + 1], $6                # |    630,219 |    642,333 |          0 |          0 |      2,019 |          0 |
    load    [$2 + 2], $2                # |    630,219 |    655,779 |          0 |          0 |      4,260 |          0 |
    fmul    $1, $3, $1                  # |    630,219 |    630,219 |          0 |          0 |          0 |          0 |
    fmul    $6, $4, $3                  # |    630,219 |    630,219 |          0 |          0 |          0 |          0 |
    fmul    $2, $5, $2                  # |    630,219 |    734,367 |          0 |     17,358 |          0 |          0 |
    fadd    $1, $3, $1                  # |    630,219 |  2,468,802 |  1,838,583 |          0 |          0 |          0 |
    fadd    $1, $2, $1                  # |    630,219 |  3,151,095 |  2,520,876 |          0 |          0 |          0 |
    ret                                 # |    630,219 |    630,219 |          0 |          0 |          0 |          0 |
.end veciprod2

######################################################################
.begin vecaccum
vecaccum.2622:
    load    [$4 + 0], $5                # |    568,474 |    698,266 |          0 |     18,496 |      3,136 |          0 |
    load    [$2 + 0], $1                # |    568,474 |    789,784 |          0 |          0 |     36,885 |          0 |
    fmul    $3, $5, $5                  # |    568,474 |  1,096,951 |    528,477 |          0 |          0 |          0 |
    fadd    $1, $5, $1                  # |    568,474 |  2,842,370 |  2,273,896 |          0 |          0 |          0 |
    store   $1, [$2 + 0]                # |    568,474 |  2,879,514 |  2,199,608 |     18,572 |          0 |          0 |
    load    [$4 + 1], $5                # |    568,474 |    749,674 |          0 |          0 |     30,200 |          0 |
    load    [$2 + 1], $1                # |    568,474 |    657,046 |          0 |          0 |     14,762 |          0 |
    fmul    $3, $5, $5                  # |    568,474 |  1,092,009 |    523,535 |          0 |          0 |          0 |
    fadd    $1, $5, $1                  # |    568,474 |  2,842,370 |  2,273,896 |          0 |          0 |          0 |
    store   $1, [$2 + 1]                # |    568,474 |  2,842,370 |  2,273,896 |          0 |          0 |          0 |
    load    [$4 + 2], $4                # |    568,474 |    610,246 |          0 |          0 |      6,962 |          0 |
    load    [$2 + 2], $1                # |    568,474 |    597,508 |          0 |          0 |      4,839 |          0 |
    fmul    $3, $4, $3                  # |    568,474 |  1,218,021 |    538,115 |     18,572 |          0 |          0 |
    fadd    $1, $3, $1                  # |    568,474 |  2,842,370 |  2,273,896 |          0 |          0 |          0 |
    store   $1, [$2 + 2]                # |    568,474 |  2,842,370 |  2,273,896 |          0 |          0 |          0 |
    ret                                 # |    568,474 |    568,474 |          0 |          0 |          0 |          0 |
.end vecaccum

######################################################################
.begin vecadd
vecadd.2626:
    load    [min_caml_diffuse_ray + 0], $1# |     37,028 |     37,808 |          0 |          0 |        130 |          0 |
    load    [$2 + 0], $3                # |     37,028 |    156,074 |          0 |          0 |     19,841 |          0 |
    fadd    $1, $3, $1                  # |     37,028 |     71,402 |     34,374 |          0 |          0 |          0 |
    store   $1, [min_caml_diffuse_ray + 0]# |     37,028 |    185,140 |    148,112 |          0 |          0 |          0 |
    load    [min_caml_diffuse_ray + 1], $1# |     37,028 |     41,042 |          0 |        512 |        157 |          0 |
    load    [$2 + 1], $3                # |     37,028 |     37,316 |          0 |          0 |         48 |          0 |
    fadd    $1, $3, $1                  # |     37,028 |    110,988 |     73,960 |          0 |          0 |          0 |
    store   $1, [min_caml_diffuse_ray + 1]# |     37,028 |    185,140 |    148,112 |          0 |          0 |          0 |
    load    [min_caml_diffuse_ray + 2], $1# |     37,028 |     38,264 |          0 |          0 |        206 |          0 |
    load    [$2 + 2], $2                # |     37,028 |     37,358 |          0 |          0 |         55 |          0 |
    fadd    $1, $2, $1                  # |     37,028 |    110,974 |     73,946 |          0 |          0 |          0 |
    store   $1, [min_caml_diffuse_ray + 2]# |     37,028 |    185,140 |    148,112 |          0 |          0 |          0 |
    ret                                 # |     37,028 |     40,100 |          0 |        512 |          0 |          0 |
.end vecadd

######################################################################
.begin vecscale
vecscale.2632:
    load    [$2 + 0], $1                # |     11,126 |    144,638 |          0 |     11,126 |     11,126 |          0 |
    fmul    $1, $3, $1                  # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    store   $1, [$2 + 0]                # |     11,126 |     55,630 |     44,504 |          0 |          0 |          0 |
    load    [$2 + 1], $1                # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    fmul    $1, $3, $1                  # |     11,126 |     33,378 |     22,252 |          0 |          0 |          0 |
    store   $1, [$2 + 1]                # |     11,126 |     55,630 |     44,504 |          0 |          0 |          0 |
    load    [$2 + 2], $1                # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    fmul    $1, $3, $1                  # |     11,126 |     77,674 |        104 |     11,074 |          0 |          0 |
    store   $1, [$2 + 2]                # |     11,126 |     55,630 |     44,504 |          0 |          0 |          0 |
    ret                                 # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
.end vecscale

######################################################################
.begin vecaccumv
vecaccumv.2635:
    load    [min_caml_rgb + 0], $1      # |     11,126 |     24,224 |          0 |      1,869 |        314 |          0 |
    load    [$2 + 0], $3                # |     11,126 |     77,882 |          0 |          0 |     11,126 |          0 |
    load    [min_caml_diffuse_ray + 0], $4# |     11,126 |     12,830 |          0 |          0 |        284 |          0 |
    fmul    $3, $4, $3                  # |     11,126 |     32,810 |     21,684 |          0 |          0 |          0 |
    fadd    $1, $3, $1                  # |     11,126 |     55,630 |     44,504 |          0 |          0 |          0 |
    store   $1, [min_caml_rgb + 0]      # |     11,126 |     59,368 |     37,028 |      1,869 |          0 |          0 |
    load    [min_caml_rgb + 1], $1      # |     11,126 |     20,084 |          0 |          0 |      1,493 |          0 |
    load    [$2 + 1], $3                # |     11,126 |     11,144 |          0 |          0 |          3 |          0 |
    load    [min_caml_diffuse_ray + 1], $4# |     11,126 |     11,168 |          0 |          0 |          7 |          0 |
    fmul    $3, $4, $3                  # |     11,126 |     33,364 |     22,238 |          0 |          0 |          0 |
    fadd    $1, $3, $1                  # |     11,126 |     55,630 |     44,504 |          0 |          0 |          0 |
    store   $1, [min_caml_rgb + 1]      # |     11,126 |     55,630 |     44,504 |          0 |          0 |          0 |
    load    [min_caml_rgb + 2], $1      # |     11,126 |     14,246 |          0 |          0 |        520 |          0 |
    load    [$2 + 2], $2                # |     11,126 |     12,374 |          0 |        181 |         27 |          0 |
    load    [min_caml_diffuse_ray + 2], $3# |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    fmul    $2, $3, $2                  # |     11,126 |     33,378 |     22,252 |          0 |          0 |          0 |
    fadd    $1, $2, $1                  # |     11,126 |     55,630 |     44,504 |          0 |          0 |          0 |
    store   $1, [min_caml_rgb + 2]      # |     11,126 |     55,630 |     44,504 |          0 |          0 |          0 |
    ret                                 # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
.end vecaccumv

######################################################################
.begin o_texturetype
o_texturetype.2639:
    load    [$2 + 0], $1                # |    660,725 |  4,997,393 |     10,140 |    650,585 |     70,503 |          0 |
    ret                                 # |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
.end o_texturetype

######################################################################
.begin o_form
o_form.2641:
    load    [$2 + 1], $1                # | 23,589,383 | 43,858,467 |  5,759,356 |  1,181,489 |  1,236,799 |          0 |
    ret                                 # | 23,589,383 | 23,589,383 |          0 |          0 |          0 |          0 |
.end o_form

######################################################################
.begin o_reflectiontype
o_reflectiontype.2643:
    load    [$2 + 2], $1                # |     18,497 |     52,419 |     18,496 |          0 |      2,571 |          0 |
    ret                                 # |     18,497 |     18,497 |          0 |          0 |          0 |          0 |
.end o_reflectiontype

######################################################################
.begin o_isinvert
o_isinvert.2645:
    load    [$2 + 6], $1                # | 14,924,259 | 32,776,269 | 13,003,566 |          0 |    808,074 |          0 |
    ret                                 # | 14,924,259 | 14,924,259 |          0 |          0 |          0 |          0 |
.end o_isinvert

######################################################################
.begin o_isrot
o_isrot.2647:
    load    [$2 + 3], $1                # |  3,664,682 |  8,039,052 |  2,883,292 |          0 |    248,513 |          0 |
    ret                                 # |  3,664,682 |  3,664,682 |          0 |          0 |          0 |          0 |
.end o_isrot

######################################################################
.begin o_param_a
o_param_a.2649:
    load    [$2 + 4], $1                # | 11,161,394 | 26,547,171 |  9,336,337 |    734,102 |    274,138 |          0 |
    load    [$1 + 0], $1                # | 11,161,394 | 37,045,834 | 21,774,512 |          0 |    684,988 |          0 |
    ret                                 # | 11,161,394 | 11,161,394 |          0 |          0 |          0 |          0 |
.end o_param_a

######################################################################
.begin o_param_b
o_param_b.2651:
    load    [$2 + 4], $1                # | 12,162,201 | 20,478,379 |  4,933,396 |    444,154 |    119,643 |          0 |
    load    [$1 + 1], $1                # | 12,162,201 | 38,193,423 | 24,085,116 |          0 |    324,351 |          0 |
    ret                                 # | 12,162,201 | 12,162,201 |          0 |          0 |          0 |          0 |
.end o_param_b

######################################################################
.begin o_param_c
o_param_c.2653:
    load    [$2 + 4], $1                # |  9,695,491 | 19,202,865 |  9,477,884 |          0 |      4,915 |          0 |
    load    [$1 + 2], $1                # |  9,695,491 | 29,543,743 | 19,381,152 |          0 |     77,850 |          0 |
    ret                                 # |  9,695,491 | 14,858,617 |          0 |    860,521 |          0 |          0 |
.end o_param_c

######################################################################
.begin o_param_abc
o_param_abc.2655:
    load    [$2 + 4], $1                # |    833,011 |  1,506,455 |    613,060 |          0 |     10,064 |          0 |
    ret                                 # |    833,011 |    833,011 |          0 |          0 |          0 |          0 |
.end o_param_abc

######################################################################
.begin o_param_x
o_param_x.2657:
    load    [$2 + 5], $1                # |  8,441,110 | 23,235,663 |    141,671 |  1,275,757 |  1,166,390 |          0 |
    load    [$1 + 0], $1                # |  8,441,110 | 28,153,580 | 14,549,440 |          0 |    860,505 |          0 |
    ret                                 # |  8,441,110 |  8,441,110 |          0 |          0 |          0 |          0 |
.end o_param_x

######################################################################
.begin o_param_y
o_param_y.2659:
    load    [$2 + 5], $1                # |  8,346,607 | 15,961,293 |  7,613,132 |          0 |        259 |          0 |
    load    [$1 + 1], $1                # |  8,346,607 | 25,958,815 | 16,692,696 |          0 |    153,252 |          0 |
    ret                                 # |  8,346,607 | 17,322,205 |          0 |  1,495,933 |          0 |          0 |
.end o_param_y

######################################################################
.begin o_param_z
o_param_z.2661:
    load    [$2 + 5], $1                # |  8,441,110 | 17,320,632 |  8,353,040 |     87,480 |        267 |          0 |
    load    [$1 + 2], $1                # |  8,441,110 | 26,052,084 | 16,881,686 |          0 |    121,548 |          0 |
    ret                                 # |  8,441,110 |  8,441,110 |          0 |          0 |          0 |          0 |
.end o_param_z

######################################################################
.begin o_diffuse
o_diffuse.2663:
    load    [$2 + 7], $1                # |    541,567 |    795,376 |     18,411 |          1 |     39,232 |          0 |
    load    [$1 + 0], $1                # |    541,567 |  1,656,307 |  1,004,670 |          0 |     18,345 |          0 |
    ret                                 # |    541,567 |    541,567 |          0 |          0 |          0 |          0 |
.end o_diffuse

######################################################################
.begin o_hilight
o_hilight.2665:
    load    [$2 + 7], $1                # |     18,496 |     32,476 |          0 |          0 |      2,330 |          0 |
    load    [$1 + 1], $1                # |     18,496 |     77,918 |     32,332 |          0 |      4,515 |          0 |
    ret                                 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.end o_hilight

######################################################################
.begin o_color_red
o_color_red.2667:
    load    [$2 + 8], $1                # |    660,725 |  4,730,939 |          0 |    650,642 |     27,727 |          0 |
    load    [$1 + 0], $1                # |    660,725 |  2,697,913 |  1,265,996 |          0 |    128,532 |          0 |
    ret                                 # |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
.end o_color_red

######################################################################
.begin o_color_green
o_color_green.2669:
    load    [$2 + 8], $1                # |    660,725 |  1,316,227 |    655,502 |          0 |          0 |          0 |
    load    [$1 + 1], $1                # |    660,725 |  2,194,425 |  1,321,450 |          0 |     35,375 |          0 |
    ret                                 # |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
.end o_color_green

######################################################################
.begin o_color_blue
o_color_blue.2671:
    load    [$2 + 8], $1                # |    660,725 |  4,574,660 |     10,083 |    650,642 |          0 |          0 |
    load    [$1 + 2], $1                # |    660,725 |  2,071,293 |  1,321,450 |          0 |     14,853 |          0 |
    ret                                 # |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
.end o_color_blue

######################################################################
.begin o_param_r1
o_param_r1.2673:
    load    [$2 + 9], $1
    load    [$1 + 0], $1
    ret
.end o_param_r1

######################################################################
.begin o_param_r2
o_param_r2.2675:
    load    [$2 + 9], $1
    load    [$1 + 1], $1
    ret
.end o_param_r2

######################################################################
.begin o_param_r3
o_param_r3.2677:
    load    [$2 + 9], $1
    load    [$1 + 2], $1
    ret
.end o_param_r3

######################################################################
.begin o_param_ctbl
o_param_ctbl.2679:
    load    [$2 + 10], $1               # | 12,309,376 | 72,297,715 |    611,025 |  9,116,057 |    780,162 |          0 |
    ret                                 # | 12,309,376 | 12,309,376 |          0 |          0 |          0 |          0 |
.end o_param_ctbl

######################################################################
.begin p_rgb
p_rgb.2681:
    load    [$2 + 0], $1                # |     32,768 |    338,498 |          0 |     18,242 |     32,713 |          0 |
    ret                                 # |     32,768 |     32,768 |          0 |          0 |          0 |          0 |
.end p_rgb

######################################################################
.begin p_intersection_points
p_intersection_points.2683:
    load    [$2 + 1], $1                # |     31,491 |    143,718 |     11,091 |          0 |     16,856 |          0 |
    ret                                 # |     31,491 |     31,491 |          0 |          0 |          0 |          0 |
.end p_intersection_points

######################################################################
.begin p_surface_ids
p_surface_ids.2685:
    load    [$2 + 2], $1                # |    180,660 |    819,242 |     15,734 |     29,623 |     74,185 |          0 |
    ret                                 # |    180,660 |    180,660 |          0 |          0 |          0 |          0 |
.end p_surface_ids

######################################################################
.begin p_calc_diffuse
p_calc_diffuse.2687:
    load    [$2 + 3], $1                # |     55,488 |     97,008 |     38,796 |          0 |        454 |          0 |
    ret                                 # |     55,488 |     55,488 |          0 |          0 |          0 |          0 |
.end p_calc_diffuse

######################################################################
.begin p_energy
p_energy.2689:
    load    [$2 + 4], $1                # |     22,252 |     69,938 |     20,242 |      1,869 |      2,705 |          0 |
    ret                                 # |     22,252 |     22,252 |          0 |          0 |          0 |          0 |
.end p_energy

######################################################################
.begin p_received_ray_20percent
p_received_ray_20percent.2691:
    load    [$2 + 5], $1                # |     59,280 |    256,584 |     44,712 |     12,878 |     12,554 |          0 |
    ret                                 # |     59,280 |     59,280 |          0 |          0 |          0 |          0 |
.end p_received_ray_20percent

######################################################################
.begin p_group_id
p_group_id.2693:
    load    [$2 + 6], $1                # |     12,995 |     29,731 |     12,926 |          0 |        635 |          0 |
    load    [$1 + 0], $1                # |     12,995 |    115,685 |     24,720 |          0 |     12,995 |          0 |
    ret                                 # |     12,995 |     12,995 |          0 |          0 |          0 |          0 |
.end p_group_id

######################################################################
.begin p_set_group_id
p_set_group_id.2695:
    load    [$2 + 6], $1                # |     16,384 |    212,848 |          0 |     16,384 |     16,360 |          0 |
    store   $3, [$1 + 0]                # |     16,384 |     16,432 |         48 |          0 |          0 |          0 |
    ret                                 # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.end p_set_group_id

######################################################################
.begin p_nvectors
p_nvectors.2698:
    load    [$2 + 7], $1                # |     24,121 |    117,938 |     24,025 |          0 |     11,632 |          0 |
    ret                                 # |     24,121 |     24,121 |          0 |          0 |          0 |          0 |
.end p_nvectors

######################################################################
.begin d_vec
d_vec.2700:
    load    [$2 + 0], $1                # | 13,146,008 | 29,845,916 |  5,721,198 |          1 |  1,829,784 |          0 |
    ret                                 # | 13,146,008 | 13,146,008 |          0 |          0 |          0 |          0 |
.end d_vec

######################################################################
.begin d_const
d_const.2702:
    load    [$2 + 1], $1                # | 15,955,849 | 34,216,699 |          0 |  2,269,232 |    774,243 |          0 |
    ret                                 # | 15,955,849 | 15,955,849 |          0 |          0 |          0 |          0 |
.end d_const

######################################################################
.begin r_surface_id
r_surface_id.2704:
    load    [$2 + 0], $1                # |     11,284 |     62,788 |          0 |          0 |      8,584 |          0 |
    ret                                 # |     11,284 |     11,284 |          0 |          0 |          0 |          0 |
.end r_surface_id

######################################################################
.begin r_dvec
r_dvec.2706:
    load    [$2 + 1], $1                # |     18,496 |    204,466 |          0 |     18,378 |     12,617 |          0 |
    ret                                 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.end r_dvec

######################################################################
.begin r_bright
r_bright.2708:
    load    [$2 + 2], $1                # |     10,330 |     72,310 |          0 |     10,330 |          0 |          0 |
    ret                                 # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
.end r_bright

######################################################################
.begin rad
rad.2710:
.count load_float
    load    [f.6253], $1                # |          4 |         10 |          0 |          0 |          1 |          0 |
    fmul    $2, $1, $1                  # |          4 |         10 |          6 |          0 |          0 |          0 |
    ret                                 # |          4 |          4 |          0 |          0 |          0 |          0 |
.end rad

######################################################################
.begin read_screen_settings
read_screen_settings.2712:
.count stack_move
    sub     $sp, 4, $sp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $10, $57                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $10, $58                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $10, $59                    # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    rad.2710                    # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |          1 |          4 |          3 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_cos                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_sin                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    rad.2710                    # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |          1 |          4 |          3 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_cos                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_sin                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $10, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 3]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $11, $2, $10                # |          1 |          7 |          0 |          1 |          0 |          0 |
    fmul    $11, $12, $14               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.6254], $13               # |          1 |          7 |          0 |          0 |          1 |          0 |
.count load_float
    load    [f.6255], $15               # |          1 |          7 |          0 |          0 |          1 |          0 |
.count stack_load
    load    [$sp + 1], $16              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $12, $60                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $10, $13, $10               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $16, $15, $15               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $14, $13, $13               # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $zero, [min_caml_screenx_dir + 1]# |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $10, $51                    # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $15, $52                    # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $13, $53                    # |          1 |          2 |          1 |          0 |          0 |          0 |
    call    fneg.2580                   # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_screenx_dir + 2]# |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $16, $2                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    fneg.2580                   # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $13              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $10, $13, $13               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $13, [min_caml_screeny_dir + 0]# |          1 |          5 |          4 |          0 |          0 |          0 |
    call    fneg.2580                   # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 4, $sp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $1, [min_caml_screeny_dir + 1]# |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $10, $12, $1                # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $1, [min_caml_screeny_dir + 2]# |          1 |          5 |          4 |          0 |          0 |          0 |
    fsub    $57, $51, $1                # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $1, [min_caml_viewpoint + 0]# |          1 |          5 |          4 |          0 |          0 |          0 |
    fsub    $58, $52, $1                # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $1, [min_caml_viewpoint + 1]# |          1 |          5 |          4 |          0 |          0 |          0 |
    fsub    $59, $53, $1                # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $1, [min_caml_viewpoint + 2]# |          1 |          5 |          4 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.end read_screen_settings

######################################################################
.begin read_light
read_light.2714:
.count stack_move
    sub     $sp, 3, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_int           # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    rad.2710                    # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |          1 |          4 |          3 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_sin                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $10, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    fneg.2580                   # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_light + 1]   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_cos                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    rad.2710                    # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |          1 |          4 |          3 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_sin                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $12              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $12, $11, $11               # |          1 |          2 |          1 |          0 |          0 |          0 |
    store   $11, [min_caml_light + 0]   # |          1 |          5 |          4 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_cos                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $12, $10, $10               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_light + 2]   # |          1 |          5 |          4 |          0 |          0 |          0 |
    call    min_caml_read_float         # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 3, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $1, $54                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    ret                                 # |          1 |          7 |          0 |          1 |          0 |          0 |
.end read_light

######################################################################
.begin rotate_quadratic_matrix
rotate_quadratic_matrix.2716:
.count stack_move
    sub     $sp, 11, $sp
.count stack_store
    store   $2, [$sp + 0]
.count stack_store
    store   $3, [$sp + 1]
    load    [$3 + 0], $2
    call    min_caml_cos
.count stack_load
    load    [$sp + 1], $12
.count move_ret
    mov     $1, $11
    load    [$12 + 0], $2
    call    min_caml_sin
.count move_ret
    mov     $1, $13
    load    [$12 + 1], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $14
    load    [$12 + 1], $2
    call    min_caml_sin
.count move_ret
    mov     $1, $15
    load    [$12 + 2], $2
    call    min_caml_cos
.count move_ret
    mov     $1, $16
    load    [$12 + 2], $2
    call    min_caml_sin
    fmul    $14, $16, $2
.count move_ret
    mov     $1, $10
.count stack_store
    store   $2, [$sp + 2]
    call    fsqr.2578
.count stack_load
    load    [$sp + 0], $18
    fmul    $14, $10, $2
.count move_ret
    mov     $1, $17
    load    [$18 + 0], $19
.count stack_store
    store   $2, [$sp + 3]
    fmul    $19, $17, $17
    call    fsqr.2578
    load    [$18 + 1], $21
.count move_ret
    mov     $1, $20
.count move_args
    mov     $15, $2
    fmul    $21, $20, $20
    fadd    $17, $20, $17
    call    fneg.2580
.count move_ret
    mov     $1, $20
    mov     $20, $2
.count stack_store
    store   $2, [$sp + 4]
    call    fsqr.2578
    fmul    $13, $15, $23
.count move_ret
    mov     $1, $20
    load    [$18 + 2], $22
    fmul    $11, $10, $24
    fmul    $22, $20, $20
    fmul    $23, $16, $25
    fadd    $17, $20, $17
    fsub    $25, $24, $2
.count stack_store
    store   $2, [$sp + 5]
    store   $17, [$18 + 0]
    call    fsqr.2578
.count move_ret
    mov     $1, $17
    fmul    $19, $17, $17
    fmul    $23, $10, $20
    fmul    $11, $16, $23
    fadd    $20, $23, $2
.count stack_store
    store   $2, [$sp + 6]
    call    fsqr.2578
.count move_ret
    mov     $1, $20
    fmul    $21, $20, $20
    fmul    $13, $14, $2
    fadd    $17, $20, $17
.count stack_store
    store   $2, [$sp + 7]
    call    fsqr.2578
    fmul    $11, $15, $15
.count move_ret
    mov     $1, $20
    fmul    $22, $20, $20
    fmul    $13, $10, $23
    fadd    $17, $20, $17
    fmul    $15, $16, $20
    store   $17, [$18 + 1]
    fadd    $20, $23, $2
.count stack_store
    store   $2, [$sp + 8]
    call    fsqr.2578
.count move_ret
    mov     $1, $17
    fmul    $19, $17, $17
    fmul    $15, $10, $10
    fmul    $13, $16, $13
    fsub    $10, $13, $2
.count stack_store
    store   $2, [$sp + 9]
    call    fsqr.2578
.count move_ret
    mov     $1, $10
    fmul    $21, $10, $10
    fmul    $11, $14, $2
    fadd    $17, $10, $10
.count stack_store
    store   $2, [$sp + 10]
    call    fsqr.2578
.count stack_move
    add     $sp, 11, $sp
    fmul    $22, $1, $1
.count stack_load
    load    [$sp - 5], $5
.count load_float
    load    [f.6256], $2
.count stack_load
    load    [$sp - 6], $3
    fmul    $21, $5, $6
    fadd    $10, $1, $1
    fmul    $19, $3, $4
.count stack_load
    load    [$sp - 4], $7
.count stack_load
    load    [$sp - 9], $9
.count stack_load
    load    [$sp - 8], $10
.count stack_load
    load    [$sp - 2], $13
    fmul    $22, $7, $8
    fmul    $19, $9, $9
    fmul    $21, $10, $10
    fmul    $6, $13, $6
.count stack_load
    load    [$sp - 3], $11
    store   $1, [$18 + 2]
.count stack_load
    load    [$sp - 1], $1
    fmul    $4, $11, $4
    fmul    $9, $11, $11
    fmul    $8, $1, $8
    fmul    $10, $13, $13
    fmul    $9, $3, $3
    fadd    $4, $6, $4
.count stack_load
    load    [$sp - 7], $6
    fmul    $10, $5, $5
    fadd    $11, $13, $9
    fmul    $22, $6, $6
    fadd    $4, $8, $4
    fadd    $3, $5, $3
    fmul    $6, $1, $1
    fmul    $6, $7, $6
    fmul    $2, $4, $4
    fadd    $9, $1, $1
    fadd    $3, $6, $3
    store   $4, [$12 + 0]
    fmul    $2, $1, $1
    fmul    $2, $3, $2
    store   $1, [$12 + 1]
    store   $2, [$12 + 2]
    ret
.end rotate_quadratic_matrix

######################################################################
.begin read_nth_object
read_nth_object.2719:
.count stack_move
    sub     $sp, 4, $sp                 # |         18 |         24 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |         18 |         36 |         18 |          0 |          0 |          0 |
    call    min_caml_read_int           # |         18 |         18 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |         18 |         18 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |         18 |         24 |          0 |          1 |          0 |          0 |
    bne     be_else.7552                # |         18 |         44 |         18 |          0 |          0 |          4 |
be_then.7552:
.count stack_move
    add     $sp, 4, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $1                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
be_else.7552:
    call    min_caml_read_int           # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_int           # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |         17 |         23 |          0 |          1 |          0 |          0 |
    call    min_caml_read_int           # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         17 |         23 |          0 |          1 |          0 |          0 |
    store   $15, [$14 + 0]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 1]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $15, [$14 + 2]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         17 |         23 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 0]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         17 |         23 |          0 |          1 |          0 |          0 |
    store   $16, [$15 + 1]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $16, [$15 + 2]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    li      2, $2                       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         23 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 0]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $18, [$17 + 1]              # |         17 |         23 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $18                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $19, [$18 + 0]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         23 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $19, [$18 + 1]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_read_float         # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $19, [$18 + 2]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         23 |          0 |          1 |          0 |          0 |
    cmp     $13, 0                      # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $19                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    be      bne_cont.7553               # |         17 |         21 |          0 |          0 |          0 |          2 |
bne_then.7553:
    call    min_caml_read_float
.count move_ret
    mov     $1, $2
    call    rad.2710
.count move_ret
    mov     $1, $20
    store   $20, [$19 + 0]
    call    min_caml_read_float
.count move_ret
    mov     $1, $2
    call    rad.2710
.count move_ret
    mov     $1, $20
    store   $20, [$19 + 1]
    call    min_caml_read_float
.count move_ret
    mov     $1, $2
    call    rad.2710
.count move_ret
    mov     $1, $20
    store   $20, [$19 + 2]
bne_cont.7553:
    li      4, $2                       # |         17 |         23 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         17 |         17 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |         17 |         17 |          0 |          0 |          0 |          0 |
    fcmp    $zero, $16                  # |         17 |         17 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $20                     # |         17 |         17 |          0 |          0 |          0 |          0 |
    bg      ble_else.7554               # |         17 |         31 |          0 |          1 |          0 |          4 |
ble_then.7554:
    li      0, $16                      # |         15 |         15 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7554               # |         15 |         19 |          0 |          0 |          0 |          2 |
ble_else.7554:
    li      1, $16                      # |          2 |          2 |          0 |          0 |          0 |          0 |
ble_cont.7554:
    cmp     $11, 2                      # |         17 |         17 |          0 |          0 |          0 |          0 |
    bne     be_else.7555                # |         17 |         48 |         17 |          0 |          0 |          7 |
be_then.7555:
    li      1, $21                      # |          2 |          2 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7555                # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.7555:
    mov     $16, $21                    # |         15 |         21 |          0 |          1 |          0 |          0 |
be_cont.7555:
    mov     $hp, $22                    # |         17 |         17 |          0 |          0 |          0 |          0 |
    add     $hp, 11, $hp                # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $20, [$22 + 10]             # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $19, [$22 + 9]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $18, [$22 + 8]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $17, [$22 + 7]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $21, [$22 + 6]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $15, [$22 + 5]              # |         17 |         23 |          0 |          1 |          0 |          0 |
    store   $14, [$22 + 4]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $13, [$22 + 3]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $12, [$22 + 2]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $11, [$22 + 1]              # |         17 |         17 |          0 |          0 |          0 |          0 |
    store   $10, [$22 + 0]              # |         17 |         17 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $12              # |         17 |         17 |          0 |          0 |          0 |          0 |
    cmp     $11, 3                      # |         17 |         17 |          0 |          0 |          0 |          0 |
    mov     $22, $10                    # |         17 |         23 |          0 |          1 |          0 |          0 |
    store   $10, [min_caml_objects + $12]# |         17 |         17 |          0 |          0 |          0 |          0 |
    bne     be_else.7556                # |         17 |         37 |          0 |          0 |          0 |         10 |
be_then.7556:
    load    [$14 + 0], $2               # |          9 |         63 |          0 |          0 |          9 |          0 |
    fcmp    $2, $zero                   # |          9 |          9 |          0 |          0 |          0 |          0 |
    bne     be_else.7557                # |          9 |         22 |          9 |          0 |          0 |          2 |
be_then.7557:
    mov     $zero, $10                  # |          2 |          2 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7557                # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.7557:
.count stack_store
    store   $2, [$sp + 1]               # |          7 |         13 |          0 |          1 |          0 |          0 |
    call    sgn.2585                    # |          7 |          7 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          7 |          7 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |          7 |          7 |          0 |          0 |          0 |          0 |
    call    fsqr.2578                   # |          7 |          7 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          7 |         28 |         21 |          0 |          0 |          0 |
    finv    $11, $11                    # |          7 |          7 |          0 |          0 |          0 |          0 |
    fmul    $10, $11, $10               # |          7 |         35 |         28 |          0 |          0 |          0 |
be_cont.7557:
    store   $10, [$14 + 0]              # |          9 |         39 |         24 |          1 |          0 |          0 |
    load    [$14 + 1], $2               # |          9 |          9 |          0 |          0 |          0 |          0 |
    fcmp    $2, $zero                   # |          9 |         27 |         18 |          0 |          0 |          0 |
    bne     be_else.7558                # |          9 |         26 |          9 |          0 |          0 |          4 |
be_then.7558:
    mov     $zero, $10
.count b_cont
    b       be_cont.7558
be_else.7558:
.count stack_store
    store   $2, [$sp + 2]               # |          9 |          9 |          0 |          0 |          0 |          0 |
    call    sgn.2585                    # |          9 |          9 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          9 |         15 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |          9 |          9 |          0 |          0 |          0 |          0 |
    call    fsqr.2578                   # |          9 |          9 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          9 |         36 |         27 |          0 |          0 |          0 |
    finv    $11, $11                    # |          9 |          9 |          0 |          0 |          0 |          0 |
    fmul    $10, $11, $10               # |          9 |         45 |         36 |          0 |          0 |          0 |
be_cont.7558:
    store   $10, [$14 + 1]              # |          9 |         45 |         36 |          0 |          0 |          0 |
    load    [$14 + 2], $2               # |          9 |          9 |          0 |          0 |          0 |          0 |
    fcmp    $2, $zero                   # |          9 |         31 |         16 |          1 |          0 |          0 |
    bne     be_else.7559                # |          9 |         26 |          9 |          0 |          0 |          4 |
be_then.7559:
    mov     $zero, $26
.count b_cont
    b       be_cont.7559
be_else.7559:
.count stack_store
    store   $2, [$sp + 3]               # |          9 |          9 |          0 |          0 |          0 |          0 |
    call    sgn.2585                    # |          9 |          9 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          9 |          9 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $2               # |          9 |          9 |          0 |          0 |          0 |          0 |
    call    fsqr.2578                   # |          9 |          9 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $26                     # |          9 |         36 |         27 |          0 |          0 |          0 |
    finv    $26, $26                    # |          9 |          9 |          0 |          0 |          0 |          0 |
    fmul    $10, $26, $26               # |          9 |         45 |         36 |          0 |          0 |          0 |
be_cont.7559:
    store   $26, [$14 + 2]              # |          9 |         45 |         36 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7556                # |          9 |         17 |          0 |          0 |          0 |          4 |
be_else.7556:
    cmp     $11, 2                      # |          8 |         14 |          0 |          1 |          0 |          0 |
    bne     be_cont.7560                # |          8 |         20 |          8 |          0 |          0 |          2 |
be_then.7560:
    cmp     $16, 0                      # |          2 |          2 |          0 |          0 |          0 |          0 |
    bne     be_else.7561                # |          2 |          4 |          2 |          0 |          0 |          0 |
be_then.7561:
    li      1, $3                       # |          2 |          2 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7561                # |          2 |          6 |          0 |          0 |          0 |          2 |
be_else.7561:
    li      0, $3
be_cont.7561:
.count move_args
    mov     $14, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    vecunit_sgn.2611            # |          2 |          2 |          0 |          0 |          0 |          0 |
be_cont.7560:
be_cont.7556:
    cmp     $13, 0                      # |         17 |         23 |          0 |          1 |          0 |          0 |
    be      bne_cont.7562               # |         17 |         50 |         17 |          0 |          0 |          8 |
bne_then.7562:
.count move_args
    mov     $19, $3
.count move_args
    mov     $14, $2
    call    rotate_quadratic_matrix.2716
bne_cont.7562:
.count stack_move
    add     $sp, 4, $sp                 # |         17 |         17 |          0 |          0 |          0 |          0 |
    li      1, $1                       # |         17 |         17 |          0 |          0 |          0 |          0 |
    ret                                 # |         17 |         17 |          0 |          0 |          0 |          0 |
.end read_nth_object

######################################################################
.begin read_object
read_object.2721:
    cmp     $2, 60                      # |         18 |         24 |          0 |          1 |          0 |          0 |
    bl      bge_else.7563               # |         18 |         55 |         17 |          1 |          0 |          7 |
bge_then.7563:
    ret
bge_else.7563:
.count stack_move
    sub     $sp, 1, $sp                 # |         18 |         18 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |         18 |         36 |         18 |          0 |          0 |          0 |
    call    read_nth_object.2719        # |         18 |         18 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |         18 |         18 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |         18 |         18 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |         18 |         18 |          0 |          0 |          0 |          0 |
    bne     be_else.7564                # |         18 |         30 |          0 |          0 |          0 |          6 |
be_then.7564:
.count move_float
    mov     $1, $47                     # |          1 |          2 |          1 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
be_else.7564:
    add     $1, 1, $2                   # |         17 |         28 |         11 |          0 |          0 |          0 |
    b       read_object.2721            # |         17 |         29 |          0 |          0 |          0 |          6 |
.end read_object

######################################################################
.begin read_all_object
read_all_object.2723:
    li      0, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    b       read_object.2721            # |          1 |          3 |          0 |          0 |          0 |          1 |
.end read_all_object

######################################################################
.begin read_net_item
read_net_item.2725:
.count stack_move
    sub     $sp, 2, $sp                 # |         43 |         43 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |         43 |         91 |         42 |          1 |          0 |          0 |
    call    min_caml_read_int           # |         43 |         43 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |         43 |         43 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |         43 |         43 |          0 |          0 |          0 |          0 |
    bne     be_else.7565                # |         43 |        128 |         43 |          0 |          0 |         21 |
be_then.7565:
.count stack_move
    add     $sp, 2, $sp                 # |         14 |         14 |          0 |          0 |          0 |          0 |
    add     $zero, -1, $3               # |         14 |         14 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $10              # |         14 |         26 |          0 |          0 |          2 |          0 |
    add     $10, 1, $2                  # |         14 |         38 |         24 |          0 |          0 |          0 |
    b       min_caml_create_array       # |         14 |         22 |          0 |          0 |          0 |          4 |
be_else.7565:
.count stack_store
    store   $10, [$sp + 1]              # |         29 |         35 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $1               # |         29 |         53 |          0 |          0 |          4 |          0 |
    add     $1, 1, $2                   # |         29 |         79 |         50 |          0 |          0 |          0 |
    call    read_net_item.2725          # |         29 |         29 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |         29 |         29 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |         29 |         58 |         29 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $3               # |         29 |         35 |          0 |          1 |          0 |          0 |
.count storer
    add     $1, $2, $tmp                # |         29 |         57 |         28 |          0 |          0 |          0 |
    store   $3, [$tmp + 0]              # |         29 |         58 |         29 |          0 |          0 |          0 |
    ret                                 # |         29 |         29 |          0 |          0 |          0 |          0 |
.end read_net_item

######################################################################
.begin read_or_network
read_or_network.2727:
.count stack_move
    sub     $sp, 2, $sp                 # |          3 |          3 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |          3 |          6 |          3 |          0 |          0 |          0 |
    li      0, $2                       # |          3 |          3 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |          3 |          3 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          3 |          9 |          0 |          1 |          0 |          0 |
    mov     $10, $3                     # |          3 |          3 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $10               # |          3 |         15 |          0 |          0 |          2 |          0 |
.count stack_load
    load    [$sp + 0], $11              # |          3 |          3 |          0 |          0 |          0 |          0 |
    cmp     $10, -1                     # |          3 |          4 |          1 |          0 |          0 |          0 |
    add     $11, 1, $2                  # |          3 |          5 |          2 |          0 |          0 |          0 |
    add     $11, 1, $12                 # |          3 |          3 |          0 |          0 |          0 |          0 |
    bne     be_else.7566                # |          3 |          7 |          0 |          0 |          0 |          2 |
be_then.7566:
.count stack_move
    add     $sp, 2, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       min_caml_create_array       # |          1 |          3 |          0 |          0 |          0 |          1 |
be_else.7566:
.count stack_store
    store   $3, [$sp + 1]               # |          2 |          8 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $12, $2                     # |          2 |          2 |          0 |          0 |          0 |          0 |
    call    read_or_network.2727        # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |          2 |          2 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |          2 |          4 |          2 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $3               # |          2 |          2 |          0 |          0 |          0 |          0 |
.count storer
    add     $1, $2, $tmp                # |          2 |          4 |          2 |          0 |          0 |          0 |
    store   $3, [$tmp + 0]              # |          2 |          4 |          2 |          0 |          0 |          0 |
    ret                                 # |          2 |          2 |          0 |          0 |          0 |          0 |
.end read_or_network

######################################################################
.begin read_and_network
read_and_network.2729:
.count stack_move
    sub     $sp, 1, $sp                 # |         11 |         17 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |         11 |         22 |         11 |          0 |          0 |          0 |
    li      0, $2                       # |         11 |         11 |          0 |          0 |          0 |          0 |
    call    read_net_item.2725          # |         11 |         11 |          0 |          0 |          0 |          0 |
    load    [$1 + 0], $2                # |         11 |         53 |          0 |          0 |          7 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |         11 |         17 |          0 |          1 |          0 |          0 |
    cmp     $2, -1                      # |         11 |         15 |          4 |          0 |          0 |          0 |
    bne     be_else.7567                # |         11 |         30 |         11 |          0 |          0 |          4 |
be_then.7567:
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
be_else.7567:
.count stack_load
    load    [$sp - 1], $2               # |         10 |         10 |          0 |          0 |          0 |          0 |
    store   $1, [min_caml_and_net + $2] # |         10 |         30 |         20 |          0 |          0 |          0 |
    add     $2, 1, $2                   # |         10 |         10 |          0 |          0 |          0 |          0 |
    b       read_and_network.2729       # |         10 |         18 |          0 |          0 |          0 |          4 |
.end read_and_network

######################################################################
.begin read_parameter
read_parameter.2731:
    call    read_screen_settings.2712   # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    read_light.2714             # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_all_object.2723        # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_and_network.2729       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_or_network.2727        # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $1, $44                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    ret                                 # |          1 |          7 |          0 |          1 |          0 |          0 |
.end read_parameter

######################################################################
.begin solver_rect_surface
solver_rect_surface.2733:
    load    [$3 + $7], $10              # |    195,256 |    318,136 |          0 |     20,480 |          0 |          0 |
    fcmp    $10, $zero                  # |    195,256 |    585,768 |    390,512 |          0 |          0 |          0 |
    bne     be_else.7568                # |    195,256 |    390,656 |    195,256 |          0 |          0 |         72 |
be_then.7568:
    li      0, $1
    ret
be_else.7568:
.count stack_move
    sub     $sp, 2, $sp                 # |    195,256 |    195,256 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |    195,256 |    390,512 |    195,256 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |    195,256 |    306,238 |          0 |     18,497 |          0 |          0 |
    call    o_param_abc.2655            # |    195,256 |    195,256 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |    195,256 |    389,870 |    194,614 |          0 |          0 |          0 |
    load    [$10 + $8], $11             # |    195,256 |    222,604 |          0 |          0 |      4,558 |          0 |
    load    [$3 + $8], $12              # |    195,256 |    195,256 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |    195,256 |    206,848 |          0 |          0 |      1,932 |          0 |
    call    o_isinvert.2645             # |    195,256 |    195,256 |          0 |          0 |          0 |          0 |
    load    [$3 + $7], $13              # |    195,256 |    195,256 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |    195,256 |    306,238 |          0 |     18,497 |          0 |          0 |
    fcmp    $zero, $13                  # |    195,256 |    372,015 |    176,759 |          0 |          0 |          0 |
    bg      ble_else.7569               # |    195,256 |    429,528 |    195,256 |          0 |          0 |     19,508 |
ble_then.7569:
    li      0, $3                       # |    111,107 |    111,107 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7569               # |    111,107 |    111,959 |          0 |          0 |          0 |        426 |
ble_else.7569:
    li      1, $3                       # |     84,149 |     84,149 |          0 |          0 |          0 |          0 |
ble_cont.7569:
    call    xor.2582                    # |    195,256 |    195,256 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |    195,256 |    195,256 |          0 |          0 |          0 |          0 |
    mov     $13, $2                     # |    195,256 |    306,238 |          0 |     18,497 |          0 |          0 |
    load    [$10 + $7], $3              # |    195,256 |    223,246 |          0 |          0 |      4,665 |          0 |
    call    fneg_cond.2587              # |    195,256 |    195,256 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |    195,256 |    195,256 |          0 |          0 |          0 |          0 |
    fsub    $1, $4, $1                  # |    195,256 |    195,256 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |    195,256 |    223,318 |          0 |          0 |      4,677 |          0 |
    load    [$10 + $9], $4              # |    195,256 |    195,778 |          0 |          0 |         87 |          0 |
    load    [$2 + $7], $3               # |    195,256 |    385,759 |    190,503 |          0 |          0 |          0 |
    load    [$2 + $9], $2               # |    195,256 |    306,238 |          0 |     18,497 |          0 |          0 |
    finv    $3, $3                      # |    195,256 |    372,015 |    176,759 |          0 |          0 |          0 |
    fmul    $1, $3, $1                  # |    195,256 |    976,280 |    781,024 |          0 |          0 |          0 |
    fmul    $1, $12, $3                 # |    195,256 |    976,280 |    781,024 |          0 |          0 |          0 |
    fmul    $1, $2, $2                  # |    195,256 |    195,256 |          0 |          0 |          0 |          0 |
    fadd    $3, $5, $3                  # |    195,256 |    781,024 |    585,768 |          0 |          0 |          0 |
    fadd    $2, $6, $2                  # |    195,256 |    195,256 |          0 |          0 |          0 |          0 |
    fabs    $3, $3                      # |    195,256 |    781,024 |    585,768 |          0 |          0 |          0 |
    fabs    $2, $2                      # |    195,256 |    306,238 |          0 |     18,497 |          0 |          0 |
    fcmp    $11, $3                     # |    195,256 |    195,256 |          0 |          0 |          0 |          0 |
    bg      ble_else.7570               # |    195,256 |    500,812 |    195,256 |          0 |          0 |     55,150 |
ble_then.7570:
    li      0, $1                       # |    134,794 |    134,794 |          0 |          0 |          0 |          0 |
    ret                                 # |    134,794 |    134,794 |          0 |          0 |          0 |          0 |
ble_else.7570:
    fcmp    $4, $2                      # |     60,462 |     60,462 |          0 |          0 |          0 |          0 |
    bg      ble_else.7571               # |     60,462 |    149,050 |     60,462 |          0 |          0 |     14,063 |
ble_then.7571:
    li      0, $1                       # |     34,470 |     34,470 |          0 |          0 |          0 |          0 |
    ret                                 # |     34,470 |     34,470 |          0 |          0 |          0 |          0 |
ble_else.7571:
.count move_float
    mov     $1, $41                     # |     25,992 |     25,992 |          0 |          0 |          0 |          0 |
    li      1, $1                       # |     25,992 |     25,992 |          0 |          0 |          0 |          0 |
    ret                                 # |     25,992 |     25,992 |          0 |          0 |          0 |          0 |
.end solver_rect_surface

######################################################################
.begin solver_rect
solver_rect.2742:
.count stack_move
    sub     $sp, 5, $sp                 # |     74,612 |    141,374 |          0 |     11,127 |          0 |          0 |
    li      0, $7                       # |     74,612 |     74,612 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |     74,612 |     74,612 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 1]               # |     74,612 |     74,612 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 2]               # |     74,612 |    185,594 |          0 |     18,497 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 3]               # |     74,612 |     74,612 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 4]               # |     74,612 |     74,612 |          0 |          0 |          0 |          0 |
    li      1, $8                       # |     74,612 |     74,612 |          0 |          0 |          0 |          0 |
    li      2, $9                       # |     74,612 |     74,612 |          0 |          0 |          0 |          0 |
    call    solver_rect_surface.2733    # |     74,612 |     74,612 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |     74,612 |     74,612 |          0 |          0 |          0 |          0 |
    cmp     $14, 0                      # |     74,612 |     74,612 |          0 |          0 |          0 |          0 |
    bne     be_else.7572                # |     74,612 |    241,721 |     56,115 |     18,497 |          0 |          6 |
be_then.7572:
    li      1, $7                       # |     66,834 |     66,834 |          0 |          0 |          0 |          0 |
    li      2, $8                       # |     66,834 |     66,834 |          0 |          0 |          0 |          0 |
    li      0, $9                       # |     66,834 |     66,834 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $2               # |     66,834 |     66,834 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |     66,834 |     71,040 |          0 |          0 |        701 |          0 |
.count stack_load
    load    [$sp + 2], $4               # |     66,834 |     68,208 |          0 |          0 |        229 |          0 |
.count stack_load
    load    [$sp + 1], $5               # |     66,834 |     67,698 |          0 |          0 |        144 |          0 |
.count stack_load
    load    [$sp + 0], $6               # |     66,834 |    178,182 |          0 |     18,497 |         61 |          0 |
    call    solver_rect_surface.2733    # |     66,834 |     66,834 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |     66,834 |     66,834 |          0 |          0 |          0 |          0 |
    cmp     $14, 0                      # |     66,834 |     66,834 |          0 |          0 |          0 |          0 |
    bne     be_else.7573                # |     66,834 |    143,760 |     66,834 |          0 |          0 |      5,046 |
be_then.7573:
    li      2, $7                       # |     53,810 |     53,810 |          0 |          0 |          0 |          0 |
    li      0, $8                       # |     53,810 |     53,810 |          0 |          0 |          0 |          0 |
    li      1, $9                       # |     53,810 |     53,810 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $2               # |     53,810 |    164,792 |          0 |     18,497 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |     53,810 |     53,810 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $4               # |     53,810 |     53,810 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $5               # |     53,810 |     53,810 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $6               # |     53,810 |     53,810 |          0 |          0 |          0 |          0 |
    call    solver_rect_surface.2733    # |     53,810 |     53,810 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |     53,810 |     53,810 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 5, $sp                 # |     53,810 |     53,810 |          0 |          0 |          0 |          0 |
    bne     be_else.7574                # |     53,810 |    154,990 |          0 |     16,788 |          0 |        226 |
be_then.7574:
    li      0, $1                       # |     48,620 |     48,620 |          0 |          0 |          0 |          0 |
    ret                                 # |     48,620 |     48,620 |          0 |          0 |          0 |          0 |
be_else.7574:
    li      3, $1                       # |      5,190 |      5,190 |          0 |          0 |          0 |          0 |
    ret                                 # |      5,190 |      5,190 |          0 |          0 |          0 |          0 |
be_else.7573:
.count stack_move
    add     $sp, 5, $sp                 # |     13,024 |     17,530 |          0 |        751 |          0 |          0 |
    li      2, $1                       # |     13,024 |     13,024 |          0 |          0 |          0 |          0 |
    ret                                 # |     13,024 |     13,024 |          0 |          0 |          0 |          0 |
be_else.7572:
.count stack_move
    add     $sp, 5, $sp                 # |      7,778 |     28,682 |          0 |      3,484 |          0 |          0 |
    li      1, $1                       # |      7,778 |      7,778 |          0 |          0 |          0 |          0 |
    ret                                 # |      7,778 |      7,778 |          0 |          0 |          0 |          0 |
.end solver_rect

######################################################################
.begin solver_surface
solver_surface.2748:
.count stack_move
    sub     $sp, 3, $sp                 # |     24,693 |    109,023 |          0 |     14,055 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 0]               # |     24,693 |     49,386 |     24,693 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 1]               # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 2]               # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
    call    o_param_abc.2655            # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     24,693 |    141,752 |      6,077 |     18,497 |          0 |          0 |
.count move_args
    mov     $3, $2                      # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $3                     # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
    call    veciprod.2614               # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |     24,693 |     98,772 |     74,079 |          0 |          0 |          0 |
    fcmp    $11, $zero                  # |     24,693 |     24,693 |          0 |          0 |          0 |          0 |
    bg      ble_else.7575               # |     24,693 |     51,794 |     24,693 |          0 |          0 |      1,204 |
ble_then.7575:
.count stack_move
    add     $sp, 3, $sp                 # |      7,535 |      7,535 |          0 |          0 |          0 |          0 |
    li      0, $1                       # |      7,535 |     51,317 |          0 |      7,297 |          0 |          0 |
    ret                                 # |      7,535 |      7,535 |          0 |          0 |          0 |          0 |
ble_else.7575:
.count stack_load
    load    [$sp + 2], $3               # |     17,158 |     84,358 |          0 |     11,200 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $4               # |     17,158 |     18,748 |          0 |          0 |        265 |          0 |
.count stack_load
    load    [$sp + 0], $5               # |     17,158 |     18,820 |          0 |          0 |        277 |          0 |
.count move_args
    mov     $10, $2                     # |     17,158 |     17,158 |          0 |          0 |          0 |          0 |
    call    veciprod2.2617              # |     17,158 |     17,158 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |     17,158 |     68,632 |     51,474 |          0 |          0 |          0 |
    call    fneg.2580                   # |     17,158 |     17,158 |          0 |          0 |          0 |          0 |
    finv    $11, $2                     # |     17,158 |     17,158 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 3, $sp                 # |     17,158 |     17,158 |          0 |          0 |          0 |          0 |
    fmul    $1, $2, $1                  # |     17,158 |     68,632 |     51,474 |          0 |          0 |          0 |
.count move_float
    mov     $1, $41                     # |     17,158 |     85,790 |     68,632 |          0 |          0 |          0 |
    li      1, $1                       # |     17,158 |     17,158 |          0 |          0 |          0 |          0 |
    ret                                 # |     17,158 |     17,158 |          0 |          0 |          0 |          0 |
.end solver_surface

######################################################################
.begin quadratic
quadratic.2754:
.count stack_move
    sub     $sp, 2, $sp                 # |  3,445,835 |  3,556,817 |          0 |     18,497 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |  3,445,835 |  6,984,155 |  3,427,338 |     18,497 |          0 |          0 |
.count move_args
    mov     $3, $2                      # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
    call    fsqr.2578                   # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |  3,445,835 | 13,783,340 | 10,337,505 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |  3,445,835 |  3,746,039 |          0 |          0 |     50,034 |          0 |
    call    o_param_a.2649              # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |  3,445,835 |  6,451,438 |  3,005,603 |          0 |          0 |          0 |
    fmul    $10, $11, $10               # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $4, $2                      # |  3,445,835 |  7,575,341 |          0 |    688,251 |          0 |          0 |
    call    fsqr.2578                   # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |  3,445,835 | 13,783,340 | 10,337,505 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
    call    o_param_b.2651              # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |  3,445,835 |  6,820,403 |  3,374,568 |          0 |          0 |          0 |
    fmul    $11, $12, $11               # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $5, $2                      # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
    fadd    $10, $11, $10               # |  3,445,835 | 16,359,341 |  7,761,504 |    858,667 |          0 |          0 |
    call    fsqr.2578                   # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |  3,445,835 | 13,783,340 | 10,337,505 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
    call    o_param_c.2653              # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |  3,445,835 |  6,839,297 |  3,393,462 |          0 |          0 |          0 |
    fmul    $11, $12, $11               # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
    call    o_isrot.2647                # |  3,445,835 |  7,299,215 |          0 |    642,230 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |  3,445,835 |  6,645,404 |  3,199,569 |          0 |          0 |          0 |
    cmp     $12, 0                      # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
    fmul    $4, $5, $13                 # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
    fadd    $10, $11, $1                # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
    bne     be_else.7576                # |  3,445,835 |  3,445,917 |          0 |          0 |          0 |         41 |
be_then.7576:
.count stack_move
    add     $sp, 2, $sp                 # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
    ret                                 # |  3,445,835 |  3,445,835 |          0 |          0 |          0 |          0 |
be_else.7576:
.count stack_store
    store   $1, [$sp + 1]
.count stack_load
    load    [$sp + 0], $2
    call    o_param_r1.2673
.count move_ret
    mov     $1, $10
    fmul    $13, $10, $10
    fmul    $5, $3, $11
.count stack_load
    load    [$sp + 1], $12
.count stack_load
    load    [$sp + 0], $2
    fadd    $12, $10, $10
    call    o_param_r2.2675
.count move_ret
    mov     $1, $12
    fmul    $11, $12, $11
    fmul    $3, $4, $12
.count stack_load
    load    [$sp + 0], $2
    fadd    $10, $11, $10
    call    o_param_r3.2677
    fmul    $12, $1, $1
.count stack_move
    add     $sp, 2, $sp
    fadd    $10, $1, $1
    ret
.end quadratic

######################################################################
.begin bilinear
bilinear.2759:
.count stack_move
    sub     $sp, 2, $sp                 # |     74,269 |    140,551 |          0 |     11,047 |          0 |          0 |
    fmul    $3, $6, $10                 # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    call    o_param_a.2649              # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |     74,269 |    204,548 |     63,067 |     11,202 |          0 |          0 |
    fmul    $4, $7, $12                 # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $10, $11, $10               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    call    o_param_b.2651              # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |     74,269 |    148,538 |     74,269 |          0 |          0 |          0 |
    fmul    $12, $11, $11               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $5, $8, $12                 # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |     74,269 |    141,481 |          0 |     11,202 |          0 |          0 |
    fadd    $10, $11, $10               # |     74,269 |    200,403 |    126,134 |          0 |          0 |          0 |
    call    o_param_c.2653              # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |     74,269 |    148,538 |     74,269 |          0 |          0 |          0 |
    fmul    $12, $11, $11               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    call    o_isrot.2647                # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |     74,269 |    148,538 |     74,269 |          0 |          0 |          0 |
    cmp     $12, 0                      # |     74,269 |    141,481 |          0 |     11,202 |          0 |          0 |
    fmul    $5, $7, $13                 # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fmul    $4, $8, $14                 # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    fadd    $10, $11, $1                # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    bne     be_else.7577                # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
be_then.7577:
.count stack_move
    add     $sp, 2, $sp                 # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    ret                                 # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
be_else.7577:
.count stack_store
    store   $1, [$sp + 1]
    fadd    $13, $14, $10
.count stack_load
    load    [$sp + 0], $2
    call    o_param_r1.2673
.count move_ret
    mov     $1, $11
    fmul    $3, $8, $12
    fmul    $5, $6, $13
    fmul    $10, $11, $10
.count stack_load
    load    [$sp + 0], $2
    fadd    $12, $13, $11
    call    o_param_r2.2675
.count move_ret
    mov     $1, $12
    fmul    $3, $7, $13
    fmul    $4, $6, $14
    fmul    $11, $12, $11
.count stack_load
    load    [$sp + 0], $2
    fadd    $13, $14, $12
    fadd    $10, $11, $10
    call    o_param_r3.2677
.count move_ret
    mov     $1, $11
    fmul    $12, $11, $11
    fadd    $10, $11, $2
    call    fhalf.2576
.count stack_move
    add     $sp, 2, $sp
.count stack_load
    load    [$sp - 1], $2
    fadd    $2, $1, $1
    ret
.end bilinear

######################################################################
.begin solver_second
solver_second.2767:
.count stack_move
    sub     $sp, 7, $sp                 # |     74,269 |    141,481 |          0 |     11,202 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 0]               # |     74,269 |    148,538 |     74,269 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 1]               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 3]               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $14               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $4                # |     74,269 |     74,971 |          0 |        117 |          0 |          0 |
    load    [$3 + 2], $5                # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $14, $3                     # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    call    quadratic.2754              # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |     74,269 |    148,497 |     74,228 |          0 |          0 |          0 |
    fcmp    $15, $zero                  # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    bne     be_else.7578                # |     74,269 |    189,636 |     74,269 |          0 |          0 |     20,549 |
be_then.7578:
.count stack_move
    add     $sp, 7, $sp
    li      0, $1
    ret
be_else.7578:
.count stack_store
    store   $6, [$sp + 4]               # |     74,269 |     74,971 |          0 |        117 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $16              # |     74,269 |     74,275 |          0 |          0 |          1 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $7               # |     74,269 |     74,665 |          0 |          0 |         66 |          0 |
    load    [$16 + 0], $3               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$16 + 1], $4               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    load    [$16 + 2], $5               # |     74,269 |     74,971 |          0 |        117 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $16              # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $6, $8                      # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $16, $6                     # |     74,269 |    148,538 |     74,269 |          0 |          0 |          0 |
    call    bilinear.2759               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     74,269 |    148,538 |     74,269 |          0 |          0 |          0 |
    mov     $10, $2                     # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 5]               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    call    fsqr.2578                   # |     74,269 |     74,971 |          0 |        117 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     74,269 |    297,076 |    222,807 |          0 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 6]              # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    call    o_form.2641                 # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |     74,269 |    148,538 |     74,269 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |     74,269 |     74,971 |          0 |        117 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $5               # |     74,269 |     74,383 |          0 |          0 |         19 |          0 |
    call    quadratic.2754              # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    cmp     $14, 3                      # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
    bne     be_cont.7579                # |     74,269 |     74,273 |          0 |          0 |          0 |          2 |
be_then.7579:
    fsub    $10, $36, $10               # |     74,269 |     74,269 |          0 |          0 |          0 |          0 |
be_cont.7579:
    fmul    $15, $10, $10               # |     74,269 |    371,345 |    297,076 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $11              # |     74,269 |     74,971 |          0 |        117 |          0 |          0 |
    fsub    $11, $10, $10               # |     74,269 |    296,959 |    222,690 |          0 |          0 |          0 |
    fcmp    $10, $zero                  # |     74,269 |    371,345 |    297,076 |          0 |          0 |          0 |
    bg      ble_else.7580               # |     74,269 |    180,230 |     74,269 |          0 |          0 |     15,846 |
ble_then.7580:
.count stack_move
    add     $sp, 7, $sp                 # |     62,376 |     62,376 |          0 |          0 |          0 |          0 |
    li      0, $1                       # |     62,376 |     62,376 |          0 |          0 |          0 |          0 |
    ret                                 # |     62,376 |     62,376 |          0 |          0 |          0 |          0 |
ble_else.7580:
.count stack_load
    load    [$sp + 2], $2               # |     11,893 |     11,893 |          0 |          0 |          0 |          0 |
    call    o_isinvert.2645             # |     11,893 |     12,439 |          0 |         91 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |     11,893 |     23,769 |     11,876 |          0 |          0 |          0 |
    cmp     $11, 0                      # |     11,893 |     11,893 |          0 |          0 |          0 |          0 |
    fsqrt   $10, $2                     # |     11,893 |     11,893 |          0 |          0 |          0 |          0 |
    bne     be_else.7581                # |     11,893 |     18,035 |          0 |          0 |          0 |      3,071 |
be_then.7581:
    call    fneg.2580                   # |      9,138 |      9,138 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7581                # |      9,138 |      9,142 |          0 |          0 |          0 |          2 |
be_else.7581:
    mov     $2, $1                      # |      2,755 |      8,736 |      5,981 |          0 |          0 |          0 |
be_cont.7581:
.count stack_move
    add     $sp, 7, $sp                 # |     11,893 |     12,439 |          0 |         91 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |     11,893 |     23,786 |     11,893 |          0 |          0 |          0 |
    fsub    $1, $2, $1                  # |     11,893 |     35,679 |     23,786 |          0 |          0 |          0 |
    finv    $15, $2                     # |     11,893 |     11,893 |          0 |          0 |          0 |          0 |
    fmul    $1, $2, $1                  # |     11,893 |     59,465 |     47,572 |          0 |          0 |          0 |
.count move_float
    mov     $1, $41                     # |     11,893 |     59,465 |     47,572 |          0 |          0 |          0 |
    li      1, $1                       # |     11,893 |     11,893 |          0 |          0 |          0 |          0 |
    ret                                 # |     11,893 |     11,893 |          0 |          0 |          0 |          0 |
.end solver_second

######################################################################
.begin solver
solver.2773:
    load    [min_caml_objects + $2], $2 # |    173,574 |    179,082 |          0 |        117 |        801 |          0 |
.count stack_move
    sub     $sp, 1, $sp                 # |    173,574 |    173,574 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp + 0], $10  # |    173,574 |    227,526 |          0 |          0 |      8,992 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |    173,574 |    173,574 |          0 |          0 |          0 |          0 |
    call    o_param_x.2657              # |    173,574 |    173,574 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |    173,574 |    330,033 |    156,459 |          0 |          0 |          0 |
    load    [min_caml_startp + 1], $12  # |    173,574 |    175,452 |          0 |          0 |        313 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    173,574 |    183,066 |          0 |          0 |      1,582 |          0 |
    call    o_param_y.2659              # |    173,574 |    174,270 |          0 |        116 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |    173,574 |    337,027 |    163,453 |          0 |          0 |          0 |
    load    [min_caml_startp + 2], $14  # |    173,574 |    173,670 |          0 |          0 |         16 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    173,574 |    173,574 |          0 |          0 |          0 |          0 |
    call    o_param_z.2661              # |    173,574 |    173,574 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |    173,574 |    342,829 |    169,255 |          0 |          0 |          0 |
    fsub    $10, $11, $10               # |    173,574 |    173,574 |          0 |          0 |          0 |          0 |
    fsub    $12, $13, $11               # |    173,574 |    173,574 |          0 |          0 |          0 |          0 |
    fsub    $14, $15, $12               # |    173,574 |    174,270 |          0 |        116 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    173,574 |    173,574 |          0 |          0 |          0 |          0 |
    call    o_form.2641                 # |    173,574 |    173,574 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |    173,574 |    340,483 |    166,909 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |    173,574 |    173,574 |          0 |          0 |          0 |          0 |
    cmp     $15, 1                      # |    173,574 |    173,574 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $4                     # |    173,574 |    173,574 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $5                     # |    173,574 |    173,574 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $12, $6                     # |    173,574 |    173,580 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $2               # |    173,574 |    173,574 |          0 |          0 |          0 |          0 |
    be      solver_rect.2742            # |    173,574 |    213,832 |          0 |          0 |          0 |     20,129 |
    cmp     $15, 2                      # |     98,962 |     98,962 |          0 |          0 |          0 |          0 |
    be      solver_surface.2748         # |     98,962 |    218,728 |     98,962 |          0 |          0 |     10,402 |
    b       solver_second.2767          # |     74,269 |     74,305 |          0 |          0 |          0 |         18 |
.end solver

######################################################################
.begin solver_rect_fast
solver_rect_fast.2777:
.count stack_move
    sub     $sp, 1, $sp                 # |  7,089,634 |  7,092,706 |          0 |        512 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |  7,089,634 | 14,179,268 |  7,089,634 |          0 |          0 |          0 |
    call    o_param_b.2651              # |  7,089,634 |  7,101,610 |          0 |      1,996 |          0 |          0 |
    load    [$4 + 0], $12               # |  7,089,634 | 40,596,844 |          0 |          0 |  5,584,535 |          0 |
.count move_ret
    mov     $1, $10                     # |  7,089,634 |  7,089,634 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $11               # |  7,089,634 |  8,533,960 |          0 |          0 |    240,721 |          0 |
    fsub    $12, $5, $12                # |  7,089,634 |  7,089,634 |          0 |          0 |          0 |          0 |
    load    [$4 + 1], $13               # |  7,089,634 |  7,211,998 |          0 |          0 |     20,394 |          0 |
    fmul    $12, $13, $12               # |  7,089,634 | 28,297,354 | 21,207,720 |          0 |          0 |          0 |
    fmul    $12, $11, $11               # |  7,089,634 | 35,448,170 | 28,358,536 |          0 |          0 |          0 |
    fadd    $11, $6, $11                # |  7,089,634 | 35,452,162 | 28,350,552 |      1,996 |          0 |          0 |
    fabs    $11, $11                    # |  7,089,634 | 35,448,170 | 28,358,536 |          0 |          0 |          0 |
    fcmp    $10, $11                    # |  7,089,634 | 14,179,268 |  7,089,634 |          0 |          0 |          0 |
    bg      ble_else.7584               # |  7,089,634 | 18,882,990 |  7,089,634 |          0 |          0 |  2,351,861 |
ble_then.7584:
    li      0, $11                      # |  5,128,546 |  5,128,546 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7584               # |  5,128,546 |  5,128,586 |          0 |          0 |          0 |         20 |
ble_else.7584:
.count stack_load
    load    [$sp + 0], $2               # |  1,961,088 |  1,978,440 |          0 |          0 |      2,892 |          0 |
    call    o_param_c.2653              # |  1,961,088 |  1,961,088 |          0 |          0 |          0 |          0 |
    load    [$3 + 2], $13               # |  1,961,088 |  3,288,672 |          0 |      1,944 |    219,320 |          0 |
.count move_ret
    mov     $1, $11                     # |  1,961,088 |  1,961,088 |          0 |          0 |          0 |          0 |
    load    [$4 + 1], $14               # |  1,961,088 |  1,977,108 |          0 |          0 |      2,670 |          0 |
    fmul    $12, $13, $13               # |  1,961,088 |  1,961,088 |          0 |          0 |          0 |          0 |
    fadd    $13, $7, $13                # |  1,961,088 |  9,805,440 |  7,844,352 |          0 |          0 |          0 |
    fabs    $13, $13                    # |  1,961,088 |  9,805,440 |  7,844,352 |          0 |          0 |          0 |
    fcmp    $11, $13                    # |  1,961,088 |  3,922,176 |  1,961,088 |          0 |          0 |          0 |
    bg      ble_else.7585               # |  1,961,088 |  5,035,164 |  1,961,088 |          0 |          0 |    556,494 |
ble_then.7585:
    li      0, $11                      # |    705,659 |    706,523 |          0 |        144 |          0 |          0 |
.count b_cont
    b       ble_cont.7585               # |    705,659 |    901,737 |          0 |          0 |          0 |     98,039 |
ble_else.7585:
    fcmp    $14, $zero                  # |  1,255,429 |  1,261,465 |          0 |      1,006 |          0 |          0 |
    bne     be_else.7586                # |  1,255,429 |  2,510,882 |  1,255,429 |          0 |          0 |         12 |
be_then.7586:
    li      0, $11
.count b_cont
    b       be_cont.7586
be_else.7586:
    li      1, $11                      # |  1,255,429 |  1,255,429 |          0 |          0 |          0 |          0 |
be_cont.7586:
ble_cont.7585:
ble_cont.7584:
    cmp     $11, 0                      # |  7,089,634 |  8,350,055 |  1,255,429 |        832 |          0 |          0 |
    bne     be_else.7587                # |  7,089,634 | 14,197,340 |  7,087,690 |      1,944 |          0 |      4,176 |
be_then.7587:
.count stack_load
    load    [$sp + 0], $2               # |  5,834,205 |  5,882,325 |          0 |          0 |      8,020 |          0 |
    call    o_param_a.2649              # |  5,834,205 |  5,834,205 |          0 |          0 |          0 |          0 |
    load    [$4 + 2], $13               # |  5,834,205 |  6,086,469 |          0 |          0 |     42,044 |          0 |
.count move_ret
    mov     $1, $11                     # |  5,834,205 |  5,834,205 |          0 |          0 |          0 |          0 |
    load    [$3 + 0], $12               # |  5,834,205 |  6,985,515 |          0 |          0 |    191,885 |          0 |
    fsub    $13, $6, $13                # |  5,834,205 |  5,834,205 |          0 |          0 |          0 |          0 |
    load    [$4 + 3], $14               # |  5,834,205 |  6,281,265 |          0 |          0 |     74,510 |          0 |
    fmul    $13, $14, $13               # |  5,834,205 | 23,118,879 | 17,273,496 |      1,863 |          0 |          0 |
    fmul    $13, $12, $12               # |  5,834,205 | 29,171,025 | 23,336,820 |          0 |          0 |          0 |
    fadd    $12, $5, $12                # |  5,834,205 | 29,171,025 | 23,336,820 |          0 |          0 |          0 |
    fabs    $12, $12                    # |  5,834,205 | 29,171,025 | 23,336,820 |          0 |          0 |          0 |
    fcmp    $11, $12                    # |  5,834,205 | 11,668,410 |  5,834,205 |          0 |          0 |          0 |
    bg      ble_else.7588               # |  5,834,205 | 14,930,816 |  5,834,205 |          0 |          0 |  1,631,203 |
ble_then.7588:
    li      0, $1                       # |  3,111,447 |  3,111,447 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7588               # |  3,111,447 |  3,133,487 |          0 |          0 |          0 |     11,020 |
ble_else.7588:
.count stack_load
    load    [$sp + 0], $2               # |  2,722,758 |  2,882,688 |          0 |     25,371 |      1,284 |          0 |
    call    o_param_c.2653              # |  2,722,758 |  2,722,758 |          0 |          0 |          0 |          0 |
    load    [$3 + 2], $2                # |  2,722,758 |  3,904,194 |          0 |          0 |    196,906 |          0 |
    load    [$4 + 3], $8                # |  2,722,758 |  2,755,326 |          0 |          0 |      5,428 |          0 |
    fmul    $13, $2, $2                 # |  2,722,758 |  5,244,365 |  2,521,607 |          0 |          0 |          0 |
    fadd    $2, $7, $2                  # |  2,722,758 | 13,613,790 | 10,891,032 |          0 |          0 |          0 |
    fabs    $2, $2                      # |  2,722,758 | 13,613,790 | 10,891,032 |          0 |          0 |          0 |
    fcmp    $1, $2                      # |  2,722,758 |  5,445,516 |  2,722,758 |          0 |          0 |          0 |
    bg      ble_else.7589               # |  2,722,758 |  7,421,846 |  2,720,946 |      1,812 |          0 |    983,635 |
ble_then.7589:
    li      0, $1                       # |    874,709 |    874,709 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7589               # |    874,709 |    874,713 |          0 |          0 |          0 |          2 |
ble_else.7589:
    fcmp    $8, $zero                   # |  1,848,049 |  1,848,049 |          0 |          0 |          0 |          0 |
    bne     be_else.7590                # |  1,848,049 |  3,696,102 |  1,848,049 |          0 |          0 |          2 |
be_then.7590:
    li      0, $1
.count b_cont
    b       be_cont.7590
be_else.7590:
    li      1, $1                       # |  1,848,049 |  1,848,049 |          0 |          0 |          0 |          0 |
be_cont.7590:
ble_cont.7589:
ble_cont.7588:
    cmp     $1, 0                       # |  5,834,205 |  7,692,778 |  1,847,701 |      1,812 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |  5,834,205 |  5,834,205 |          0 |          0 |          0 |          0 |
    bne     be_else.7591                # |  5,834,205 |  5,834,209 |          0 |          0 |          0 |          2 |
be_then.7591:
    load    [$4 + 4], $2                # |  3,986,156 | 22,293,278 |          0 |          0 |  3,051,187 |          0 |
    load    [$3 + 0], $1                # |  3,986,156 |  4,013,912 |          0 |          0 |      4,626 |          0 |
    load    [$4 + 5], $8                # |  3,986,156 |  4,367,672 |          0 |          0 |     63,586 |          0 |
    fsub    $2, $7, $2                  # |  3,986,156 |  3,986,156 |          0 |          0 |          0 |          0 |
    load    [$3 + 1], $3                # |  3,986,156 |  3,998,228 |          0 |          0 |      2,012 |          0 |
    load    [$4 + 5], $4                # |  3,986,156 |  3,999,962 |          0 |      1,441 |        860 |          0 |
    fmul    $2, $8, $2                  # |  3,986,156 | 11,951,562 |  7,965,406 |          0 |          0 |          0 |
    fmul    $2, $1, $1                  # |  3,986,156 | 19,930,780 | 15,944,624 |          0 |          0 |          0 |
    fmul    $2, $3, $3                  # |  3,986,156 |  3,986,156 |          0 |          0 |          0 |          0 |
    fadd    $1, $5, $1                  # |  3,986,156 | 15,944,624 | 11,958,468 |          0 |          0 |          0 |
    fadd    $3, $6, $3                  # |  3,986,156 |  3,986,156 |          0 |          0 |          0 |          0 |
    fabs    $1, $1                      # |  3,986,156 | 15,944,624 | 11,958,468 |          0 |          0 |          0 |
    fabs    $3, $3                      # |  3,986,156 |  3,986,156 |          0 |          0 |          0 |          0 |
    fcmp    $11, $1                     # |  3,986,156 |  3,992,540 |          0 |      1,064 |          0 |          0 |
    bg      ble_else.7592               # |  3,986,156 |  9,806,244 |  3,986,156 |          0 |          0 |    916,966 |
ble_then.7592:
    li      0, $1                       # |  3,053,279 |  3,053,279 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7592               # |  3,053,279 |  3,063,301 |          0 |          0 |          0 |      5,011 |
ble_else.7592:
    fcmp    $10, $3                     # |    932,877 |    932,877 |          0 |          0 |          0 |          0 |
    bg      ble_else.7593               # |    932,877 |  2,318,220 |    932,877 |          0 |          0 |    226,233 |
ble_then.7593:
    li      0, $1                       # |    455,572 |    455,572 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7593               # |    455,572 |    455,958 |          0 |          0 |          0 |        193 |
ble_else.7593:
    fcmp    $4, $zero                   # |    477,305 |    477,797 |          0 |         82 |          0 |          0 |
    bne     be_else.7594                # |    477,305 |    954,618 |    477,305 |          0 |          0 |          4 |
be_then.7594:
    li      0, $1
.count b_cont
    b       be_cont.7594
be_else.7594:
    li      1, $1                       # |    477,305 |    477,305 |          0 |          0 |          0 |          0 |
be_cont.7594:
ble_cont.7593:
ble_cont.7592:
    cmp     $1, 0                       # |  3,986,156 |  4,471,615 |    477,305 |      1,359 |          0 |          0 |
    bne     be_else.7595                # |  3,986,156 |  7,981,390 |  3,986,156 |          0 |          0 |      4,539 |
be_then.7595:
    li      0, $1                       # |  3,508,851 |  3,508,851 |          0 |          0 |          0 |          0 |
    ret                                 # |  3,508,851 |  3,512,187 |          0 |        556 |          0 |          0 |
be_else.7595:
.count move_float
    mov     $2, $41                     # |    477,305 |    477,743 |          0 |         73 |          0 |          0 |
    li      3, $1                       # |    477,305 |    477,305 |          0 |          0 |          0 |          0 |
    ret                                 # |    477,305 |    477,305 |          0 |          0 |          0 |          0 |
be_else.7591:
.count move_float
    mov     $13, $41                    # |  1,848,049 |  1,849,141 |          0 |        182 |          0 |          0 |
    li      2, $1                       # |  1,848,049 |  1,848,049 |          0 |          0 |          0 |          0 |
    ret                                 # |  1,848,049 |  1,848,049 |          0 |          0 |          0 |          0 |
be_else.7587:
.count stack_move
    add     $sp, 1, $sp                 # |  1,255,429 |  1,261,435 |          0 |      1,001 |          0 |          0 |
.count move_float
    mov     $12, $41                    # |  1,255,429 |  1,264,387 |          0 |      1,493 |          0 |          0 |
    li      1, $1                       # |  1,255,429 |  1,255,429 |          0 |          0 |          0 |          0 |
    ret                                 # |  1,255,429 |  1,255,429 |          0 |          0 |          0 |          0 |
.end solver_rect_fast

######################################################################
.begin solver_surface_fast
solver_surface_fast.2784:
    load    [$2 + 0], $1                # |    566,303 |    782,027 |          0 |        319 |     35,635 |          0 |
    load    [$2 + 1], $6                # |    566,303 |    572,687 |          0 |          0 |      1,064 |          0 |
    load    [$2 + 2], $7                # |    566,303 |    623,627 |          0 |          0 |      9,554 |          0 |
    fcmp    $zero, $1                   # |    566,303 |    566,303 |          0 |          0 |          0 |          0 |
    bg      ble_else.7596               # |    566,303 |  1,132,610 |    566,303 |          0 |          0 |          2 |
ble_then.7596:
    li      0, $1                       # |     11,416 |     11,524 |          0 |         18 |          0 |          0 |
    ret                                 # |     11,416 |     11,416 |          0 |          0 |          0 |          0 |
ble_else.7596:
    fmul    $6, $3, $1                  # |    554,887 |    565,441 |          0 |      1,759 |          0 |          0 |
    fmul    $7, $4, $3                  # |    554,887 |    554,887 |          0 |          0 |          0 |          0 |
    load    [$2 + 3], $2                # |    554,887 |    597,193 |          0 |          0 |      7,051 |          0 |
    fmul    $2, $5, $2                  # |    554,887 |  1,650,559 |  1,095,672 |          0 |          0 |          0 |
    fadd    $1, $3, $1                  # |    554,887 |    554,887 |          0 |          0 |          0 |          0 |
    fadd    $1, $2, $1                  # |    554,887 |  2,774,435 |  2,219,548 |          0 |          0 |          0 |
.count move_float
    mov     $1, $41                     # |    554,887 |  2,777,059 |  2,214,300 |      1,312 |          0 |          0 |
    li      1, $1                       # |    554,887 |    554,887 |          0 |          0 |          0 |          0 |
    ret                                 # |    554,887 |    554,887 |          0 |          0 |          0 |          0 |
.end solver_surface_fast

######################################################################
.begin solver_second_fast
solver_second_fast.2790:
    load    [$3 + 0], $10               # |  1,619,496 |  7,954,986 |          0 |        465 |  1,055,450 |          0 |
    load    [$3 + 1], $11               # |  1,619,496 |  1,823,862 |          0 |          0 |     34,061 |          0 |
    load    [$3 + 2], $12               # |  1,619,496 |  1,715,148 |          0 |          0 |     15,942 |          0 |
    fcmp    $10, $zero                  # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
    bne     be_else.7597                # |  1,619,496 |  3,239,130 |  1,619,496 |          0 |          0 |         69 |
be_then.7597:
    li      0, $1
    ret
be_else.7597:
.count stack_move
    sub     $sp, 5, $sp                 # |  1,619,496 |  1,625,142 |          0 |        941 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |  1,619,496 |  3,238,992 |  1,619,496 |          0 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 1]              # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
    fmul    $11, $4, $10                # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
    fmul    $12, $5, $11                # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
    load    [$3 + 3], $12               # |  1,619,496 |  1,683,222 |          0 |        941 |      9,680 |          0 |
    fmul    $12, $6, $12                # |  1,619,496 |  4,839,128 |  3,219,632 |          0 |          0 |          0 |
    fadd    $10, $11, $10               # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
    fadd    $10, $12, $2                # |  1,619,496 |  8,097,480 |  6,477,984 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 3]               # |  1,619,496 |  8,097,480 |  6,477,984 |          0 |          0 |          0 |
    call    fsqr.2578                   # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |  1,619,496 |  6,477,984 |  4,858,488 |          0 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 4]              # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |  1,619,496 |  1,625,142 |          0 |        941 |          0 |          0 |
    call    o_form.2641                 # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |  1,619,496 |  3,238,992 |  1,619,496 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $4, $3                      # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $5, $4                      # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $6, $5                      # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
    call    quadratic.2754              # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
    cmp     $14, 3                      # |  1,619,496 |  1,619,502 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
    bne     be_cont.7598                # |  1,619,496 |  1,625,812 |          0 |          0 |          0 |      3,158 |
be_then.7598:
    fsub    $10, $36, $10               # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
be_cont.7598:
.count stack_load
    load    [$sp + 1], $11              # |  1,619,496 |  1,621,380 |          0 |          0 |        314 |          0 |
    fmul    $11, $10, $10               # |  1,619,496 |  6,477,042 |  4,857,546 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $11              # |  1,619,496 |  1,619,664 |          0 |          0 |         28 |          0 |
    fsub    $11, $10, $10               # |  1,619,496 |  6,477,900 |  4,858,404 |          0 |          0 |          0 |
    fcmp    $10, $zero                  # |  1,619,496 |  8,097,482 |  6,477,980 |          1 |          0 |          0 |
    bg      ble_else.7599               # |  1,619,496 |  3,411,706 |  1,619,496 |          0 |          0 |     86,357 |
ble_then.7599:
.count stack_move
    add     $sp, 5, $sp                 # |  1,270,526 |  1,270,526 |          0 |          0 |          0 |          0 |
    li      0, $1                       # |  1,270,526 |  1,270,526 |          0 |          0 |          0 |          0 |
    ret                                 # |  1,270,526 |  1,270,526 |          0 |          0 |          0 |          0 |
ble_else.7599:
.count stack_load
    load    [$sp + 2], $2               # |    348,970 |    348,970 |          0 |          0 |          0 |          0 |
    call    o_isinvert.2645             # |    348,970 |    348,970 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 5, $sp                 # |    348,970 |    348,970 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    348,970 |    348,976 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 5], $2               # |    348,970 |    349,066 |          0 |          0 |         16 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |    348,970 |    348,970 |          0 |          0 |          0 |          0 |
    fsqrt   $10, $1                     # |    348,970 |    348,970 |          0 |          0 |          0 |          0 |
    load    [$2 + 4], $2                # |    348,970 |  1,306,270 |          0 |          0 |    159,550 |          0 |
    bne     be_else.7600                # |    348,970 |    503,366 |          0 |          0 |          0 |     77,198 |
be_then.7600:
    fsub    $3, $1, $1                  # |    278,785 |    567,763 |    288,978 |          0 |          0 |          0 |
    fmul    $1, $2, $1                  # |    278,785 |  1,393,925 |  1,115,140 |          0 |          0 |          0 |
.count move_float
    mov     $1, $41                     # |    278,785 |  1,393,925 |  1,115,140 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7600                # |    278,785 |    278,789 |          0 |          0 |          0 |          2 |
be_else.7600:
    fadd    $3, $1, $1                  # |     70,185 |     85,249 |     15,064 |          0 |          0 |          0 |
    fmul    $1, $2, $1                  # |     70,185 |    350,925 |    280,740 |          0 |          0 |          0 |
.count move_float
    mov     $1, $41                     # |     70,185 |    350,925 |    280,740 |          0 |          0 |          0 |
be_cont.7600:
    li      1, $1                       # |    348,970 |    348,970 |          0 |          0 |          0 |          0 |
    ret                                 # |    348,970 |    348,970 |          0 |          0 |          0 |          0 |
.end solver_second_fast

######################################################################
.begin solver_fast
solver_fast.2796:
.count stack_move
    sub     $sp, 3, $sp                 # |  4,266,905 |  4,278,269 |          0 |      1,894 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |  4,266,905 |  8,543,280 |  4,265,011 |      1,894 |          0 |          0 |
    load    [min_caml_objects + $2], $2 # |  4,266,905 |  4,421,087 |          0 |          0 |     25,697 |          0 |
    load    [min_caml_intersection_point + 0], $10# |  4,266,905 |  4,496,723 |          0 |          0 |     38,303 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |  4,266,905 |  8,469,841 |  4,202,936 |          0 |          0 |          0 |
    call    o_param_x.2657              # |  4,266,905 |  4,266,905 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |  4,266,905 |  8,311,662 |  4,044,757 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 1], $12# |  4,266,905 |  4,293,317 |          0 |          0 |      4,402 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |  4,266,905 |  4,340,573 |          0 |          0 |     12,278 |          0 |
    call    o_param_y.2659              # |  4,266,905 |  4,441,889 |          0 |     29,164 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |  4,266,905 |  8,042,924 |  3,776,019 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $14# |  4,266,905 |  4,275,875 |          0 |          0 |      1,495 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |  4,266,905 |  4,266,905 |          0 |          0 |          0 |          0 |
    call    o_param_z.2661              # |  4,266,905 |  4,266,905 |          0 |          0 |          0 |          0 |
    li      min_caml_light_dirvec, $2   # |  4,266,905 |  4,266,905 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |  4,266,905 |  4,266,905 |          0 |          0 |          0 |          0 |
    fsub    $10, $11, $10               # |  4,266,905 |  4,266,905 |          0 |          0 |          0 |          0 |
    fsub    $12, $13, $11               # |  4,266,905 |  4,431,047 |          0 |     27,357 |          0 |          0 |
    fsub    $14, $15, $12               # |  4,266,905 |  4,266,905 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |  4,266,905 |  4,266,905 |          0 |          0 |          0 |          0 |
    call    d_const.2702                # |  4,266,905 |  4,266,905 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $14              # |  4,266,905 |  4,308,773 |          0 |          0 |      6,978 |          0 |
.count move_ret
    mov     $1, $13                     # |  4,266,905 |  4,266,905 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |  4,266,905 |  4,266,905 |          0 |          0 |          0 |          0 |
    load    [$13 + $14], $13            # |  4,266,905 |  5,262,539 |          0 |          0 |    165,939 |          0 |
    call    o_form.2641                 # |  4,266,905 |  4,365,215 |          0 |     16,385 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |  4,266,905 |  8,465,989 |  4,199,084 |          0 |          0 |          0 |
    cmp     $14, 1                      # |  4,266,905 |  4,266,905 |          0 |          0 |          0 |          0 |
    bne     be_else.7601                # |  4,266,905 |  9,447,826 |  4,266,905 |          0 |          0 |    457,008 |
be_then.7601:
.count stack_load
    load    [$sp + 2], $2               # |  2,081,106 |  2,082,822 |          0 |          0 |        286 |          0 |
    call    d_vec.2700                  # |  2,081,106 |  2,081,106 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 3, $sp                 # |  2,081,106 |  2,081,106 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |  2,081,106 |  2,081,106 |          0 |          0 |          0 |          0 |
    mov     $15, $3                     # |  2,081,106 |  2,147,868 |          0 |     11,127 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |  2,081,106 |  2,081,106 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $12, $7                     # |  2,081,106 |  2,081,106 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $6                     # |  2,081,106 |  2,081,106 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $5                     # |  2,081,106 |  2,081,106 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $13, $4                     # |  2,081,106 |  2,081,106 |          0 |          0 |          0 |          0 |
    b       solver_rect_fast.2777       # |  2,081,106 |  2,081,160 |          0 |          0 |          0 |         27 |
be_else.7601:
    cmp     $14, 2                      # |  2,185,799 |  2,185,799 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 3, $sp                 # |  2,185,799 |  2,317,859 |          0 |     22,010 |          0 |          0 |
    bne     be_else.7602                # |  2,185,799 |  2,204,489 |          0 |          0 |          0 |      9,345 |
be_then.7602:
.count move_args
    mov     $12, $5                     # |    566,303 |    566,303 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $4                     # |    566,303 |    566,303 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $3                     # |    566,303 |    566,303 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $13, $2                     # |    566,303 |    566,303 |          0 |          0 |          0 |          0 |
    b       solver_surface_fast.2784    # |    566,303 |    566,315 |          0 |          0 |          0 |          6 |
be_else.7602:
.count stack_load
    load    [$sp - 2], $2               # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $12, $6                     # |  1,619,496 |  1,716,210 |          0 |     16,119 |          0 |          0 |
.count move_args
    mov     $11, $5                     # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $4                     # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $13, $3                     # |  1,619,496 |  1,619,496 |          0 |          0 |          0 |          0 |
    b       solver_second_fast.2790     # |  1,619,496 |  1,635,922 |          0 |          0 |          0 |      8,213 |
.end solver_fast

######################################################################
.begin solver_surface_fast2
solver_surface_fast2.2800:
    load    [$2 + 0], $1                # |  1,242,326 |  8,230,790 |          0 |      2,309 |  1,162,435 |          0 |
    load    [$3 + 3], $2                # |  1,242,326 |  1,307,570 |          0 |          0 |     10,874 |          0 |
    fcmp    $zero, $1                   # |  1,242,326 |  1,321,866 |     79,540 |          0 |          0 |          0 |
    bg      ble_else.7603               # |  1,242,326 |  3,017,459 |  1,229,147 |     13,179 |          0 |    233,456 |
ble_then.7603:
    li      0, $1                       # |    647,017 |    647,017 |          0 |          0 |          0 |          0 |
    ret                                 # |    647,017 |    647,017 |          0 |          0 |          0 |          0 |
ble_else.7603:
    fmul    $1, $2, $1                  # |    595,309 |    595,309 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $1, $41                     # |    595,309 |  2,976,545 |  2,381,236 |          0 |          0 |          0 |
    li      1, $1                       # |    595,309 |    595,309 |          0 |          0 |          0 |          0 |
    ret                                 # |    595,309 |    595,309 |          0 |          0 |          0 |          0 |
.end solver_surface_fast2

######################################################################
.begin solver_second_fast2
solver_second_fast2.2807:
    load    [$3 + 0], $10               # |  5,427,856 | 37,046,542 |          0 |      5,365 |  5,264,416 |          0 |
    load    [$3 + 1], $11               # |  5,427,856 |  5,540,200 |          0 |     16,384 |      2,340 |          0 |
    load    [$3 + 2], $12               # |  5,427,856 |  5,540,158 |          0 |          0 |     18,717 |          0 |
    fcmp    $10, $zero                  # |  5,427,856 |  5,427,856 |          0 |          0 |          0 |          0 |
    bne     be_else.7604                # |  5,427,856 | 10,855,736 |  5,427,856 |          0 |          0 |         12 |
be_then.7604:
    li      0, $1
    ret
be_else.7604:
.count stack_move
    sub     $sp, 2, $sp                 # |  5,427,856 |  5,427,856 |          0 |          0 |          0 |          0 |
    fmul    $11, $5, $11                # |  5,427,856 |  5,427,856 |          0 |          0 |          0 |          0 |
    fmul    $12, $6, $12                # |  5,427,856 |  6,057,262 |          0 |    104,901 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |  5,427,856 |  5,427,856 |          0 |          0 |          0 |          0 |
    load    [$3 + 3], $13               # |  5,427,856 |  5,793,880 |          0 |          0 |     61,004 |          0 |
    fmul    $13, $7, $13                # |  5,427,856 | 16,161,560 | 10,733,704 |          0 |          0 |          0 |
    fadd    $11, $12, $11               # |  5,427,856 |  5,427,856 |          0 |          0 |          0 |          0 |
    fadd    $11, $13, $2                # |  5,427,856 | 27,139,280 | 21,711,424 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |  5,427,856 | 27,139,280 | 21,711,424 |          0 |          0 |          0 |
    call    fsqr.2578                   # |  5,427,856 |  5,427,856 |          0 |          0 |          0 |          0 |
    load    [$4 + 3], $12               # |  5,427,856 |  6,717,652 |          0 |    104,901 |    110,065 |          0 |
.count move_ret
    mov     $1, $11                     # |  5,427,856 | 15,874,284 | 10,446,428 |          0 |          0 |          0 |
    fmul    $10, $12, $10               # |  5,427,856 |  5,522,433 |     94,577 |          0 |          0 |          0 |
    fsub    $11, $10, $10               # |  5,427,856 | 27,139,280 | 21,711,424 |          0 |          0 |          0 |
    fcmp    $10, $zero                  # |  5,427,856 | 27,139,280 | 21,711,424 |          0 |          0 |          0 |
    bg      ble_else.7605               # |  5,427,856 | 12,567,324 |  5,427,856 |          0 |          0 |    855,806 |
ble_then.7605:
.count stack_move
    add     $sp, 2, $sp                 # |  3,746,986 |  3,746,986 |          0 |          0 |          0 |          0 |
    li      0, $1                       # |  3,746,986 |  3,746,986 |          0 |          0 |          0 |          0 |
    ret                                 # |  3,746,986 |  3,843,418 |          0 |     16,072 |          0 |          0 |
ble_else.7605:
.count stack_load
    load    [$sp + 0], $2               # |  1,680,870 |  2,245,764 |          0 |     88,829 |      5,320 |          0 |
    call    o_isinvert.2645             # |  1,680,870 |  1,680,870 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |  1,680,870 |  1,680,870 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |  1,680,870 |  1,680,870 |          0 |          0 |          0 |          0 |
    load    [$3 + 4], $2                # |  1,680,870 | 11,225,892 |          0 |          0 |  1,590,837 |          0 |
.count stack_load
    load    [$sp - 1], $3               # |  1,680,870 |  1,719,606 |          0 |          0 |      6,456 |          0 |
    fsqrt   $10, $1                     # |  1,680,870 |  1,680,870 |          0 |          0 |          0 |          0 |
    bne     be_else.7606                # |  1,680,870 |  2,937,452 |          0 |     98,560 |          0 |    332,611 |
be_then.7606:
    fsub    $3, $1, $1                  # |  1,260,054 |  4,450,776 |  3,190,722 |          0 |          0 |          0 |
    fmul    $1, $2, $1                  # |  1,260,054 |  6,300,270 |  5,040,216 |          0 |          0 |          0 |
.count move_float
    mov     $1, $41                     # |  1,260,054 |  6,300,270 |  5,040,216 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7606                # |  1,260,054 |  1,260,062 |          0 |          0 |          0 |          4 |
be_else.7606:
    fadd    $3, $1, $1                  # |    420,816 |  1,350,652 |    929,836 |          0 |          0 |          0 |
    fmul    $1, $2, $1                  # |    420,816 |  2,104,080 |  1,683,264 |          0 |          0 |          0 |
.count move_float
    mov     $1, $41                     # |    420,816 |  2,104,080 |  1,683,264 |          0 |          0 |          0 |
be_cont.7606:
    li      1, $1                       # |  1,680,870 |  1,680,870 |          0 |          0 |          0 |          0 |
    ret                                 # |  1,680,870 |  1,680,870 |          0 |          0 |          0 |          0 |
.end solver_second_fast2

######################################################################
.begin solver_fast2
solver_fast2.2814:
.count stack_move
    sub     $sp, 2, $sp                 # | 11,678,710 | 11,844,226 |          0 |     27,586 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # | 11,678,710 | 23,357,420 | 11,678,710 |          0 |          0 |          0 |
    load    [min_caml_objects + $2], $2 # | 11,678,710 | 12,955,954 |          0 |          0 |    212,874 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # | 11,678,710 | 34,610,382 | 22,931,672 |          0 |          0 |          0 |
    call    o_param_ctbl.2679           # | 11,678,710 | 11,678,710 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # | 11,678,710 | 22,660,656 | 10,981,946 |          0 |          0 |          0 |
    load    [$10 + 0], $11              # | 11,678,710 | 18,160,870 |          0 |     27,627 |  1,052,733 |          0 |
    load    [$10 + 1], $12              # | 11,678,710 | 12,244,408 |          0 |          0 |     94,283 |          0 |
    load    [$10 + 2], $13              # | 11,678,710 | 12,082,096 |          0 |          0 |     67,231 |          0 |
.count move_args
    mov     $3, $2                      # | 11,678,710 | 11,678,710 |          0 |          0 |          0 |          0 |
    call    d_const.2702                # | 11,678,710 | 11,678,710 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $15              # | 11,678,710 | 12,066,610 |          0 |          0 |     64,650 |          0 |
.count move_ret
    mov     $1, $14                     # | 11,678,710 | 11,678,710 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # | 11,678,710 | 11,765,842 |          0 |          0 |     14,522 |          0 |
    load    [$14 + $15], $14            # | 11,678,710 | 42,853,144 |          0 |     16,385 |  5,179,354 |          0 |
    call    o_form.2641                 # | 11,678,710 | 11,678,710 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # | 11,678,710 | 22,514,537 | 10,835,827 |          0 |          0 |          0 |
    cmp     $15, 1                      # | 11,678,710 | 11,678,710 |          0 |          0 |          0 |          0 |
    bne     be_else.7607                # | 11,678,710 | 28,167,276 | 11,678,710 |          0 |          0 |  2,404,928 |
be_then.7607:
.count move_args
    mov     $3, $2                      # |  5,008,528 |  5,008,528 |          0 |          0 |          0 |          0 |
    call    d_vec.2700                  # |  5,008,528 |  5,008,528 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |  5,008,528 |  5,008,528 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |  5,008,528 |  5,118,046 |          0 |     18,253 |          0 |          0 |
    mov     $15, $3                     # |  5,008,528 |  5,008,528 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $2               # |  5,008,528 |  5,054,428 |          0 |          0 |      7,650 |          0 |
.count move_args
    mov     $13, $7                     # |  5,008,528 |  5,008,528 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $12, $6                     # |  5,008,528 |  5,008,528 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $5                     # |  5,008,528 |  5,008,528 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $14, $4                     # |  5,008,528 |  5,008,528 |          0 |          0 |          0 |          0 |
    b       solver_rect_fast.2777       # |  5,008,528 |  5,008,764 |          0 |          0 |          0 |        118 |
be_else.7607:
    cmp     $15, 2                      # |  6,670,182 |  6,681,918 |          0 |      1,956 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |  6,670,182 |  6,670,182 |          0 |          0 |          0 |          0 |
    bne     be_else.7608                # |  6,670,182 |  6,885,738 |          0 |          0 |          0 |    107,778 |
be_then.7608:
.count move_args
    mov     $10, $3                     # |  1,242,326 |  1,242,326 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $14, $2                     # |  1,242,326 |  1,242,326 |          0 |          0 |          0 |          0 |
    b       solver_surface_fast2.2800   # |  1,242,326 |  1,242,510 |          0 |          0 |          0 |         92 |
be_else.7608:
.count stack_load
    load    [$sp - 1], $2               # |  5,427,856 |  5,459,200 |          0 |          0 |      5,224 |          0 |
.count move_args
    mov     $13, $7                     # |  5,427,856 |  5,427,856 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $12, $6                     # |  5,427,856 |  5,439,838 |          0 |      1,997 |          0 |          0 |
.count move_args
    mov     $11, $5                     # |  5,427,856 |  5,427,856 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $4                     # |  5,427,856 |  5,427,856 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $14, $3                     # |  5,427,856 |  5,427,856 |          0 |          0 |          0 |          0 |
    b       solver_second_fast2.2807    # |  5,427,856 |  5,427,892 |          0 |          0 |          0 |         18 |
.end solver_fast2

######################################################################
.begin setup_rect_table
setup_rect_table.2817:
.count stack_move
    sub     $sp, 2, $sp                 # |      3,612 |      3,618 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |      3,612 |      7,224 |      3,612 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    li      6, $2                       # |      3,612 |      3,618 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $11              # |      3,612 |      3,648 |          0 |          0 |          6 |          0 |
.count move_ret
    mov     $1, $10                     # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    load    [$11 + 0], $12              # |      3,612 |      7,350 |      3,606 |          0 |         22 |          0 |
    fcmp    $12, $zero                  # |      3,612 |     10,792 |      7,180 |          0 |          0 |          0 |
    bne     be_else.7609                # |      3,612 |      7,228 |      3,612 |          0 |          0 |          2 |
be_then.7609:
    store   $zero, [$10 + 1]
.count b_cont
    b       be_cont.7609
be_else.7609:
.count stack_load
    load    [$sp + 0], $2               # |      3,612 |      3,618 |          0 |          1 |          0 |          0 |
    call    o_isinvert.2645             # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |      3,612 |      7,190 |      3,578 |          0 |          0 |          0 |
    mov     $12, $2                     # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    load    [$11 + 0], $12              # |      3,612 |      3,618 |          0 |          0 |          1 |          0 |
    fcmp    $zero, $12                  # |      3,612 |     10,834 |      7,222 |          0 |          0 |          0 |
    bg      ble_else.7610               # |      3,612 |      8,841 |      3,611 |          1 |          0 |        806 |
ble_then.7610:
    li      0, $12                      # |      1,806 |      1,806 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7610               # |      1,806 |      1,810 |          0 |          0 |          0 |          2 |
ble_else.7610:
    li      1, $12                      # |      1,806 |      1,806 |          0 |          0 |          0 |          0 |
ble_cont.7610:
    mov     $12, $3                     # |      3,612 |      5,418 |      1,806 |          0 |          0 |          0 |
    call    xor.2582                    # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    call    o_param_a.2649              # |      3,612 |      3,618 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |      3,612 |      7,190 |      3,578 |          0 |          0 |          0 |
.count move_args
    mov     $12, $2                     # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    call    fneg_cond.2587              # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    store   $12, [$10 + 0]              # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    load    [$11 + 0], $12              # |      3,612 |      3,696 |          0 |          0 |         14 |          0 |
    finv    $12, $12                    # |      3,612 |     10,808 |      7,196 |          0 |          0 |          0 |
    store   $12, [$10 + 1]              # |      3,612 |     25,284 |          0 |      3,612 |          0 |          0 |
be_cont.7609:
    load    [$11 + 1], $12              # |      3,612 |      3,648 |          0 |          0 |          6 |          0 |
    fcmp    $12, $zero                  # |      3,612 |     10,824 |      7,212 |          0 |          0 |          0 |
    bne     be_else.7611                # |      3,612 |      7,230 |      3,612 |          0 |          0 |          3 |
be_then.7611:
    store   $zero, [$10 + 3]
.count b_cont
    b       be_cont.7611
be_else.7611:
.count stack_load
    load    [$sp + 0], $2               # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    call    o_isinvert.2645             # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |      3,612 |     25,284 |          0 |      3,612 |          0 |          0 |
    mov     $12, $2                     # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    load    [$11 + 1], $12              # |      3,612 |      3,630 |          0 |          0 |          3 |          0 |
    fcmp    $zero, $12                  # |      3,612 |     10,830 |      7,218 |          0 |          0 |          0 |
    bg      ble_else.7612               # |      3,612 |      9,468 |      3,612 |          0 |          0 |      1,122 |
ble_then.7612:
    li      0, $12                      # |      1,806 |      1,806 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7612               # |      1,806 |      1,814 |          0 |          0 |          0 |          4 |
ble_else.7612:
    li      1, $12                      # |      1,806 |      1,806 |          0 |          0 |          0 |          0 |
ble_cont.7612:
    mov     $12, $3                     # |      3,612 |      5,424 |      1,806 |          1 |          0 |          0 |
    call    xor.2582                    # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    call    o_param_b.2651              # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |      3,612 |      7,214 |      3,602 |          0 |          0 |          0 |
.count move_args
    mov     $12, $2                     # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    call    fneg_cond.2587              # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |      3,612 |      3,618 |          0 |          1 |          0 |          0 |
    store   $12, [$10 + 2]              # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    load    [$11 + 1], $12              # |      3,612 |      3,672 |          0 |          0 |         10 |          0 |
    finv    $12, $12                    # |      3,612 |     10,816 |      7,204 |          0 |          0 |          0 |
    store   $12, [$10 + 3]              # |      3,612 |     18,060 |     14,448 |          0 |          0 |          0 |
be_cont.7611:
    load    [$11 + 2], $12              # |      3,612 |      3,672 |          0 |          0 |         10 |          0 |
    fcmp    $12, $zero                  # |      3,612 |     10,816 |      7,204 |          0 |          0 |          0 |
    bne     be_else.7613                # |      3,612 |      7,240 |      3,612 |          0 |          0 |          8 |
be_then.7613:
    store   $zero, [$10 + 5]
.count b_cont
    b       be_cont.7613
be_else.7613:
.count stack_load
    load    [$sp + 0], $2               # |      3,612 |      3,618 |          0 |          1 |          0 |          0 |
    call    o_isinvert.2645             # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |      3,612 |      7,215 |      3,603 |          0 |          0 |          0 |
    mov     $12, $2                     # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    load    [$11 + 2], $12              # |      3,612 |      3,648 |          0 |          0 |          6 |          0 |
    fcmp    $zero, $12                  # |      3,612 |     10,824 |      7,212 |          0 |          0 |          0 |
    bg      ble_else.7614               # |      3,612 |      7,833 |      3,611 |          1 |          0 |        302 |
ble_then.7614:
    li      0, $12                      # |      1,812 |      1,812 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7614               # |      1,812 |      1,818 |          0 |          0 |          0 |          3 |
ble_else.7614:
    li      1, $12                      # |      1,800 |      1,800 |          0 |          0 |          0 |          0 |
ble_cont.7614:
    mov     $12, $3                     # |      3,612 |      5,412 |      1,800 |          0 |          0 |          0 |
    call    xor.2582                    # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    call    o_param_c.2653              # |      3,612 |      3,618 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |      3,612 |      7,212 |      3,600 |          0 |          0 |          0 |
.count move_args
    mov     $12, $2                     # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    call    fneg_cond.2587              # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    store   $1, [$10 + 4]               # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    load    [$11 + 2], $1               # |      3,612 |      3,672 |          0 |          0 |         10 |          0 |
    finv    $1, $1                      # |      3,612 |     10,816 |      7,204 |          0 |          0 |          0 |
    store   $1, [$10 + 5]               # |      3,612 |     18,060 |     14,448 |          0 |          0 |          0 |
be_cont.7613:
.count stack_move
    add     $sp, 2, $sp                 # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    mov     $10, $1                     # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
    ret                                 # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.end setup_rect_table

######################################################################
.begin setup_surface_table
setup_surface_table.2820:
.count stack_move
    sub     $sp, 2, $sp                 # |      1,204 |      1,210 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |      1,204 |      2,408 |      1,204 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    li      4, $2                       # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |      1,204 |      1,210 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |      1,204 |      1,240 |          0 |          0 |          6 |          0 |
    call    o_param_a.2649              # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |      1,204 |      2,401 |      1,197 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    call    o_param_b.2651              # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |      1,204 |      2,403 |      1,199 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |      1,204 |      1,210 |          0 |          1 |          0 |          0 |
    call    o_param_c.2653              # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $14              # |      1,204 |      1,234 |          0 |          0 |          5 |          0 |
.count move_ret
    mov     $1, $13                     # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.6252], $17               # |      1,204 |      4,816 |          0 |          0 |        602 |          0 |
    load    [$14 + 0], $15              # |      1,204 |      1,480 |          0 |          0 |         46 |          0 |
    load    [$14 + 1], $16              # |      1,204 |      1,276 |          0 |          0 |         12 |          0 |
    load    [$14 + 2], $14              # |      1,204 |      1,714 |          0 |          0 |         85 |          0 |
    fmul    $15, $11, $15               # |      1,204 |      1,210 |          0 |          1 |          0 |          0 |
    fmul    $16, $12, $16               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fmul    $14, $13, $14               # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
    fadd    $15, $16, $15               # |      1,204 |      4,816 |      3,612 |          0 |          0 |          0 |
    fadd    $15, $14, $14               # |      1,204 |      6,020 |      4,816 |          0 |          0 |          0 |
    fcmp    $14, $zero                  # |      1,204 |      6,020 |      4,816 |          0 |          0 |          0 |
    bg      ble_else.7615               # |      1,204 |      4,604 |      1,204 |          0 |          0 |      1,098 |
ble_then.7615:
    store   $zero, [$10 + 0]            # |        601 |        601 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7615               # |        601 |        611 |          0 |          1 |          0 |          2 |
ble_else.7615:
    finv    $14, $14                    # |        603 |        603 |          0 |          0 |          0 |          0 |
    fneg    $14, $15                    # |        603 |      3,015 |      2,412 |          0 |          0 |          0 |
    fmul    $11, $14, $2                # |        603 |        603 |          0 |          0 |          0 |          0 |
    store   $15, [$10 + 0]              # |        603 |        603 |          0 |          0 |          0 |          0 |
    call    fneg.2580                   # |        603 |        603 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |        603 |        603 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 1]              # |        603 |        603 |          0 |          0 |          0 |          0 |
    fmul    $12, $14, $2                # |        603 |        603 |          0 |          0 |          0 |          0 |
    call    fneg.2580                   # |        603 |        603 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |        603 |        603 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 2]              # |        603 |        603 |          0 |          0 |          0 |          0 |
    fmul    $13, $14, $2                # |        603 |        603 |          0 |          0 |          0 |          0 |
    call    fneg.2580                   # |        603 |        603 |          0 |          0 |          0 |          0 |
    store   $1, [$10 + 3]               # |        603 |        603 |          0 |          0 |          0 |          0 |
ble_cont.7615:
.count stack_move
    add     $sp, 2, $sp                 # |      1,204 |      1,210 |          0 |          1 |          0 |          0 |
    mov     $10, $1                     # |      1,204 |      1,210 |          0 |          1 |          0 |          0 |
    ret                                 # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
.end setup_surface_table

######################################################################
.begin setup_second_table
setup_second_table.2823:
.count stack_move
    sub     $sp, 2, $sp                 # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |      5,418 |     10,836 |      5,418 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $15              # |      5,418 |      5,484 |          0 |          1 |         10 |          0 |
.count move_ret
    mov     $1, $14                     # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |      5,418 |      5,424 |          0 |          0 |          1 |          0 |
    load    [$15 + 0], $3               # |      5,418 |      5,628 |          0 |          0 |         35 |          0 |
    load    [$15 + 1], $4               # |      5,418 |      5,436 |          0 |          0 |          3 |          0 |
    load    [$15 + 2], $5               # |      5,418 |      5,442 |          0 |          0 |          4 |          0 |
    call    quadratic.2754              # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |      5,418 |     10,836 |      5,418 |          0 |          0 |          0 |
    store   $10, [$14 + 0]              # |      5,418 |      5,424 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    call    o_isrot.2647                # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |      5,418 |     10,836 |      5,418 |          0 |          0 |          0 |
    load    [$15 + 0], $12              # |      5,418 |      5,574 |          0 |          0 |         26 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    call    o_param_a.2649              # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |      5,418 |     10,834 |      5,416 |          0 |          0 |          0 |
    fmul    $12, $13, $2                # |      5,418 |      5,424 |          0 |          1 |          0 |          0 |
    call    fneg.2580                   # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    load    [$15 + 1], $13              # |      5,418 |      5,556 |          0 |          0 |         23 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |      5,418 |      5,472 |          0 |          0 |          9 |          0 |
    call    o_param_b.2651              # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |      5,418 |     10,826 |      5,408 |          0 |          0 |          0 |
    fmul    $13, $16, $2                # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    call    fneg.2580                   # |      5,418 |      5,424 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    load    [$15 + 2], $16              # |      5,418 |      5,532 |          0 |          0 |         19 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    call    o_param_c.2653              # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |      5,418 |     10,824 |      5,406 |          0 |          0 |          0 |
    fmul    $16, $17, $2                # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    call    fneg.2580                   # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    cmp     $11, 0                      # |      5,418 |      5,424 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    bne     be_else.7616                # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
be_then.7616:
    store   $12, [$14 + 1]              # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    store   $13, [$14 + 2]              # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    store   $16, [$14 + 3]              # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7616                # |      5,418 |      5,422 |          0 |          0 |          0 |          2 |
be_else.7616:
    load    [$15 + 2], $11
.count stack_load
    load    [$sp + 0], $2
    call    o_param_r2.2675
.count move_ret
    mov     $1, $17
    load    [$15 + 1], $18
    fmul    $11, $17, $11
.count stack_load
    load    [$sp + 0], $2
    call    o_param_r3.2677
.count move_ret
    mov     $1, $19
    fmul    $18, $19, $18
    fadd    $11, $18, $2
    call    fhalf.2576
.count move_ret
    mov     $1, $11
    fsub    $12, $11, $11
    store   $11, [$14 + 1]
    load    [$15 + 2], $11
.count stack_load
    load    [$sp + 0], $2
    call    o_param_r1.2673
    load    [$15 + 0], $18
.count move_ret
    mov     $1, $12
    fmul    $11, $12, $11
    fmul    $18, $19, $18
    fadd    $11, $18, $2
    call    fhalf.2576
.count move_ret
    mov     $1, $11
    fsub    $13, $11, $11
    store   $11, [$14 + 2]
    load    [$15 + 1], $11
    load    [$15 + 0], $13
    fmul    $11, $12, $11
    fmul    $13, $17, $12
    fadd    $11, $12, $2
    call    fhalf.2576
    fsub    $16, $1, $1
    store   $1, [$14 + 3]
be_cont.7616:
    fcmp    $10, $zero                  # |      5,418 |      5,424 |          0 |          1 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    be      bne_cont.7617               # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
bne_then.7617:
    finv    $10, $1                     # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    store   $1, [$14 + 4]               # |      5,418 |     27,090 |     21,672 |          0 |          0 |          0 |
bne_cont.7617:
    mov     $14, $1                     # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
    ret                                 # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
.end setup_second_table

######################################################################
.begin iter_setup_dirvec_constants
iter_setup_dirvec_constants.2826:
    cmp     $3, 0                       # |     10,836 |     10,842 |          0 |          1 |          0 |          0 |
    bl      bge_else.7618               # |     10,836 |     24,080 |     10,836 |          0 |          0 |      1,204 |
bge_then.7618:
.count stack_move
    sub     $sp, 4, $sp                 # |     10,234 |     10,234 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |     10,234 |     20,468 |     10,234 |          0 |          0 |          0 |
    call    d_const.2702                # |     10,234 |     10,234 |          0 |          0 |          0 |          0 |
    load    [min_caml_objects + $3], $2 # |     10,234 |     10,666 |          0 |          0 |         72 |          0 |
.count move_ret
    mov     $1, $10                     # |     10,234 |     10,234 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |     10,234 |     20,402 |     10,162 |          1 |          0 |          0 |
    call    o_form.2641                 # |     10,234 |     10,234 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |     10,234 |     20,396 |     10,162 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |     10,234 |     10,360 |          0 |          0 |         21 |          0 |
    call    d_vec.2700                  # |     10,234 |     10,234 |          0 |          0 |          0 |          0 |
    cmp     $11, 1                      # |     10,234 |     10,234 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |     10,234 |     10,234 |          0 |          0 |          0 |          0 |
    mov     $13, $2                     # |     10,234 |     10,234 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 2]               # |     10,234 |     10,240 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 3]              # |     10,234 |     10,234 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |     10,234 |     10,444 |          0 |          0 |         35 |          0 |
    bne     be_else.7619                # |     10,234 |     20,236 |          0 |          0 |          0 |      5,001 |
be_then.7619:
    call    setup_rect_table.2817       # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |      3,612 |      3,648 |          0 |          0 |          6 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |      3,612 |      3,612 |          0 |          0 |          0 |          0 |
.count storer
    add     $3, $2, $tmp                # |      3,612 |     10,836 |      7,224 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |      3,612 |      7,224 |      3,612 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7619                # |      3,612 |      3,628 |          0 |          0 |          0 |          8 |
be_else.7619:
    cmp     $11, 2                      # |      6,622 |      6,628 |          0 |          1 |          0 |          0 |
    bne     be_else.7620                # |      6,622 |     15,668 |      6,622 |          0 |          0 |      1,212 |
be_then.7620:
    call    setup_surface_table.2820    # |      1,204 |      1,204 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |      1,204 |      1,222 |          0 |          0 |          3 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |      1,204 |      1,210 |          0 |          0 |          1 |          0 |
.count storer
    add     $3, $2, $tmp                # |      1,204 |      3,610 |      2,406 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |      1,204 |      2,413 |      1,203 |          1 |          0 |          0 |
.count b_cont
    b       be_cont.7620                # |      1,204 |      1,212 |          0 |          0 |          0 |          4 |
be_else.7620:
    call    setup_second_table.2823     # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |      5,418 |      5,472 |          0 |          0 |          9 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |      5,418 |      5,418 |          0 |          0 |          0 |          0 |
.count storer
    add     $3, $2, $tmp                # |      5,418 |     16,254 |     10,836 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |      5,418 |     10,836 |      5,418 |          0 |          0 |          0 |
be_cont.7620:
be_cont.7619:
.count stack_move
    add     $sp, 4, $sp                 # |     10,234 |     10,234 |          0 |          0 |          0 |          0 |
    sub     $2, 1, $3                   # |     10,234 |     10,234 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 4], $2               # |     10,234 |     10,240 |          0 |          0 |          1 |          0 |
    b       iter_setup_dirvec_constants.2826# |     10,234 |     10,258 |          0 |          0 |          0 |         12 |
bge_else.7618:
    ret                                 # |        602 |        602 |          0 |          0 |          0 |          0 |
.end iter_setup_dirvec_constants

######################################################################
.begin setup_dirvec_constants
setup_dirvec_constants.2829:
    sub     $47, 1, $3                  # |        602 |        608 |          0 |          1 |          0 |          0 |
    b       iter_setup_dirvec_constants.2826# |        602 |        616 |          0 |          0 |          0 |          7 |
.end setup_dirvec_constants

######################################################################
.begin setup_startp_constants
setup_startp_constants.2831:
    cmp     $3, 0                       # |    667,764 |    667,764 |          0 |          0 |          0 |          0 |
    bl      bge_else.7621               # |    667,764 |  1,519,334 |    667,764 |          0 |          0 |     91,903 |
bge_then.7621:
.count stack_move
    sub     $sp, 5, $sp                 # |    630,666 |    630,672 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |    630,666 |  1,261,332 |    630,666 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |    630,666 |    630,666 |          0 |          0 |          0 |          0 |
    load    [$2 + 0], $10               # |    630,666 |    651,810 |          0 |          0 |      3,524 |          0 |
    load    [min_caml_objects + $3], $2 # |    630,666 |    733,536 |          0 |          0 |     17,145 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |    630,666 |  1,857,708 |  1,227,042 |          0 |          0 |          0 |
    call    o_param_x.2657              # |    630,666 |    630,666 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |    630,666 |  1,079,722 |    449,056 |          0 |          0 |          0 |
    fsub    $10, $11, $10               # |    630,666 |    630,672 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |    630,666 |    636,720 |          0 |          0 |      1,009 |          0 |
    call    o_param_ctbl.2679           # |    630,666 |    630,666 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |    630,666 |  1,177,934 |    547,268 |          0 |          0 |          0 |
    store   $10, [$11 + 0]              # |    630,666 |    630,666 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $10              # |    630,666 |    636,936 |          0 |          0 |      1,045 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |    630,666 |    630,666 |          0 |          0 |          0 |          0 |
    load    [$10 + 1], $12              # |    630,666 |  1,276,349 |    629,621 |          0 |      2,677 |          0 |
    call    o_param_y.2659              # |    630,666 |    630,672 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |    630,666 |  1,242,358 |    611,692 |          0 |          0 |          0 |
    fsub    $12, $13, $12               # |    630,666 |    630,666 |          0 |          0 |          0 |          0 |
    store   $12, [$11 + 1]              # |    630,666 |  3,153,330 |  2,522,664 |          0 |          0 |          0 |
    load    [$10 + 2], $10              # |    630,666 |    641,094 |          0 |          0 |      1,738 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |    630,666 |    634,200 |          0 |          0 |        589 |          0 |
    call    o_param_z.2661              # |    630,666 |    630,666 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |    630,666 |  1,251,671 |    621,005 |          0 |          0 |          0 |
    fsub    $10, $12, $10               # |    630,666 |    630,672 |          0 |          1 |          0 |          0 |
    store   $10, [$11 + 2]              # |    630,666 |  3,153,330 |  2,522,664 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |    630,666 |    630,666 |          0 |          0 |          0 |          0 |
    call    o_form.2641                 # |    630,666 |    630,666 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |    630,666 |  1,161,132 |    530,466 |          0 |          0 |          0 |
    cmp     $10, 2                      # |    630,666 |    630,666 |          0 |          0 |          0 |          0 |
    bne     be_else.7622                # |    630,666 |  1,410,052 |    630,666 |          0 |          0 |     74,360 |
be_then.7622:
.count stack_load
    load    [$sp + 2], $2               # |     74,196 |     74,196 |          0 |          0 |          0 |          0 |
    call    o_param_abc.2655            # |     74,196 |     74,202 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |     74,196 |    147,056 |     72,860 |          0 |          0 |          0 |
    load    [$11 + 0], $3               # |     74,196 |    131,124 |          0 |          0 |      9,488 |          0 |
    load    [$11 + 1], $4               # |     74,196 |     75,798 |          0 |          0 |        267 |          0 |
    load    [$11 + 2], $5               # |     74,196 |     75,888 |          0 |          0 |        282 |          0 |
    call    veciprod2.2617              # |     74,196 |     74,196 |          0 |          0 |          0 |          0 |
    store   $1, [$11 + 3]               # |     74,196 |    296,784 |    222,588 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7622                # |     74,196 |     74,254 |          0 |          0 |          0 |         29 |
be_else.7622:
    cmp     $10, 2                      # |    556,470 |    556,476 |          0 |          1 |          0 |          0 |
    ble     bg_cont.7623                # |    556,470 |  1,577,826 |    556,470 |          0 |          0 |    232,443 |
bg_then.7623:
.count stack_store
    store   $11, [$sp + 3]              # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 4]              # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    load    [$11 + 0], $3               # |    333,882 |    656,118 |          0 |          0 |     53,706 |          0 |
    load    [$11 + 1], $4               # |    333,882 |    361,128 |          0 |          0 |      4,541 |          0 |
    load    [$11 + 2], $5               # |    333,882 |    344,862 |          0 |          0 |      1,830 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
    call    quadratic.2754              # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $2               # |    333,882 |    336,906 |          0 |          0 |        504 |          0 |
    cmp     $2, 3                       # |    333,882 |  1,000,638 |    666,756 |          0 |          0 |          0 |
    bne     be_cont.7624                # |    333,882 |    667,764 |    333,882 |          0 |          0 |          0 |
be_then.7624:
    fsub    $1, $36, $1                 # |    333,882 |    333,882 |          0 |          0 |          0 |          0 |
be_cont.7624:
.count stack_load
    load    [$sp + 3], $2               # |    333,882 |    335,334 |          0 |          0 |        242 |          0 |
    store   $1, [$2 + 3]                # |    333,882 |  1,334,802 |  1,000,920 |          0 |          0 |          0 |
bg_cont.7623:
be_cont.7622:
.count stack_move
    add     $sp, 5, $sp                 # |    630,666 |    630,672 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 5], $1               # |    630,666 |  1,267,836 |    630,666 |          0 |      1,084 |          0 |
.count stack_load
    load    [$sp - 4], $2               # |    630,666 |    630,666 |          0 |          0 |          0 |          0 |
    sub     $1, 1, $3                   # |    630,666 |  1,260,248 |    629,582 |          0 |          0 |          0 |
    b       setup_startp_constants.2831 # |    630,666 |    630,734 |          0 |          0 |          0 |         34 |
bge_else.7621:
    ret                                 # |     37,098 |     37,098 |          0 |          0 |          0 |          0 |
.end setup_startp_constants

######################################################################
.begin setup_startp
setup_startp.2834:
.count stack_move
    sub     $sp, 1, $sp                 # |     37,098 |     37,104 |          0 |          1 |          0 |          0 |
    li      min_caml_startp_fast, $10   # |     37,098 |     37,098 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |     37,098 |     37,098 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $2, $3                      # |     37,098 |     37,104 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |     37,098 |     37,098 |          0 |          0 |          0 |          0 |
    call    veccpy.2603                 # |     37,098 |     37,098 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |     37,098 |     37,098 |          0 |          0 |          0 |          0 |
    sub     $47, 1, $3                  # |     37,098 |     37,098 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $2               # |     37,098 |     40,464 |          0 |          0 |        561 |          0 |
    b       setup_startp_constants.2831 # |     37,098 |     38,936 |          0 |          0 |          0 |        919 |
.end setup_startp

######################################################################
.begin is_rect_outside
is_rect_outside.2836:
.count stack_move
    sub     $sp, 1, $sp                 # |  1,258,936 |  1,258,936 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |  1,258,936 |  2,517,877 |  1,258,935 |          1 |          0 |          0 |
    call    o_param_a.2649              # |  1,258,936 |  1,258,936 |          0 |          0 |          0 |          0 |
    fabs    $3, $11                     # |  1,258,936 |  1,258,936 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |  1,258,936 |  1,258,936 |          0 |          0 |          0 |          0 |
    fcmp    $10, $11                    # |  1,258,936 |  1,258,936 |          0 |          0 |          0 |          0 |
    bg      ble_else.7625               # |  1,258,936 |  2,921,844 |  1,258,936 |          0 |          0 |    201,986 |
ble_then.7625:
    li      0, $10                      # |    254,622 |    254,622 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7625               # |    254,622 |    254,642 |          0 |          0 |          0 |         10 |
ble_else.7625:
.count stack_load
    load    [$sp + 0], $2               # |  1,004,314 |  1,004,320 |          0 |          1 |          0 |          0 |
    call    o_param_b.2651              # |  1,004,314 |  1,004,314 |          0 |          0 |          0 |          0 |
    fabs    $4, $11                     # |  1,004,314 |  1,004,314 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |  1,004,314 |  1,004,314 |          0 |          0 |          0 |          0 |
    fcmp    $10, $11                    # |  1,004,314 |  1,004,314 |          0 |          0 |          0 |          0 |
    bg      ble_else.7626               # |  1,004,314 |  2,266,860 |  1,004,314 |          0 |          0 |    129,116 |
ble_then.7626:
    li      0, $10                      # |     60,922 |     60,922 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7626               # |     60,922 |     61,926 |          0 |          0 |          0 |        502 |
ble_else.7626:
.count stack_load
    load    [$sp + 0], $2               # |    943,392 |    943,398 |          0 |          1 |          0 |          0 |
    call    o_param_c.2653              # |    943,392 |    943,392 |          0 |          0 |          0 |          0 |
    fabs    $5, $11                     # |    943,392 |    943,392 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |    943,392 |    943,392 |          0 |          0 |          0 |          0 |
    fcmp    $10, $11                    # |    943,392 |    943,392 |          0 |          0 |          0 |          0 |
    bg      ble_else.7627               # |    943,392 |  1,918,458 |    943,392 |          0 |          0 |     15,837 |
ble_then.7627:
    li      0, $10                      # |     19,308 |     19,308 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7627               # |     19,308 |     22,372 |          0 |          0 |          0 |      1,532 |
ble_else.7627:
    li      1, $10                      # |    924,084 |    924,090 |          0 |          1 |          0 |          0 |
ble_cont.7627:
ble_cont.7626:
ble_cont.7625:
    cmp     $10, 0                      # |  1,258,936 |  2,183,020 |    924,084 |          0 |          0 |          0 |
    bne     be_else.7628                # |  1,258,936 |  2,517,880 |  1,258,936 |          0 |          0 |          4 |
be_then.7628:
.count stack_load
    load    [$sp + 0], $2               # |    334,852 |    334,852 |          0 |          0 |          0 |          0 |
    call    o_isinvert.2645             # |    334,852 |    334,852 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    334,852 |    660,366 |    325,514 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |    334,852 |    334,852 |          0 |          0 |          0 |          0 |
    bne     be_else.7629                # |    334,852 |    334,852 |          0 |          0 |          0 |          0 |
be_then.7629:
    li      1, $1                       # |    334,852 |    334,852 |          0 |          0 |          0 |          0 |
    ret                                 # |    334,852 |    334,852 |          0 |          0 |          0 |          0 |
be_else.7629:
    li      0, $1
    ret
be_else.7628:
.count stack_move
    add     $sp, 1, $sp                 # |    924,084 |    924,084 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $2               # |    924,084 |  1,848,168 |    924,084 |          0 |          0 |          0 |
    b       o_isinvert.2645             # |    924,084 |    924,092 |          0 |          0 |          0 |          4 |
.end is_rect_outside

######################################################################
.begin is_plane_outside
is_plane_outside.2841:
.count stack_move
    sub     $sp, 1, $sp                 # |    538,865 |    538,871 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |    538,865 |  1,077,735 |    538,864 |          1 |          0 |          0 |
    call    o_isinvert.2645             # |    538,865 |    538,865 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |    538,865 |  1,076,050 |    537,185 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    538,865 |    538,865 |          0 |          0 |          0 |          0 |
    call    o_param_abc.2655            # |    538,865 |    538,865 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |    538,865 |  1,069,872 |    531,007 |          0 |          0 |          0 |
    call    veciprod2.2617              # |    538,865 |    538,865 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |    538,865 |  2,155,460 |  1,616,595 |          0 |          0 |          0 |
    fcmp    $zero, $11                  # |    538,865 |    538,871 |          0 |          1 |          0 |          0 |
    bg      ble_else.7630               # |    538,865 |  1,128,958 |    538,865 |          0 |          0 |     25,614 |
ble_then.7630:
    li      0, $3                       # |    507,183 |    507,183 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7630               # |    507,183 |    507,187 |          0 |          0 |          0 |          2 |
ble_else.7630:
    li      1, $3                       # |     31,682 |     31,682 |          0 |          0 |          0 |          0 |
ble_cont.7630:
.count move_args
    mov     $10, $2                     # |    538,865 |    538,865 |          0 |          0 |          0 |          0 |
    call    xor.2582                    # |    538,865 |    538,865 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    538,865 |    538,865 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |    538,865 |    538,871 |          0 |          1 |          0 |          0 |
    bne     be_else.7631                # |    538,865 |    555,069 |          0 |          0 |          0 |      8,102 |
be_then.7631:
    li      1, $1                       # |     31,682 |     31,682 |          0 |          0 |          0 |          0 |
    ret                                 # |     31,682 |     31,682 |          0 |          0 |          0 |          0 |
be_else.7631:
    li      0, $1                       # |    507,183 |    507,183 |          0 |          0 |          0 |          0 |
    ret                                 # |    507,183 |    507,183 |          0 |          0 |          0 |          0 |
.end is_plane_outside

######################################################################
.begin is_second_outside
is_second_outside.2846:
.count stack_move
    sub     $sp, 2, $sp                 # |  1,338,501 |  1,338,501 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |  1,338,501 |  2,677,002 |  1,338,501 |          0 |          0 |          0 |
    call    o_isinvert.2645             # |  1,338,501 |  1,338,507 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |  1,338,501 |  2,674,006 |  1,335,505 |          0 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 1]              # |  1,338,501 |  1,338,501 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |  1,338,501 |  1,530,291 |          0 |          0 |     31,965 |          0 |
    call    o_form.2641                 # |  1,338,501 |  1,338,501 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |  1,338,501 |  2,677,002 |  1,338,501 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |  1,338,501 |  1,338,501 |          0 |          0 |          0 |          0 |
    call    quadratic.2754              # |  1,338,501 |  1,338,501 |          0 |          0 |          0 |          0 |
    cmp     $14, 3                      # |  1,338,501 |  1,338,507 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |  1,338,501 |  1,338,501 |          0 |          0 |          0 |          0 |
    bne     be_cont.7632                # |  1,338,501 |  1,338,691 |          0 |          0 |          0 |         95 |
be_then.7632:
    fsub    $10, $36, $10               # |  1,338,501 |  1,338,501 |          0 |          0 |          0 |          0 |
be_cont.7632:
    fcmp    $zero, $10                  # |  1,338,501 |  6,692,505 |  5,354,004 |          0 |          0 |          0 |
    bg      ble_else.7633               # |  1,338,501 |  3,810,110 |  1,338,501 |          0 |          0 |    566,554 |
ble_then.7633:
    li      0, $10                      # |    637,867 |    637,867 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7633               # |    637,867 |    637,873 |          0 |          0 |          0 |          3 |
ble_else.7633:
    li      1, $10                      # |    700,634 |    700,640 |          0 |          1 |          0 |          0 |
ble_cont.7633:
    mov     $10, $3                     # |  1,338,501 |  2,039,135 |    700,634 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |  1,338,501 |  1,338,501 |          0 |          0 |          0 |          0 |
    call    xor.2582                    # |  1,338,501 |  1,338,501 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |  1,338,501 |  1,338,501 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |  1,338,501 |  1,338,501 |          0 |          0 |          0 |          0 |
    bne     be_else.7634                # |  1,338,501 |  1,338,795 |          0 |          0 |          0 |        147 |
be_then.7634:
    li      1, $1                       # |    396,365 |    396,365 |          0 |          0 |          0 |          0 |
    ret                                 # |    396,365 |    396,365 |          0 |          0 |          0 |          0 |
be_else.7634:
    li      0, $1                       # |    942,136 |    942,136 |          0 |          0 |          0 |          0 |
    ret                                 # |    942,136 |    942,136 |          0 |          0 |          0 |          0 |
.end is_second_outside

######################################################################
.begin is_outside
is_outside.2851:
.count stack_move
    sub     $sp, 1, $sp                 # |  3,136,302 |  3,136,308 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |  3,136,302 |  6,272,604 |  3,136,302 |          0 |          0 |          0 |
    call    o_param_x.2657              # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |  3,136,302 |  5,834,191 |  2,697,889 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |  3,136,302 |  3,496,128 |          0 |          0 |     59,971 |          0 |
    call    o_param_y.2659              # |  3,136,302 |  3,136,308 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |  3,136,302 |  5,292,001 |  2,155,699 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
    call    o_param_z.2661              # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |  3,136,302 |  6,232,464 |  3,096,162 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
    call    o_form.2641                 # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |  3,136,302 |  6,057,266 |  2,920,964 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |  3,136,302 |  3,136,308 |          0 |          1 |          0 |          0 |
    cmp     $13, 1                      # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
    fsub    $3, $10, $3                 # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
    fsub    $4, $11, $4                 # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
    fsub    $5, $12, $5                 # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $2               # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
    be      is_rect_outside.2836        # |  3,136,302 |  3,352,906 |          0 |          0 |          0 |    108,302 |
    cmp     $13, 2                      # |  1,877,366 |  1,877,366 |          0 |          0 |          0 |          0 |
    be      is_plane_outside.2841       # |  1,877,366 |  4,877,674 |  1,877,366 |          0 |          0 |    561,471 |
    b       is_second_outside.2846      # |  1,338,501 |  1,348,475 |          0 |          0 |          0 |      4,987 |
.end is_outside

######################################################################
.begin check_all_inside
check_all_inside.2856:
    load    [$3 + $2], $15              # |  4,154,296 |  5,591,791 |  1,213,395 |          1 |     37,349 |          0 |
    cmp     $15, -1                     # |  4,154,296 | 12,388,190 |  8,233,894 |          0 |          0 |          0 |
    bne     be_else.7637                # |  4,154,296 |  9,030,644 |  4,154,296 |          0 |          0 |    361,026 |
be_then.7637:
    li      1, $1                       # |  1,017,994 |  1,017,994 |          0 |          0 |          0 |          0 |
    ret                                 # |  1,017,994 |  1,017,994 |          0 |          0 |          0 |          0 |
be_else.7637:
.count stack_move
    sub     $sp, 5, $sp                 # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 0]               # |  3,136,302 |  6,272,609 |  3,136,301 |          1 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 1]               # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 2]               # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 3]               # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 4]               # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
    load    [min_caml_objects + $15], $2# |  3,136,302 |  3,277,344 |          0 |          0 |     23,507 |          0 |
.count move_args
    mov     $4, $3                      # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $5, $4                      # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $6, $5                      # |  3,136,302 |  3,136,308 |          0 |          1 |          0 |          0 |
    call    is_outside.2851             # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |  3,136,302 |  4,027,136 |    890,834 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 5, $sp                 # |  3,136,302 |  3,136,302 |          0 |          0 |          0 |          0 |
    bne     be_else.7638                # |  3,136,302 |  3,346,160 |          0 |          0 |          0 |    104,929 |
be_then.7638:
.count stack_load
    load    [$sp - 1], $1               # |  2,373,403 |  2,378,419 |          0 |          0 |        836 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |  2,373,403 |  2,385,817 |          0 |          0 |      2,069 |          0 |
.count stack_load
    load    [$sp - 3], $4               # |  2,373,403 |  2,475,979 |          0 |          0 |     17,096 |          0 |
    add     $1, 1, $2                   # |  2,373,403 |  2,373,409 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 4], $5               # |  2,373,403 |  2,453,641 |          0 |          0 |     13,373 |          0 |
.count stack_load
    load    [$sp - 5], $6               # |  2,373,403 |  2,411,509 |          0 |          0 |      6,351 |          0 |
    b       check_all_inside.2856       # |  2,373,403 |  2,407,463 |          0 |          0 |          0 |     17,030 |
be_else.7638:
    li      0, $1                       # |    762,899 |    762,899 |          0 |          0 |          0 |          0 |
    ret                                 # |    762,899 |    762,899 |          0 |          0 |          0 |          0 |
.end check_all_inside

######################################################################
.begin shadow_check_and_group
shadow_check_and_group.2862:
    load    [$3 + $2], $16              # |  4,223,797 |  4,402,003 |          0 |          0 |     29,701 |          0 |
    cmp     $16, -1                     # |  4,223,797 | 12,611,989 |  8,388,192 |          0 |          0 |          0 |
    bne     be_else.7639                # |  4,223,797 |  8,468,089 |  4,223,796 |          1 |          0 |     10,245 |
be_then.7639:
    li      0, $1                       # |    627,947 |    627,947 |          0 |          0 |          0 |          0 |
    ret                                 # |    627,947 |    627,947 |          0 |          0 |          0 |          0 |
be_else.7639:
.count stack_move
    sub     $sp, 2, $sp                 # |  3,595,850 |  3,595,850 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |  3,595,850 |  7,191,700 |  3,595,850 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |  3,595,850 |  3,595,850 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $16, $2                     # |  3,595,850 |  3,595,850 |          0 |          0 |          0 |          0 |
    call    solver_fast.2796            # |  3,595,850 |  3,595,850 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |  3,595,850 |  3,595,856 |          0 |          1 |          0 |          0 |
    cmp     $10, 0                      # |  3,595,850 |  3,595,850 |          0 |          0 |          0 |          0 |
    bne     be_else.7640                # |  3,595,850 |  7,243,916 |  3,595,850 |          0 |          0 |     26,108 |
be_then.7640:
    li      0, $10                      # |  2,002,781 |  2,002,781 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7640                # |  2,002,781 |  2,046,271 |          0 |          0 |          0 |     21,745 |
be_else.7640:
.count load_float
    load    [f.6269], $10               # |  1,593,069 |  4,425,429 |          0 |          0 |    472,060 |          0 |
    fcmp    $10, $41                    # |  1,593,069 |  3,835,087 |  2,242,018 |          0 |          0 |          0 |
    bg      ble_else.7641               # |  1,593,069 |  3,492,000 |  1,593,069 |          0 |          0 |    152,931 |
ble_then.7641:
    li      0, $10                      # |  1,029,403 |  1,029,409 |          0 |          1 |          0 |          0 |
.count b_cont
    b       ble_cont.7641               # |  1,029,403 |  1,029,407 |          0 |          0 |          0 |          2 |
ble_else.7641:
    li      1, $10                      # |    563,666 |    563,666 |          0 |          0 |          0 |          0 |
ble_cont.7641:
be_cont.7640:
    cmp     $10, 0                      # |  3,595,850 |  4,159,516 |    563,666 |          0 |          0 |          0 |
    bne     be_else.7642                # |  3,595,850 |  7,212,528 |  3,595,850 |          0 |          0 |     10,414 |
be_then.7642:
    load    [min_caml_objects + $16], $2# |  3,032,184 |  3,032,184 |          0 |          0 |          0 |          0 |
    call    o_isinvert.2645             # |  3,032,184 |  3,032,184 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |  3,032,184 |  6,024,537 |  2,992,353 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |  3,032,184 |  3,032,190 |          0 |          1 |          0 |          0 |
    bne     be_else.7643                # |  3,032,184 |  3,040,148 |          0 |          0 |          0 |      3,982 |
be_then.7643:
    li      0, $1                       # |  2,406,287 |  2,406,287 |          0 |          0 |          0 |          0 |
    ret                                 # |  2,406,287 |  2,406,287 |          0 |          0 |          0 |          0 |
be_else.7643:
.count stack_load
    load    [$sp - 1], $1               # |    625,897 |    625,897 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |    625,897 |    634,579 |          0 |          0 |      1,447 |          0 |
    add     $1, 1, $2                   # |    625,897 |  1,250,347 |    624,450 |          0 |          0 |          0 |
    b       shadow_check_and_group.2862 # |    625,897 |    625,913 |          0 |          0 |          0 |          8 |
be_else.7642:
.count load_float
    load    [f.6270], $17               # |    563,666 |  1,939,640 |          0 |          1 |    229,328 |          0 |
    li      0, $2                       # |    563,666 |    563,666 |          0 |          0 |          0 |          0 |
    load    [min_caml_light + 0], $16   # |    563,666 |    610,724 |          0 |          0 |      7,843 |          0 |
    fadd    $41, $17, $17               # |    563,666 |    563,666 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 0], $18# |    563,666 |    563,666 |          0 |          0 |          0 |          0 |
    load    [min_caml_light + 1], $19   # |    563,666 |    574,898 |          0 |          0 |      1,872 |          0 |
    load    [min_caml_light + 2], $21   # |    563,666 |    567,710 |          0 |          0 |        674 |          0 |
    load    [min_caml_intersection_point + 1], $20# |    563,666 |    563,666 |          0 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $22# |    563,666 |    563,672 |          0 |          1 |          0 |          0 |
    fmul    $16, $17, $16               # |    563,666 |    563,666 |          0 |          0 |          0 |          0 |
    fmul    $19, $17, $19               # |    563,666 |    563,666 |          0 |          0 |          0 |          0 |
    fmul    $21, $17, $17               # |    563,666 |    563,666 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $3               # |    563,666 |    572,996 |          0 |          0 |      1,555 |          0 |
    fadd    $16, $18, $4                # |    563,666 |  1,125,777 |    562,111 |          0 |          0 |          0 |
    fadd    $19, $20, $5                # |    563,666 |    563,666 |          0 |          0 |          0 |          0 |
    fadd    $17, $22, $6                # |    563,666 |    563,666 |          0 |          0 |          0 |          0 |
    call    check_all_inside.2856       # |    563,666 |    563,672 |          0 |          1 |          0 |          0 |
    cmp     $1, 0                       # |    563,666 |    563,666 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |    563,666 |    563,666 |          0 |          0 |          0 |          0 |
    bne     be_else.7644                # |    563,666 |    637,068 |          0 |          0 |          0 |     36,701 |
be_then.7644:
.count stack_load
    load    [$sp - 1], $1               # |    327,380 |    327,380 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |    327,380 |    327,380 |          0 |          0 |          0 |          0 |
    add     $1, 1, $2                   # |    327,380 |    654,760 |    327,380 |          0 |          0 |          0 |
    b       shadow_check_and_group.2862 # |    327,380 |    340,500 |          0 |          0 |          0 |      6,560 |
be_else.7644:
    li      1, $1                       # |    236,286 |    236,286 |          0 |          0 |          0 |          0 |
    ret                                 # |    236,286 |    236,286 |          0 |          0 |          0 |          0 |
.end shadow_check_and_group

######################################################################
.begin shadow_check_one_or_group
shadow_check_one_or_group.2865:
    load    [$3 + $2], $23              # |  3,904,215 |  4,744,085 |    671,054 |          1 |     28,135 |          0 |
    li      0, $24                      # |  3,904,215 |  3,904,215 |          0 |          0 |          0 |          0 |
    cmp     $23, -1                     # |  3,904,215 |  7,780,295 |  3,876,080 |          0 |          0 |          0 |
    bne     be_else.7645                # |  3,904,215 |  8,692,888 |  3,904,215 |          0 |          0 |    442,229 |
be_then.7645:
    li      0, $1                       # |    633,695 |    633,695 |          0 |          0 |          0 |          0 |
    ret                                 # |    633,695 |    633,695 |          0 |          0 |          0 |          0 |
be_else.7645:
.count stack_move
    sub     $sp, 2, $sp                 # |  3,270,520 |  3,270,526 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |  3,270,520 |  6,541,040 |  3,270,520 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |  3,270,520 |  3,270,520 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $23], $3# |  3,270,520 |  3,515,368 |          0 |          0 |     40,808 |          0 |
.count move_args
    mov     $24, $2                     # |  3,270,520 |  3,270,520 |          0 |          0 |          0 |          0 |
    call    shadow_check_and_group.2862 # |  3,270,520 |  3,270,520 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |  3,270,520 |  3,270,520 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |  3,270,520 |  3,270,520 |          0 |          0 |          0 |          0 |
    bne     be_else.7646                # |  3,270,520 |  3,270,532 |          0 |          0 |          0 |          6 |
be_then.7646:
.count stack_load
    load    [$sp - 1], $1               # |  3,034,234 |  3,034,234 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |  3,034,234 |  3,034,234 |          0 |          0 |          0 |          0 |
    add     $1, 1, $2                   # |  3,034,234 |  6,068,468 |  3,034,234 |          0 |          0 |          0 |
    b       shadow_check_one_or_group.2865# |  3,034,234 |  3,035,108 |          0 |          0 |          0 |        437 |
be_else.7646:
    li      1, $1                       # |    236,286 |    236,286 |          0 |          0 |          0 |          0 |
    ret                                 # |    236,286 |    236,286 |          0 |          0 |          0 |          0 |
.end shadow_check_one_or_group

######################################################################
.begin shadow_check_one_or_matrix
shadow_check_one_or_matrix.2868:
    load    [$3 + $2], $16              # |  1,776,879 |  1,812,825 |          0 |          1 |      5,990 |          0 |
    load    [$16 + 0], $17              # |  1,776,879 |  5,467,197 |  3,541,776 |          1 |     24,756 |          0 |
    cmp     $17, -1                     # |  1,776,879 |  5,281,125 |  3,504,246 |          0 |          0 |          0 |
    bne     be_else.7647                # |  1,776,879 |  3,559,296 |  1,776,879 |          0 |          0 |      2,769 |
be_then.7647:
    li      0, $1                       # |    550,937 |    550,937 |          0 |          0 |          0 |          0 |
    ret                                 # |    550,937 |    550,937 |          0 |          0 |          0 |          0 |
be_else.7647:
.count stack_move
    sub     $sp, 3, $sp                 # |  1,225,942 |  1,225,942 |          0 |          0 |          0 |          0 |
    cmp     $17, 99                     # |  1,225,942 |  1,225,942 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $16, [$sp + 0]              # |  1,225,942 |  1,225,942 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |  1,225,942 |  1,225,948 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |  1,225,942 |  1,225,942 |          0 |          0 |          0 |          0 |
    bne     be_else.7648                # |  1,225,942 |  1,230,192 |          0 |          0 |          0 |      2,125 |
be_then.7648:
    li      1, $25                      # |    554,887 |    554,887 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7648                # |    554,887 |    554,895 |          0 |          0 |          0 |          4 |
be_else.7648:
.count move_args
    mov     $17, $2                     # |    671,055 |    671,055 |          0 |          0 |          0 |          0 |
    call    solver_fast.2796            # |    671,055 |    671,055 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $25                     # |    671,055 |    671,055 |          0 |          0 |          0 |          0 |
    cmp     $25, 0                      # |    671,055 |    671,061 |          0 |          1 |          0 |          0 |
    bne     be_else.7649                # |    671,055 |  1,355,548 |    671,055 |          0 |          0 |      6,719 |
be_then.7649:
    li      0, $25                      # |    464,988 |    464,988 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7649                # |    464,988 |    650,020 |          0 |          0 |          0 |     92,516 |
be_else.7649:
    fcmp    $40, $41                    # |    206,067 |    206,067 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |    206,067 |    206,067 |          0 |          0 |          0 |          0 |
    bg      ble_else.7650               # |    206,067 |    225,861 |          0 |          0 |          0 |      9,897 |
ble_then.7650:
    li      0, $25                      # |      7,141 |      7,141 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7650               # |      7,141 |      7,149 |          0 |          0 |          0 |          4 |
ble_else.7650:
.count move_args
    mov     $16, $3                     # |    198,926 |    198,932 |          0 |          1 |          0 |          0 |
    call    shadow_check_one_or_group.2865# |    198,926 |    198,926 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $25                     # |    198,926 |    198,926 |          0 |          0 |          0 |          0 |
    cmp     $25, 0                      # |    198,926 |    198,926 |          0 |          0 |          0 |          0 |
    bne     be_else.7651                # |    198,926 |    398,104 |    198,926 |          0 |          0 |        126 |
be_then.7651:
    li      0, $25                      # |     82,758 |     82,758 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7651                # |     82,758 |     82,766 |          0 |          0 |          0 |          4 |
be_else.7651:
    li      1, $25                      # |    116,168 |    116,168 |          0 |          0 |          0 |          0 |
be_cont.7651:
ble_cont.7650:
be_cont.7649:
be_cont.7648:
    cmp     $25, 0                      # |  1,225,942 |  1,342,116 |    116,168 |          1 |          0 |          0 |
    bne     be_else.7652                # |  1,225,942 |  2,463,656 |  1,225,942 |          0 |          0 |      5,886 |
be_then.7652:
.count stack_move
    add     $sp, 3, $sp                 # |    554,887 |    554,887 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |    554,887 |  1,110,626 |    554,887 |          0 |        142 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |    554,887 |    562,669 |          0 |          0 |      1,297 |          0 |
    add     $1, 1, $2                   # |    554,887 |  1,108,471 |    553,584 |          0 |          0 |          0 |
    b       shadow_check_one_or_matrix.2868# |    554,887 |    554,915 |          0 |          0 |          0 |         14 |
be_else.7652:
    li      1, $2                       # |    671,055 |    671,061 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $3               # |    671,055 |    671,055 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_group.2865# |    671,055 |    671,055 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    671,055 |    671,055 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 3, $sp                 # |    671,055 |    671,055 |          0 |          0 |          0 |          0 |
    bne     be_else.7653                # |    671,055 |    671,473 |          0 |          0 |          0 |        209 |
be_then.7653:
.count stack_load
    load    [$sp - 1], $1               # |    550,937 |    550,937 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |    550,937 |    550,937 |          0 |          0 |          0 |          0 |
    add     $1, 1, $2                   # |    550,937 |  1,101,874 |    550,937 |          0 |          0 |          0 |
    b       shadow_check_one_or_matrix.2868# |    550,937 |    554,773 |          0 |          0 |          0 |      1,918 |
be_else.7653:
    li      1, $1                       # |    120,118 |    120,118 |          0 |          0 |          0 |          0 |
    ret                                 # |    120,118 |    120,118 |          0 |          0 |          0 |          0 |
.end shadow_check_one_or_matrix

######################################################################
.begin solve_each_element
solve_each_element.2871:
    load    [$3 + $2], $17              # |    193,311 |    202,011 |          0 |          1 |      1,449 |          0 |
    cmp     $17, -1                     # |    193,311 |    577,035 |    383,724 |          0 |          0 |          0 |
    bne     be_else.7654                # |    193,311 |    396,880 |    193,311 |          0 |          0 |      5,129 |
be_then.7654:
    ret                                 # |     43,491 |     43,491 |          0 |          0 |          0 |          0 |
be_else.7654:
.count stack_move
    sub     $sp, 7, $sp                 # |    149,820 |    439,548 |          0 |     48,288 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |    149,820 |    299,640 |    149,820 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $4, $3                      # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $17, $2                     # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
    call    solver.2773                 # |    149,820 |    149,820 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |    149,820 |  1,003,530 |          0 |    142,285 |          0 |          0 |
    cmp     $10, 0                      # |    149,820 |    326,742 |          0 |     29,487 |          0 |          0 |
    bne     be_else.7655                # |    149,820 |    304,758 |    149,820 |          0 |          0 |      2,559 |
be_then.7655:
    load    [min_caml_objects + $17], $2# |    101,553 |    101,553 |          0 |          0 |          0 |          0 |
    call    o_isinvert.2645             # |    101,553 |    101,553 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |    101,553 |    202,954 |    101,401 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 7, $sp                 # |    101,553 |    101,553 |          0 |          0 |          0 |          0 |
    bne     be_else.7656                # |    101,553 |    111,715 |          0 |          0 |          0 |      5,081 |
be_then.7656:
    ret                                 # |     92,181 |     92,181 |          0 |          0 |          0 |          0 |
be_else.7656:
.count stack_load
    load    [$sp - 5], $1               # |      9,372 |      9,372 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 6], $3               # |      9,372 |      9,372 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 7], $4               # |      9,372 |      9,372 |          0 |          0 |          0 |          0 |
    add     $1, 1, $2                   # |      9,372 |      9,372 |          0 |          0 |          0 |          0 |
    b       solve_each_element.2871     # |      9,372 |     12,442 |          0 |          0 |          0 |      1,535 |
be_else.7655:
    fcmp    $41, $zero                  # |     48,267 |    112,575 |          0 |     10,718 |          0 |          0 |
.count load_float
    load    [f.6270], $16               # |     48,267 |     86,463 |          0 |          0 |      6,366 |          0 |
    ble     bg_cont.7657                # |     48,267 |     54,249 |          0 |          0 |          0 |      2,991 |
bg_then.7657:
    fcmp    $42, $41                    # |     47,420 |    260,486 |          0 |     35,511 |          0 |          0 |
    ble     bg_cont.7658                # |     47,420 |    111,558 |     47,420 |          0 |          0 |      8,359 |
bg_then.7658:
.count stack_store
    store   $10, [$sp + 3]              # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $18              # |     35,739 |     36,225 |          0 |          0 |         81 |          0 |
    fadd    $41, $16, $16               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp + 0], $20  # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    load    [$18 + 0], $19              # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    load    [$18 + 1], $21              # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    load    [$18 + 2], $18              # |     35,739 |    196,761 |          0 |     26,837 |          0 |          0 |
    fmul    $19, $16, $19               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    fmul    $21, $16, $21               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    fmul    $18, $16, $18               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp + 1], $22  # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp + 2], $23  # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    fadd    $19, $20, $4                # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    fadd    $21, $22, $5                # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    fadd    $18, $23, $6                # |     35,739 |    147,849 |          0 |     18,685 |          0 |          0 |
    li      0, $2                       # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 4]               # |     35,739 |     52,793 |     17,054 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 5]               # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 6]               # |     35,739 |     54,424 |     18,685 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |     35,739 |     36,057 |          0 |          0 |         53 |          0 |
    call    check_all_inside.2856       # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |     35,739 |     35,739 |          0 |          0 |          0 |          0 |
    be      bne_cont.7659               # |     35,739 |    164,929 |     17,054 |     18,685 |          0 |         13 |
bne_then.7659:
.count move_float
    mov     $16, $42                    # |     25,163 |     25,163 |          0 |          0 |          0 |          0 |
    li      min_caml_intersection_point, $2# |     25,163 |     25,163 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $3               # |     25,163 |     25,163 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $4               # |     25,163 |     25,163 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $5               # |     25,163 |     25,163 |          0 |          0 |          0 |          0 |
    call    vecset.2593                 # |     25,163 |     25,163 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $1               # |     25,163 |     25,163 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $17, $45                    # |     25,163 |     99,857 |          0 |     12,449 |          0 |          0 |
.count move_float
    mov     $1, $46                     # |     25,163 |     37,877 |     12,714 |          0 |          0 |          0 |
bne_cont.7659:
bg_cont.7658:
bg_cont.7657:
.count stack_move
    add     $sp, 7, $sp                 # |     48,267 |     72,765 |          0 |      4,083 |          0 |          0 |
.count stack_load
    load    [$sp - 5], $1               # |     48,267 |     97,128 |     48,267 |          0 |         99 |          0 |
.count stack_load
    load    [$sp - 6], $3               # |     48,267 |     48,267 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 7], $4               # |     48,267 |     48,267 |          0 |          0 |          0 |          0 |
    add     $1, 1, $2                   # |     48,267 |     48,267 |          0 |          0 |          0 |          0 |
    b       solve_each_element.2871     # |     48,267 |     48,339 |          0 |          0 |          0 |         36 |
.end solve_each_element

######################################################################
.begin solve_one_or_network
solve_one_or_network.2875:
    load    [$3 + $2], $24              # |    166,202 |    268,244 |          0 |     16,532 |        475 |          0 |
    li      0, $25                      # |    166,202 |    166,202 |          0 |          0 |          0 |          0 |
    cmp     $24, -1                     # |    166,202 |    331,929 |    165,727 |          0 |          0 |          0 |
    bne     be_else.7660                # |    166,202 |    374,112 |    166,202 |          0 |          0 |     20,854 |
be_then.7660:
    ret                                 # |     30,530 |     30,530 |          0 |          0 |          0 |          0 |
be_else.7660:
.count stack_move
    sub     $sp, 3, $sp                 # |    135,672 |    135,672 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |    135,672 |    271,344 |    135,672 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |    135,672 |    135,672 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |    135,672 |    234,864 |          0 |     16,532 |          0 |          0 |
    load    [min_caml_and_net + $24], $3# |    135,672 |    145,092 |          0 |          0 |      1,570 |          0 |
.count move_args
    mov     $25, $2                     # |    135,672 |    135,672 |          0 |          0 |          0 |          0 |
    call    solve_each_element.2871     # |    135,672 |    135,672 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 3, $sp                 # |    135,672 |    135,672 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |    135,672 |    271,344 |    135,672 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |    135,672 |    135,894 |          0 |          0 |         37 |          0 |
.count stack_load
    load    [$sp - 3], $4               # |    135,672 |    135,672 |          0 |          0 |          0 |          0 |
    add     $1, 1, $2                   # |    135,672 |    283,830 |          0 |     24,693 |          0 |          0 |
    b       solve_one_or_network.2875   # |    135,672 |    151,938 |          0 |          0 |          0 |      8,133 |
.end solve_one_or_network

######################################################################
.begin trace_or_matrix
trace_or_matrix.2879:
    load    [$3 + $2], $26              # |     71,262 |    214,854 |          0 |     23,754 |        178 |          0 |
    li      1, $27                      # |     71,262 |     71,262 |          0 |          0 |          0 |          0 |
    load    [$26 + 0], $28              # |     71,262 |    143,276 |     71,084 |          0 |        155 |          0 |
    cmp     $28, -1                     # |     71,262 |    213,476 |    142,214 |          0 |          0 |          0 |
    bne     be_else.7661                # |     71,262 |    143,924 |     71,262 |          0 |          0 |        700 |
be_then.7661:
    ret                                 # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
be_else.7661:
.count stack_move
    sub     $sp, 3, $sp                 # |     47,508 |    195,666 |          0 |     24,693 |          0 |          0 |
    cmp     $28, 99                     # |     47,508 |     47,508 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |     47,508 |     47,508 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |     47,508 |     47,508 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |     47,508 |     47,508 |          0 |          0 |          0 |          0 |
    bne     be_else.7662                # |     47,508 |     47,854 |          0 |          0 |          0 |        173 |
be_then.7662:
.count move_args
    mov     $26, $3                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $27, $2                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    call    solve_one_or_network.2875   # |     23,754 |     29,388 |          0 |        939 |          0 |          0 |
.count b_cont
    b       be_cont.7662                # |     23,754 |    166,290 |          0 |     23,754 |          0 |          6 |
be_else.7662:
.count move_args
    mov     $4, $3                      # |     23,754 |    166,278 |          0 |     23,754 |          0 |          0 |
.count move_args
    mov     $28, $2                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    call    solver.2773                 # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $27                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    cmp     $27, 0                      # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    be      bne_cont.7663               # |     23,754 |     47,746 |     23,754 |          0 |          0 |        119 |
bne_then.7663:
    fcmp    $42, $41                    # |      6,776 |     41,444 |          0 |      5,778 |          0 |          0 |
    li      1, $2                       # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    ble     bg_cont.7664                # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
bg_then.7664:
.count stack_load
    load    [$sp + 0], $4               # |      6,776 |      7,022 |          0 |          0 |         41 |          0 |
.count move_args
    mov     $26, $3                     # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
    call    solve_one_or_network.2875   # |      6,776 |      6,776 |          0 |          0 |          0 |          0 |
bg_cont.7664:
bne_cont.7663:
be_cont.7662:
.count stack_move
    add     $sp, 3, $sp                 # |     47,508 |    227,964 |          0 |     30,076 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |     47,508 |     95,232 |     47,508 |          0 |         36 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |     47,508 |     47,724 |          0 |          0 |         36 |          0 |
.count stack_load
    load    [$sp - 3], $4               # |     47,508 |     47,682 |          0 |          0 |         29 |          0 |
    add     $1, 1, $2                   # |     47,508 |     47,508 |          0 |          0 |          0 |          0 |
    b       trace_or_matrix.2879        # |     47,508 |     48,156 |          0 |          0 |          0 |        324 |
.end trace_or_matrix

######################################################################
.begin judge_intersection
judge_intersection.2883:
.count load_float
    load    [f.6272], $29               # |     23,754 |    142,908 |          0 |     18,572 |      1,287 |          0 |
.count move_args
    mov     $2, $4                      # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $44, $3                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $29, $42                    # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    li      0, $29                      # |     23,754 |    135,186 |          0 |     18,572 |          0 |          0 |
.count move_args
    mov     $29, $2                     # |     23,754 |     47,508 |     23,754 |          0 |          0 |          0 |
    call    trace_or_matrix.2879        # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    fcmp    $42, $40                    # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.6273], $1                # |     23,754 |     25,944 |          0 |          0 |        365 |          0 |
    bg      ble_else.7665               # |     23,754 |     23,804 |          0 |          0 |          0 |         25 |
ble_then.7665:
    li      0, $1
    ret
ble_else.7665:
    fcmp    $1, $42                     # |     23,754 |     47,125 |     23,365 |          1 |          0 |          0 |
    bg      ble_else.7666               # |     23,754 |     48,014 |     23,754 |          0 |          0 |        253 |
ble_then.7666:
    li      0, $1                       # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    ret                                 # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
ble_else.7666:
    li      1, $1                       # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    ret                                 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.end judge_intersection

######################################################################
.begin solve_each_element_fast
solve_each_element_fast.2885:
    load    [$3 + $2], $16              # | 13,852,170 | 15,704,442 |          0 |        512 |    308,200 |          0 |
    cmp     $16, -1                     # | 13,852,170 | 40,940,110 | 27,087,940 |          0 |          0 |          0 |
    bne     be_else.7667                # | 13,852,170 | 30,637,481 | 13,840,531 |     11,639 |          0 |  1,437,473 |
be_then.7667:
    ret                                 # |  3,308,076 |  3,308,076 |          0 |          0 |          0 |          0 |
be_else.7667:
.count stack_move
    sub     $sp, 7, $sp                 # | 10,544,094 | 10,544,094 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # | 10,544,094 | 21,088,188 | 10,544,094 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # | 10,544,094 | 10,544,094 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # | 10,544,094 | 10,544,094 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $4, $3                      # | 10,544,094 | 10,544,094 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $16, $2                     # | 10,544,094 | 10,544,094 |          0 |          0 |          0 |          0 |
    call    solver_fast2.2814           # | 10,544,094 | 10,621,752 |          0 |     12,943 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # | 10,544,094 | 10,544,094 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # | 10,544,094 | 10,544,094 |          0 |          0 |          0 |          0 |
    bne     be_else.7668                # | 10,544,094 | 21,088,454 | 10,544,094 |          0 |          0 |        133 |
be_then.7668:
    load    [min_caml_objects + $16], $2# |  6,267,235 |  6,483,115 |          0 |          0 |     35,980 |          0 |
    call    o_isinvert.2645             # |  6,267,235 |  6,267,235 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |  6,267,235 | 12,156,116 |  5,888,881 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 7, $sp                 # |  6,267,235 |  6,267,235 |          0 |          0 |          0 |          0 |
    bne     be_else.7669                # |  6,267,235 |  7,265,495 |          0 |      1,028 |          0 |    496,046 |
be_then.7669:
    ret                                 # |  5,339,332 |  5,339,332 |          0 |          0 |          0 |          0 |
be_else.7669:
.count stack_load
    load    [$sp - 5], $1               # |    927,903 |    987,957 |          0 |          0 |     10,009 |          0 |
.count stack_load
    load    [$sp - 6], $3               # |    927,903 |    951,159 |          0 |          0 |      3,876 |          0 |
.count stack_load
    load    [$sp - 7], $4               # |    927,903 |    942,681 |          0 |          0 |      2,463 |          0 |
    add     $1, 1, $2                   # |    927,903 |    927,903 |          0 |          0 |          0 |          0 |
    b       solve_each_element_fast.2885# |    927,903 |    928,069 |          0 |          0 |          0 |         83 |
be_else.7668:
.count stack_load
    load    [$sp + 0], $2               # |  4,276,859 |  4,371,833 |          0 |        841 |     14,988 |          0 |
    call    d_vec.2700                  # |  4,276,859 |  8,181,449 |          0 |    650,765 |          0 |          0 |
    fcmp    $41, $zero                  # |  4,276,859 |  4,276,859 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |  4,276,859 |  4,276,859 |          0 |          0 |          0 |          0 |
    ble     bg_cont.7670                # |  4,276,859 |  5,499,887 |          0 |          0 |          0 |    611,514 |
bg_then.7670:
    fcmp    $42, $41                    # |  1,396,933 |  1,396,933 |          0 |          0 |          0 |          0 |
    ble     bg_cont.7671                # |  1,396,933 |  3,302,364 |  1,396,933 |          0 |          0 |    254,249 |
bg_then.7671:
.count load_float
    load    [f.6270], $18               # |  1,181,488 |  2,199,532 |          0 |          0 |    169,674 |          0 |
.count stack_store
    store   $10, [$sp + 3]              # |  1,181,488 |  1,181,488 |          0 |          0 |          0 |          0 |
    load    [$17 + 0], $19              # |  1,181,488 |  8,423,266 |          0 |  1,181,488 |     25,475 |          0 |
    fadd    $41, $18, $18               # |  1,181,488 |  1,181,488 |          0 |          0 |          0 |          0 |
    load    [min_caml_startp_fast + 0], $20# |  1,181,488 |  1,436,344 |          0 |          0 |     42,476 |          0 |
    load    [$17 + 1], $21              # |  1,181,488 |  1,212,442 |          0 |          0 |      5,159 |          0 |
    load    [$17 + 2], $17              # |  1,181,488 |  1,431,958 |          0 |          0 |     41,745 |          0 |
    load    [min_caml_startp_fast + 1], $22# |  1,181,488 |  1,349,164 |          0 |          0 |     27,946 |          0 |
    load    [min_caml_startp_fast + 2], $23# |  1,181,488 |  1,202,704 |          0 |          0 |      3,536 |          0 |
    fmul    $19, $18, $19               # |  1,181,488 |  1,181,488 |          0 |          0 |          0 |          0 |
    fmul    $21, $18, $21               # |  1,181,488 |  8,251,018 |          0 |  1,178,255 |          0 |          0 |
    fmul    $17, $18, $17               # |  1,181,488 |  1,181,488 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |  1,181,488 |  1,181,488 |          0 |          0 |          0 |          0 |
    fadd    $19, $20, $4                # |  1,181,488 |  1,184,721 |      3,233 |          0 |          0 |          0 |
    fadd    $21, $22, $5                # |  1,181,488 |  2,359,743 |  1,178,255 |          0 |          0 |          0 |
    fadd    $17, $23, $6                # |  1,181,488 |  1,181,488 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 4]               # |  1,181,488 |  2,366,209 |  1,184,721 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 5]               # |  1,181,488 |  2,359,743 |  1,178,255 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 6]               # |  1,181,488 |  6,910,222 |          0 |    954,789 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |  1,181,488 |  1,204,156 |          0 |          0 |      3,778 |          0 |
    call    check_all_inside.2856       # |  1,181,488 |  1,181,488 |          0 |          0 |          0 |          0 |
    cmp     $1, 0                       # |  1,181,488 |  8,270,416 |          0 |  1,181,488 |          0 |          0 |
    be      bne_cont.7672               # |  1,181,488 |  2,559,782 |  1,181,488 |          0 |          0 |     98,403 |
bne_then.7672:
.count move_float
    mov     $18, $42                    # |    756,545 |    756,545 |          0 |          0 |          0 |          0 |
    li      min_caml_intersection_point, $2# |    756,545 |    756,545 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $3               # |    756,545 |    876,089 |          0 |          0 |     19,924 |          0 |
.count stack_load
    load    [$sp + 5], $4               # |    756,545 |  5,338,955 |          0 |    756,545 |      7,190 |          0 |
.count stack_load
    load    [$sp + 6], $5               # |    756,545 |    837,785 |          0 |          0 |     13,540 |          0 |
    call    vecset.2593                 # |    756,545 |    756,545 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $1               # |    756,545 |    829,295 |          0 |          0 |     12,125 |          0 |
.count move_float
    mov     $16, $45                    # |    756,545 |    756,545 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $1, $46                     # |    756,545 |  1,500,965 |    744,420 |          0 |          0 |          0 |
bne_cont.7672:
bg_cont.7671:
bg_cont.7670:
.count stack_move
    add     $sp, 7, $sp                 # |  4,276,859 |  9,238,073 |          0 |    826,869 |          0 |          0 |
.count stack_load
    load    [$sp - 5], $1               # |  4,276,859 |  8,736,244 |  4,276,859 |          0 |     30,421 |          0 |
.count stack_load
    load    [$sp - 6], $3               # |  4,276,859 |  4,329,803 |          0 |          0 |      8,824 |          0 |
.count stack_load
    load    [$sp - 7], $4               # |  4,276,859 |  4,285,241 |          0 |          0 |      1,397 |          0 |
    add     $1, 1, $2                   # |  4,276,859 |  4,276,859 |          0 |          0 |          0 |          0 |
    b       solve_each_element_fast.2885# |  4,276,859 |  4,350,309 |          0 |          0 |          0 |     36,725 |
.end solve_each_element_fast

######################################################################
.begin solve_one_or_network_fast
solve_one_or_network_fast.2889:
    load    [$3 + $2], $24              # | 10,466,848 | 15,443,098 |          0 |    650,642 |    178,733 |          0 |
    li      0, $25                      # | 10,466,848 | 10,466,848 |          0 |          0 |          0 |          0 |
    cmp     $24, -1                     # | 10,466,848 | 20,754,963 | 10,288,115 |          0 |          0 |          0 |
    bne     be_else.7673                # | 10,466,848 | 24,233,220 | 10,466,848 |          0 |          0 |  1,649,762 |
be_then.7673:
    ret                                 # |  1,819,440 |  1,819,440 |          0 |          0 |          0 |          0 |
be_else.7673:
.count stack_move
    sub     $sp, 3, $sp                 # |  8,647,408 | 12,551,260 |          0 |    650,642 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |  8,647,408 | 17,294,816 |  8,647,408 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |  8,647,408 |  8,647,408 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |  8,647,408 |  8,647,408 |          0 |          0 |          0 |          0 |
    load    [min_caml_and_net + $24], $3# |  8,647,408 |  9,972,370 |          0 |          0 |    220,827 |          0 |
.count move_args
    mov     $25, $2                     # |  8,647,408 |  8,647,408 |          0 |          0 |          0 |          0 |
    call    solve_each_element_fast.2885# |  8,647,408 |  8,647,408 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 3, $sp                 # |  8,647,408 | 60,531,856 |          0 |  8,647,408 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |  8,647,408 | 17,679,272 |  8,647,408 |          0 |     64,076 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |  8,647,408 |  8,997,226 |          0 |          0 |     58,303 |          0 |
.count stack_load
    load    [$sp - 3], $4               # |  8,647,408 |  8,963,578 |          0 |          0 |     52,695 |          0 |
    add     $1, 1, $2                   # |  8,647,408 |  8,647,408 |          0 |          0 |          0 |          0 |
    b       solve_one_or_network_fast.2889# |  8,647,408 |  8,647,476 |          0 |          0 |          0 |         34 |
.end solve_one_or_network_fast

######################################################################
.begin trace_or_matrix_fast
trace_or_matrix_fast.2893:
    load    [$3 + $2], $26              # |  3,403,848 |  6,700,584 |          0 |    486,890 |     62,566 |          0 |
    li      1, $27                      # |  3,403,848 |  3,403,848 |          0 |          0 |          0 |          0 |
    load    [$26 + 0], $28              # |  3,403,848 |  7,076,112 |  3,310,272 |     31,491 |     28,841 |          0 |
    cmp     $28, -1                     # |  3,403,848 | 10,153,862 |  6,750,014 |          0 |          0 |          0 |
    bne     be_else.7674                # |  3,403,848 |  6,869,346 |  3,403,848 |          0 |          0 |     30,825 |
be_then.7674:
    ret                                 # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
be_else.7674:
.count stack_move
    sub     $sp, 3, $sp                 # |  2,269,232 |  2,269,232 |          0 |          0 |          0 |          0 |
    cmp     $28, 99                     # |  2,269,232 |  2,269,232 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |  2,269,232 |  2,269,232 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |  2,269,232 |  2,269,232 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |  2,269,232 |  2,444,810 |          0 |     29,263 |          0 |          0 |
    bne     be_else.7675                # |  2,269,232 |  2,282,526 |          0 |          0 |          0 |      6,647 |
be_then.7675:
.count move_args
    mov     $26, $3                     # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $27, $2                     # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    call    solve_one_or_network_fast.2889# |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7675                # |  1,134,616 |  1,228,856 |          0 |          0 |          0 |     47,120 |
be_else.7675:
.count move_args
    mov     $4, $3                      # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $28, $2                     # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    call    solver_fast2.2814           # |  1,134,616 |  7,942,312 |          0 |  1,134,616 |          0 |          0 |
.count move_ret
    mov     $1, $27                     # |  1,134,616 |  7,942,312 |          0 |  1,134,616 |          0 |          0 |
    cmp     $27, 0                      # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    be      bne_cont.7676               # |  1,134,616 |  2,277,792 |  1,134,616 |          0 |          0 |      4,280 |
bne_then.7676:
    fcmp    $42, $41                    # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
    ble     bg_cont.7677                # |    684,824 |    690,678 |          0 |          0 |          0 |      2,927 |
bg_then.7677:
.count stack_load
    load    [$sp + 0], $4               # |    684,824 |    709,598 |          0 |          0 |      4,129 |          0 |
.count move_args
    mov     $26, $3                     # |    684,824 |    747,206 |          0 |     10,397 |          0 |          0 |
    call    solve_one_or_network_fast.2889# |    684,824 |    684,824 |          0 |          0 |          0 |          0 |
bg_cont.7677:
bne_cont.7676:
be_cont.7675:
.count stack_move
    add     $sp, 3, $sp                 # |  2,269,232 |  2,379,104 |          0 |     18,312 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |  2,269,232 |  4,644,472 |  2,269,232 |          0 |     17,668 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |  2,269,232 |  2,327,486 |          0 |          0 |      9,709 |          0 |
.count stack_load
    load    [$sp - 3], $4               # |  2,269,232 |  2,297,300 |          0 |          0 |      4,678 |          0 |
    add     $1, 1, $2                   # |  2,269,232 |  2,269,232 |          0 |          0 |          0 |          0 |
    b       trace_or_matrix_fast.2893   # |  2,269,232 |  2,299,244 |          0 |          0 |          0 |     15,006 |
.end trace_or_matrix_fast

######################################################################
.begin judge_intersection_fast
judge_intersection_fast.2897:
.count load_float
    load    [f.6272], $29               # |  1,134,616 |  2,369,872 |          0 |          1 |    205,875 |          0 |
.count move_args
    mov     $2, $4                      # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $44, $3                     # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $29, $42                    # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    li      0, $29                      # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $29, $2                     # |  1,134,616 |  2,269,232 |  1,134,616 |          0 |          0 |          0 |
    call    trace_or_matrix_fast.2893   # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
    fcmp    $42, $40                    # |  1,134,616 |  1,134,616 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.6273], $1                # |  1,134,616 |  1,589,128 |          0 |          1 |     75,751 |          0 |
    bg      ble_else.7678               # |  1,134,616 |  1,134,628 |          0 |          0 |          0 |          6 |
ble_then.7678:
    li      0, $1
    ret
ble_else.7678:
    fcmp    $1, $42                     # |  1,134,616 |  2,193,475 |  1,058,859 |          0 |          0 |          0 |
    bg      ble_else.7679               # |  1,134,616 |  2,680,640 |  1,134,616 |          0 |          0 |    205,704 |
ble_then.7679:
    li      0, $1                       # |    481,103 |    481,103 |          0 |          0 |          0 |          0 |
    ret                                 # |    481,103 |    481,103 |          0 |          0 |          0 |          0 |
ble_else.7679:
    li      1, $1                       # |    653,513 |    653,519 |          0 |          1 |          0 |          0 |
    ret                                 # |    653,513 |    653,513 |          0 |          0 |          0 |          0 |
.end judge_intersection_fast

######################################################################
.begin get_nvector_rect
get_nvector_rect.2899:
.count stack_move
    sub     $sp, 1, $sp                 # |    122,811 |    122,811 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |    122,811 |    245,622 |    122,811 |          0 |          0 |          0 |
    li      min_caml_nvector, $2        # |    122,811 |    122,811 |          0 |          0 |          0 |          0 |
    call    vecbzero.2601               # |    122,811 |    122,811 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $11              # |    122,811 |    123,057 |          0 |          0 |         41 |          0 |
    sub     $46, 1, $10                 # |    122,811 |    122,811 |          0 |          0 |          0 |          0 |
    load    [$11 + $10], $2             # |    122,811 |    260,418 |    122,811 |          0 |      2,466 |          0 |
    call    sgn.2585                    # |    122,811 |    122,811 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |    122,811 |    194,008 |     71,197 |          0 |          0 |          0 |
    call    fneg.2580                   # |    122,811 |    122,811 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |    122,811 |    122,811 |          0 |          0 |          0 |          0 |
    store   $1, [min_caml_nvector + $10]# |    122,811 |    122,811 |          0 |          0 |          0 |          0 |
    ret                                 # |    122,811 |    122,811 |          0 |          0 |          0 |          0 |
.end get_nvector_rect

######################################################################
.begin get_nvector_plane
get_nvector_plane.2901:
.count stack_move
    sub     $sp, 1, $sp                 # |    398,754 |    398,760 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |    398,754 |    797,513 |    398,753 |          1 |          0 |          0 |
    call    o_param_a.2649              # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |    398,754 |    790,079 |    391,325 |          0 |          0 |          0 |
    mov     $10, $2                     # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
    call    fneg.2580                   # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_nvector + 0] # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
    call    o_param_b.2651              # |    398,754 |    398,760 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |    398,754 |    794,673 |    395,919 |          0 |          0 |          0 |
    mov     $10, $2                     # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
    call    fneg.2580                   # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_nvector + 1] # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
    call    o_param_c.2653              # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |    398,754 |    729,527 |    330,767 |          1 |          0 |          0 |
    call    fneg.2580                   # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
    store   $1, [min_caml_nvector + 2]  # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
    ret                                 # |    398,754 |    398,754 |          0 |          0 |          0 |          0 |
.end get_nvector_plane

######################################################################
.begin get_nvector_second
get_nvector_second.2903:
.count stack_move
    sub     $sp, 1, $sp                 # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |    139,160 |    278,320 |    139,160 |          0 |          0 |          0 |
    call    o_isrot.2647                # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |    139,160 |    276,078 |    136,912 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
    call    o_param_a.2649              # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |    139,160 |    275,160 |    136,000 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 0], $12# |    139,160 |    199,376 |          0 |          0 |     10,036 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
    call    o_param_x.2657              # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |    139,160 |    277,111 |    137,951 |          0 |          0 |          0 |
    fsub    $12, $13, $12               # |    139,160 |    139,166 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
    fmul    $12, $11, $11               # |    139,160 |    556,640 |    417,480 |          0 |          0 |          0 |
    call    o_param_b.2651              # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |    139,160 |    277,787 |    138,627 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 1], $14# |    139,160 |    151,076 |          0 |          0 |      1,986 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
    call    o_param_y.2659              # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |    139,160 |    142,525 |      3,359 |          1 |          0 |          0 |
    fsub    $14, $15, $14               # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
    fmul    $14, $13, $13               # |    139,160 |    556,640 |    417,480 |          0 |          0 |          0 |
    call    o_param_c.2653              # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |    139,160 |    278,017 |    138,857 |          0 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $16# |    139,160 |    139,706 |          0 |          0 |         91 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
    call    o_param_z.2661              # |    139,160 |    139,166 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $17                     # |    139,160 |    277,783 |    138,623 |          0 |          0 |          0 |
    fsub    $16, $17, $16               # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
    fmul    $16, $15, $15               # |    139,160 |    556,640 |    417,480 |          0 |          0 |          0 |
    bne     be_else.7680                # |    139,160 |    290,742 |          0 |          0 |          0 |     75,791 |
be_then.7680:
    store   $11, [min_caml_nvector + 0] # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
    store   $13, [min_caml_nvector + 1] # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
    store   $15, [min_caml_nvector + 2] # |    139,160 |    202,534 |     63,368 |          1 |          0 |          0 |
.count b_cont
    b       be_cont.7680                # |    139,160 |    146,156 |          0 |          0 |          0 |      3,498 |
be_else.7680:
.count stack_load
    load    [$sp + 0], $2
    call    o_param_r3.2677
.count move_ret
    mov     $1, $10
    fmul    $14, $10, $17
.count stack_load
    load    [$sp + 0], $2
    call    o_param_r2.2675
.count move_ret
    mov     $1, $18
    fmul    $16, $18, $19
    fadd    $17, $19, $2
    call    fhalf.2576
.count move_ret
    mov     $1, $17
    fadd    $11, $17, $11
    fmul    $12, $10, $10
    store   $11, [min_caml_nvector + 0]
.count stack_load
    load    [$sp + 0], $2
    call    o_param_r1.2673
.count move_ret
    mov     $1, $11
    fmul    $16, $11, $16
    fadd    $10, $16, $2
    call    fhalf.2576
.count move_ret
    mov     $1, $10
    fadd    $13, $10, $10
    fmul    $12, $18, $12
    fmul    $14, $11, $11
    store   $10, [min_caml_nvector + 1]
    fadd    $12, $11, $2
    call    fhalf.2576
.count move_ret
    mov     $1, $10
    fadd    $15, $10, $10
    store   $10, [min_caml_nvector + 2]
be_cont.7680:
    li      min_caml_nvector, $10       # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
    call    o_isinvert.2645             # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |    139,160 |    278,014 |    138,854 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
    b       vecunit_sgn.2611            # |    139,160 |    139,160 |          0 |          0 |          0 |          0 |
.end get_nvector_second

######################################################################
.begin get_nvector
get_nvector.2905:
.count stack_move
    sub     $sp, 1, $sp                 # |    660,725 |    660,731 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |    660,725 |  1,321,455 |    660,724 |          1 |          0 |          0 |
    call    o_form.2641                 # |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |    660,725 |  1,317,630 |    656,905 |          0 |          0 |          0 |
    cmp     $12, 1                      # |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
    bne     be_else.7681                # |    660,725 |    871,337 |          0 |          0 |          0 |    105,306 |
be_then.7681:
.count move_args
    mov     $3, $2                      # |    122,811 |    122,811 |          0 |          0 |          0 |          0 |
    b       get_nvector_rect.2899       # |    122,811 |    123,895 |          0 |          0 |          0 |        542 |
be_else.7681:
    cmp     $12, 2                      # |    537,914 |    537,920 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $2               # |    537,914 |    545,300 |          0 |          0 |      1,231 |          0 |
    be      get_nvector_plane.2901      # |    537,914 |    717,202 |          0 |          0 |          0 |     89,644 |
    b       get_nvector_second.2903     # |    139,160 |    139,164 |          0 |          0 |          0 |          2 |
.end get_nvector

######################################################################
.begin utexture
utexture.2908:
.count stack_move
    sub     $sp, 4, $sp                 # |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |    660,725 |  1,321,450 |    660,725 |          0 |          0 |          0 |
    call    o_color_red.2667            # |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |    660,725 |  1,192,918 |    532,193 |          0 |          0 |          0 |
    store   $10, [min_caml_texture_color + 0]# |    660,725 |    660,731 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    660,725 |    692,063 |          0 |          0 |      5,223 |          0 |
    call    o_color_green.2669          # |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |    660,725 |  1,286,075 |    625,350 |          0 |          0 |          0 |
    store   $10, [min_caml_texture_color + 1]# |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
    call    o_color_blue.2671           # |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |    660,725 |  1,306,597 |    645,872 |          0 |          0 |          0 |
    store   $10, [min_caml_texture_color + 2]# |    660,725 |    660,731 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
    call    o_texturetype.2639          # |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |    660,725 |  1,250,947 |    590,222 |          0 |          0 |          0 |
    cmp     $10, 1                      # |    660,725 |    660,725 |          0 |          0 |          0 |          0 |
    bne     be_else.7683                # |    660,725 |  1,325,530 |    660,725 |          0 |          0 |      2,040 |
be_then.7683:
.count load_float
    load    [f.6284], $10               # |     94,503 |    218,025 |          0 |          0 |     20,587 |          0 |
.count load_float
    load    [f.6285], $11               # |     94,503 |    211,653 |          0 |          0 |     19,525 |          0 |
    load    [min_caml_intersection_point + 0], $12# |     94,503 |    136,137 |          0 |          1 |      6,938 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |     94,503 |     94,503 |          0 |          0 |          0 |          0 |
    call    o_param_x.2657              # |     94,503 |     94,503 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |     94,503 |    188,996 |     94,493 |          0 |          0 |          0 |
    fsub    $12, $13, $12               # |     94,503 |     94,503 |          0 |          0 |          0 |          0 |
    fmul    $12, $11, $2                # |     94,503 |    472,515 |    378,012 |          0 |          0 |          0 |
    call    min_caml_floor              # |     94,503 |     94,503 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.6286], $14               # |     94,503 |    215,949 |          0 |          0 |     20,241 |          0 |
.count move_ret
    mov     $1, $13                     # |     94,503 |    213,315 |    118,806 |          1 |          0 |          0 |
    load    [min_caml_intersection_point + 2], $15# |     94,503 |    100,695 |          0 |          0 |      1,032 |          0 |
    fmul    $13, $14, $13               # |     94,503 |     94,503 |          0 |          0 |          0 |          0 |
    fsub    $12, $13, $12               # |     94,503 |    472,515 |    378,012 |          0 |          0 |          0 |
    fcmp    $10, $12                    # |     94,503 |    472,515 |    378,012 |          0 |          0 |          0 |
    bg      ble_else.7684               # |     94,503 |    278,462 |     94,503 |          0 |          0 |     44,728 |
ble_then.7684:
    li      0, $12                      # |     50,301 |     50,301 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7684               # |     50,301 |     50,497 |          0 |          0 |          0 |         98 |
ble_else.7684:
    li      1, $12                      # |     44,202 |     44,208 |          0 |          1 |          0 |          0 |
ble_cont.7684:
.count stack_load
    load    [$sp + 0], $2               # |     94,503 |     94,503 |          0 |          0 |          0 |          0 |
    call    o_param_z.2661              # |     94,503 |     94,503 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |     94,503 |    188,993 |     94,490 |          0 |          0 |          0 |
    fsub    $15, $13, $13               # |     94,503 |     94,503 |          0 |          0 |          0 |          0 |
    fmul    $13, $11, $2                # |     94,503 |    472,515 |    378,012 |          0 |          0 |          0 |
    call    min_caml_floor              # |     94,503 |     94,503 |          0 |          0 |          0 |          0 |
    fmul    $1, $14, $1                 # |     94,503 |    362,991 |    268,488 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 4, $sp                 # |     94,503 |     94,509 |          0 |          1 |          0 |          0 |
    fsub    $13, $1, $1                 # |     94,503 |    378,009 |    283,506 |          0 |          0 |          0 |
    fcmp    $10, $1                     # |     94,503 |    472,515 |    378,012 |          0 |          0 |          0 |
    bg      ble_else.7685               # |     94,503 |    276,946 |     94,503 |          0 |          0 |     43,970 |
ble_then.7685:
    li      0, $1                       # |     45,686 |     45,686 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7685               # |     45,686 |     47,862 |          0 |          0 |          0 |      1,088 |
ble_else.7685:
    li      1, $1                       # |     48,817 |     48,817 |          0 |          0 |          0 |          0 |
ble_cont.7685:
    cmp     $12, 0                      # |     94,503 |     94,503 |          0 |          0 |          0 |          0 |
    bne     be_else.7686                # |     94,503 |    189,045 |     94,502 |          1 |          0 |         17 |
be_then.7686:
    cmp     $1, 0                       # |     50,301 |     50,301 |          0 |          0 |          0 |          0 |
    bne     be_else.7687                # |     50,301 |    100,604 |     50,301 |          0 |          0 |          1 |
be_then.7687:
    mov     $37, $1                     # |     24,111 |     24,111 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7686                # |     24,111 |     24,847 |          0 |          0 |          0 |        368 |
be_else.7687:
    mov     $zero, $1                   # |     26,190 |     26,190 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7686                # |     26,190 |     26,198 |          0 |          0 |          0 |          4 |
be_else.7686:
    cmp     $1, 0                       # |     44,202 |     44,202 |          0 |          0 |          0 |          0 |
    bne     be_else.7688                # |     44,202 |     92,072 |     44,202 |          0 |          0 |      1,834 |
be_then.7688:
    mov     $zero, $1                   # |     21,575 |     21,575 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7688                # |     21,575 |     21,583 |          0 |          0 |          0 |          4 |
be_else.7688:
    mov     $37, $1                     # |     22,627 |     22,627 |          0 |          0 |          0 |          0 |
be_cont.7688:
be_cont.7686:
    store   $1, [min_caml_texture_color + 1]# |     94,503 |     94,503 |          0 |          0 |          0 |          0 |
    ret                                 # |     94,503 |     94,503 |          0 |          0 |          0 |          0 |
be_else.7683:
    cmp     $10, 2                      # |    566,222 |    566,228 |          0 |          1 |          0 |          0 |
    bne     be_else.7689                # |    566,222 |  1,141,026 |    566,222 |          0 |          0 |      4,291 |
be_then.7689:
    load    [min_caml_intersection_point + 1], $11# |      2,886 |      2,892 |          0 |          1 |          0 |          0 |
.count load_float
    load    [f.6283], $12               # |      2,886 |     10,464 |          0 |          0 |      1,263 |          0 |
    fmul    $11, $12, $2                # |      2,886 |      6,132 |      3,246 |          0 |          0 |          0 |
    call    min_caml_sin                # |      2,886 |      2,886 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |      2,886 |      2,886 |          0 |          0 |          0 |          0 |
    call    fsqr.2578                   # |      2,886 |      2,886 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 4, $sp                 # |      2,886 |      2,886 |          0 |          0 |          0 |          0 |
    fmul    $37, $1, $2                 # |      2,886 |      8,658 |      5,772 |          0 |          0 |          0 |
    fsub    $36, $1, $1                 # |      2,886 |      2,886 |          0 |          0 |          0 |          0 |
    store   $2, [min_caml_texture_color + 0]# |      2,886 |     11,544 |      8,658 |          0 |          0 |          0 |
    fmul    $37, $1, $1                 # |      2,886 |      2,886 |          0 |          0 |          0 |          0 |
    store   $1, [min_caml_texture_color + 1]# |      2,886 |     14,430 |     11,544 |          0 |          0 |          0 |
    ret                                 # |      2,886 |      2,886 |          0 |          0 |          0 |          0 |
be_else.7689:
    cmp     $10, 3                      # |    563,336 |    563,342 |          0 |          1 |          0 |          0 |
    bne     be_else.7690                # |    563,336 |  1,126,692 |    563,336 |          0 |          0 |         10 |
be_then.7690:
    load    [min_caml_intersection_point + 0], $10
.count stack_load
    load    [$sp + 0], $2
    call    o_param_x.2657
.count move_ret
    mov     $1, $11
    fsub    $10, $11, $2
    call    fsqr.2578
.count move_ret
    mov     $1, $10
    load    [min_caml_intersection_point + 2], $11
.count stack_load
    load    [$sp + 0], $2
    call    o_param_z.2661
.count move_ret
    mov     $1, $12
    fsub    $11, $12, $2
    call    fsqr.2578
.count move_ret
    mov     $1, $11
    fadd    $10, $11, $10
    fsqrt   $10, $10
    fmul    $10, $38, $2
.count stack_store
    store   $2, [$sp + 1]
    call    min_caml_floor
.count stack_load
    load    [$sp + 1], $12
.count move_ret
    mov     $1, $11
    fsub    $12, $11, $11
    fmul    $11, $39, $2
    call    min_caml_cos
.count move_ret
    mov     $1, $2
    call    fsqr.2578
.count stack_move
    add     $sp, 4, $sp
    fmul    $1, $37, $2
    fsub    $36, $1, $1
    store   $2, [min_caml_texture_color + 1]
    fmul    $1, $37, $1
    store   $1, [min_caml_texture_color + 2]
    ret
be_else.7690:
    cmp     $10, 4                      # |    563,336 |    563,342 |          0 |          1 |          0 |          0 |
    bne     be_else.7691                # |    563,336 |  1,126,680 |    563,336 |          0 |          0 |          4 |
be_then.7691:
.count load_float
    load    [f.6274], $10
.count stack_store
    store   $10, [$sp + 2]
    load    [min_caml_intersection_point + 0], $11
.count stack_load
    load    [$sp + 0], $2
    call    o_param_x.2657
.count move_ret
    mov     $1, $12
    fsub    $11, $12, $11
.count stack_load
    load    [$sp + 0], $2
    call    o_param_a.2649
.count move_ret
    mov     $1, $12
    fsqrt   $12, $12
    load    [min_caml_intersection_point + 2], $13
.count stack_load
    load    [$sp + 0], $2
    fmul    $11, $12, $11
    fabs    $11, $12
    call    o_param_z.2661
.count move_ret
    mov     $1, $14
    fsub    $13, $14, $13
.count stack_load
    load    [$sp + 0], $2
    call    o_param_c.2653
.count move_ret
    mov     $1, $14
    fsqrt   $14, $14
    finv    $11, $15
    fcmp    $10, $12
    fmul    $13, $14, $13
    bg      ble_else.7692
ble_then.7692:
    fmul    $13, $15, $12
    fabs    $12, $2
    call    min_caml_atan
.count load_float
    load    [f.6276], $12
.count move_ret
    mov     $1, $10
.count load_float
    load    [f.6278], $14
    fmul    $10, $12, $10
    fmul    $10, $14, $10
.count b_cont
    b       ble_cont.7692
ble_else.7692:
.count load_float
    load    [f.6275], $10
ble_cont.7692:
.count stack_store
    store   $10, [$sp + 3]
.count move_args
    mov     $11, $2
    call    fsqr.2578
.count move_ret
    mov     $1, $10
.count move_args
    mov     $13, $2
    call    fsqr.2578
.count move_ret
    mov     $1, $11
    fadd    $10, $11, $10
    load    [min_caml_intersection_point + 1], $11
.count stack_load
    load    [$sp + 0], $2
    fabs    $10, $12
    call    o_param_y.2659
.count move_ret
    mov     $1, $13
    fsub    $11, $13, $11
.count stack_load
    load    [$sp + 0], $2
    call    o_param_b.2651
.count move_ret
    mov     $1, $13
    fsqrt   $13, $13
    finv    $10, $14
    fmul    $11, $13, $11
.count stack_load
    load    [$sp + 2], $13
    fcmp    $13, $12
    bg      ble_else.7693
ble_then.7693:
    fmul    $11, $14, $11
    fabs    $11, $2
    call    min_caml_atan
.count load_float
    load    [f.6276], $11
.count move_ret
    mov     $1, $10
.count load_float
    load    [f.6278], $12
    fmul    $10, $11, $10
    fmul    $10, $12, $10
.count b_cont
    b       ble_cont.7693
ble_else.7693:
.count load_float
    load    [f.6275], $10
ble_cont.7693:
.count load_float
    load    [f.6280], $11
.count load_float
    load    [f.6249], $12
.count stack_load
    load    [$sp + 3], $2
    call    min_caml_floor
.count stack_load
    load    [$sp + 3], $14
.count move_ret
    mov     $1, $13
    fsub    $14, $13, $13
    fsub    $12, $13, $2
    call    fsqr.2578
.count move_ret
    mov     $1, $13
    fsub    $11, $13, $11
.count move_args
    mov     $10, $2
    call    min_caml_floor
.count move_ret
    mov     $1, $13
    fsub    $10, $13, $10
    fsub    $12, $10, $2
    call    fsqr.2578
    fsub    $11, $1, $1
.count stack_move
    add     $sp, 4, $sp
.count load_float
    load    [f.6281], $2
    fcmp    $zero, $1
    ble     bg_cont.7694
bg_then.7694:
    mov     $zero, $1
bg_cont.7694:
    fmul    $37, $1, $1
    fmul    $1, $2, $1
    store   $1, [min_caml_texture_color + 2]
    ret
be_else.7691:
.count stack_move
    add     $sp, 4, $sp                 # |    563,336 |    563,342 |          0 |          1 |          0 |          0 |
    ret                                 # |    563,336 |    563,336 |          0 |          0 |          0 |          0 |
.end utexture

######################################################################
.begin add_light
add_light.2911:
.count stack_move
    sub     $sp, 2, $sp                 # |     27,868 |     27,868 |          0 |          0 |          0 |          0 |
    fcmp    $2, $zero                   # |     27,868 |     27,868 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |     27,868 |     27,868 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |     27,868 |     27,868 |          0 |          0 |          0 |          0 |
    ble     bg_cont.7695                # |     27,868 |     28,550 |          0 |          1 |          0 |        338 |
bg_then.7695:
    li      min_caml_rgb, $10           # |     26,909 |     26,909 |          0 |          0 |          0 |          0 |
    li      min_caml_texture_color, $4  # |     26,909 |     26,909 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $2, $3                      # |     26,909 |     26,909 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |     26,909 |     26,909 |          0 |          0 |          0 |          0 |
    call    vecaccum.2622               # |     26,909 |     26,909 |          0 |          0 |          0 |          0 |
bg_cont.7695:
.count stack_load
    load    [$sp + 1], $2               # |     27,868 |     27,868 |          0 |          0 |          0 |          0 |
    fcmp    $2, $zero                   # |     27,868 |     83,604 |     55,736 |          0 |          0 |          0 |
    bg      ble_else.7696               # |     27,868 |     62,553 |     27,867 |          1 |          0 |      3,406 |
ble_then.7696:
.count stack_move
    add     $sp, 2, $sp                 # |     13,696 |     13,696 |          0 |          0 |          0 |          0 |
    ret                                 # |     13,696 |     13,696 |          0 |          0 |          0 |          0 |
ble_else.7696:
    load    [min_caml_rgb + 0], $10     # |     14,172 |     14,172 |          0 |          0 |          0 |          0 |
    call    fsqr.2578                   # |     14,172 |     14,172 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |     14,172 |     56,688 |     42,516 |          0 |          0 |          0 |
    mov     $11, $2                     # |     14,172 |     14,172 |          0 |          0 |          0 |          0 |
    call    fsqr.2578                   # |     14,172 |     14,172 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |     14,172 |     14,178 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |     14,172 |     28,344 |     14,172 |          0 |          0 |          0 |
    fmul    $1, $2, $1                  # |     14,172 |     42,516 |     28,344 |          0 |          0 |          0 |
    fadd    $10, $1, $2                 # |     14,172 |     70,860 |     56,688 |          0 |          0 |          0 |
    store   $2, [min_caml_rgb + 0]      # |     14,172 |     70,860 |     56,688 |          0 |          0 |          0 |
    load    [min_caml_rgb + 1], $2      # |     14,172 |     14,172 |          0 |          0 |          0 |          0 |
    fadd    $2, $1, $2                  # |     14,172 |     42,516 |     28,344 |          0 |          0 |          0 |
    store   $2, [min_caml_rgb + 1]      # |     14,172 |     70,860 |     56,688 |          0 |          0 |          0 |
    load    [min_caml_rgb + 2], $2      # |     14,172 |     14,172 |          0 |          0 |          0 |          0 |
    fadd    $2, $1, $1                  # |     14,172 |     42,516 |     28,344 |          0 |          0 |          0 |
    store   $1, [min_caml_rgb + 2]      # |     14,172 |     70,860 |     56,688 |          0 |          0 |          0 |
    ret                                 # |     14,172 |     14,172 |          0 |          0 |          0 |          0 |
.end add_light

######################################################################
.begin trace_reflections
trace_reflections.2915:
    cmp     $2, 0                       # |     36,992 |     36,998 |          0 |          1 |          0 |          0 |
    bl      bge_else.7697               # |     36,992 |     89,338 |     36,992 |          0 |          0 |      7,677 |
bge_then.7697:
.count stack_move
    sub     $sp, 7, $sp                 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |     18,496 |     36,992 |     18,496 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 1]               # |     18,496 |     18,502 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 2]               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 3]               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [min_caml_reflections + $2], $2# |     18,496 |     75,082 |          0 |          0 |      9,431 |          0 |
.count stack_store
    store   $2, [$sp + 4]               # |     18,496 |     36,626 |     18,130 |          0 |          0 |          0 |
    call    r_dvec.2706                 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $30                     # |     18,496 |     24,375 |      5,879 |          0 |          0 |          0 |
    mov     $30, $2                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 5]               # |     18,496 |     18,502 |          0 |          1 |          0 |          0 |
    call    judge_intersection_fast.2897# |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    be      bne_cont.7698               # |     18,496 |     37,812 |     18,496 |          0 |          0 |        410 |
bne_then.7698:
    sll     $45, 2, $10                 # |     11,284 |     11,284 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $2               # |     11,284 |     11,284 |          0 |          0 |          0 |          0 |
    add     $10, $46, $10               # |     11,284 |     11,284 |          0 |          0 |          0 |          0 |
    call    r_surface_id.2704           # |     11,284 |     11,290 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $26                     # |     11,284 |     13,984 |      2,700 |          0 |          0 |          0 |
    cmp     $10, $26                    # |     11,284 |     11,284 |          0 |          0 |          0 |          0 |
    bne     be_cont.7699                # |     11,284 |     23,460 |     11,284 |          0 |          0 |        446 |
be_then.7699:
    li      0, $2                       # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $44, $3                     # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_matrix.2868# |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |     10,330 |     10,336 |          0 |          1 |          0 |          0 |
    bne     be_cont.7700                # |     10,330 |     20,660 |     10,330 |          0 |          0 |          0 |
be_then.7700:
    li      min_caml_nvector, $10       # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $2               # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
    call    d_vec.2700                  # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |     10,330 |     20,660 |     10,330 |          0 |          0 |          0 |
    mov     $11, $3                     # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 6]               # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |     10,330 |     10,336 |          0 |          1 |          0 |          0 |
    call    veciprod.2614               # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     10,330 |     41,320 |     30,990 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $2               # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
    call    r_bright.2708               # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $12              # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
    fmul    $11, $12, $12               # |     10,330 |     10,336 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 6], $3               # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
    fmul    $12, $10, $10               # |     10,330 |     41,320 |     30,990 |          0 |          0 |          0 |
    call    veciprod.2614               # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |     10,330 |     41,320 |     30,990 |          0 |          0 |          0 |
    fmul    $11, $12, $3                # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
    call    add_light.2911              # |     10,330 |     10,330 |          0 |          0 |          0 |          0 |
be_cont.7700:
be_cont.7699:
bne_cont.7698:
.count stack_move
    add     $sp, 7, $sp                 # |     18,496 |     18,502 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 4], $1               # |     18,496 |     36,992 |     18,496 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 5], $3               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 7], $4               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    sub     $1, 1, $2                   # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 6], $5               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    b       trace_reflections.2915      # |     18,496 |     18,768 |          0 |          0 |          0 |        136 |
bge_else.7697:
    ret                                 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.end trace_reflections

######################################################################
.begin trace_ray
trace_ray.2920:
    cmp     $2, 4                       # |     23,754 |     23,760 |          0 |          1 |          0 |          0 |
    bg      ble_else.7701               # |     23,754 |     59,674 |     23,754 |          0 |          0 |      6,083 |
ble_then.7701:
.count stack_move
    sub     $sp, 12, $sp                # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 0]               # |     23,754 |     47,508 |     23,754 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 2]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 3]               # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 4]               # |     23,754 |     23,760 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $4, $2                      # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    call    judge_intersection.2883     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $2               # |     23,754 |     27,648 |          0 |          0 |        649 |          0 |
    call    p_surface_ids.2685          # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |     23,754 |     23,754 |          0 |          0 |          0 |          0 |
    bne     be_else.7702                # |     23,754 |     24,618 |          0 |          1 |          0 |        429 |
be_then.7702:
.count stack_load
    load    [$sp + 3], $12              # |      5,258 |      5,330 |          0 |          0 |         12 |          0 |
    add     $zero, -1, $10              # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    li      min_caml_light, $3          # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
.count storer
    add     $11, $12, $tmp              # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    cmp     $12, 0                      # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    store   $10, [$tmp + 0]             # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    bne     be_else.7703                # |      5,258 |      5,826 |          0 |          0 |          0 |        284 |
be_then.7703:
.count stack_move
    add     $sp, 12, $sp
    ret
be_else.7703:
.count stack_load
    load    [$sp + 2], $2               # |      5,258 |      5,264 |          0 |          1 |          0 |          0 |
    call    veciprod.2614               # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |      5,258 |     21,032 |     15,774 |          0 |          0 |          0 |
    mov     $10, $2                     # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    call    fneg.2580                   # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    mov     $10, $2                     # |      5,258 |      5,264 |          0 |          1 |          0 |          0 |
    fcmp    $2, $zero                   # |      5,258 |      5,258 |          0 |          0 |          0 |          0 |
    bg      ble_else.7704               # |      5,258 |     10,896 |      5,258 |          0 |          0 |        190 |
ble_then.7704:
.count stack_move
    add     $sp, 12, $sp                # |      3,274 |      3,274 |          0 |          0 |          0 |          0 |
    ret                                 # |      3,274 |      3,274 |          0 |          0 |          0 |          0 |
ble_else.7704:
.count stack_store
    store   $2, [$sp + 5]               # |      1,984 |      1,984 |          0 |          0 |          0 |          0 |
    load    [min_caml_rgb + 0], $10     # |      1,984 |      1,984 |          0 |          0 |          0 |          0 |
    call    fsqr.2578                   # |      1,984 |      1,984 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 12, $sp                # |      1,984 |      1,990 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 7], $2               # |      1,984 |      3,968 |      1,984 |          0 |          0 |          0 |
    fmul    $1, $2, $1                  # |      1,984 |      5,952 |      3,968 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 11], $2              # |      1,984 |      1,984 |          0 |          0 |          0 |          0 |
    fmul    $1, $2, $1                  # |      1,984 |      7,936 |      5,952 |          0 |          0 |          0 |
    fmul    $1, $54, $1                 # |      1,984 |      9,920 |      7,936 |          0 |          0 |          0 |
    fadd    $10, $1, $2                 # |      1,984 |      9,920 |      7,936 |          0 |          0 |          0 |
    store   $2, [min_caml_rgb + 0]      # |      1,984 |      9,920 |      7,936 |          0 |          0 |          0 |
    load    [min_caml_rgb + 1], $2      # |      1,984 |     13,888 |          0 |      1,984 |          0 |          0 |
    fadd    $2, $1, $2                  # |      1,984 |      5,952 |      3,968 |          0 |          0 |          0 |
    store   $2, [min_caml_rgb + 1]      # |      1,984 |      9,920 |      7,936 |          0 |          0 |          0 |
    load    [min_caml_rgb + 2], $2      # |      1,984 |      1,984 |          0 |          0 |          0 |          0 |
    fadd    $2, $1, $1                  # |      1,984 |      5,952 |      3,968 |          0 |          0 |          0 |
    store   $1, [min_caml_rgb + 2]      # |      1,984 |      9,920 |      7,936 |          0 |          0 |          0 |
    ret                                 # |      1,984 |      1,984 |          0 |          0 |          0 |          0 |
be_else.7702:
.count stack_store
    store   $11, [$sp + 6]              # |     18,496 |    129,472 |          0 |     18,496 |          0 |          0 |
    load    [min_caml_objects + $45], $2# |     18,496 |    129,814 |          0 |     18,496 |         57 |          0 |
.count stack_store
    store   $2, [$sp + 7]               # |     18,496 |     55,374 |     36,878 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $3               # |     18,496 |     19,144 |          0 |          0 |        108 |          0 |
    call    get_nvector.2905            # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    li      min_caml_startp, $2         # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    li      min_caml_intersection_point, $3# |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    call    veccpy.2603                 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $2               # |     18,496 |     19,312 |          0 |          0 |        136 |          0 |
    call    utexture.2908               # |     18,496 |    129,472 |          0 |     18,496 |          0 |          0 |
    sll     $45, 2, $10                 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $11              # |     18,496 |     22,810 |          0 |          0 |        719 |          0 |
.count stack_load
    load    [$sp + 6], $12              # |     18,496 |     19,294 |          0 |          0 |        133 |          0 |
    add     $10, $46, $10               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count storer
    add     $12, $11, $tmp              # |     18,496 |     36,859 |     18,363 |          0 |          0 |          0 |
    store   $10, [$tmp + 0]             # |     18,496 |     36,992 |     18,496 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $2               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    call    p_intersection_points.2683  # |     18,496 |    129,472 |          0 |     18,496 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     18,496 |     20,234 |      1,738 |          0 |          0 |          0 |
    load    [$10 + $11], $2             # |     18,496 |    119,764 |          0 |          0 |     16,878 |          0 |
    li      min_caml_intersection_point, $3# |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    call    veccpy.2603                 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $2               # |     18,496 |     19,006 |          0 |          0 |         85 |          0 |
    call    o_diffuse.2663              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     18,496 |     35,380 |     16,884 |          0 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 8]              # |     18,496 |    129,472 |          0 |     18,496 |          0 |          0 |
.count load_float
    load    [f.6249], $12               # |     18,496 |     23,446 |          0 |          0 |        825 |          0 |
.count stack_load
    load    [$sp + 4], $2               # |     18,496 |     19,624 |          0 |          0 |        188 |          0 |
    call    p_calc_diffuse.2687         # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $14              # |     18,496 |     19,474 |          0 |          0 |        163 |          0 |
.count move_ret
    mov     $1, $13                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    fcmp    $12, $10                    # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    fmul    $10, $14, $14               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count storer
    add     $13, $11, $tmp              # |     18,496 |    129,472 |          0 |     18,496 |          0 |          0 |
.count stack_store
    store   $14, [$sp + 9]              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    bg      ble_else.7705               # |     18,496 |     19,272 |          0 |          0 |          0 |        388 |
ble_then.7705:
    li      1, $10                      # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    store   $10, [$tmp + 0]             # |     11,126 |     22,252 |     11,126 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $2               # |     11,126 |     11,312 |          0 |          0 |         31 |          0 |
    call    p_energy.2689               # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     11,126 |     22,121 |     10,995 |          0 |          0 |          0 |
    load    [$10 + $11], $2             # |     11,126 |    144,638 |          0 |     11,126 |     11,126 |          0 |
    li      min_caml_texture_color, $3  # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    call    veccpy.2603                 # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    load    [$10 + $11], $2             # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.6287], $10               # |     11,126 |     77,660 |          0 |          0 |     11,089 |          0 |
.count load_float
    load    [f.6288], $10               # |     11,126 |     62,426 |          0 |          0 |      8,550 |          0 |
    fmul    $10, $14, $3                # |     11,126 |     16,278 |      5,152 |          0 |          0 |          0 |
    call    vecscale.2632               # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $2               # |     11,126 |     78,068 |          0 |     11,126 |         31 |          0 |
    call    p_nvectors.2698             # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     11,126 |     11,257 |        131 |          0 |          0 |          0 |
    load    [$10 + $11], $2             # |     11,126 |     77,882 |          0 |          0 |     11,126 |          0 |
    li      min_caml_nvector, $3        # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    call    veccpy.2603                 # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7705               # |     11,126 |     20,978 |          0 |          0 |          0 |      4,926 |
ble_else.7705:
    li      0, $10                      # |      7,370 |     51,590 |          0 |      7,370 |          0 |          0 |
    store   $10, [$tmp + 0]             # |      7,370 |     51,590 |          0 |      7,370 |          0 |          0 |
ble_cont.7705:
    li      min_caml_nvector, $3        # |     18,496 |     85,252 |          0 |     11,126 |          0 |          0 |
.count load_float
    load    [f.6289], $10               # |     18,496 |     83,140 |          0 |          0 |     10,774 |          0 |
.count stack_store
    store   $3, [$sp + 10]              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |     18,496 |     19,576 |          0 |          0 |        180 |          0 |
    call    veciprod.2614               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |     18,496 |     73,984 |     55,488 |          0 |          0 |          0 |
    fmul    $10, $11, $3                # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |     18,496 |    129,472 |          0 |     18,496 |          0 |          0 |
.count stack_load
    load    [$sp + 10], $4              # |     18,496 |     19,714 |          0 |          0 |        203 |          0 |
    call    vecaccum.2622               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $44, $3                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_matrix.2868# |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 7], $2               # |     18,496 |     19,216 |          0 |          0 |        120 |          0 |
    call    o_hilight.2665              # |     18,496 |    129,472 |          0 |     18,496 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $12              # |     18,496 |     18,880 |          0 |          0 |         64 |          0 |
.count move_ret
    mov     $1, $11                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    fmul    $12, $11, $11               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $11, [$sp + 11]             # |     18,496 |     92,480 |     73,984 |          0 |          0 |          0 |
    bne     be_cont.7706                # |     18,496 |     18,964 |          0 |          0 |          0 |        234 |
be_then.7706:
    li      min_caml_nvector, $2        # |     17,538 |     17,538 |          0 |          0 |          0 |          0 |
    li      min_caml_light, $3          # |     17,538 |    122,766 |          0 |     17,538 |          0 |          0 |
    call    veciprod.2614               # |     17,538 |     17,538 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     17,538 |     70,152 |     52,614 |          0 |          0 |          0 |
    mov     $10, $2                     # |     17,538 |     17,538 |          0 |          0 |          0 |          0 |
    call    fneg.2580                   # |     17,538 |     17,538 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 9], $12              # |     17,538 |     18,198 |          0 |          0 |        110 |          0 |
.count move_ret
    mov     $1, $10                     # |     17,538 |     17,538 |          0 |          0 |          0 |          0 |
    li      min_caml_light, $3          # |     17,538 |     17,538 |          0 |          0 |          0 |          0 |
    fmul    $10, $12, $10               # |     17,538 |    122,766 |          0 |     17,538 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |     17,538 |     17,538 |          0 |          0 |          0 |          0 |
    call    veciprod.2614               # |     17,538 |     17,538 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |     17,538 |     70,152 |     52,614 |          0 |          0 |          0 |
    call    fneg.2580                   # |     17,538 |     17,538 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |     17,538 |     17,538 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $4                     # |     17,538 |     17,538 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |     17,538 |     17,538 |          0 |          0 |          0 |          0 |
    call    add_light.2911              # |     17,538 |    122,766 |          0 |     17,538 |          0 |          0 |
be_cont.7706:
    li      min_caml_intersection_point, $2# |     18,496 |     24,244 |          0 |        958 |          0 |          0 |
    call    setup_startp.2834           # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    sub     $48, 1, $2                  # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 9], $3               # |     18,496 |     18,556 |          0 |          0 |         10 |          0 |
.count stack_load
    load    [$sp + 11], $4              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $5               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    call    trace_reflections.2915      # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $10              # |     18,496 |    129,472 |          0 |     18,496 |          0 |          0 |
    fcmp    $10, $38                    # |     18,496 |     55,488 |     36,992 |          0 |          0 |          0 |
    bg      ble_else.7707               # |     18,496 |     46,466 |     18,496 |          0 |          0 |      4,737 |
ble_then.7707:
.count stack_move
    add     $sp, 12, $sp
    ret
ble_else.7707:
.count stack_load
    load    [$sp + 3], $11              # |     18,496 |     18,754 |          0 |          0 |         43 |          0 |
    cmp     $11, 4                      # |     18,496 |     55,402 |     36,906 |          0 |          0 |          0 |
    bge     bl_cont.7708                # |     18,496 |     38,608 |     18,496 |          0 |          0 |        808 |
bl_then.7708:
.count stack_load
    load    [$sp + 6], $13              # |     18,496 |    130,192 |          0 |     18,496 |        120 |          0 |
    add     $11, 1, $11                 # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    add     $zero, -1, $12              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count storer
    add     $13, $11, $tmp              # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    store   $12, [$tmp + 0]             # |     18,496 |     36,992 |     18,496 |          0 |          0 |          0 |
bl_cont.7708:
.count stack_load
    load    [$sp + 7], $2               # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    call    o_reflectiontype.2643       # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    cmp     $1, 2                       # |     18,496 |     34,421 |     15,925 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 12, $sp                # |     18,496 |    129,472 |          0 |     18,496 |          0 |          0 |
    bne     be_else.7709                # |     18,496 |     18,796 |          0 |          0 |          0 |        150 |
be_then.7709:
.count stack_load
    load    [$sp - 4], $1               # |      7,370 |      7,634 |          0 |          0 |         44 |          0 |
.count stack_load
    load    [$sp - 9], $2               # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 12], $3              # |      7,370 |      7,856 |          0 |          0 |         81 |          0 |
    fsub    $36, $1, $1                 # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
    add     $2, 1, $2                   # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
    fadd    $3, $42, $6                 # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 10], $4              # |      7,370 |     51,590 |          0 |      7,370 |          0 |          0 |
.count stack_load
    load    [$sp - 8], $5               # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
    fmul    $10, $1, $3                 # |      7,370 |      7,370 |          0 |          0 |          0 |          0 |
    b       trace_ray.2920              # |      7,370 |      7,390 |          0 |          0 |          0 |         10 |
be_else.7709:
    ret                                 # |     11,126 |     77,882 |          0 |     11,126 |          0 |          0 |
ble_else.7701:
    ret
.end trace_ray

######################################################################
.begin trace_diffuse_ray
trace_diffuse_ray.2926:
.count stack_move
    sub     $sp, 3, $sp                 # |  1,116,120 |  5,134,650 |          0 |    669,755 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |  1,116,120 |  2,439,318 |  1,323,198 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |  1,116,120 |  4,980,432 |          0 |    644,052 |          0 |          0 |
    call    judge_intersection_fast.2897# |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |  1,116,120 |  2,403,810 |          0 |    214,615 |          0 |          0 |
    cmp     $10, 0                      # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    bne     be_else.7710                # |  1,116,120 |  2,232,248 |  1,116,120 |          0 |          0 |          4 |
be_then.7710:
.count stack_move
    add     $sp, 3, $sp                 # |    473,891 |    473,891 |          0 |          0 |          0 |          0 |
    ret                                 # |    473,891 |    473,891 |          0 |          0 |          0 |          0 |
be_else.7710:
.count stack_load
    load    [$sp + 1], $2               # |    642,229 |    779,509 |          0 |          0 |     22,880 |          0 |
    call    d_vec.2700                  # |    642,229 |  4,495,603 |          0 |    642,229 |          0 |          0 |
    load    [min_caml_objects + $45], $2# |    642,229 |    659,479 |          0 |          0 |      2,875 |          0 |
.count move_ret
    mov     $1, $20                     # |    642,229 |    642,229 |          0 |          0 |          0 |          0 |
    mov     $20, $3                     # |    642,229 |    642,229 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |    642,229 |    642,229 |          0 |          0 |          0 |          0 |
    call    get_nvector.2905            # |    642,229 |    642,229 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |    642,229 |    669,691 |          0 |          0 |      4,577 |          0 |
    call    utexture.2908               # |    642,229 |    642,229 |          0 |          0 |          0 |          0 |
    li      0, $2                       # |    642,229 |    642,235 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $44, $3                     # |    642,229 |    642,229 |          0 |          0 |          0 |          0 |
    call    shadow_check_one_or_matrix.2868# |    642,229 |    642,229 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |    642,229 |    642,229 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |    642,229 |    642,229 |          0 |          0 |          0 |          0 |
    bne     be_else.7711                # |    642,229 |  1,299,816 |    642,229 |          0 |          0 |      7,679 |
be_then.7711:
    li      min_caml_diffuse_ray, $10   # |    523,069 |    523,069 |          0 |          0 |          0 |          0 |
    li      min_caml_texture_color, $11 # |    523,069 |    523,069 |          0 |          0 |          0 |          0 |
    li      min_caml_nvector, $2        # |    523,069 |    523,075 |          0 |          1 |          0 |          0 |
    li      min_caml_light, $3          # |    523,069 |    523,069 |          0 |          0 |          0 |          0 |
    call    veciprod.2614               # |    523,069 |    523,069 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |    523,069 |  2,092,276 |  1,569,207 |          0 |          0 |          0 |
    mov     $12, $2                     # |    523,069 |    523,069 |          0 |          0 |          0 |          0 |
    call    fneg.2580                   # |    523,069 |    523,069 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |    523,069 |    523,069 |          0 |          0 |          0 |          0 |
    fcmp    $12, $zero                  # |    523,069 |    523,069 |          0 |          0 |          0 |          0 |
    bg      ble_cont.7712               # |    523,069 |  1,105,401 |    512,022 |     11,047 |          0 |      2,014 |
ble_then.7712:
    mov     $zero, $12                  # |        711 |        711 |          0 |          0 |          0 |          0 |
ble_cont.7712:
.count stack_load
    load    [$sp + 0], $13              # |    523,069 |    642,001 |          0 |          0 |     19,822 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |    523,069 |    523,069 |          0 |          0 |          0 |          0 |
    fmul    $13, $12, $12               # |    523,069 |  1,026,316 |    503,247 |          0 |          0 |          0 |
    call    o_diffuse.2663              # |    523,069 |    523,069 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |    523,069 |  1,029,406 |    506,337 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 3, $sp                 # |    523,069 |    523,069 |          0 |          0 |          0 |          0 |
    fmul    $12, $13, $3                # |    523,069 |    523,069 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $4                     # |    523,069 |    523,069 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |    523,069 |    523,069 |          0 |          0 |          0 |          0 |
    b       vecaccum.2622               # |    523,069 |    523,077 |          0 |          0 |          0 |          4 |
be_else.7711:
.count stack_move
    add     $sp, 3, $sp                 # |    119,160 |    119,160 |          0 |          0 |          0 |          0 |
    ret                                 # |    119,160 |    119,160 |          0 |          0 |          0 |          0 |
.end trace_diffuse_ray

######################################################################
.begin iter_trace_diffuse_rays
iter_trace_diffuse_rays.2929:
    cmp     $4, 0                       # |  1,134,722 |  1,201,934 |          0 |     11,202 |          0 |          0 |
    bl      bge_else.7713               # |  1,134,722 |  2,373,278 |  1,134,722 |          0 |          0 |     51,917 |
bge_then.7713:
.count stack_move
    sub     $sp, 3, $sp                 # |  1,116,120 |  1,183,332 |          0 |     11,202 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |  1,116,120 |  2,232,240 |  1,116,120 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 1]               # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    load    [$2 + $4], $2               # |  1,116,120 |  7,784,262 |          0 |          0 |  1,111,357 |          0 |
    call    d_vec.2700                  # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |  1,116,120 |  1,119,120 |      3,000 |          0 |          0 |          0 |
    mov     $10, $2                     # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
    call    veciprod.2614               # |  1,116,120 |  1,183,332 |          0 |     11,202 |          0 |          0 |
.count move_ret
    mov     $1, $30                     # |  1,116,120 |  4,464,480 |  3,348,360 |          0 |          0 |          0 |
    fcmp    $zero, $30                  # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $31              # |  1,116,120 |  1,260,822 |          0 |          0 |     24,117 |          0 |
    bg      ble_else.7714               # |  1,116,120 |  1,627,708 |          0 |          0 |          0 |    255,794 |
ble_then.7714:
.count stack_load
    load    [$sp + 2], $32              # |    593,471 |    599,759 |          0 |          0 |      1,048 |          0 |
    load    [$32 + $31], $2             # |    593,471 |  1,800,139 |  1,184,846 |          0 |      3,637 |          0 |
.count load_float
    load    [f.6292], $32               # |    593,471 |  1,639,265 |          0 |          0 |    174,299 |          0 |
.count load_float
    load    [f.6293], $32               # |    593,471 |  1,640,777 |          0 |          1 |    174,550 |          0 |
    fmul    $30, $32, $3                # |    593,471 |  1,431,313 |    837,842 |          0 |          0 |          0 |
    call    trace_diffuse_ray.2926      # |    593,471 |    593,471 |          0 |          0 |          0 |          0 |
.count b_cont
    b       ble_cont.7714               # |    593,471 |    593,487 |          0 |          0 |          0 |          8 |
ble_else.7714:
    add     $31, 1, $32                 # |    522,649 |    898,631 |    375,982 |          0 |          0 |          0 |
.count load_float
    load    [f.6291], $33               # |    522,649 |  1,320,289 |          0 |          0 |    132,940 |          0 |
.count stack_load
    load    [$sp + 2], $34              # |    522,649 |    538,393 |          0 |          0 |      2,624 |          0 |
    fmul    $30, $33, $3                # |    522,649 |    910,288 |    387,639 |          0 |          0 |          0 |
    load    [$34 + $32], $2             # |    522,649 |    821,265 |    132,386 |          0 |     27,705 |          0 |
.count load_float
    load    [f.6290], $32               # |    522,649 |    547,849 |          0 |          0 |      4,200 |          0 |
    call    trace_diffuse_ray.2926      # |    522,649 |    522,649 |          0 |          0 |          0 |          0 |
ble_cont.7714:
.count stack_move
    add     $sp, 3, $sp                 # |  1,116,120 |  1,116,126 |          0 |          1 |          0 |          0 |
    sub     $31, 2, $4                  # |  1,116,120 |  1,116,120 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $2               # |  1,116,120 |  1,337,340 |          0 |          0 |     36,870 |          0 |
.count stack_load
    load    [$sp - 3], $3               # |  1,116,120 |  1,299,336 |          0 |          0 |     30,536 |          0 |
    b       iter_trace_diffuse_rays.2929# |  1,116,120 |  1,116,148 |          0 |          0 |          0 |         14 |
bge_else.7713:
    ret                                 # |     18,602 |     18,602 |          0 |          0 |          0 |          0 |
.end iter_trace_diffuse_rays

######################################################################
.begin trace_diffuse_rays
trace_diffuse_rays.2934:
.count stack_move
    sub     $sp, 2, $sp                 # |     18,602 |     18,608 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |     18,602 |     37,204 |     18,602 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |     18,602 |     18,602 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $4, $2                      # |     18,602 |     18,602 |          0 |          0 |          0 |          0 |
    call    setup_startp.2834           # |     18,602 |     18,602 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |     18,602 |     18,602 |          0 |          0 |          0 |          0 |
    li      118, $4                     # |     18,602 |     18,602 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $2               # |     18,602 |     87,092 |          0 |     11,126 |        289 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |     18,602 |     19,388 |          0 |          0 |        131 |          0 |
    b       iter_trace_diffuse_rays.2929# |     18,602 |     18,606 |          0 |          0 |          0 |          2 |
.end trace_diffuse_rays

######################################################################
.begin trace_diffuse_ray_80percent
trace_diffuse_ray_80percent.2938:
.count stack_move
    sub     $sp, 3, $sp                 # |      1,869 |      2,325 |          0 |         76 |          0 |          0 |
    cmp     $2, 0                       # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
    be      bne_cont.7715               # |      1,869 |      4,669 |          0 |        117 |          0 |      1,049 |
bne_then.7715:
    load    [min_caml_dirvecs + 0], $2  # |      1,496 |     10,178 |          0 |          0 |      1,447 |          0 |
    call    trace_diffuse_rays.2934     # |      1,496 |      1,496 |          0 |          0 |          0 |          0 |
bne_cont.7715:
.count stack_load
    load    [$sp + 2], $35              # |      1,869 |      2,421 |          0 |          0 |         92 |          0 |
    cmp     $35, 1                      # |      1,869 |      5,423 |      3,554 |          0 |          0 |          0 |
    be      bne_cont.7716               # |      1,869 |      4,996 |      1,869 |          0 |          0 |        629 |
bne_then.7716:
    load    [min_caml_dirvecs + 1], $2  # |      1,493 |      9,455 |          0 |          0 |      1,327 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |      1,493 |      1,889 |          0 |          0 |         66 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |      1,493 |      2,315 |          0 |         92 |         45 |          0 |
    call    trace_diffuse_rays.2934     # |      1,493 |      1,493 |          0 |          0 |          0 |          0 |
bne_cont.7716:
.count stack_load
    load    [$sp + 2], $35              # |      1,869 |      2,181 |          0 |         25 |         27 |          0 |
    cmp     $35, 2                      # |      1,869 |      5,553 |      3,684 |          0 |          0 |          0 |
    be      bne_cont.7717               # |      1,869 |      4,970 |      1,869 |          0 |          0 |        616 |
bne_then.7717:
    load    [min_caml_dirvecs + 2], $2  # |      1,507 |     10,459 |          0 |          0 |      1,492 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |      1,507 |      1,789 |          0 |          0 |         47 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |      1,507 |      1,741 |          0 |          0 |         39 |          0 |
    call    trace_diffuse_rays.2934     # |      1,507 |      2,083 |          0 |         96 |          0 |          0 |
bne_cont.7717:
.count stack_load
    load    [$sp + 2], $35              # |      1,869 |      7,059 |          0 |         21 |        844 |          0 |
    cmp     $35, 3                      # |      1,869 |      3,919 |      2,050 |          0 |          0 |          0 |
    be      bne_cont.7718               # |      1,869 |      4,966 |      1,869 |          0 |          0 |        614 |
bne_then.7718:
    load    [min_caml_dirvecs + 3], $2  # |      1,488 |      6,936 |          0 |          0 |        908 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |      1,488 |      4,398 |          0 |          0 |        485 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |      1,488 |      4,092 |          0 |          0 |        434 |          0 |
    call    trace_diffuse_rays.2934     # |      1,488 |      1,488 |          0 |          0 |          0 |          0 |
bne_cont.7718:
.count stack_move
    add     $sp, 3, $sp                 # |      1,869 |      2,571 |          0 |        117 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $35              # |      1,869 |      7,146 |      1,869 |          0 |        568 |          0 |
    cmp     $35, 4                      # |      1,869 |      4,471 |      2,602 |          0 |          0 |          0 |
    bne     be_else.7719                # |      1,869 |      4,978 |      1,869 |          0 |          0 |        620 |
be_then.7719:
    ret                                 # |        377 |        377 |          0 |          0 |          0 |          0 |
be_else.7719:
    load    [min_caml_dirvecs + 4], $2  # |      1,492 |      9,334 |          0 |          0 |      1,307 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |      1,492 |      4,978 |          0 |          0 |        581 |          0 |
.count stack_load
    load    [$sp - 3], $4               # |      1,492 |      4,732 |          0 |          0 |        540 |          0 |
    b       trace_diffuse_rays.2934     # |      1,492 |      1,560 |          0 |          0 |          0 |         34 |
.end trace_diffuse_ray_80percent

######################################################################
.begin calc_diffuse_using_1point
calc_diffuse_using_1point.2942:
.count stack_move
    sub     $sp, 2, $sp                 # |      1,869 |      2,571 |          0 |        117 |          0 |          0 |
    li      min_caml_diffuse_ray, $10   # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
    call    p_received_ray_20percent.2691# |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |      1,869 |      2,471 |        602 |          0 |          0 |          0 |
    load    [$11 + $3], $3              # |      1,869 |     10,035 |          0 |          0 |      1,361 |          0 |
.count move_args
    mov     $10, $2                     # |      1,869 |      2,571 |          0 |        117 |          0 |          0 |
    call    veccpy.2603                 # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |      1,869 |      2,049 |          0 |          0 |         30 |          0 |
    call    p_nvectors.2698             # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $11              # |      1,869 |      2,103 |          0 |          0 |         39 |          0 |
.count move_ret
    mov     $1, $10                     # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
    load    [$10 + $11], $10            # |      1,869 |     13,083 |          0 |          0 |      1,869 |          0 |
    call    p_intersection_points.2683  # |      1,869 |      2,415 |          0 |         91 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |      1,869 |      3,725 |      1,856 |          0 |          0 |          0 |
    load    [$12 + $11], $11            # |      1,869 |     13,083 |          0 |          0 |      1,869 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |      1,869 |      2,013 |          0 |          0 |         24 |          0 |
    call    p_group_id.2693             # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
    mov     $12, $2                     # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $4                     # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $3                     # |      1,869 |      2,415 |          0 |         91 |          0 |          0 |
    call    trace_diffuse_ray_80percent.2938# |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |      1,869 |      4,467 |          0 |          0 |        433 |          0 |
    call    p_energy.2689               # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $11              # |      1,869 |      4,131 |          0 |          0 |        377 |          0 |
    load    [$10 + $11], $2             # |      1,869 |     16,067 |      2,984 |          0 |      1,869 |          0 |
    b       vecaccumv.2635              # |      1,869 |      2,613 |          0 |        117 |          0 |         21 |
.end calc_diffuse_using_1point

######################################################################
.begin calc_diffuse_using_5points
calc_diffuse_using_5points.2945:
.count stack_move
    sub     $sp, 1, $sp                 # |      9,257 |      9,257 |          0 |          0 |          0 |          0 |
    li      min_caml_diffuse_ray, $10   # |      9,257 |      9,257 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |      9,257 |      9,257 |          0 |          0 |          0 |          0 |
    load    [$3 + $2], $2               # |      9,257 |      9,881 |          0 |          0 |        104 |          0 |
    call    p_received_ray_20percent.2691# |      9,257 |      9,257 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |      9,257 |     18,375 |      9,118 |          0 |          0 |          0 |
    load    [$11 + $6], $3              # |      9,257 |     64,799 |          0 |          0 |      9,257 |          0 |
.count move_args
    mov     $10, $2                     # |      9,257 |      9,953 |          0 |        116 |          0 |          0 |
    call    veccpy.2603                 # |      9,257 |      9,257 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $10              # |      9,257 |     10,511 |          0 |          0 |        209 |          0 |
    sub     $10, 1, $11                 # |      9,257 |     27,353 |     18,096 |          0 |          0 |          0 |
    load    [$4 + $11], $2              # |      9,257 |     18,988 |      9,257 |          0 |         79 |          0 |
    call    p_received_ray_20percent.2691# |      9,257 |      9,257 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |      9,257 |     18,352 |      9,095 |          0 |          0 |          0 |
    load    [$11 + $6], $2              # |      9,257 |     13,193 |          0 |          0 |        656 |          0 |
    call    vecadd.2626                 # |      9,257 |      9,953 |          0 |        116 |          0 |          0 |
    load    [$4 + $10], $2              # |      9,257 |     10,121 |          0 |          0 |        144 |          0 |
    call    p_received_ray_20percent.2691# |      9,257 |      9,257 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |      9,257 |     17,784 |      8,527 |          0 |          0 |          0 |
    load    [$11 + $6], $2              # |      9,257 |     13,301 |          0 |          0 |        674 |          0 |
    call    vecadd.2626                 # |      9,257 |      9,257 |          0 |          0 |          0 |          0 |
    add     $10, 1, $11                 # |      9,257 |      9,257 |          0 |          0 |          0 |          0 |
    load    [$4 + $11], $2              # |      9,257 |     18,934 |      9,257 |          0 |         70 |          0 |
    call    p_received_ray_20percent.2691# |      9,257 |     12,329 |          0 |        512 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |      9,257 |     18,407 |      9,150 |          0 |          0 |          0 |
    load    [$11 + $6], $2              # |      9,257 |     64,799 |          0 |          0 |      9,257 |          0 |
    call    vecadd.2626                 # |      9,257 |      9,257 |          0 |          0 |          0 |          0 |
    load    [$5 + $10], $2              # |      9,257 |     10,223 |          0 |          0 |        161 |          0 |
    call    p_received_ray_20percent.2691# |      9,257 |      9,257 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |      9,257 |     18,351 |      9,094 |          0 |          0 |          0 |
    load    [$11 + $6], $2              # |      9,257 |     64,739 |          0 |          0 |      9,247 |          0 |
    call    vecadd.2626                 # |      9,257 |      9,257 |          0 |          0 |          0 |          0 |
    load    [$4 + $10], $2              # |      9,257 |      9,917 |          0 |          0 |        110 |          0 |
    call    p_energy.2689               # |      9,257 |      9,257 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |      9,257 |     17,807 |      8,550 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |      9,257 |      9,257 |          0 |          0 |          0 |          0 |
    load    [$10 + $6], $2              # |      9,257 |     64,799 |          0 |          0 |      9,257 |          0 |
    b       vecaccumv.2635              # |      9,257 |      9,721 |          0 |          0 |          0 |        232 |
.end calc_diffuse_using_5points

######################################################################
.begin do_without_neighbors
do_without_neighbors.2951:
    cmp     $3, 4                       # |      5,002 |     16,978 |          0 |      1,996 |          0 |          0 |
    bg      ble_else.7720               # |      5,002 |     20,092 |      3,006 |      1,996 |          0 |         54 |
ble_then.7720:
.count stack_move
    sub     $sp, 2, $sp                 # |      5,002 |      5,002 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |      5,002 |     10,004 |      5,002 |          0 |          0 |          0 |
    call    p_surface_ids.2685          # |      5,002 |      5,002 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |      5,002 |      8,132 |      3,130 |          0 |          0 |          0 |
    load    [$10 + $3], $10             # |      5,002 |     18,640 |          0 |          0 |      2,273 |          0 |
    cmp     $10, 0                      # |      5,002 |     10,460 |      5,458 |          0 |          0 |          0 |
    bl      bge_else.7721               # |      5,002 |     10,488 |      5,002 |          0 |          0 |        242 |
bge_then.7721:
.count stack_store
    store   $3, [$sp + 1]               # |      2,573 |     14,237 |          0 |      1,944 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |      2,573 |      2,621 |          0 |          0 |          8 |          0 |
    call    p_calc_diffuse.2687         # |      2,573 |      2,573 |          0 |          0 |          0 |          0 |
    load    [$1 + $3], $1               # |      2,573 |     17,335 |      2,564 |          0 |      2,033 |          0 |
    cmp     $1, 0                       # |      2,573 |      3,653 |      1,080 |          0 |          0 |          0 |
    be      bne_cont.7722               # |      2,573 |      6,174 |      2,573 |          0 |          0 |        514 |
bne_then.7722:
.count stack_load
    load    [$sp + 0], $2               # |      1,869 |      1,929 |          0 |          0 |         10 |          0 |
    call    calc_diffuse_using_1point.2942# |      1,869 |      1,869 |          0 |          0 |          0 |          0 |
bne_cont.7722:
.count stack_move
    add     $sp, 2, $sp                 # |      2,573 |     14,465 |          0 |      1,982 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |      2,573 |     13,762 |      2,573 |          0 |      1,436 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |      2,573 |      2,609 |          0 |          0 |          6 |          0 |
    add     $1, 1, $3                   # |      2,573 |      3,710 |      1,137 |          0 |          0 |          0 |
    b       do_without_neighbors.2951   # |      2,573 |      2,621 |          0 |          0 |          0 |         24 |
bge_else.7721:
.count stack_move
    add     $sp, 2, $sp                 # |      2,429 |      2,429 |          0 |          0 |          0 |          0 |
    ret                                 # |      2,429 |      2,429 |          0 |          0 |          0 |          0 |
ble_else.7720:
    ret
.end do_without_neighbors

######################################################################
.begin neighbors_exist
neighbors_exist.2954:
    add     $3, 1, $1                   # |     16,384 |     42,488 |     14,440 |      1,944 |          0 |          0 |
    cmp     $49, $1                     # |     16,384 |     32,768 |     16,384 |          0 |          0 |          0 |
    bg      ble_else.7723               # |     16,384 |     32,982 |     16,384 |          0 |          0 |        107 |
ble_then.7723:
    li      0, $1                       # |        128 |        128 |          0 |          0 |          0 |          0 |
    ret                                 # |        128 |        128 |          0 |          0 |          0 |          0 |
ble_else.7723:
    cmp     $3, 0                       # |     16,256 |     16,256 |          0 |          0 |          0 |          0 |
    bg      ble_else.7724               # |     16,256 |     36,798 |     16,256 |          0 |          0 |      2,143 |
ble_then.7724:
    li      0, $1                       # |        128 |        128 |          0 |          0 |          0 |          0 |
    ret                                 # |        128 |        134 |          0 |          1 |          0 |          0 |
ble_else.7724:
    add     $2, 1, $1                   # |     16,128 |     27,294 |          0 |      1,861 |          0 |          0 |
    cmp     $43, $1                     # |     16,128 |     32,256 |     16,128 |          0 |          0 |          0 |
    bg      ble_else.7725               # |     16,128 |     33,408 |     16,128 |          0 |          0 |        576 |
ble_then.7725:
    li      0, $1                       # |        126 |        126 |          0 |          0 |          0 |          0 |
    ret                                 # |        126 |        126 |          0 |          0 |          0 |          0 |
ble_else.7725:
    cmp     $2, 0                       # |     16,002 |     16,002 |          0 |          0 |          0 |          0 |
    bg      ble_else.7726               # |     16,002 |     32,200 |     16,002 |          0 |          0 |         98 |
ble_then.7726:
    li      0, $1                       # |        126 |        126 |          0 |          0 |          0 |          0 |
    ret                                 # |        126 |        126 |          0 |          0 |          0 |          0 |
ble_else.7726:
    li      1, $1                       # |     15,876 |     26,232 |          0 |      1,726 |          0 |          0 |
    ret                                 # |     15,876 |     15,876 |          0 |          0 |          0 |          0 |
.end neighbors_exist

######################################################################
.begin get_surface_id
get_surface_id.2958:
    call    p_surface_ids.2685          # |    151,904 |    293,774 |          0 |     23,645 |          0 |          0 |
    load    [$1 + $3], $1               # |    151,904 |    694,198 |     96,476 |          0 |     74,303 |          0 |
    ret                                 # |    151,904 |    151,904 |          0 |          0 |          0 |          0 |
.end get_surface_id

######################################################################
.begin neighbors_are_available
neighbors_are_available.2961:
.count stack_move
    sub     $sp, 1, $sp                 # |     17,844 |     17,844 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |     17,844 |     44,743 |     16,033 |      1,811 |          0 |          0 |
    load    [$3 + $2], $2               # |     17,844 |     50,010 |          0 |          0 |      5,361 |          0 |
.count move_args
    mov     $6, $3                      # |     17,844 |     17,844 |          0 |          0 |          0 |          0 |
    call    get_surface_id.2958         # |     17,844 |     17,844 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $11              # |     17,844 |     21,420 |          0 |          0 |        596 |          0 |
.count move_ret
    mov     $1, $10                     # |     17,844 |     17,844 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $6, $3                      # |     17,844 |     17,844 |          0 |          0 |          0 |          0 |
    load    [$4 + $11], $2              # |     17,844 |     18,096 |          0 |          0 |         42 |          0 |
    call    get_surface_id.2958         # |     17,844 |     28,710 |          0 |      1,811 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |     17,844 |     35,688 |     17,844 |          0 |          0 |          0 |
    cmp     $10, $12                    # |     17,844 |     17,844 |          0 |          0 |          0 |          0 |
    bne     be_else.7727                # |     17,844 |     37,928 |     17,844 |          0 |          0 |      1,120 |
be_then.7727:
    load    [$5 + $11], $2              # |     17,049 |     44,295 |          0 |          0 |      4,541 |          0 |
.count move_args
    mov     $6, $3                      # |     17,049 |     17,049 |          0 |          0 |          0 |          0 |
    call    get_surface_id.2958         # |     17,049 |     17,049 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     17,049 |     19,427 |      2,378 |          0 |          0 |          0 |
    cmp     $10, $12                    # |     17,049 |     25,689 |          0 |      1,440 |          0 |          0 |
    bne     be_else.7728                # |     17,049 |     36,066 |     17,049 |          0 |          0 |        984 |
be_then.7728:
    sub     $11, 1, $10                 # |     16,357 |     16,357 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $6, $3                      # |     16,357 |     16,357 |          0 |          0 |          0 |          0 |
    load    [$4 + $10], $2              # |     16,357 |     22,537 |          0 |          0 |      1,030 |          0 |
    call    get_surface_id.2958         # |     16,357 |     16,357 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     16,357 |     31,515 |     15,158 |          0 |          0 |          0 |
    cmp     $10, $12                    # |     16,357 |     16,357 |          0 |          0 |          0 |          0 |
    bne     be_else.7729                # |     16,357 |     38,875 |     15,294 |      1,063 |          0 |        423 |
be_then.7729:
    add     $11, 1, $10                 # |     16,131 |     16,131 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $6, $3                      # |     16,131 |     16,131 |          0 |          0 |          0 |          0 |
    load    [$4 + $10], $2              # |     16,131 |     36,267 |          0 |          0 |      3,356 |          0 |
    call    get_surface_id.2958         # |     16,131 |     16,131 |          0 |          0 |          0 |          0 |
    cmp     $1, $12                     # |     16,131 |     17,758 |      1,627 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |     16,131 |     16,131 |          0 |          0 |          0 |          0 |
    bne     be_else.7730                # |     16,131 |     16,993 |          0 |          0 |          0 |        431 |
be_then.7730:
    li      1, $1                       # |     15,923 |     21,287 |          0 |        894 |          0 |          0 |
    ret                                 # |     15,923 |     15,923 |          0 |          0 |          0 |          0 |
be_else.7730:
    li      0, $1                       # |        208 |        256 |          0 |          8 |          0 |          0 |
    ret                                 # |        208 |        208 |          0 |          0 |          0 |          0 |
be_else.7729:
.count stack_move
    add     $sp, 1, $sp                 # |        226 |        994 |          0 |        128 |          0 |          0 |
    li      0, $1                       # |        226 |        226 |          0 |          0 |          0 |          0 |
    ret                                 # |        226 |        226 |          0 |          0 |          0 |          0 |
be_else.7728:
.count stack_move
    add     $sp, 1, $sp                 # |        692 |      3,152 |          0 |        410 |          0 |          0 |
    li      0, $1                       # |        692 |        692 |          0 |          0 |          0 |          0 |
    ret                                 # |        692 |        692 |          0 |          0 |          0 |          0 |
be_else.7727:
.count stack_move
    add     $sp, 1, $sp                 # |        795 |        795 |          0 |          0 |          0 |          0 |
    li      0, $1                       # |        795 |        795 |          0 |          0 |          0 |          0 |
    ret                                 # |        795 |        795 |          0 |          0 |          0 |          0 |
.end neighbors_are_available

######################################################################
.begin try_exploit_neighbors
try_exploit_neighbors.2967:
    cmp     $6, 4                       # |     31,799 |     42,665 |          0 |      1,811 |          0 |          0 |
    bg      ble_else.7731               # |     31,799 |     63,598 |     31,799 |          0 |          0 |          0 |
ble_then.7731:
.count stack_move
    sub     $sp, 6, $sp                 # |     31,799 |     31,799 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |     31,799 |     72,653 |     29,988 |      1,811 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |     31,799 |     31,799 |          0 |          0 |          0 |          0 |
    load    [$4 + $2], $2               # |     31,799 |     32,693 |          0 |          0 |        149 |          0 |
.count move_args
    mov     $6, $3                      # |     31,799 |     31,799 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |     31,799 |     63,449 |     31,650 |          0 |          0 |          0 |
    call    get_surface_id.2958         # |     31,799 |     31,799 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |     31,799 |     61,261 |     29,462 |          0 |          0 |          0 |
    cmp     $13, 0                      # |     31,799 |     31,799 |          0 |          0 |          0 |          0 |
    bl      bge_else.7732               # |     31,799 |     73,054 |     30,023 |      1,776 |          0 |        288 |
bge_then.7732:
.count stack_store
    store   $5, [$sp + 3]               # |     17,844 |     17,844 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 4]               # |     17,844 |     17,844 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 5]               # |     17,844 |     17,844 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |     17,844 |     17,982 |          0 |          0 |         23 |          0 |
.count stack_load
    load    [$sp + 0], $3               # |     17,844 |     18,738 |          0 |          0 |        149 |          0 |
    call    neighbors_are_available.2961# |     17,844 |     17,844 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     17,844 |     17,844 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |     17,844 |     28,500 |          0 |      1,776 |          0 |          0 |
    bne     be_else.7733                # |     17,844 |     35,692 |     17,844 |          0 |          0 |          2 |
be_then.7733:
.count stack_move
    add     $sp, 6, $sp                 # |      1,921 |      1,921 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 5], $1               # |      1,921 |      3,872 |      1,921 |          0 |          5 |          0 |
.count stack_load
    load    [$sp - 1], $2               # |      1,921 |      2,191 |          0 |          0 |         45 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |      1,921 |      2,101 |          0 |          0 |         30 |          0 |
    load    [$2 + $1], $2               # |      1,921 |      3,815 |      1,876 |          0 |          3 |          0 |
    b       do_without_neighbors.2951   # |      1,921 |      2,039 |          0 |          0 |          0 |         59 |
be_else.7733:
.count stack_load
    load    [$sp + 2], $2               # |     15,923 |     22,235 |          0 |        940 |        112 |          0 |
    call    p_calc_diffuse.2687         # |     15,923 |     15,923 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $6               # |     15,923 |     18,905 |          0 |          0 |        497 |          0 |
.count move_ret
    mov     $1, $12                     # |     15,923 |     15,923 |          0 |          0 |          0 |          0 |
    load    [$12 + $6], $12             # |     15,923 |    117,335 |     15,426 |          0 |     14,331 |          0 |
    cmp     $12, 0                      # |     15,923 |     19,107 |      3,184 |          0 |          0 |          0 |
    be      bne_cont.7734               # |     15,923 |     33,006 |     15,923 |          0 |          0 |        580 |
bne_then.7734:
.count stack_load
    load    [$sp + 1], $2               # |      9,257 |      9,893 |          0 |          0 |        106 |          0 |
.count stack_load
    load    [$sp + 0], $3               # |      9,257 |     12,593 |          0 |        411 |        145 |          0 |
.count stack_load
    load    [$sp + 5], $4               # |      9,257 |     10,403 |          0 |          0 |        191 |          0 |
.count stack_load
    load    [$sp + 3], $5               # |      9,257 |     10,055 |          0 |          0 |        133 |          0 |
    call    calc_diffuse_using_5points.2945# |      9,257 |      9,257 |          0 |          0 |          0 |          0 |
bne_cont.7734:
.count stack_move
    add     $sp, 6, $sp                 # |     15,923 |     19,097 |          0 |        529 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $1               # |     15,923 |     33,652 |     15,923 |          0 |        301 |          0 |
.count stack_load
    load    [$sp - 5], $2               # |     15,923 |     18,047 |          0 |          0 |        354 |          0 |
.count stack_load
    load    [$sp - 6], $3               # |     15,923 |     17,537 |          0 |          0 |        269 |          0 |
    add     $1, 1, $6                   # |     15,923 |     21,563 |          0 |        940 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $4               # |     15,923 |     16,331 |          0 |          0 |         68 |          0 |
.count stack_load
    load    [$sp - 3], $5               # |     15,923 |     17,147 |          0 |          0 |        204 |          0 |
    b       try_exploit_neighbors.2967  # |     15,923 |     15,927 |          0 |          0 |          0 |          2 |
bge_else.7732:
.count stack_move
    add     $sp, 6, $sp                 # |     13,955 |     13,955 |          0 |          0 |          0 |          0 |
    ret                                 # |     13,955 |     13,955 |          0 |          0 |          0 |          0 |
ble_else.7731:
    ret
.end try_exploit_neighbors

######################################################################
.begin write_ppm_header
write_ppm_header.2974:
    li      80, $2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    min_caml_write              # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      54, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      10, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      49, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      50, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      56, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      32, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      49, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      50, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      56, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      32, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      50, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      53, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      53, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_write              # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      10, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       min_caml_write              # |          1 |          3 |          0 |          0 |          0 |          1 |
.end write_ppm_header

######################################################################
.begin write_rgb_element
write_rgb_element.2976:
    call    min_caml_int_of_float       # |     49,152 |     60,516 |          0 |      1,894 |          0 |          0 |
    cmp     $1, 255                     # |     49,152 |     49,152 |          0 |          0 |          0 |          0 |
    bg      ble_else.7735               # |     49,152 |    106,480 |     49,152 |          0 |          0 |      4,088 |
ble_then.7735:
    cmp     $1, 0                       # |     33,363 |     42,021 |          0 |      1,443 |          0 |          0 |
    bl      bge_else.7736               # |     33,363 |     70,558 |     33,363 |          0 |          0 |      1,916 |
bge_then.7736:
    mov     $1, $2                      # |     33,363 |     33,363 |          0 |          0 |          0 |          0 |
    b       min_caml_write              # |     33,363 |     33,387 |          0 |          0 |          0 |         12 |
bge_else.7736:
    li      0, $2
    b       min_caml_write
ble_else.7735:
    li      255, $2                     # |     15,789 |     18,495 |          0 |        451 |          0 |          0 |
    b       min_caml_write              # |     15,789 |     15,809 |          0 |          0 |          0 |         10 |
.end write_rgb_element

######################################################################
.begin write_rgb
write_rgb.2978:
    load    [min_caml_rgb + 0], $2      # |     16,384 |     28,822 |          0 |      1,808 |        265 |          0 |
    call    write_rgb_element.2976      # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [min_caml_rgb + 1], $2      # |     16,384 |     17,008 |          0 |          0 |        104 |          0 |
    call    write_rgb_element.2976      # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [min_caml_rgb + 2], $2      # |     16,384 |     16,390 |          0 |          0 |          1 |          0 |
    b       write_rgb_element.2976      # |     16,384 |     16,400 |          0 |          0 |          0 |          8 |
.end write_rgb

######################################################################
.begin pretrace_diffuse_rays
pretrace_diffuse_rays.2980:
    cmp     $3, 4                       # |     34,880 |    199,016 |          0 |     27,356 |          0 |          0 |
    bg      ble_else.7737               # |     34,880 |     69,766 |     34,880 |          0 |          0 |          3 |
ble_then.7737:
.count stack_move
    sub     $sp, 3, $sp                 # |     34,880 |    199,016 |          0 |     27,356 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |     34,880 |     69,760 |     34,880 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |     34,880 |     34,880 |          0 |          0 |          0 |          0 |
    call    get_surface_id.2958         # |     34,880 |     34,880 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     34,880 |     43,990 |      9,110 |          0 |          0 |          0 |
    cmp     $10, 0                      # |     34,880 |     34,880 |          0 |          0 |          0 |          0 |
    bl      bge_else.7738               # |     34,880 |     72,826 |     34,880 |          0 |          0 |      1,533 |
bge_then.7738:
.count stack_load
    load    [$sp + 1], $2               # |     18,496 |     19,522 |          0 |          0 |        171 |          0 |
    call    p_calc_diffuse.2687         # |     18,496 |    116,800 |          0 |     16,384 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $11              # |     18,496 |     19,366 |          0 |          0 |        145 |          0 |
.count move_ret
    mov     $1, $10                     # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
    load    [$10 + $11], $10            # |     18,496 |    135,151 |     18,351 |          0 |     16,384 |          0 |
    cmp     $10, 0                      # |     18,496 |     22,720 |      4,224 |          0 |          0 |          0 |
    be      bne_cont.7739               # |     18,496 |     38,046 |     18,496 |          0 |          0 |        527 |
bne_then.7739:
.count stack_load
    load    [$sp + 1], $2               # |     11,126 |     11,396 |          0 |          0 |         45 |          0 |
    call    p_group_id.2693             # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $1, [$sp + 2]               # |     11,126 |     77,882 |          0 |     11,126 |          0 |          0 |
    li      min_caml_diffuse_ray, $2    # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    call    vecbzero.2601               # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |     11,126 |     11,336 |          0 |          0 |         35 |          0 |
    call    p_nvectors.2698             # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     11,126 |     22,217 |     11,091 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |     11,126 |     11,336 |          0 |          0 |         35 |          0 |
    call    p_intersection_points.2683  # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $12              # |     11,126 |     77,714 |          0 |     11,037 |         61 |          0 |
.count move_ret
    mov     $1, $35                     # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    load    [$10 + $11], $3             # |     11,126 |     26,210 |          0 |          0 |      2,514 |          0 |
    load    [min_caml_dirvecs + $12], $2# |     11,126 |     56,096 |          0 |          0 |      7,495 |          0 |
    load    [$35 + $11], $4             # |     11,126 |     25,544 |          0 |          0 |      2,403 |          0 |
    call    trace_diffuse_rays.2934     # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |     11,126 |     79,436 |          0 |     10,972 |        413 |          0 |
    call    p_received_ray_20percent.2691# |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $11              # |     11,126 |     78,698 |          0 |     11,126 |        136 |          0 |
.count move_ret
    mov     $1, $10                     # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    li      min_caml_diffuse_ray, $3    # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
    load    [$10 + $11], $2             # |     11,126 |     77,882 |          0 |          0 |     11,126 |          0 |
    call    veccpy.2603                 # |     11,126 |     11,126 |          0 |          0 |          0 |          0 |
bne_cont.7739:
.count stack_move
    add     $sp, 3, $sp                 # |     18,496 |     62,302 |          0 |      7,301 |          0 |          0 |
    add     $11, 1, $3                  # |     18,496 |     18,496 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |     18,496 |     18,736 |          0 |          0 |         40 |          0 |
    b       pretrace_diffuse_rays.2980  # |     18,496 |    129,314 |          0 |     18,427 |          0 |        128 |
bge_else.7738:
.count stack_move
    add     $sp, 3, $sp                 # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    ret                                 # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
ble_else.7737:
    ret
.end pretrace_diffuse_rays

######################################################################
.begin pretrace_pixels
pretrace_pixels.2983:
    cmp     $3, 0                       # |     16,512 |     17,214 |          0 |        117 |          0 |          0 |
    bl      bge_else.7740               # |     16,512 |     34,278 |     16,512 |          0 |          0 |        627 |
bge_then.7740:
.count stack_move
    sub     $sp, 6, $sp                 # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    li      min_caml_ptrace_dirvec, $10 # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |     16,384 |    114,688 |          0 |     16,384 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 2]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $7, [$sp + 3]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 4]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 5]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    sub     $3, $55, $2                 # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |     16,384 |    114,688 |          0 |     16,384 |          0 |          0 |
    fmul    $50, $13, $13               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $15              # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    fmul    $13, $60, $14               # |     16,384 |     32,768 |     16,384 |          0 |          0 |          0 |
    fadd    $14, $15, $14               # |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    store   $14, [min_caml_ptrace_dirvec + 0]# |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    load    [min_caml_screenx_dir + 1], $14# |     16,384 |    144,622 |          0 |     16,384 |      4,989 |          0 |
.count stack_load
    load    [$sp + 4], $15              # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    fmul    $13, $14, $14               # |     16,384 |     27,779 |     11,395 |          0 |          0 |          0 |
    fadd    $14, $15, $14               # |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    store   $14, [min_caml_ptrace_dirvec + 1]# |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    load    [min_caml_screenx_dir + 2], $14# |     16,384 |     40,732 |          0 |          0 |      4,058 |          0 |
    fmul    $13, $14, $13               # |     16,384 |     41,036 |     24,652 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $14              # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    fadd    $13, $14, $13               # |     16,384 |    114,688 |          0 |     16,384 |          0 |          0 |
    store   $13, [min_caml_ptrace_dirvec + 2]# |     16,384 |     81,920 |     65,536 |          0 |          0 |          0 |
    call    vecunit_sgn.2611            # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    li      min_caml_rgb, $2            # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    call    vecbzero.2601               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    li      min_caml_startp, $2         # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    li      min_caml_viewpoint, $3      # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    call    veccpy.2603                 # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    li      min_caml_ptrace_dirvec, $4  # |     16,384 |    114,688 |          0 |     16,384 |          0 |          0 |
    li      0, $2                       # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $31              # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $32              # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $6                   # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $36, $3                     # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [$32 + $31], $5             # |     16,384 |    110,596 |          0 |          0 |     15,702 |          0 |
    call    trace_ray.2920              # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [$32 + $31], $2             # |     16,384 |    140,464 |          0 |     16,384 |      4,296 |          0 |
    call    p_rgb.2681                  # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     16,384 |     16,439 |         55 |          0 |          0 |          0 |
    mov     $10, $2                     # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    li      min_caml_rgb, $3            # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    call    veccpy.2603                 # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [$32 + $31], $2             # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $3               # |     16,384 |     16,978 |          0 |          0 |         99 |          0 |
    call    p_set_group_id.2695         # |     16,384 |    114,688 |          0 |     16,384 |          0 |          0 |
    li      0, $3                       # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    load    [$32 + $31], $2             # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    call    pretrace_diffuse_rays.2980  # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $10              # |     16,384 |    140,020 |          0 |     11,126 |      9,480 |          0 |
    li      1, $3                       # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |     16,384 |     74,728 |          0 |          0 |      9,724 |          0 |
    sub     $10, 1, $10                 # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    call    add_mod5.2590               # |     16,384 |    114,688 |          0 |     16,384 |          0 |          0 |
.count stack_move
    add     $sp, 6, $sp                 # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    mov     $1, $4                      # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 4], $2               # |     16,384 |     18,658 |          0 |          0 |        379 |          0 |
.count stack_load
    load    [$sp - 1], $5               # |     16,384 |     59,470 |          0 |          0 |      7,181 |          0 |
.count stack_load
    load    [$sp - 2], $6               # |     16,384 |     18,466 |          0 |          0 |        347 |          0 |
.count stack_load
    load    [$sp - 3], $7               # |     16,384 |     17,194 |          0 |          0 |        135 |          0 |
.count move_args
    mov     $10, $3                     # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    b       pretrace_pixels.2983        # |     16,384 |    114,728 |          0 |     16,384 |          0 |         20 |
bge_else.7740:
    ret                                 # |        128 |        128 |          0 |          0 |          0 |          0 |
.end pretrace_pixels

######################################################################
.begin pretrace_line
pretrace_line.2990:
.count stack_move
    sub     $sp, 2, $sp                 # |        128 |        890 |          0 |        127 |          0 |          0 |
    sub     $43, 1, $11                 # |        128 |        128 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |        128 |        128 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |        128 |        128 |          0 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 0], $10# |        128 |        884 |          0 |          0 |        126 |          0 |
    sub     $3, $56, $2                 # |        128 |        128 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |        128 |        896 |          0 |        128 |          0 |          0 |
    fmul    $50, $1, $1                 # |        128 |        320 |        192 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |        128 |        128 |          0 |          0 |          0 |          0 |
    load    [min_caml_screeny_dir + 1], $2# |        128 |        134 |          0 |          0 |          1 |          0 |
    load    [min_caml_screeny_dir + 2], $3# |        128 |        134 |          0 |          0 |          1 |          0 |
    fmul    $1, $10, $4                 # |        128 |        254 |        126 |          0 |          0 |          0 |
    fmul    $1, $2, $2                  # |        128 |        128 |          0 |          0 |          0 |          0 |
    fmul    $1, $3, $1                  # |        128 |        128 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $3                     # |        128 |        140 |          0 |          2 |          0 |          0 |
    fadd    $4, $51, $5                 # |        128 |        254 |        126 |          0 |          0 |          0 |
    fadd    $2, $52, $6                 # |        128 |        128 |          0 |          0 |          0 |          0 |
    fadd    $1, $53, $7                 # |        128 |        128 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $2               # |        128 |        128 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $4               # |        128 |        128 |          0 |          0 |          0 |          0 |
    b       pretrace_pixels.2983        # |        128 |        148 |          0 |          0 |          0 |         10 |
.end pretrace_line

######################################################################
.begin scan_pixel
scan_pixel.2994:
    cmp     $43, $2                     # |     16,512 |    115,578 |          0 |     16,511 |          0 |          0 |
    li      min_caml_rgb, $10           # |     16,512 |     16,518 |          0 |          1 |          0 |          0 |
    load    [$5 + $2], $11              # |     16,512 |     29,292 |          0 |          0 |      2,130 |          0 |
    bg      ble_else.7741               # |     16,512 |     17,048 |          0 |          0 |          0 |        268 |
ble_then.7741:
    ret                                 # |        128 |        128 |          0 |          0 |          0 |          0 |
ble_else.7741:
.count stack_move
    sub     $sp, 5, $sp                 # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 0]               # |     16,384 |     32,768 |     16,384 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 1]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 2]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 3]               # |     16,384 |     16,390 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 4]               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $2                     # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    call    p_rgb.2681                  # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    mov     $11, $3                     # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    call    veccpy.2603                 # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $2               # |     16,384 |     16,894 |          0 |          1 |         84 |          0 |
.count stack_load
    load    [$sp + 3], $3               # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    call    neighbors_exist.2954        # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    cmp     $10, 0                      # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
    bne     be_else.7742                # |     16,384 |     32,802 |     16,384 |          0 |          0 |         17 |
be_then.7742:
.count stack_load
    load    [$sp + 4], $10              # |        508 |        508 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |        508 |        508 |          0 |          0 |          0 |          0 |
    load    [$5 + $10], $2              # |        508 |      3,556 |          0 |        508 |          0 |          0 |
    call    do_without_neighbors.2951   # |        508 |        508 |          0 |          0 |          0 |          0 |
.count b_cont
    b       be_cont.7742                # |        508 |        532 |          0 |          0 |          0 |         12 |
be_else.7742:
    li      0, $10                      # |     15,876 |    111,132 |          0 |     15,876 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $2               # |     15,876 |     15,876 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $4, $3                      # |     15,876 |     15,876 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $5, $4                      # |     15,876 |     15,876 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $6, $5                      # |     15,876 |     15,876 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $6                     # |     15,876 |     15,876 |          0 |          0 |          0 |          0 |
    call    try_exploit_neighbors.2967  # |     15,876 |     15,876 |          0 |          0 |          0 |          0 |
be_cont.7742:
    call    write_rgb.2978              # |     16,384 |     16,390 |          0 |          1 |          0 |          0 |
.count stack_move
    add     $sp, 5, $sp                 # |     16,384 |    114,688 |          0 |     16,384 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |     16,384 |     45,830 |     16,384 |          0 |      2,177 |          0 |
.count stack_load
    load    [$sp - 2], $3               # |     16,384 |     31,012 |          0 |          0 |      2,438 |          0 |
.count stack_load
    load    [$sp - 3], $4               # |     16,384 |     22,504 |          0 |          0 |      1,020 |          0 |
    add     $1, 1, $2                   # |     16,384 |     16,384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 4], $5               # |     16,384 |     22,036 |          0 |          0 |        942 |          0 |
.count stack_load
    load    [$sp - 5], $6               # |     16,384 |     18,328 |          0 |          0 |        324 |          0 |
    b       scan_pixel.2994             # |     16,384 |     16,392 |          0 |          0 |          0 |          4 |
.end scan_pixel

######################################################################
.begin scan_line
scan_line.3000:
    cmp     $49, $2                     # |        129 |        135 |          0 |          1 |          0 |          0 |
    add     $2, 1, $10                  # |        129 |        129 |          0 |          0 |          0 |          0 |
    bg      ble_else.7743               # |        129 |        149 |          0 |          0 |          0 |         10 |
ble_then.7743:
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
ble_else.7743:
    sub     $49, 1, $11                 # |        128 |        128 |          0 |          0 |          0 |          0 |
.count stack_move
    sub     $sp, 5, $sp                 # |        128 |        134 |          0 |          1 |          0 |          0 |
    cmp     $11, $2                     # |        128 |        128 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 0]               # |        128 |        128 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 1]               # |        128 |        128 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 2]               # |        128 |        128 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 3]               # |        128 |        128 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 4]               # |        128 |        128 |          0 |          0 |          0 |          0 |
    ble     bg_cont.7744                # |        128 |        130 |          0 |          0 |          0 |          1 |
bg_then.7744:
.count move_args
    mov     $6, $4                      # |        127 |        133 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $10, $3                     # |        127 |        127 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $5, $2                      # |        127 |        127 |          0 |          0 |          0 |          0 |
    call    pretrace_line.2990          # |        127 |        127 |          0 |          0 |          0 |          0 |
bg_cont.7744:
    li      0, $2                       # |        128 |        128 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $3               # |        128 |        872 |          0 |          0 |        124 |          0 |
.count stack_load
    load    [$sp + 3], $4               # |        128 |        890 |          0 |          0 |        127 |          0 |
.count stack_load
    load    [$sp + 2], $5               # |        128 |        500 |          0 |          0 |         62 |          0 |
.count stack_load
    load    [$sp + 1], $6               # |        128 |        212 |          0 |          1 |         13 |          0 |
    call    scan_pixel.2994             # |        128 |        128 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $10              # |        128 |        896 |          0 |          0 |        128 |          0 |
    li      2, $3                       # |        128 |        128 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |        128 |        128 |          0 |          0 |          0 |          0 |
    add     $10, 1, $10                 # |        128 |        128 |          0 |          0 |          0 |          0 |
    call    add_mod5.2590               # |        128 |        128 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 5, $sp                 # |        128 |        128 |          0 |          0 |          0 |          0 |
    mov     $1, $6                      # |        128 |        134 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 3], $3               # |        128 |        566 |          0 |          0 |         73 |          0 |
.count stack_load
    load    [$sp - 4], $4               # |        128 |        128 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $5               # |        128 |        458 |          0 |          0 |         55 |          0 |
.count move_args
    mov     $10, $2                     # |        128 |        128 |          0 |          0 |          0 |          0 |
    b       scan_line.3000              # |        128 |        224 |          0 |          0 |          0 |         48 |
.end scan_line

######################################################################
.begin create_float5x3array
create_float5x3array.3006:
    li      3, $2                       # |      1,536 |      1,542 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |      1,536 |      1,542 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |      1,536 |      1,542 |          0 |          1 |          0 |          0 |
    store   $11, [$10 + 1]              # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 2]              # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |      1,536 |      1,542 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
    store   $11, [$10 + 3]              # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
    li      3, $2                       # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
    store   $1, [$10 + 4]               # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
    mov     $10, $1                     # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
    ret                                 # |      1,536 |      1,536 |          0 |          0 |          0 |          0 |
.end create_float5x3array

######################################################################
.begin create_pixel
create_pixel.3008:
.count stack_move
    sub     $sp, 3, $sp                 # |        384 |        390 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |        384 |        384 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        384 |        384 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        384 |        384 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |        384 |        384 |          0 |          0 |          0 |          0 |
    call    create_float5x3array.3006   # |        384 |        384 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |        384 |        390 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 0]              # |        384 |        384 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |        384 |        384 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |        384 |        384 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        384 |        384 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |        384 |        384 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 1]              # |        384 |        384 |          0 |          0 |          0 |          0 |
    li      5, $2                       # |        384 |        384 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |        384 |        390 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |        384 |        384 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |        384 |        384 |          0 |          0 |          0 |          0 |
    call    create_float5x3array.3006   # |        384 |        384 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |        384 |        384 |          0 |          0 |          0 |          0 |
    call    create_float5x3array.3006   # |        384 |        384 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |        384 |        384 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $10, [$sp + 2]              # |        384 |        384 |          0 |          0 |          0 |          0 |
    li      1, $2                       # |        384 |        390 |          0 |          1 |          0 |          0 |
    li      0, $3                       # |        384 |        384 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        384 |        384 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $15                     # |        384 |        384 |          0 |          0 |          0 |          0 |
    call    create_float5x3array.3006   # |        384 |        384 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 3, $sp                 # |        384 |        384 |          0 |          0 |          0 |          0 |
    mov     $hp, $2                     # |        384 |        384 |          0 |          0 |          0 |          0 |
    add     $hp, 8, $hp                 # |        384 |        384 |          0 |          0 |          0 |          0 |
    store   $1, [$2 + 7]                # |        384 |        390 |          0 |          1 |          0 |          0 |
    store   $15, [$2 + 6]               # |        384 |        384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |        384 |        390 |          0 |          0 |          1 |          0 |
    store   $1, [$2 + 5]                # |        384 |      1,150 |        766 |          0 |          0 |          0 |
    store   $14, [$2 + 4]               # |        384 |        384 |          0 |          0 |          0 |          0 |
    store   $13, [$2 + 3]               # |        384 |        384 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $1               # |        384 |        396 |          0 |          0 |          2 |          0 |
    store   $1, [$2 + 2]                # |        384 |      1,148 |        764 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 3], $1               # |        384 |        402 |          0 |          1 |          2 |          0 |
    store   $1, [$2 + 1]                # |        384 |      1,148 |        764 |          0 |          0 |          0 |
    store   $12, [$2 + 0]               # |        384 |        384 |          0 |          0 |          0 |          0 |
    mov     $2, $1                      # |        384 |        384 |          0 |          0 |          0 |          0 |
    ret                                 # |        384 |        384 |          0 |          0 |          0 |          0 |
.end create_pixel

######################################################################
.begin init_line_elements
init_line_elements.3010:
    cmp     $3, 0                       # |        384 |        384 |          0 |          0 |          0 |          0 |
    bl      bge_else.7745               # |        384 |        778 |        384 |          0 |          0 |          5 |
bge_then.7745:
.count stack_move
    sub     $sp, 2, $sp                 # |        381 |        381 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |        381 |        767 |        380 |          1 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |        381 |        381 |          0 |          0 |          0 |          0 |
    call    create_pixel.3008           # |        381 |        381 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |        381 |        381 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |        381 |        762 |        381 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $3               # |        381 |        381 |          0 |          0 |          0 |          0 |
.count storer
    add     $3, $2, $tmp                # |        381 |      1,143 |        762 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |        381 |        762 |        381 |          0 |          0 |          0 |
    sub     $2, 1, $1                   # |        381 |        381 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $3, $2                      # |        381 |        381 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $1, $3                      # |        381 |        381 |          0 |          0 |          0 |          0 |
    b       init_line_elements.3010     # |        381 |        385 |          0 |          0 |          0 |          2 |
bge_else.7745:
    mov     $2, $1                      # |          3 |          3 |          0 |          0 |          0 |          0 |
    ret                                 # |          3 |          3 |          0 |          0 |          0 |          0 |
.end init_line_elements

######################################################################
.begin create_pixelline
create_pixelline.3013:
    call    create_pixel.3008           # |          3 |          9 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |          3 |          3 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $43, $2                     # |          3 |          9 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          3 |          3 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $2                      # |          3 |          3 |          0 |          0 |          0 |          0 |
    sub     $43, 2, $3                  # |          3 |          3 |          0 |          0 |          0 |          0 |
    b       init_line_elements.3010     # |          3 |          7 |          0 |          0 |          0 |          2 |
.end create_pixelline

######################################################################
.begin tan
tan.3015:
.count stack_move
    sub     $sp, 1, $sp                 # |      1,000 |      7,000 |          0 |      1,000 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |      1,000 |      2,000 |      1,000 |          0 |          0 |          0 |
    call    min_caml_sin                # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |      1,000 |      1,042 |          0 |          0 |          7 |          0 |
    call    min_caml_cos                # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    finv    $1, $1                      # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    fmul    $11, $1, $1                 # |      1,000 |      4,000 |      3,000 |          0 |          0 |          0 |
    ret                                 # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
.end tan

######################################################################
.begin adjust_position
adjust_position.3017:
    fmul    $2, $2, $11                 # |      1,000 |      1,006 |          0 |          1 |          0 |          0 |
.count stack_move
    sub     $sp, 2, $sp                 # |      1,000 |      1,006 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |      1,000 |      2,000 |      1,000 |          0 |          0 |          0 |
    fadd    $11, $38, $11               # |      1,000 |      1,999 |        999 |          0 |          0 |          0 |
    fsqrt   $11, $11                    # |      1,000 |      5,000 |      4,000 |          0 |          0 |          0 |
.count stack_store
    store   $11, [$sp + 1]              # |      1,000 |      5,000 |      4,000 |          0 |          0 |          0 |
    finv    $11, $2                     # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    call    min_caml_atan               # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $13              # |      1,000 |      1,042 |          0 |          0 |          7 |          0 |
.count move_ret
    mov     $1, $12                     # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
    fmul    $12, $13, $2                # |      1,000 |      1,993 |        993 |          0 |          0 |          0 |
    call    tan.3015                    # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $2               # |      1,000 |      2,012 |      1,000 |          0 |          2 |          0 |
    fmul    $1, $2, $1                  # |      1,000 |      2,996 |      1,996 |          0 |          0 |          0 |
    ret                                 # |      1,000 |      1,000 |          0 |          0 |          0 |          0 |
.end adjust_position

######################################################################
.begin calc_dirvec
calc_dirvec.3020:
    cmp     $2, 5                       # |        600 |        606 |          0 |          1 |          0 |          0 |
.count stack_move
    sub     $sp, 12, $sp                # |        600 |        606 |          0 |          1 |          0 |          0 |
    bl      bge_else.7746               # |        600 |        982 |          0 |          0 |          0 |        191 |
bge_then.7746:
    load    [min_caml_dirvecs + $7], $10# |        100 |        124 |          0 |          0 |          4 |          0 |
    load    [$10 + $8], $2              # |        100 |        574 |        192 |          0 |         47 |          0 |
    call    d_vec.2700                  # |        100 |        100 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |        100 |        100 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $3, $2                      # |        100 |        100 |          0 |          0 |          0 |          0 |
    call    fsqr.2578                   # |        100 |        100 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |        100 |        403 |        297 |          1 |          0 |          0 |
.count move_args
    mov     $4, $2                      # |        100 |        100 |          0 |          0 |          0 |          0 |
    call    fsqr.2578                   # |        100 |        100 |          0 |          0 |          0 |          0 |
    fadd    $12, $1, $1                 # |        100 |        400 |        300 |          0 |          0 |          0 |
.count move_args
    mov     $11, $2                     # |        100 |        100 |          0 |          0 |          0 |          0 |
    fadd    $1, $36, $1                 # |        100 |        400 |        300 |          0 |          0 |          0 |
    fsqrt   $1, $1                      # |        100 |        500 |        400 |          0 |          0 |          0 |
    finv    $1, $5                      # |        100 |        500 |        400 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 0]               # |        100 |        502 |        396 |          1 |          0 |          0 |
    fmul    $3, $5, $3                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    fmul    $4, $5, $4                  # |        100 |        100 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |        100 |        400 |        300 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 2]               # |        100 |        100 |          0 |          0 |          0 |          0 |
    call    vecset.2593                 # |        100 |        100 |          0 |          0 |          0 |          0 |
    add     $8, 40, $11                 # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$10 + $11], $2             # |        100 |        506 |        100 |          0 |         51 |          0 |
    call    d_vec.2700                  # |        100 |        106 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |        100 |        100 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |        100 |        112 |          0 |          0 |          2 |          0 |
    call    fneg.2580                   # |        100 |        100 |          0 |          0 |          0 |          0 |
    mov     $1, $5                      # |        100 |        100 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 3]               # |        100 |        100 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $3               # |        100 |        112 |          0 |          0 |          2 |          0 |
.count stack_load
    load    [$sp + 0], $4               # |        100 |        112 |          0 |          0 |          2 |          0 |
.count move_args
    mov     $11, $2                     # |        100 |        106 |          0 |          1 |          0 |          0 |
    call    vecset.2593                 # |        100 |        100 |          0 |          0 |          0 |          0 |
    add     $8, 80, $11                 # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$10 + $11], $2             # |        100 |        518 |        100 |          0 |         53 |          0 |
    call    d_vec.2700                  # |        100 |        100 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |        100 |        100 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |        100 |        112 |          0 |          0 |          2 |          0 |
    call    fneg.2580                   # |        100 |        100 |          0 |          0 |          0 |          0 |
    mov     $1, $4                      # |        100 |        106 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 4]               # |        100 |        100 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $3               # |        100 |        112 |          0 |          0 |          2 |          0 |
.count stack_load
    load    [$sp + 3], $5               # |        100 |        124 |          0 |          0 |          4 |          0 |
.count move_args
    mov     $11, $2                     # |        100 |        100 |          0 |          0 |          0 |          0 |
    call    vecset.2593                 # |        100 |        100 |          0 |          0 |          0 |          0 |
    add     $8, 1, $11                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$10 + $11], $2             # |        100 |        296 |        100 |          0 |         16 |          0 |
    call    d_vec.2700                  # |        100 |        106 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |        100 |        100 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |        100 |        106 |          0 |          0 |          1 |          0 |
    call    fneg.2580                   # |        100 |        100 |          0 |          0 |          0 |          0 |
    mov     $1, $5                      # |        100 |        100 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 5]               # |        100 |        100 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $3               # |        100 |        118 |          0 |          0 |          3 |          0 |
.count stack_load
    load    [$sp + 3], $4               # |        100 |        106 |          0 |          0 |          1 |          0 |
.count move_args
    mov     $11, $2                     # |        100 |        106 |          0 |          1 |          0 |          0 |
    call    vecset.2593                 # |        100 |        100 |          0 |          0 |          0 |          0 |
    add     $8, 41, $11                 # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$10 + $11], $2             # |        100 |        200 |        100 |          0 |          0 |          0 |
    call    d_vec.2700                  # |        100 |        100 |          0 |          0 |          0 |          0 |
    mov     $1, $2                      # |        100 |        100 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 4], $3               # |        100 |        100 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 5], $4               # |        100 |        100 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $5               # |        100 |        112 |          0 |          1 |          1 |          0 |
    call    vecset.2593                 # |        100 |        100 |          0 |          0 |          0 |          0 |
    add     $8, 81, $11                 # |        100 |        100 |          0 |          0 |          0 |          0 |
    load    [$10 + $11], $2             # |        100 |        224 |        100 |          0 |          4 |          0 |
    call    d_vec.2700                  # |        100 |        100 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 12, $sp                # |        100 |        100 |          0 |          0 |          0 |          0 |
    mov     $1, $2                      # |        100 |        100 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 7], $3               # |        100 |        112 |          0 |          0 |          2 |          0 |
.count stack_load
    load    [$sp - 11], $4              # |        100 |        106 |          0 |          0 |          1 |          0 |
.count stack_load
    load    [$sp - 10], $5              # |        100 |        106 |          0 |          0 |          1 |          0 |
    b       vecset.2593                 # |        100 |        116 |          0 |          0 |          0 |          8 |
bge_else.7746:
.count stack_store
    store   $8, [$sp + 6]               # |        500 |        506 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $7, [$sp + 7]               # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 8]               # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 9]               # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $6, [$sp + 10]              # |        500 |        500 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $5, $3                      # |        500 |        506 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $4, $2                      # |        500 |        500 |          0 |          0 |          0 |          0 |
    call    adjust_position.3017        # |        500 |        500 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |        500 |      2,000 |      1,500 |          0 |          0 |          0 |
    mov     $14, $2                     # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 11]              # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 10], $3              # |        500 |        512 |          0 |          0 |          2 |          0 |
    call    adjust_position.3017        # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 12, $sp                # |        500 |        506 |          0 |          1 |          0 |          0 |
    mov     $1, $4                      # |        500 |      1,498 |        998 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 3], $1               # |        500 |        524 |          0 |          0 |          4 |          0 |
.count stack_load
    load    [$sp - 1], $3               # |        500 |        512 |          0 |          0 |          2 |          0 |
.count stack_load
    load    [$sp - 4], $5               # |        500 |        518 |          0 |          0 |          3 |          0 |
    add     $1, 1, $2                   # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $6               # |        500 |        500 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 5], $7               # |        500 |        518 |          0 |          0 |          3 |          0 |
.count stack_load
    load    [$sp - 6], $8               # |        500 |        512 |          0 |          0 |          2 |          0 |
    b       calc_dirvec.3020            # |        500 |        532 |          0 |          0 |          0 |         16 |
.end calc_dirvec

######################################################################
.begin calc_dirvecs
calc_dirvecs.3028:
    cmp     $2, 0                       # |         60 |         66 |          0 |          1 |          0 |          0 |
    bl      bge_else.7747               # |         60 |        148 |         60 |          0 |          0 |         14 |
bge_then.7747:
.count stack_move
    sub     $sp, 4, $sp                 # |         50 |         50 |          0 |          0 |          0 |          0 |
    li      0, $10                      # |         50 |         50 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |         50 |         50 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $5, [$sp + 1]               # |         50 |         50 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 2]               # |         50 |         56 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 3]               # |         50 |         50 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |         50 |         50 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.6303], $16               # |         50 |         56 |          0 |          0 |          1 |          0 |
.count move_ret
    mov     $1, $15                     # |         50 |        148 |         98 |          0 |          0 |          0 |
.count load_float
    load    [f.6304], $17               # |         50 |         56 |          0 |          0 |          1 |          0 |
    fmul    $15, $16, $15               # |         50 |         50 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $6               # |         50 |         50 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $7               # |         50 |         56 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $8               # |         50 |         56 |          0 |          0 |          1 |          0 |
.count move_args
    mov     $zero, $4                   # |         50 |         50 |          0 |          0 |          0 |          0 |
    fsub    $15, $17, $5                # |         50 |         50 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         50 |         50 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |         50 |         50 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |         50 |         50 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $16              # |         50 |         56 |          0 |          0 |          1 |          0 |
    li      0, $2                       # |         50 |         56 |          0 |          1 |          0 |          0 |
    fadd    $15, $38, $5                # |         50 |         50 |          0 |          0 |          0 |          0 |
    add     $16, 2, $8                  # |         50 |         50 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $6               # |         50 |         56 |          0 |          0 |          1 |          0 |
.count stack_load
    load    [$sp + 2], $7               # |         50 |         50 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $4                   # |         50 |         50 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |         50 |         50 |          0 |          0 |          0 |          0 |
    call    calc_dirvec.3020            # |         50 |         50 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $10              # |         50 |         68 |          0 |          1 |          2 |          0 |
    li      1, $3                       # |         50 |         50 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |         50 |         56 |          0 |          0 |          1 |          0 |
    sub     $10, 1, $10                 # |         50 |         50 |          0 |          0 |          0 |          0 |
    call    add_mod5.2590               # |         50 |         50 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 4, $sp                 # |         50 |         50 |          0 |          0 |          0 |          0 |
    mov     $1, $4                      # |         50 |         50 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $3               # |         50 |         50 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $16, $5                     # |         50 |         50 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |         50 |         50 |          0 |          0 |          0 |          0 |
    b       calc_dirvecs.3028           # |         50 |         62 |          0 |          0 |          0 |          6 |
bge_else.7747:
    ret                                 # |         10 |         10 |          0 |          0 |          0 |          0 |
.end calc_dirvecs

######################################################################
.begin calc_dirvec_rows
calc_dirvec_rows.3033:
    cmp     $2, 0                       # |         11 |         17 |          0 |          1 |          0 |          0 |
    bl      bge_else.7748               # |         11 |         36 |         11 |          0 |          0 |          7 |
bge_then.7748:
.count stack_move
    sub     $sp, 3, $sp                 # |         10 |         10 |          0 |          0 |          0 |          0 |
    li      4, $10                      # |         10 |         10 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |         10 |         16 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 1]               # |         10 |         10 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 2]               # |         10 |         10 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |         10 |         10 |          0 |          0 |          0 |          0 |
.count load_float
    load    [f.6303], $19               # |         10 |         22 |          0 |          0 |          2 |          0 |
.count move_ret
    mov     $1, $18                     # |         10 |         26 |         16 |          0 |          0 |          0 |
.count load_float
    load    [f.6304], $20               # |         10 |         22 |          0 |          0 |          2 |          0 |
    fmul    $18, $19, $18               # |         10 |         10 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $4               # |         10 |         16 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $5               # |         10 |         10 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $2                     # |         10 |         10 |          0 |          0 |          0 |          0 |
    fsub    $18, $20, $3                # |         10 |         19 |          9 |          0 |          0 |          0 |
    call    calc_dirvecs.3028           # |         10 |         10 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $10              # |         10 |         10 |          0 |          0 |          0 |          0 |
    li      2, $3                       # |         10 |         10 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 2], $2               # |         10 |         16 |          0 |          0 |          1 |          0 |
    sub     $10, 1, $10                 # |         10 |         16 |          0 |          1 |          0 |          0 |
    call    add_mod5.2590               # |         10 |         10 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 3, $sp                 # |         10 |         10 |          0 |          0 |          0 |          0 |
    mov     $1, $3                      # |         10 |         10 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $1               # |         10 |         16 |          0 |          0 |          1 |          0 |
.count move_args
    mov     $10, $2                     # |         10 |         10 |          0 |          0 |          0 |          0 |
    add     $1, 4, $4                   # |         10 |         19 |          9 |          0 |          0 |          0 |
    b       calc_dirvec_rows.3033       # |         10 |         22 |          0 |          0 |          0 |          6 |
bge_else.7748:
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.end calc_dirvec_rows

######################################################################
.begin create_dirvec
create_dirvec.3037:
.count stack_move
    sub     $sp, 1, $sp                 # |        601 |        607 |          0 |          1 |          0 |          0 |
    li      3, $2                       # |        601 |        601 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $zero, $3                   # |        601 |        601 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        601 |        601 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $3                      # |        601 |        601 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |        601 |        601 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $47, $2                     # |        601 |        601 |          0 |          0 |          0 |          0 |
    call    min_caml_create_array       # |        601 |        607 |          0 |          1 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |        601 |        601 |          0 |          0 |          0 |          0 |
    mov     $hp, $2                     # |        601 |        601 |          0 |          0 |          0 |          0 |
    store   $1, [$2 + 1]                # |        601 |        601 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |        601 |        601 |          0 |          0 |          0 |          0 |
    add     $hp, 2, $hp                 # |        601 |        601 |          0 |          0 |          0 |          0 |
    store   $1, [$2 + 0]                # |        601 |      1,202 |        601 |          0 |          0 |          0 |
    mov     $2, $1                      # |        601 |        601 |          0 |          0 |          0 |          0 |
    ret                                 # |        601 |        607 |          0 |          1 |          0 |          0 |
.end create_dirvec

######################################################################
.begin create_dirvec_elements
create_dirvec_elements.3039:
    cmp     $3, 0                       # |        600 |        600 |          0 |          0 |          0 |          0 |
    bl      bge_else.7749               # |        600 |      1,218 |        600 |          0 |          0 |          9 |
bge_then.7749:
.count stack_move
    sub     $sp, 2, $sp                 # |        595 |        595 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |        595 |      1,190 |        595 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |        595 |        595 |          0 |          0 |          0 |          0 |
    call    create_dirvec.3037          # |        595 |        595 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |        595 |        595 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |        595 |      1,195 |        594 |          1 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $3               # |        595 |        595 |          0 |          0 |          0 |          0 |
.count storer
    add     $3, $2, $tmp                # |        595 |      1,785 |      1,190 |          0 |          0 |          0 |
    store   $1, [$tmp + 0]              # |        595 |      1,190 |        595 |          0 |          0 |          0 |
    sub     $2, 1, $1                   # |        595 |        595 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $3, $2                      # |        595 |        595 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $1, $3                      # |        595 |        595 |          0 |          0 |          0 |          0 |
    b       create_dirvec_elements.3039 # |        595 |        599 |          0 |          0 |          0 |          2 |
bge_else.7749:
    ret                                 # |          5 |          5 |          0 |          0 |          0 |          0 |
.end create_dirvec_elements

######################################################################
.begin create_dirvecs
create_dirvecs.3042:
    cmp     $2, 0                       # |          6 |         12 |          0 |          1 |          0 |          0 |
    bl      bge_else.7750               # |          6 |         14 |          6 |          0 |          0 |          1 |
bge_then.7750:
.count stack_move
    sub     $sp, 1, $sp                 # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |          5 |         10 |          5 |          0 |          0 |          0 |
    call    create_dirvec.3037          # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          5 |          5 |          0 |          0 |          0 |          0 |
    mov     $10, $3                     # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      120, $2                     # |          5 |         11 |          0 |          1 |          0 |          0 |
    call    min_caml_create_array       # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $11              # |          5 |          5 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      118, $3                     # |          5 |          5 |          0 |          0 |          0 |          0 |
    store   $10, [min_caml_dirvecs + $11]# |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + $11], $2# |          5 |         35 |          0 |          0 |          5 |          0 |
    call    create_dirvec_elements.3039 # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |          5 |         11 |          0 |          1 |          0 |          0 |
    sub     $11, 1, $2                  # |          5 |          5 |          0 |          0 |          0 |          0 |
    b       create_dirvecs.3042         # |          5 |          9 |          0 |          0 |          0 |          2 |
bge_else.7750:
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.end create_dirvecs

######################################################################
.begin init_dirvec_constants
init_dirvec_constants.3044:
    cmp     $3, 0                       # |        605 |        605 |          0 |          0 |          0 |          0 |
    bl      bge_else.7751               # |        605 |      1,228 |        605 |          0 |          0 |          9 |
bge_then.7751:
.count stack_move
    sub     $sp, 2, $sp                 # |        600 |        600 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |        600 |      1,200 |        600 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 1]               # |        600 |        606 |          0 |          1 |          0 |          0 |
    load    [$2 + $3], $2               # |        600 |      3,018 |          0 |          0 |        403 |          0 |
    call    setup_dirvec_constants.2829 # |        600 |        600 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |        600 |        600 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |        600 |      1,212 |        600 |          0 |          2 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |        600 |        606 |          0 |          0 |          1 |          0 |
    sub     $1, 1, $3                   # |        600 |      1,198 |        598 |          0 |          0 |          0 |
    b       init_dirvec_constants.3044  # |        600 |        608 |          0 |          0 |          0 |          4 |
bge_else.7751:
    ret                                 # |          5 |          5 |          0 |          0 |          0 |          0 |
.end init_dirvec_constants

######################################################################
.begin init_vecset_constants
init_vecset_constants.3047:
    cmp     $2, 0                       # |          6 |         12 |          0 |          1 |          0 |          0 |
    bl      bge_else.7752               # |          6 |         14 |          6 |          0 |          0 |          1 |
bge_then.7752:
.count stack_move
    sub     $sp, 1, $sp                 # |          5 |          5 |          0 |          0 |          0 |          0 |
    li      119, $3                     # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |          5 |          5 |          0 |          0 |          0 |          0 |
    load    [min_caml_dirvecs + $2], $2 # |          5 |         29 |          0 |          0 |          4 |          0 |
    call    init_dirvec_constants.3044  # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 1, $sp                 # |          5 |          5 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $1               # |          5 |         10 |          5 |          0 |          0 |          0 |
    sub     $1, 1, $2                   # |          5 |         15 |         10 |          0 |          0 |          0 |
    b       init_vecset_constants.3047  # |          5 |          9 |          0 |          0 |          0 |          2 |
bge_else.7752:
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.end init_vecset_constants

######################################################################
.begin init_dirvecs
init_dirvecs.3049:
    li      4, $2                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    create_dirvecs.3042         # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      9, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      0, $4                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    calc_dirvec_rows.3033       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      4, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       init_vecset_constants.3047  # |          1 |          3 |          0 |          0 |          0 |          1 |
.end init_dirvecs

######################################################################
.begin add_reflection
add_reflection.3051:
.count stack_move
    sub     $sp, 4, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $4, [$sp + 0]               # |          1 |          2 |          1 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $3, [$sp + 2]               # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    create_dirvec.3037          # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $10, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 3]               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    d_vec.2700                  # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $1, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $6, $4                      # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $5, $3                      # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $7, $5                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    vecset.2593                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 3], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    setup_dirvec_constants.2829 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 4, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    mov     $hp, $1                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 4], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $hp, 3, $hp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    store   $2, [$1 + 2]                # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$1 + 1]                # |          1 |          3 |          2 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $2, [$1 + 0]                # |          1 |          3 |          2 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 3], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    store   $1, [min_caml_reflections + $2]# |          1 |          3 |          2 |          0 |          0 |          0 |
    ret                                 # |          1 |          7 |          0 |          1 |          0 |          0 |
.end add_reflection

######################################################################
.begin setup_rect_reflection
setup_rect_reflection.3058:
.count stack_move
    sub     $sp, 5, $sp
    sll     $2, 2, $11
    load    [min_caml_light + 0], $10
.count stack_store
    store   $11, [$sp + 0]
    add     $11, 1, $11
.count move_args
    mov     $3, $2
    call    o_diffuse.2663
.count move_ret
    mov     $1, $12
    fsub    $36, $12, $12
.count stack_store
    store   $12, [$sp + 1]
    load    [min_caml_light + 1], $2
    call    fneg.2580
.count move_ret
    mov     $1, $13
.count stack_store
    store   $13, [$sp + 2]
    load    [min_caml_light + 2], $2
    call    fneg.2580
.count move_ret
    mov     $1, $7
.count stack_store
    store   $7, [$sp + 3]
.count move_args
    mov     $13, $6
.count move_args
    mov     $10, $5
.count move_args
    mov     $12, $4
.count move_args
    mov     $11, $3
.count move_args
    mov     $48, $2
    call    add_reflection.3051
.count stack_load
    load    [$sp + 0], $12
    load    [min_caml_light + 1], $10
    add     $48, 1, $11
    add     $12, 2, $12
    load    [min_caml_light + 0], $2
    call    fneg.2580
.count move_ret
    mov     $1, $20
    mov     $20, $5
.count stack_store
    store   $5, [$sp + 4]
.count stack_load
    load    [$sp + 1], $4
.count stack_load
    load    [$sp + 3], $7
.count move_args
    mov     $10, $6
.count move_args
    mov     $12, $3
.count move_args
    mov     $11, $2
    call    add_reflection.3051
.count stack_load
    load    [$sp + 0], $20
    load    [min_caml_light + 2], $7
    add     $48, 2, $2
    add     $20, 3, $3
.count stack_load
    load    [$sp + 1], $4
.count stack_load
    load    [$sp + 4], $5
.count stack_load
    load    [$sp + 2], $6
    call    add_reflection.3051
    add     $48, 3, $1
.count stack_move
    add     $sp, 5, $sp
.count move_float
    mov     $1, $48
    ret
.end setup_rect_reflection

######################################################################
.begin setup_surface_reflection
setup_surface_reflection.3061:
.count stack_move
    sub     $sp, 2, $sp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
.count load_float
    load    [f.6256], $10               # |          1 |          7 |          0 |          0 |          1 |          0 |
.count stack_store
    store   $3, [$sp + 0]               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $3, $2                      # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    o_param_a.2649              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $11                     # |          1 |          2 |          1 |          0 |          0 |          0 |
    li      min_caml_light, $12         # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $10, $11, $11               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $3, $2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    o_param_abc.2655            # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          1 |          2 |          1 |          0 |          0 |          0 |
    mov     $13, $3                     # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_args
    mov     $12, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    veciprod.2614               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $12                     # |          1 |          4 |          3 |          0 |          0 |          0 |
    fmul    $11, $12, $11               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_light + 0], $13   # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fsub    $11, $13, $11               # |          1 |          3 |          2 |          0 |          0 |          0 |
    call    o_param_b.2651              # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $13                     # |          1 |          2 |          1 |          0 |          0 |          0 |
    fmul    $10, $13, $13               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_light + 1], $14   # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $13, $12, $13               # |          1 |          3 |          2 |          0 |          0 |          0 |
    fsub    $13, $14, $13               # |          1 |          5 |          4 |          0 |          0 |          0 |
    call    o_param_c.2653              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $14                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    fmul    $10, $14, $10               # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_light + 2], $14   # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 0], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $10, $12, $10               # |          1 |          3 |          2 |          0 |          0 |          0 |
    fsub    $10, $14, $10               # |          1 |          5 |          4 |          0 |          0 |          0 |
    call    o_diffuse.2663              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $20                     # |          1 |          2 |          1 |          0 |          0 |          0 |
    fsub    $36, $20, $4                # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $20              # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $10, $7                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $13, $6                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    sll     $20, 2, $20                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $11, $5                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $20, 1, $3                  # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_args
    mov     $48, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    add_reflection.3051         # |          1 |          1 |          0 |          0 |          0 |          0 |
    add     $48, 1, $1                  # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $1, $48                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.end setup_surface_reflection

######################################################################
.begin setup_reflections
setup_reflections.3064:
    cmp     $2, 0                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    bl      bge_else.7753               # |          1 |          2 |          1 |          0 |          0 |          0 |
bge_then.7753:
.count stack_move
    sub     $sp, 2, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 0]               # |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [min_caml_objects + $2], $2 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $2, [$sp + 1]               # |          1 |          3 |          2 |          0 |          0 |          0 |
    call    o_reflectiontype.2643       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          2 |          1 |          0 |          0 |          0 |
    cmp     $10, 2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.7754                # |          1 |          2 |          1 |          0 |          0 |          0 |
be_then.7754:
.count stack_load
    load    [$sp + 1], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    o_diffuse.2663              # |          1 |          7 |          0 |          1 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    fcmp    $36, $10                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    bg      ble_else.7755               # |          1 |          4 |          1 |          0 |          0 |          1 |
ble_then.7755:
.count stack_move
    add     $sp, 2, $sp
    ret
ble_else.7755:
.count stack_load
    load    [$sp + 1], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    o_form.2641                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $21                     # |          1 |          7 |          0 |          1 |          0 |          0 |
    cmp     $21, 1                      # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_move
    add     $sp, 2, $sp                 # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.7756                # |          1 |          3 |          0 |          0 |          0 |          1 |
be_then.7756:
.count stack_load
    load    [$sp - 2], $2
.count stack_load
    load    [$sp - 1], $3
    b       setup_rect_reflection.3058
be_else.7756:
    cmp     $21, 2                      # |          1 |          1 |          0 |          0 |          0 |          0 |
    bne     be_else.7757                # |          1 |          7 |          0 |          1 |          0 |          0 |
be_then.7757:
.count stack_load
    load    [$sp - 2], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       setup_surface_reflection.3061# |          1 |          3 |          0 |          0 |          0 |          1 |
be_else.7757:
    ret
be_else.7754:
.count stack_move
    add     $sp, 2, $sp
    ret
bge_else.7753:
    ret
.end setup_reflections

######################################################################
.begin rt
rt.3066:
.count stack_move
    sub     $sp, 3, $sp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      128, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      128, $10                    # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $2, $43                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $10, $49                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      64, $10                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      64, $11                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $10, $55                    # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_float
    mov     $11, $56                    # |          1 |          7 |          0 |          1 |          0 |          0 |
.count load_float
    load    [f.6312], $10               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    min_caml_float_of_int       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          4 |          3 |          0 |          0 |          0 |
    finv    $16, $16                    # |          1 |          1 |          0 |          0 |          0 |          0 |
    fmul    $10, $16, $16               # |          1 |          5 |          4 |          0 |          0 |          0 |
.count move_float
    mov     $16, $50                    # |          1 |          5 |          4 |          0 |          0 |          0 |
    call    create_pixelline.3013       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_store
    store   $16, [$sp + 0]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    create_pixelline.3013       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $16                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $16, [$sp + 1]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    create_pixelline.3013       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $27                     # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_store
    store   $27, [$sp + 2]              # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    read_parameter.2731         # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    write_ppm_header.2974       # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    init_dirvecs.3049           # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      min_caml_light_dirvec, $2   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    d_vec.2700                  # |          1 |          1 |          0 |          0 |          0 |          0 |
.count move_ret
    mov     $1, $10                     # |          1 |          2 |          1 |          0 |          0 |          0 |
    mov     $10, $2                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      min_caml_light, $3          # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    veccpy.2603                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      min_caml_light_dirvec, $2   # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    setup_dirvec_constants.2829 # |          1 |          1 |          0 |          0 |          0 |          0 |
    sub     $47, 1, $2                  # |          1 |          7 |          0 |          1 |          0 |          0 |
    call    setup_reflections.3064      # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $3                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      0, $4                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp + 1], $2               # |          1 |          1 |          0 |          0 |          0 |          0 |
    call    pretrace_line.2990          # |          1 |          7 |          0 |          1 |          0 |          0 |
.count stack_move
    add     $sp, 3, $sp                 # |          1 |          7 |          0 |          1 |          0 |          0 |
    li      0, $2                       # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      2, $6                       # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 3], $3               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 2], $4               # |          1 |          1 |          0 |          0 |          0 |          0 |
.count stack_load
    load    [$sp - 1], $5               # |          1 |          1 |          0 |          0 |          0 |          0 |
    b       scan_line.3000              # |          1 |          3 |          0 |          0 |          0 |          1 |
.end rt

######################################################################
.begin main
min_caml_main:
    load    [min_caml_solver_dist + 0], $41# |          1 |         13 |          0 |          1 |          1 |          0 |
    load    [min_caml_tmin + 0], $42    # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_image_size + 0], $43# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_or_net + 0], $44  # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_intersected_object_id + 0], $45# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_intsec_rectside + 0], $46# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_n_objects + 0], $47# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_n_reflections + 0], $48# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_image_size + 1], $49# |          1 |          7 |          0 |          1 |          0 |          0 |
    load    [min_caml_scan_pitch + 0], $50# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_screenz_dir + 0], $51# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_screenz_dir + 1], $52# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screenz_dir + 2], $53# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_beam + 0], $54    # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [min_caml_image_center + 0], $55# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_image_center + 1], $56# |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screen + 0], $57  # |          1 |         13 |          0 |          1 |          1 |          0 |
    load    [min_caml_screen + 1], $58  # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screen + 2], $59  # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [min_caml_screenx_dir + 0], $60# |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [f.6251 + 0], $36           # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [f.6279 + 0], $37           # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [f.6282 + 0], $38           # |          1 |          7 |          0 |          0 |          1 |          0 |
    load    [f.6277 + 0], $39           # |          1 |          1 |          0 |          0 |          0 |          0 |
    load    [f.6271 + 0], $40           # |          1 |         13 |          0 |          1 |          1 |          0 |
    call    rt.3066                     # |          1 |          1 |          0 |          0 |          0 |          0 |
    li      0, $1                       # |          1 |          7 |          0 |          1 |          0 |          0 |
    ret                                 # |          1 |          1 |          0 |          0 |          0 |          0 |
.end main
                                        # | Instructions | Clocks     | Stall      | ICacheMiss | DCacheMiss | BranchMiss |
